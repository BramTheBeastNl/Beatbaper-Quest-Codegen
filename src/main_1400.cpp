// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.HitReaction/HitPointBone/BoneLink
#include "RootMotion/FinalIK/HitReaction_HitPointBone_BoneLink.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointBone/BoneLink.Apply
void RootMotion::FinalIK::HitReaction::HitPointBone::BoneLink::Apply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, UnityEngine::Quaternion offset, float crossFader) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointBone::BoneLink::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, offset, crossFader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, offset, crossFader);
}
// Autogenerated method: RootMotion.FinalIK.HitReaction/HitPointBone/BoneLink.CrossFadeStart
void RootMotion::FinalIK::HitReaction::HitPointBone::BoneLink::CrossFadeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReaction::HitPointBone::BoneLink::CrossFadeStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.HitReactionVRIK
#include "RootMotion/FinalIK/HitReactionVRIK.hpp"
// Including type: RootMotion.FinalIK.HitReactionVRIK/Offset
#include "RootMotion/FinalIK/HitReactionVRIK_Offset.hpp"
// Including type: RootMotion.FinalIK.HitReactionVRIK/PositionOffset
#include "RootMotion/FinalIK/HitReactionVRIK_PositionOffset.hpp"
// Including type: RootMotion.FinalIK.HitReactionVRIK/RotationOffset
#include "RootMotion/FinalIK/HitReactionVRIK_RotationOffset.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK.Hit
void RootMotion::FinalIK::HitReactionVRIK::Hit(UnityEngine::Collider* collider, UnityEngine::Vector3 force, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Hit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Hit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collider, force, point)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collider, force, point);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK.OnModifyOffset
void RootMotion::FinalIK::HitReactionVRIK::OnModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::OnModifyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.HitReactionVRIK/Offset
#include "RootMotion/FinalIK/HitReactionVRIK_Offset.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.VRIK
#include "RootMotion/FinalIK/VRIK.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.get_crossFader
float RootMotion::FinalIK::HitReactionVRIK::Offset::get_crossFader() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::get_crossFader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_crossFader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.set_crossFader
void RootMotion::FinalIK::HitReactionVRIK::Offset::set_crossFader(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::set_crossFader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_crossFader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.get_timer
float RootMotion::FinalIK::HitReactionVRIK::Offset::get_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::get_timer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_timer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.set_timer
void RootMotion::FinalIK::HitReactionVRIK::Offset::set_timer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::set_timer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_timer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.get_force
UnityEngine::Vector3 RootMotion::FinalIK::HitReactionVRIK::Offset::get_force() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::get_force");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_force", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.set_force
void RootMotion::FinalIK::HitReactionVRIK::Offset::set_force(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::set_force");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_force", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.get_point
UnityEngine::Vector3 RootMotion::FinalIK::HitReactionVRIK::Offset::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::get_point");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_point", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.set_point
void RootMotion::FinalIK::HitReactionVRIK::Offset::set_point(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::set_point");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_point", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.Hit
void RootMotion::FinalIK::HitReactionVRIK::Offset::Hit(UnityEngine::Vector3 force, ::Array<UnityEngine::AnimationCurve*>* curves, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::Hit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Hit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(force, curves, point)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force, curves, point);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.Apply
void RootMotion::FinalIK::HitReactionVRIK::Offset::Apply(RootMotion::FinalIK::VRIK* ik, ::Array<UnityEngine::AnimationCurve*>* curves, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ik, curves, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ik, curves, weight);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.GetLength
float RootMotion::FinalIK::HitReactionVRIK::Offset::GetLength_NEW(::Array<UnityEngine::AnimationCurve*>* curves) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::GetLength_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(curves)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, curves);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.CrossFadeStart
void RootMotion::FinalIK::HitReactionVRIK::Offset::CrossFadeStart_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::CrossFadeStart_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/Offset.OnApply
void RootMotion::FinalIK::HitReactionVRIK::Offset::OnApply_NEW(RootMotion::FinalIK::VRIK* ik, ::Array<UnityEngine::AnimationCurve*>* curves, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::Offset::OnApply_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ik, curves, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ik, curves, weight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.HitReactionVRIK/PositionOffset
#include "RootMotion/FinalIK/HitReactionVRIK_PositionOffset.hpp"
// Including type: RootMotion.FinalIK.HitReactionVRIK/PositionOffset/PositionOffsetLink
#include "RootMotion/FinalIK/HitReactionVRIK_PositionOffset_PositionOffsetLink.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.VRIK
#include "RootMotion/FinalIK/VRIK.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/PositionOffset.GetLength
float RootMotion::FinalIK::HitReactionVRIK::PositionOffset::GetLength(::Array<UnityEngine::AnimationCurve*>* curves) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::PositionOffset::GetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(curves)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, curves);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/PositionOffset.CrossFadeStart
void RootMotion::FinalIK::HitReactionVRIK::PositionOffset::CrossFadeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::PositionOffset::CrossFadeStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/PositionOffset.OnApply
void RootMotion::FinalIK::HitReactionVRIK::PositionOffset::OnApply(RootMotion::FinalIK::VRIK* ik, ::Array<UnityEngine::AnimationCurve*>* curves, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::PositionOffset::OnApply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ik, curves, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ik, curves, weight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.HitReactionVRIK/PositionOffset/PositionOffsetLink
#include "RootMotion/FinalIK/HitReactionVRIK_PositionOffset_PositionOffsetLink.hpp"
// Including type: RootMotion.FinalIK.VRIK
#include "RootMotion/FinalIK/VRIK.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/PositionOffset/PositionOffsetLink.Apply
void RootMotion::FinalIK::HitReactionVRIK::PositionOffset::PositionOffsetLink::Apply(RootMotion::FinalIK::VRIK* ik, UnityEngine::Vector3 offset, float crossFader) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::PositionOffset::PositionOffsetLink::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ik, offset, crossFader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ik, offset, crossFader);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/PositionOffset/PositionOffsetLink.CrossFadeStart
void RootMotion::FinalIK::HitReactionVRIK::PositionOffset::PositionOffsetLink::CrossFadeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::PositionOffset::PositionOffsetLink::CrossFadeStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.HitReactionVRIK/RotationOffset
#include "RootMotion/FinalIK/HitReactionVRIK_RotationOffset.hpp"
// Including type: RootMotion.FinalIK.HitReactionVRIK/RotationOffset/RotationOffsetLink
#include "RootMotion/FinalIK/HitReactionVRIK_RotationOffset_RotationOffsetLink.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.VRIK
#include "RootMotion/FinalIK/VRIK.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/RotationOffset.GetLength
float RootMotion::FinalIK::HitReactionVRIK::RotationOffset::GetLength(::Array<UnityEngine::AnimationCurve*>* curves) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::RotationOffset::GetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(curves)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, curves);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/RotationOffset.CrossFadeStart
void RootMotion::FinalIK::HitReactionVRIK::RotationOffset::CrossFadeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::RotationOffset::CrossFadeStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/RotationOffset.OnApply
void RootMotion::FinalIK::HitReactionVRIK::RotationOffset::OnApply(RootMotion::FinalIK::VRIK* ik, ::Array<UnityEngine::AnimationCurve*>* curves, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::RotationOffset::OnApply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ik, curves, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ik, curves, weight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.HitReactionVRIK/RotationOffset/RotationOffsetLink
#include "RootMotion/FinalIK/HitReactionVRIK_RotationOffset_RotationOffsetLink.hpp"
// Including type: RootMotion.FinalIK.VRIK
#include "RootMotion/FinalIK/VRIK.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/RotationOffset/RotationOffsetLink.Apply
void RootMotion::FinalIK::HitReactionVRIK::RotationOffset::RotationOffsetLink::Apply(RootMotion::FinalIK::VRIK* ik, UnityEngine::Quaternion offset, float crossFader) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::RotationOffset::RotationOffsetLink::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ik, offset, crossFader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ik, offset, crossFader);
}
// Autogenerated method: RootMotion.FinalIK.HitReactionVRIK/RotationOffset/RotationOffsetLink.CrossFadeStart
void RootMotion::FinalIK::HitReactionVRIK::RotationOffset::RotationOffsetLink::CrossFadeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::HitReactionVRIK::RotationOffset::RotationOffsetLink::CrossFadeStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.Inertia
#include "RootMotion/FinalIK/Inertia.hpp"
// Including type: RootMotion.FinalIK.Inertia/Body
#include "RootMotion/FinalIK/Inertia_Body.hpp"
// Including type: RootMotion.FinalIK.OffsetModifier/OffsetLimits
#include "RootMotion/FinalIK/OffsetModifier_OffsetLimits.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.Inertia.ResetBodies
void RootMotion::FinalIK::Inertia::ResetBodies() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Inertia::ResetBodies");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetBodies", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Inertia.OnModifyOffset
void RootMotion::FinalIK::Inertia::OnModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Inertia::OnModifyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.Inertia/Body
#include "RootMotion/FinalIK/Inertia_Body.hpp"
// Including type: RootMotion.FinalIK.Inertia/Body/EffectorLink
#include "RootMotion/FinalIK/Inertia_Body_EffectorLink.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.Inertia/Body.Reset
void RootMotion::FinalIK::Inertia::Body::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Inertia::Body::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Inertia/Body.Update
void RootMotion::FinalIK::Inertia::Body::Update(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float weight, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Inertia::Body::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight, deltaTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight, deltaTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Inertia/Body/EffectorLink
#include "RootMotion/FinalIK/Inertia_Body_EffectorLink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.LookAtController
#include "RootMotion/FinalIK/LookAtController.hpp"
// Including type: RootMotion.FinalIK.LookAtIK
#include "RootMotion/FinalIK/LookAtIK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.LookAtController.Start
void RootMotion::FinalIK::LookAtController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::LookAtController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LookAtController.LateUpdate
void RootMotion::FinalIK::LookAtController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::LookAtController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LookAtController.get_pivot
UnityEngine::Vector3 RootMotion::FinalIK::LookAtController::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::LookAtController::get_pivot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LookAtController.ApplyMinDistance
void RootMotion::FinalIK::LookAtController::ApplyMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::LookAtController::ApplyMinDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyMinDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LookAtController.RootRotation
void RootMotion::FinalIK::LookAtController::RootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::LookAtController::RootRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RootRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.OffsetModifier
#include "RootMotion/FinalIK/OffsetModifier.hpp"
// Including type: RootMotion.FinalIK.OffsetModifier/OffsetLimits
#include "RootMotion/FinalIK/OffsetModifier_OffsetLimits.hpp"
// Including type: RootMotion.FinalIK.OffsetModifier/<Initiate>d__8
#include "RootMotion/FinalIK/OffsetModifier_-Initiate-d__8.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedIK
#include "RootMotion/FinalIK/FullBodyBipedIK.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.OffsetModifier.get_deltaTime
float RootMotion::FinalIK::OffsetModifier::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_deltaTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier.OnModifyOffset
void RootMotion::FinalIK::OffsetModifier::OnModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::OnModifyOffset_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier.Start
void RootMotion::FinalIK::OffsetModifier::Start_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::Start_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier.Initiate
System::Collections::IEnumerator* RootMotion::FinalIK::OffsetModifier::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier.ModifyOffset
void RootMotion::FinalIK::OffsetModifier::ModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::ModifyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier.ApplyLimits
void RootMotion::FinalIK::OffsetModifier::ApplyLimits(::Array<RootMotion::FinalIK::OffsetModifier::OffsetLimits*>* limits) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::ApplyLimits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyLimits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(limits)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, limits);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier.OnDestroy
void RootMotion::FinalIK::OffsetModifier::OnDestroy_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::OnDestroy_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.OffsetModifier/OffsetLimits
#include "RootMotion/FinalIK/OffsetModifier_OffsetLimits.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.OffsetModifier/OffsetLimits.Apply
void RootMotion::FinalIK::OffsetModifier::OffsetLimits::Apply(RootMotion::FinalIK::IKEffector* e, UnityEngine::Quaternion rootRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::OffsetLimits::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e, rootRotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e, rootRotation);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier/OffsetLimits.SpringAxis
float RootMotion::FinalIK::OffsetModifier::OffsetLimits::SpringAxis(float value, float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::OffsetLimits::SpringAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpringAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, min, max)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, value, min, max);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier/OffsetLimits.Spring
float RootMotion::FinalIK::OffsetModifier::OffsetLimits::Spring(float value, float limit, bool negative) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::OffsetLimits::Spring");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Spring", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, limit, negative)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, value, limit, negative);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.OffsetModifier/<Initiate>d__8
#include "RootMotion/FinalIK/OffsetModifier_-Initiate-d__8.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.OffsetModifier/<Initiate>d__8.System.IDisposable.Dispose
void RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier/<Initiate>d__8.MoveNext
bool RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier/<Initiate>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier/<Initiate>d__8.System.Collections.IEnumerator.Reset
void RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifier/<Initiate>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifier::$Initiate$d__8::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.OffsetModifierVRIK
#include "RootMotion/FinalIK/OffsetModifierVRIK.hpp"
// Including type: RootMotion.FinalIK.OffsetModifierVRIK/<Initiate>d__7
#include "RootMotion/FinalIK/OffsetModifierVRIK_-Initiate-d__7.hpp"
// Including type: RootMotion.FinalIK.VRIK
#include "RootMotion/FinalIK/VRIK.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK.get_deltaTime
float RootMotion::FinalIK::OffsetModifierVRIK::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_deltaTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK.OnModifyOffset
void RootMotion::FinalIK::OffsetModifierVRIK::OnModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::OnModifyOffset_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK.Start
void RootMotion::FinalIK::OffsetModifierVRIK::Start_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::Start_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK.Initiate
System::Collections::IEnumerator* RootMotion::FinalIK::OffsetModifierVRIK::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK.ModifyOffset
void RootMotion::FinalIK::OffsetModifierVRIK::ModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::ModifyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK.OnDestroy
void RootMotion::FinalIK::OffsetModifierVRIK::OnDestroy_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::OnDestroy_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.OffsetModifierVRIK/<Initiate>d__7
#include "RootMotion/FinalIK/OffsetModifierVRIK_-Initiate-d__7.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK/<Initiate>d__7.System.IDisposable.Dispose
void RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK/<Initiate>d__7.MoveNext
bool RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK/<Initiate>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK/<Initiate>d__7.System.Collections.IEnumerator.Reset
void RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.OffsetModifierVRIK/<Initiate>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetModifierVRIK::$Initiate$d__7::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.OffsetPose
#include "RootMotion/FinalIK/OffsetPose.hpp"
// Including type: RootMotion.FinalIK.OffsetPose/EffectorLink
#include "RootMotion/FinalIK/OffsetPose_EffectorLink.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.OffsetPose.Apply
void RootMotion::FinalIK::OffsetPose::Apply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetPose::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated method: RootMotion.FinalIK.OffsetPose.Apply
void RootMotion::FinalIK::OffsetPose::Apply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float weight, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetPose::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.OffsetPose/EffectorLink
#include "RootMotion/FinalIK/OffsetPose_EffectorLink.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.OffsetPose/EffectorLink.Apply
void RootMotion::FinalIK::OffsetPose::EffectorLink::Apply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float weight, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::OffsetPose::EffectorLink::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.PenetrationAvoidance
#include "RootMotion/FinalIK/PenetrationAvoidance.hpp"
// Including type: RootMotion.FinalIK.PenetrationAvoidance/Avoider
#include "RootMotion/FinalIK/PenetrationAvoidance_Avoider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.PenetrationAvoidance.OnModifyOffset
void RootMotion::FinalIK::PenetrationAvoidance::OnModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::PenetrationAvoidance::OnModifyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.PenetrationAvoidance/Avoider
#include "RootMotion/FinalIK/PenetrationAvoidance_Avoider.hpp"
// Including type: RootMotion.FinalIK.PenetrationAvoidance/Avoider/EffectorLink
#include "RootMotion/FinalIK/PenetrationAvoidance_Avoider_EffectorLink.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.PenetrationAvoidance/Avoider.Solve
void RootMotion::FinalIK::PenetrationAvoidance::Avoider::Solve(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::PenetrationAvoidance::Avoider::Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated method: RootMotion.FinalIK.PenetrationAvoidance/Avoider.GetOffsetTarget
UnityEngine::Vector3 RootMotion::FinalIK::PenetrationAvoidance::Avoider::GetOffsetTarget(RootMotion::FinalIK::IKSolverFullBodyBiped* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::PenetrationAvoidance::Avoider::GetOffsetTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOffsetTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.PenetrationAvoidance/Avoider.Raycast
UnityEngine::Vector3 RootMotion::FinalIK::PenetrationAvoidance::Avoider::Raycast(UnityEngine::Vector3 from, UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::PenetrationAvoidance::Avoider::Raycast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(from, to)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, from, to);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.PenetrationAvoidance/Avoider/EffectorLink
#include "RootMotion/FinalIK/PenetrationAvoidance_Avoider_EffectorLink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.Recoil
#include "RootMotion/FinalIK/Recoil.hpp"
// Including type: RootMotion.FinalIK.Recoil/RecoilOffset
#include "RootMotion/FinalIK/Recoil_RecoilOffset.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.AimIK
#include "RootMotion/FinalIK/AimIK.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.Recoil.get_isFinished
bool RootMotion::FinalIK::Recoil::get_isFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::get_isFinished");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isFinished", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.SetHandRotations
void RootMotion::FinalIK::Recoil::SetHandRotations(UnityEngine::Quaternion leftHandRotation, UnityEngine::Quaternion rightHandRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::SetHandRotations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetHandRotations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leftHandRotation, rightHandRotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leftHandRotation, rightHandRotation);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.Fire
void RootMotion::FinalIK::Recoil::Fire(float magnitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::Fire");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Fire", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(magnitude)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, magnitude);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.AfterFBBIK
void RootMotion::FinalIK::Recoil::AfterFBBIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::AfterFBBIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AfterFBBIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.AfterAimIK
void RootMotion::FinalIK::Recoil::AfterAimIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::AfterAimIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AfterAimIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.get_primaryHandEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::Recoil::get_primaryHandEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::get_primaryHandEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_primaryHandEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.get_secondaryHandEffector
RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::Recoil::get_secondaryHandEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::get_secondaryHandEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_secondaryHandEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.get_primaryHand
UnityEngine::Transform* RootMotion::FinalIK::Recoil::get_primaryHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::get_primaryHand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_primaryHand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.get_secondaryHand
UnityEngine::Transform* RootMotion::FinalIK::Recoil::get_secondaryHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::get_secondaryHand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_secondaryHand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.OnModifyOffset
void RootMotion::FinalIK::Recoil::OnModifyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::OnModifyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnModifyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Recoil.OnDestroy
void RootMotion::FinalIK::Recoil::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.Recoil/RecoilOffset
#include "RootMotion/FinalIK/Recoil_RecoilOffset.hpp"
// Including type: RootMotion.FinalIK.Recoil/RecoilOffset/EffectorLink
#include "RootMotion/FinalIK/Recoil_RecoilOffset_EffectorLink.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.Recoil/RecoilOffset.Start
void RootMotion::FinalIK::Recoil::RecoilOffset::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::RecoilOffset::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Recoil/RecoilOffset.Apply
void RootMotion::FinalIK::Recoil::RecoilOffset::Apply(RootMotion::FinalIK::IKSolverFullBodyBiped* solver, UnityEngine::Quaternion rotation, float masterWeight, float length, float timeLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::RecoilOffset::Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, rotation, masterWeight, length, timeLeft)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, rotation, masterWeight, length, timeLeft);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Recoil/RecoilOffset/EffectorLink
#include "RootMotion/FinalIK/Recoil_RecoilOffset_EffectorLink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Recoil/Handedness
#include "RootMotion/FinalIK/Recoil.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.Recoil/Handedness Right
RootMotion::FinalIK::Recoil::Handedness RootMotion::FinalIK::Recoil::Handedness::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::Handedness::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::Recoil::Handedness>("RootMotion.FinalIK", "Recoil/Handedness", "Right"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.Recoil/Handedness Right
void RootMotion::FinalIK::Recoil::Handedness::_set_Right(RootMotion::FinalIK::Recoil::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::Handedness::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "Recoil/Handedness", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.Recoil/Handedness Left
RootMotion::FinalIK::Recoil::Handedness RootMotion::FinalIK::Recoil::Handedness::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::Handedness::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<RootMotion::FinalIK::Recoil::Handedness>("RootMotion.FinalIK", "Recoil/Handedness", "Left"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.Recoil/Handedness Left
void RootMotion::FinalIK::Recoil::Handedness::_set_Left(RootMotion::FinalIK::Recoil::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::Recoil::Handedness::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "Recoil/Handedness", "Left", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.ShoulderRotator
#include "RootMotion/FinalIK/ShoulderRotator.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedIK
#include "RootMotion/FinalIK/FullBodyBipedIK.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedChain
#include "RootMotion/FinalIK/FullBodyBipedChain.hpp"
// Including type: RootMotion.FinalIK.IKMapping/BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.ShoulderRotator.Start
void RootMotion::FinalIK::ShoulderRotator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ShoulderRotator::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.ShoulderRotator.RotateShoulders
void RootMotion::FinalIK::ShoulderRotator::RotateShoulders() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ShoulderRotator::RotateShoulders");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateShoulders", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.ShoulderRotator.RotateShoulder
void RootMotion::FinalIK::ShoulderRotator::RotateShoulder(RootMotion::FinalIK::FullBodyBipedChain chain, float weight, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ShoulderRotator::RotateShoulder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateShoulder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain, weight, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chain, weight, offset);
}
// Autogenerated method: RootMotion.FinalIK.ShoulderRotator.GetParentBoneMap
RootMotion::FinalIK::IKMapping::BoneMap* RootMotion::FinalIK::ShoulderRotator::GetParentBoneMap(RootMotion::FinalIK::FullBodyBipedChain chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ShoulderRotator::GetParentBoneMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParentBoneMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMapping::BoneMap*, false>(this, ___internal__method, chain);
}
// Autogenerated method: RootMotion.FinalIK.ShoulderRotator.OnDestroy
void RootMotion::FinalIK::ShoulderRotator::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::ShoulderRotator::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.VRIKCalibrator
#include "RootMotion/FinalIK/VRIKCalibrator.hpp"
// Including type: RootMotion.FinalIK.VRIKCalibrator/Settings
#include "RootMotion/FinalIK/VRIKCalibrator_Settings.hpp"
// Including type: RootMotion.FinalIK.VRIKCalibrator/CalibrationData
#include "RootMotion/FinalIK/VRIKCalibrator_CalibrationData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.VRIKCalibrator.RecalibrateScale
void RootMotion::FinalIK::VRIKCalibrator::RecalibrateScale(RootMotion::FinalIK::VRIK* ik, RootMotion::FinalIK::VRIKCalibrator::Settings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKCalibrator::RecalibrateScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "VRIKCalibrator", "RecalibrateScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ik, settings)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ik, settings);
}
// Autogenerated method: RootMotion.FinalIK.VRIKCalibrator.Calibrate
RootMotion::FinalIK::VRIKCalibrator::CalibrationData* RootMotion::FinalIK::VRIKCalibrator::Calibrate(RootMotion::FinalIK::VRIK* ik, RootMotion::FinalIK::VRIKCalibrator::Settings* settings, UnityEngine::Transform* headTracker, UnityEngine::Transform* bodyTracker, UnityEngine::Transform* leftHandTracker, UnityEngine::Transform* rightHandTracker, UnityEngine::Transform* leftFootTracker, UnityEngine::Transform* rightFootTracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKCalibrator::Calibrate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "VRIKCalibrator", "Calibrate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ik, settings, headTracker, bodyTracker, leftHandTracker, rightHandTracker, leftFootTracker, rightFootTracker)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::VRIKCalibrator::CalibrationData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ik, settings, headTracker, bodyTracker, leftHandTracker, rightHandTracker, leftFootTracker, rightFootTracker);
}
// Autogenerated method: RootMotion.FinalIK.VRIKCalibrator.CalibrateLeg
void RootMotion::FinalIK::VRIKCalibrator::CalibrateLeg(RootMotion::FinalIK::VRIKCalibrator::Settings* settings, UnityEngine::Transform* tracker, RootMotion::FinalIK::IKSolverVR::Leg* leg, UnityEngine::Transform* lastBone, UnityEngine::Vector3 rootForward, bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKCalibrator::CalibrateLeg");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "VRIKCalibrator", "CalibrateLeg", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(settings, tracker, leg, lastBone, rootForward, isLeft)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, settings, tracker, leg, lastBone, rootForward, isLeft);
}
// Autogenerated method: RootMotion.FinalIK.VRIKCalibrator.Calibrate
void RootMotion::FinalIK::VRIKCalibrator::Calibrate(RootMotion::FinalIK::VRIK* ik, RootMotion::FinalIK::VRIKCalibrator::CalibrationData* data, UnityEngine::Transform* headTracker, UnityEngine::Transform* bodyTracker, UnityEngine::Transform* leftHandTracker, UnityEngine::Transform* rightHandTracker, UnityEngine::Transform* leftFootTracker, UnityEngine::Transform* rightFootTracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKCalibrator::Calibrate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "VRIKCalibrator", "Calibrate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ik, data, headTracker, bodyTracker, leftHandTracker, rightHandTracker, leftFootTracker, rightFootTracker)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ik, data, headTracker, bodyTracker, leftHandTracker, rightHandTracker, leftFootTracker, rightFootTracker);
}
// Autogenerated method: RootMotion.FinalIK.VRIKCalibrator.CalibrateLeg
void RootMotion::FinalIK::VRIKCalibrator::CalibrateLeg(RootMotion::FinalIK::VRIKCalibrator::CalibrationData* data, UnityEngine::Transform* tracker, RootMotion::FinalIK::IKSolverVR::Leg* leg, UnityEngine::Transform* lastBone, UnityEngine::Vector3 rootForward, bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKCalibrator::CalibrateLeg");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "VRIKCalibrator", "CalibrateLeg", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, tracker, leg, lastBone, rootForward, isLeft)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, tracker, leg, lastBone, rootForward, isLeft);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.VRIKCalibrator/Settings
#include "RootMotion/FinalIK/VRIKCalibrator_Settings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.VRIKCalibrator/CalibrationData
#include "RootMotion/FinalIK/VRIKCalibrator_CalibrationData.hpp"
// Including type: RootMotion.FinalIK.VRIKCalibrator/CalibrationData/Target
#include "RootMotion/FinalIK/VRIKCalibrator_CalibrationData_Target.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.VRIKCalibrator/CalibrationData/Target
#include "RootMotion/FinalIK/VRIKCalibrator_CalibrationData_Target.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.VRIKCalibrator/CalibrationData/Target.SetTo
void RootMotion::FinalIK::VRIKCalibrator::CalibrationData::Target::SetTo(UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKCalibrator::CalibrationData::Target::SetTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.VRIKLODController
#include "RootMotion/FinalIK/VRIKLODController.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: RootMotion.FinalIK.VRIK
#include "RootMotion/FinalIK/VRIK.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.VRIKLODController.Start
void RootMotion::FinalIK::VRIKLODController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKLODController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIKLODController.Update
void RootMotion::FinalIK::VRIKLODController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKLODController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIKLODController.GetLODLevel
int RootMotion::FinalIK::VRIKLODController::GetLODLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKLODController::GetLODLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLODLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.VRIKRootController
#include "RootMotion/FinalIK/VRIKRootController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.VRIKCalibrator/CalibrationData
#include "RootMotion/FinalIK/VRIKCalibrator_CalibrationData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.VRIKRootController.get_pelvisTargetRight
UnityEngine::Vector3 RootMotion::FinalIK::VRIKRootController::get_pelvisTargetRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKRootController::get_pelvisTargetRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_pelvisTargetRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIKRootController.set_pelvisTargetRight
void RootMotion::FinalIK::VRIKRootController::set_pelvisTargetRight(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKRootController::set_pelvisTargetRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pelvisTargetRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.VRIKRootController.Awake
void RootMotion::FinalIK::VRIKRootController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKRootController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIKRootController.Calibrate
void RootMotion::FinalIK::VRIKRootController::Calibrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKRootController::Calibrate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Calibrate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIKRootController.Calibrate
void RootMotion::FinalIK::VRIKRootController::Calibrate(RootMotion::FinalIK::VRIKCalibrator::CalibrationData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKRootController::Calibrate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Calibrate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: RootMotion.FinalIK.VRIKRootController.OnPreUpdate
void RootMotion::FinalIK::VRIKRootController::OnPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKRootController::OnPreUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIKRootController.OnDestroy
void RootMotion::FinalIK::VRIKRootController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::VRIKRootController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapIdentifierNetSerializable.get_levelID
::Il2CppString* GlobalNamespace::BeatmapIdentifierNetSerializable::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::get_levelID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.set_levelID
void GlobalNamespace::BeatmapIdentifierNetSerializable::set_levelID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::set_levelID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_levelID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.get_beatmapCharacteristicSerializedName
::Il2CppString* GlobalNamespace::BeatmapIdentifierNetSerializable::get_beatmapCharacteristicSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::get_beatmapCharacteristicSerializedName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicSerializedName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.set_beatmapCharacteristicSerializedName
void GlobalNamespace::BeatmapIdentifierNetSerializable::set_beatmapCharacteristicSerializedName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::set_beatmapCharacteristicSerializedName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristicSerializedName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapIdentifierNetSerializable::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.set_difficulty
void GlobalNamespace::BeatmapIdentifierNetSerializable::set_difficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::set_difficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.LiteNetLib.Utils.INetSerializable.Deserialize
void GlobalNamespace::BeatmapIdentifierNetSerializable::LiteNetLib_Utils_INetSerializable_Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::LiteNetLib.Utils.INetSerializable.Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.LiteNetLib.Utils.INetSerializable.Serialize
void GlobalNamespace::BeatmapIdentifierNetSerializable::LiteNetLib_Utils_INetSerializable_Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::LiteNetLib.Utils.INetSerializable.Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.Equals
bool GlobalNamespace::BeatmapIdentifierNetSerializable::Equals_NEW(GlobalNamespace::BeatmapIdentifierNetSerializable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.Equals
bool GlobalNamespace::BeatmapIdentifierNetSerializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.GetHashCode
int GlobalNamespace::BeatmapIdentifierNetSerializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapIdentifierNetSerializable.ToString
::Il2CppString* GlobalNamespace::BeatmapIdentifierNetSerializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapIdentifierNetSerializable::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFilter
#include "GlobalNamespace/BloomFilter.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kHashCount
int GlobalNamespace::BloomFilter::_get_kHashCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::_get_kHashCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFilter", "kHashCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kHashCount
void GlobalNamespace::BloomFilter::_set_kHashCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::_set_kHashCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFilter", "kHashCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 shortStringLength
int GlobalNamespace::BloomFilter::_get_shortStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::_get_shortStringLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFilter", "shortStringLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 shortStringLength
void GlobalNamespace::BloomFilter::_set_shortStringLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::_set_shortStringLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFilter", "shortStringLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 longStringLength
int GlobalNamespace::BloomFilter::_get_longStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::_get_longStringLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFilter", "longStringLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 longStringLength
void GlobalNamespace::BloomFilter::_set_longStringLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::_set_longStringLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFilter", "longStringLength", value));
}
// [ThreadStaticAttribute] Offset: 0xCFF22C
// Autogenerated static field getter
// Get static field: static private System.Char[] _tempBuffer
::Array<::Il2CppChar>* GlobalNamespace::BloomFilter::_get__tempBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::_get__tempBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("", "BloomFilter", "_tempBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] _tempBuffer
void GlobalNamespace::BloomFilter::_set__tempBuffer(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::_set__tempBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFilter", "_tempBuffer", value));
}
// Autogenerated method: BloomFilter.get_all
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilter::get_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::get_all");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "get_all", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFilter, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomFilter.MurmurHash2
uint GlobalNamespace::BloomFilter::MurmurHash2(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::MurmurHash2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "MurmurHash2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: BloomFilter.Contains
bool GlobalNamespace::BloomFilter::Contains(GlobalNamespace::BloomFilter other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: BloomFilter.DifferenceFrom
int GlobalNamespace::BloomFilter::DifferenceFrom(GlobalNamespace::BloomFilter other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::DifferenceFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "DifferenceFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other);
}
// Autogenerated method: BloomFilter.Serialize
void GlobalNamespace::BloomFilter::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: BloomFilter.CreateFromSerializedData
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilter::CreateFromSerializedData_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::CreateFromSerializedData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFilter, false>(*this, ___internal__method, reader);
}
// Autogenerated method: BloomFilter.Deserialize
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilter::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::Deserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFilter, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: BloomFilter.ToShortString
::Il2CppString* GlobalNamespace::BloomFilter::ToShortString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::ToShortString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToShortString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: BloomFilter.ToBytes
::Array<uint8_t>* GlobalNamespace::BloomFilter::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::ToBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(*this, ___internal__method);
}
// Autogenerated method: BloomFilter.Equals
bool GlobalNamespace::BloomFilter::Equals_NEW(GlobalNamespace::BloomFilter other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: BloomFilter.TryParse
bool GlobalNamespace::BloomFilter::TryParse(::Il2CppString* stringSerializedMask, GlobalNamespace::BloomFilter& bloomFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringSerializedMask, bloomFilter)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask, bloomFilter);
}
// Autogenerated method: BloomFilter.TryParse
bool GlobalNamespace::BloomFilter::TryParse(::Il2CppString* stringSerializedMask, int offset, int length, GlobalNamespace::BloomFilter& bloomFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringSerializedMask, offset, length, bloomFilter)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask, offset, length, bloomFilter);
}
// Autogenerated method: BloomFilter.FromBytes
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilter::FromBytes(::Array<uint8_t>* bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::FromBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "FromBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bytes, offset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFilter, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: BloomFilter.GetHexDigit
uint GlobalNamespace::BloomFilter::GetHexDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::GetHexDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "GetHexDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: BloomFilter.GetBase64Digit
uint GlobalNamespace::BloomFilter::GetBase64Digit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::GetBase64Digit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "GetBase64Digit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: BloomFilter.GetBase64Char
::Il2CppChar GlobalNamespace::BloomFilter::GetBase64Char(uint64_t digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::GetBase64Char");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "GetBase64Char", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(digit)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, digit);
}
// Autogenerated method: BloomFilter.ToString
::Il2CppString* GlobalNamespace::BloomFilter::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: BloomFilter.Equals
bool GlobalNamespace::BloomFilter::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: BloomFilter.GetHashCode
int GlobalNamespace::BloomFilter::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: BloomFilter.op_BitwiseOr
GlobalNamespace::BloomFilter GlobalNamespace::operator|(const GlobalNamespace::BloomFilter& a, const GlobalNamespace::BloomFilter& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::op_BitwiseOr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "op_BitwiseOr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFilter, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BloomFilter.op_BitwiseAnd
GlobalNamespace::BloomFilter GlobalNamespace::operator&(const GlobalNamespace::BloomFilter& a, const GlobalNamespace::BloomFilter& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::op_BitwiseAnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "op_BitwiseAnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFilter, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BloomFilter.op_Equality
bool GlobalNamespace::operator ==(const GlobalNamespace::BloomFilter& a, const GlobalNamespace::BloomFilter& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BloomFilter.op_Inequality
bool GlobalNamespace::operator !=(const GlobalNamespace::BloomFilter& a, const GlobalNamespace::BloomFilter& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilter::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilter", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFilterUtils
#include "GlobalNamespace/BloomFilterUtils.hpp"
// Including type: BloomFilterUtils/<>c
#include "GlobalNamespace/BloomFilterUtils_--c.hpp"
// Including type: BloomFilter
#include "GlobalNamespace/BloomFilter.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BloomFilterUtils.ToBloomFilter
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilterUtils::ToBloomFilter(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* strings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtils::ToBloomFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomFilterUtils", "ToBloomFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strings)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFilter, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFilterUtils/<>c
#include "GlobalNamespace/BloomFilterUtils_--c.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BloomFilterUtils/<>c <>9
GlobalNamespace::BloomFilterUtils::$$c* GlobalNamespace::BloomFilterUtils::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtils::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BloomFilterUtils::$$c*>("", "BloomFilterUtils/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BloomFilterUtils/<>c <>9
void GlobalNamespace::BloomFilterUtils::$$c::_set_$$9(GlobalNamespace::BloomFilterUtils::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtils::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BloomFilterUtils/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<BloomFilter,System.String,BloomFilter> <>9__0_0
System::Func_3<GlobalNamespace::BloomFilter, ::Il2CppString*, GlobalNamespace::BloomFilter>* GlobalNamespace::BloomFilterUtils::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtils::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_3<GlobalNamespace::BloomFilter, ::Il2CppString*, GlobalNamespace::BloomFilter>*>("", "BloomFilterUtils/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<BloomFilter,System.String,BloomFilter> <>9__0_0
void GlobalNamespace::BloomFilterUtils::$$c::_set_$$9__0_0(System::Func_3<GlobalNamespace::BloomFilter, ::Il2CppString*, GlobalNamespace::BloomFilter>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtils::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BloomFilterUtils/<>c", "<>9__0_0", value)));
}
// Autogenerated method: BloomFilterUtils/<>c..cctor
void GlobalNamespace::BloomFilterUtils::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtils::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomFilterUtils/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomFilterUtils/<>c.<ToBloomFilter>b__0_0
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilterUtils::$$c::$ToBloomFilter$b__0_0(GlobalNamespace::BloomFilter a, ::Il2CppString* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtils::$$c::<ToBloomFilter>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToBloomFilter>b__0_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b))));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFilter, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierMask
#include "GlobalNamespace/GameplayModifierMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask None
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "None"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask None
void GlobalNamespace::GameplayModifierMask::_set_None(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "None", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask BatteryEnergy
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_BatteryEnergy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_BatteryEnergy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "BatteryEnergy"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask BatteryEnergy
void GlobalNamespace::GameplayModifierMask::_set_BatteryEnergy(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_BatteryEnergy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "BatteryEnergy", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask NoFail
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_NoFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_NoFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "NoFail"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask NoFail
void GlobalNamespace::GameplayModifierMask::_set_NoFail(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_NoFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "NoFail", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask InstaFail
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_InstaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_InstaFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "InstaFail"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask InstaFail
void GlobalNamespace::GameplayModifierMask::_set_InstaFail(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_InstaFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "InstaFail", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask NoObstacles
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_NoObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_NoObstacles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "NoObstacles"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask NoObstacles
void GlobalNamespace::GameplayModifierMask::_set_NoObstacles(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_NoObstacles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "NoObstacles", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask NoBombs
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_NoBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_NoBombs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "NoBombs"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask NoBombs
void GlobalNamespace::GameplayModifierMask::_set_NoBombs(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_NoBombs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "NoBombs", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask FastNotes
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_FastNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_FastNotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "FastNotes"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask FastNotes
void GlobalNamespace::GameplayModifierMask::_set_FastNotes(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_FastNotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "FastNotes", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask StrictAngles
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_StrictAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_StrictAngles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "StrictAngles"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask StrictAngles
void GlobalNamespace::GameplayModifierMask::_set_StrictAngles(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_StrictAngles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "StrictAngles", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask DisappearingArrows
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_DisappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_DisappearingArrows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "DisappearingArrows"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask DisappearingArrows
void GlobalNamespace::GameplayModifierMask::_set_DisappearingArrows(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_DisappearingArrows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "DisappearingArrows", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask FasterSong
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_FasterSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_FasterSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "FasterSong"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask FasterSong
void GlobalNamespace::GameplayModifierMask::_set_FasterSong(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_FasterSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "FasterSong", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask SlowerSong
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_SlowerSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_SlowerSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "SlowerSong"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask SlowerSong
void GlobalNamespace::GameplayModifierMask::_set_SlowerSong(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_SlowerSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "SlowerSong", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask NoArrows
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_NoArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_NoArrows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "NoArrows"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask NoArrows
void GlobalNamespace::GameplayModifierMask::_set_NoArrows(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_NoArrows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "NoArrows", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask GhostNotes
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_GhostNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_GhostNotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "GhostNotes"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask GhostNotes
void GlobalNamespace::GameplayModifierMask::_set_GhostNotes(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_GhostNotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "GhostNotes", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask SuperFastSong
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_SuperFastSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_SuperFastSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "SuperFastSong"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask SuperFastSong
void GlobalNamespace::GameplayModifierMask::_set_SuperFastSong(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_SuperFastSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "SuperFastSong", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask ProMode
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_ProMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_ProMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "ProMode"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask ProMode
void GlobalNamespace::GameplayModifierMask::_set_ProMode(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_ProMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "ProMode", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask ZenMode
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_ZenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_ZenMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "ZenMode"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask ZenMode
void GlobalNamespace::GameplayModifierMask::_set_ZenMode(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_ZenMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "ZenMode", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask SmallCubes
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_SmallCubes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_SmallCubes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "SmallCubes"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask SmallCubes
void GlobalNamespace::GameplayModifierMask::_set_SmallCubes(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_SmallCubes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "SmallCubes", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifierMask All
GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifierMask::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifierMask>("", "GameplayModifierMask", "All"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifierMask All
void GlobalNamespace::GameplayModifierMask::_set_All(GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMask::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifierMask", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayModifierMaskExtensions
#include "GlobalNamespace/GameplayModifierMaskExtensions.hpp"
// Including type: GameplayModifierMask
#include "GlobalNamespace/GameplayModifierMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifierMaskExtensions.Contains
bool GlobalNamespace::GameplayModifierMaskExtensions::Contains(GlobalNamespace::GameplayModifierMask mask, GlobalNamespace::GameplayModifierMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMaskExtensions::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "GameplayModifierMaskExtensions", "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mask, other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask, other);
}
// Autogenerated method: GameplayModifierMaskExtensions.DifferenceFrom
int GlobalNamespace::GameplayModifierMaskExtensions::DifferenceFrom(GlobalNamespace::GameplayModifierMask mask, GlobalNamespace::GameplayModifierMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMaskExtensions::DifferenceFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "GameplayModifierMaskExtensions", "DifferenceFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mask, other)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask, other);
}
// Autogenerated method: GameplayModifierMaskExtensions.ToHexString
::Il2CppString* GlobalNamespace::GameplayModifierMaskExtensions::ToHexString(GlobalNamespace::GameplayModifierMask mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierMaskExtensions::ToHexString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "GameplayModifierMaskExtensions", "ToHexString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mask)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifiers.get_energyType
GlobalNamespace::GameplayModifiers::EnergyType GlobalNamespace::GameplayModifiers::get_energyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_energyType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_energyType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers::EnergyType, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_noFailOn0Energy
bool GlobalNamespace::GameplayModifiers::get_noFailOn0Energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_noFailOn0Energy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noFailOn0Energy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_demoNoFail
bool GlobalNamespace::GameplayModifiers::get_demoNoFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_demoNoFail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_demoNoFail", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_instaFail
bool GlobalNamespace::GameplayModifiers::get_instaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_instaFail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_instaFail", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_failOnSaberClash
bool GlobalNamespace::GameplayModifiers::get_failOnSaberClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_failOnSaberClash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_failOnSaberClash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_enabledObstacleType
GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::get_enabledObstacleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_enabledObstacleType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enabledObstacleType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers::EnabledObstacleType, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_demoNoObstacles
bool GlobalNamespace::GameplayModifiers::get_demoNoObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_demoNoObstacles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_demoNoObstacles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_fastNotes
bool GlobalNamespace::GameplayModifiers::get_fastNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_fastNotes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fastNotes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_strictAngles
bool GlobalNamespace::GameplayModifiers::get_strictAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_strictAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_strictAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_disappearingArrows
bool GlobalNamespace::GameplayModifiers::get_disappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_disappearingArrows");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_disappearingArrows", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_ghostNotes
bool GlobalNamespace::GameplayModifiers::get_ghostNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_ghostNotes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ghostNotes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_noBombs
bool GlobalNamespace::GameplayModifiers::get_noBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_noBombs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noBombs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_songSpeed
GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiers::get_songSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_songSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers::SongSpeed, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_noArrows
bool GlobalNamespace::GameplayModifiers::get_noArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_noArrows");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noArrows", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_proMode
bool GlobalNamespace::GameplayModifiers::get_proMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_proMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_proMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_zenMode
bool GlobalNamespace::GameplayModifiers::get_zenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_zenMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_zenMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_smallCubes
bool GlobalNamespace::GameplayModifiers::get_smallCubes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_smallCubes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_smallCubes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_songSpeedMul
float GlobalNamespace::GameplayModifiers::get_songSpeedMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_songSpeedMul");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSpeedMul", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_cutAngleTolerance
float GlobalNamespace::GameplayModifiers::get_cutAngleTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_cutAngleTolerance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_cutAngleTolerance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.get_notesUniformScale
float GlobalNamespace::GameplayModifiers::get_notesUniformScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::get_notesUniformScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_notesUniformScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.CopyWith
GlobalNamespace::GameplayModifiers* GlobalNamespace::GameplayModifiers::CopyWith(System::Nullable_1<bool> demoNoFail, System::Nullable_1<bool> demoNoObstacles, System::Nullable_1<GlobalNamespace::GameplayModifiers::EnergyType> energyType, System::Nullable_1<bool> noFailOn0Energy, System::Nullable_1<bool> instaFail, System::Nullable_1<bool> failOnSaberClash, System::Nullable_1<GlobalNamespace::GameplayModifiers::EnabledObstacleType> enabledObstacleType, System::Nullable_1<bool> noBombs, System::Nullable_1<bool> fastNotes, System::Nullable_1<bool> strictAngles, System::Nullable_1<bool> disappearingArrows, System::Nullable_1<GlobalNamespace::GameplayModifiers::SongSpeed> songSpeed, System::Nullable_1<bool> noArrows, System::Nullable_1<bool> ghostNotes, System::Nullable_1<bool> proMode, System::Nullable_1<bool> zenMode, System::Nullable_1<bool> smallCubes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::CopyWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(demoNoFail, demoNoObstacles, energyType, noFailOn0Energy, instaFail, failOnSaberClash, enabledObstacleType, noBombs, fastNotes, strictAngles, disappearingArrows, songSpeed, noArrows, ghostNotes, proMode, zenMode, smallCubes)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method, demoNoFail, demoNoObstacles, energyType, noFailOn0Energy, instaFail, failOnSaberClash, enabledObstacleType, noBombs, fastNotes, strictAngles, disappearingArrows, songSpeed, noArrows, ghostNotes, proMode, zenMode, smallCubes);
}
// Autogenerated method: GameplayModifiers.IsWithoutModifiers
bool GlobalNamespace::GameplayModifiers::IsWithoutModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::IsWithoutModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsWithoutModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiers.Serialize
void GlobalNamespace::GameplayModifiers::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: GameplayModifiers.LiteNetLib.Utils.INetImmutableSerializable<GameplayModifiers>.CreateFromSerializedData
GlobalNamespace::GameplayModifiers* GlobalNamespace::GameplayModifiers::LiteNetLib_Utils_INetImmutableSerializable$GameplayModifiers$_CreateFromSerializedData_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::LiteNetLib.Utils.INetImmutableSerializable<GameplayModifiers>.CreateFromSerializedData_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetImmutableSerializable<GameplayModifiers>.CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader))));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method, reader);
}
// Autogenerated method: GameplayModifiers.CreateFromSerializedData
GlobalNamespace::GameplayModifiers* GlobalNamespace::GameplayModifiers::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::CreateFromSerializedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "GameplayModifiers", "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiers/EnabledObstacleType
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnabledObstacleType All
GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::EnabledObstacleType>("", "GameplayModifiers/EnabledObstacleType", "All"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnabledObstacleType All
void GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_All(GlobalNamespace::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnabledObstacleType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnabledObstacleType FullHeightOnly
GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::EnabledObstacleType>("", "GameplayModifiers/EnabledObstacleType", "FullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnabledObstacleType FullHeightOnly
void GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly(GlobalNamespace::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnabledObstacleType", "FullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnabledObstacleType NoObstacles
GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_NoObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_NoObstacles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::EnabledObstacleType>("", "GameplayModifiers/EnabledObstacleType", "NoObstacles"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnabledObstacleType NoObstacles
void GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_NoObstacles(GlobalNamespace::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_NoObstacles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnabledObstacleType", "NoObstacles", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiers/EnergyType
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnergyType Bar
GlobalNamespace::GameplayModifiers::EnergyType GlobalNamespace::GameplayModifiers::EnergyType::_get_Bar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnergyType::_get_Bar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::EnergyType>("", "GameplayModifiers/EnergyType", "Bar"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnergyType Bar
void GlobalNamespace::GameplayModifiers::EnergyType::_set_Bar(GlobalNamespace::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnergyType::_set_Bar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnergyType", "Bar", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnergyType Battery
GlobalNamespace::GameplayModifiers::EnergyType GlobalNamespace::GameplayModifiers::EnergyType::_get_Battery() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnergyType::_get_Battery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::EnergyType>("", "GameplayModifiers/EnergyType", "Battery"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnergyType Battery
void GlobalNamespace::GameplayModifiers::EnergyType::_set_Battery(GlobalNamespace::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::EnergyType::_set_Battery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnergyType", "Battery", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiers/SongSpeed
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/SongSpeed Normal
GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiers::SongSpeed::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::SongSpeed::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::SongSpeed>("", "GameplayModifiers/SongSpeed", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/SongSpeed Normal
void GlobalNamespace::GameplayModifiers::SongSpeed::_set_Normal(GlobalNamespace::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::SongSpeed::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/SongSpeed", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/SongSpeed Faster
GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiers::SongSpeed::_get_Faster() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::SongSpeed::_get_Faster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::SongSpeed>("", "GameplayModifiers/SongSpeed", "Faster"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/SongSpeed Faster
void GlobalNamespace::GameplayModifiers::SongSpeed::_set_Faster(GlobalNamespace::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::SongSpeed::_set_Faster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/SongSpeed", "Faster", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/SongSpeed Slower
GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiers::SongSpeed::_get_Slower() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::SongSpeed::_get_Slower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::SongSpeed>("", "GameplayModifiers/SongSpeed", "Slower"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/SongSpeed Slower
void GlobalNamespace::GameplayModifiers::SongSpeed::_set_Slower(GlobalNamespace::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::SongSpeed::_set_Slower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/SongSpeed", "Slower", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/SongSpeed SuperFast
GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiers::SongSpeed::_get_SuperFast() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::SongSpeed::_get_SuperFast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::SongSpeed>("", "GameplayModifiers/SongSpeed", "SuperFast"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/SongSpeed SuperFast
void GlobalNamespace::GameplayModifiers::SongSpeed::_set_SuperFast(GlobalNamespace::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiers::SongSpeed::_set_SuperFast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/SongSpeed", "SuperFast", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersConfiguration/SongSpeed
#include "GlobalNamespace/GameplayModifiersConfiguration_SongSpeed.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kSlower
float GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kSlower() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kSlower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/SongSpeed", "kSlower"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kSlower
void GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kSlower(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kSlower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/SongSpeed", "kSlower", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kNormal
float GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/SongSpeed", "kNormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kNormal
void GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kNormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/SongSpeed", "kNormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kFaster
float GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kFaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kFaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/SongSpeed", "kFaster"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kFaster
void GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kFaster(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kFaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/SongSpeed", "kFaster", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kSuperFast
float GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kSuperFast() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kSuperFast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/SongSpeed", "kSuperFast"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kSuperFast
void GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kSuperFast(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kSuperFast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/SongSpeed", "kSuperFast", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersConfiguration/CutAngleTolerance
#include "GlobalNamespace/GameplayModifiersConfiguration_CutAngleTolerance.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefault
float GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_get_kDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_get_kDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/CutAngleTolerance", "kDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefault
void GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_set_kDefault(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_set_kDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/CutAngleTolerance", "kDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kStrict
float GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_get_kStrict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_get_kStrict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/CutAngleTolerance", "kStrict"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kStrict
void GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_set_kStrict(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_set_kStrict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/CutAngleTolerance", "kStrict", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersConfiguration/NoteUniformScale
#include "GlobalNamespace/GameplayModifiersConfiguration_NoteUniformScale.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefault
float GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_get_kDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_get_kDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/NoteUniformScale", "kDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefault
void GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_set_kDefault(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_set_kDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/NoteUniformScale", "kDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kSmall
float GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_get_kSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_get_kSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/NoteUniformScale", "kSmall"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kSmall
void GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_set_kSmall(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_set_kSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/NoteUniformScale", "kSmall", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberSwingRatingCounterDidChangeReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidChangeReceiver.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberSwingRatingCounterDidChangeReceiver.HandleSaberSwingRatingCounterDidChange
void GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver::HandleSaberSwingRatingCounterDidChange_NEW(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter, float rating) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver::HandleSaberSwingRatingCounterDidChange_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saberSwingRatingCounter, rating)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberSwingRatingCounter, rating);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberSwingRatingCounterDidFinishReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidFinishReceiver.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberSwingRatingCounterDidFinishReceiver.HandleSaberSwingRatingCounterDidFinish
void GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver::HandleSaberSwingRatingCounterDidFinish_NEW(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver::HandleSaberSwingRatingCounterDidFinish_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saberSwingRatingCounter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberSwingRatingCounter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
// Including type: ISaberSwingRatingCounterDidChangeReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidChangeReceiver.hpp"
// Including type: ISaberSwingRatingCounterDidFinishReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidFinishReceiver.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberSwingRatingCounter.get_beforeCutRating
float GlobalNamespace::ISaberSwingRatingCounter::get_beforeCutRating_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberSwingRatingCounter::get_beforeCutRating_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beforeCutRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ISaberSwingRatingCounter.get_afterCutRating
float GlobalNamespace::ISaberSwingRatingCounter::get_afterCutRating_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberSwingRatingCounter::get_afterCutRating_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_afterCutRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ISaberSwingRatingCounter.RegisterDidChangeReceiver
void GlobalNamespace::ISaberSwingRatingCounter::RegisterDidChangeReceiver_NEW(GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberSwingRatingCounter::RegisterDidChangeReceiver_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(receiver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: ISaberSwingRatingCounter.RegisterDidFinishReceiver
void GlobalNamespace::ISaberSwingRatingCounter::RegisterDidFinishReceiver_NEW(GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberSwingRatingCounter::RegisterDidFinishReceiver_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(receiver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: ISaberSwingRatingCounter.UnregisterDidChangeReceiver
void GlobalNamespace::ISaberSwingRatingCounter::UnregisterDidChangeReceiver_NEW(GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberSwingRatingCounter::UnregisterDidChangeReceiver_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnregisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(receiver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: ISaberSwingRatingCounter.UnregisterDidFinishReceiver
void GlobalNamespace::ISaberSwingRatingCounter::UnregisterDidFinishReceiver_NEW(GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberSwingRatingCounter::UnregisterDidFinishReceiver_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnregisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(receiver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelCompletionResults.CompareTo
int GlobalNamespace::LevelCompletionResults::CompareTo_NEW(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::CompareTo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: LevelCompletionResults.Serialize
void GlobalNamespace::LevelCompletionResults::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LevelCompletionResults.LiteNetLib.Utils.INetImmutableSerializable<LevelCompletionResults>.CreateFromSerializedData
GlobalNamespace::LevelCompletionResults* GlobalNamespace::LevelCompletionResults::LiteNetLib_Utils_INetImmutableSerializable$LevelCompletionResults$_CreateFromSerializedData_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LiteNetLib.Utils.INetImmutableSerializable<LevelCompletionResults>.CreateFromSerializedData_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetImmutableSerializable<LevelCompletionResults>.CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader))));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelCompletionResults*, false>(this, ___internal__method, reader);
}
// Autogenerated method: LevelCompletionResults.CreateFromSerializedData
GlobalNamespace::LevelCompletionResults* GlobalNamespace::LevelCompletionResults::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::CreateFromSerializedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LevelCompletionResults", "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelCompletionResults*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCompletionResults/LevelEndStateType
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndStateType None
GlobalNamespace::LevelCompletionResults::LevelEndStateType GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndStateType>("", "LevelCompletionResults/LevelEndStateType", "None"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndStateType None
void GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_None(GlobalNamespace::LevelCompletionResults::LevelEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndStateType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndStateType Cleared
GlobalNamespace::LevelCompletionResults::LevelEndStateType GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Cleared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndStateType>("", "LevelCompletionResults/LevelEndStateType", "Cleared"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndStateType Cleared
void GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Cleared(GlobalNamespace::LevelCompletionResults::LevelEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Cleared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndStateType", "Cleared", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndStateType Failed
GlobalNamespace::LevelCompletionResults::LevelEndStateType GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndStateType>("", "LevelCompletionResults/LevelEndStateType", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndStateType Failed
void GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Failed(GlobalNamespace::LevelCompletionResults::LevelEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndStateType", "Failed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCompletionResults/LevelEndAction
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction None
GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "None"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction None
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_None(GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction Quit
GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "Quit"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction Quit
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_Quit(GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "Quit", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction Restart
GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_Restart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "Restart"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction Restart
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_Restart(GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_Restart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "Restart", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction MultiplayerInactive
GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_MultiplayerInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_MultiplayerInactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "MultiplayerInactive"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction MultiplayerInactive
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_MultiplayerInactive(GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_MultiplayerInactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "MultiplayerInactive", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction LostConnection
GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_LostConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_LostConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "LostConnection"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction LostConnection
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_LostConnection(GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_LostConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "LostConnection", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction StartupFailed
GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_StartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_StartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "StartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction StartupFailed
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_StartupFailed(GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_StartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "StartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction HostEndedLevel
GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_HostEndedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_HostEndedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "HostEndedLevel"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction HostEndedLevel
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_HostEndedLevel(GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_HostEndedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "HostEndedLevel", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction ConnectedAfterLevelEnded
GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_ConnectedAfterLevelEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_ConnectedAfterLevelEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "ConnectedAfterLevelEnded"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction ConnectedAfterLevelEnded
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_ConnectedAfterLevelEnded(GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_ConnectedAfterLevelEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "ConnectedAfterLevelEnded", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerAvatarData
#include "GlobalNamespace/MultiplayerAvatarData.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerAvatarData.Serialize
void GlobalNamespace::MultiplayerAvatarData::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarData::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: MultiplayerAvatarData.CreateFromSerializedData
GlobalNamespace::MultiplayerAvatarData GlobalNamespace::MultiplayerAvatarData::CreateFromSerializedData_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarData::CreateFromSerializedData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerAvatarData, false>(*this, ___internal__method, reader);
}
// Autogenerated method: MultiplayerAvatarData.Deserialize
GlobalNamespace::MultiplayerAvatarData GlobalNamespace::MultiplayerAvatarData::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarData::Deserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerAvatarData", "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerAvatarData, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: MultiplayerAvatarData.Equals
bool GlobalNamespace::MultiplayerAvatarData::Equals_NEW(GlobalNamespace::MultiplayerAvatarData other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarData::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: MultiplayerAvatarData.Equals
bool GlobalNamespace::MultiplayerAvatarData::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarData::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: MultiplayerAvatarData.GetHashCode
int GlobalNamespace::MultiplayerAvatarData::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarData::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteBasicCutInfoHelper
#include "GlobalNamespace/NoteBasicCutInfoHelper.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: NoteCutDirection
#include "GlobalNamespace/NoteCutDirection.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMinBladeSpeedForCut
float GlobalNamespace::NoteBasicCutInfoHelper::_get_kMinBladeSpeedForCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteBasicCutInfoHelper::_get_kMinBladeSpeedForCut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteBasicCutInfoHelper", "kMinBladeSpeedForCut"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinBladeSpeedForCut
void GlobalNamespace::NoteBasicCutInfoHelper::_set_kMinBladeSpeedForCut(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteBasicCutInfoHelper::_set_kMinBladeSpeedForCut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteBasicCutInfoHelper", "kMinBladeSpeedForCut", value));
}
// Autogenerated method: NoteBasicCutInfoHelper.GetBasicCutInfo
void GlobalNamespace::NoteBasicCutInfoHelper::GetBasicCutInfo(UnityEngine::Transform* noteTransform, GlobalNamespace::ColorType colorType, GlobalNamespace::NoteCutDirection cutDirection, GlobalNamespace::SaberType saberType, float saberBladeSpeed, UnityEngine::Vector3 cutDirVec, float cutAngleTolerance, bool& directionOK, bool& speedOK, bool& saberTypeOK, float& cutDirDeviation, float& cutDirAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteBasicCutInfoHelper::GetBasicCutInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NoteBasicCutInfoHelper", "GetBasicCutInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteTransform, colorType, cutDirection, saberType, saberBladeSpeed, cutDirVec, cutAngleTolerance, directionOK, speedOK, saberTypeOK, cutDirDeviation, cutDirAngle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, noteTransform, colorType, cutDirection, saberType, saberBladeSpeed, cutDirVec, cutAngleTolerance, directionOK, speedOK, saberTypeOK, cutDirDeviation, cutDirAngle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteCutInfo.get_allIsOK
bool GlobalNamespace::NoteCutInfo::get_allIsOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutInfo::get_allIsOK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_allIsOK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: NoteCutInfo.get_allExceptSaberTypeIsOK
bool GlobalNamespace::NoteCutInfo::get_allExceptSaberTypeIsOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutInfo::get_allExceptSaberTypeIsOK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_allExceptSaberTypeIsOK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: NoteCutInfo.get_failText
::Il2CppString* GlobalNamespace::NoteCutInfo::get_failText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutInfo::get_failText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_failText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteCutInfoNetSerializable.LiteNetLib.Utils.INetSerializable.Deserialize
void GlobalNamespace::NoteCutInfoNetSerializable::LiteNetLib_Utils_INetSerializable_Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutInfoNetSerializable::LiteNetLib.Utils.INetSerializable.Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: NoteCutInfoNetSerializable.LiteNetLib.Utils.INetSerializable.Serialize
void GlobalNamespace::NoteCutInfoNetSerializable::LiteNetLib_Utils_INetSerializable_Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutInfoNetSerializable::LiteNetLib.Utils.INetSerializable.Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteMissInfoNetSerializable
#include "GlobalNamespace/NoteMissInfoNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteMissInfoNetSerializable.get_colorType
GlobalNamespace::ColorType GlobalNamespace::NoteMissInfoNetSerializable::get_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::get_colorType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_colorType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorType, false>(this, ___internal__method);
}
// Autogenerated method: NoteMissInfoNetSerializable.set_colorType
void GlobalNamespace::NoteMissInfoNetSerializable::set_colorType(GlobalNamespace::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::set_colorType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_colorType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMissInfoNetSerializable.get_noteTime
float GlobalNamespace::NoteMissInfoNetSerializable::get_noteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::get_noteTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteMissInfoNetSerializable.set_noteTime
void GlobalNamespace::NoteMissInfoNetSerializable::set_noteTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::set_noteTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_noteTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMissInfoNetSerializable.get_noteLineIndex
int GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteLineIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NoteMissInfoNetSerializable.set_noteLineIndex
void GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_noteLineIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMissInfoNetSerializable.get_noteLineLayer
GlobalNamespace::NoteLineLayer GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteLineLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: NoteMissInfoNetSerializable.set_noteLineLayer
void GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineLayer(GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_noteLineLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMissInfoNetSerializable.LiteNetLib.Utils.INetSerializable.Deserialize
void GlobalNamespace::NoteMissInfoNetSerializable::LiteNetLib_Utils_INetSerializable_Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::LiteNetLib.Utils.INetSerializable.Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: NoteMissInfoNetSerializable.LiteNetLib.Utils.INetSerializable.Serialize
void GlobalNamespace::NoteMissInfoNetSerializable::LiteNetLib_Utils_INetSerializable_Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::LiteNetLib.Utils.INetSerializable.Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RankModel
#include "GlobalNamespace/RankModel.hpp"
// Including type: RankModel/Rank
#include "GlobalNamespace/RankModel_Rank.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RankModel.GetRankName
::Il2CppString* GlobalNamespace::RankModel::GetRankName(GlobalNamespace::RankModel::Rank rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::GetRankName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "RankModel", "GetRankName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rank)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rank);
}
// Autogenerated method: RankModel.GetRankForScore
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::GetRankForScore(int rawScore, int modifiedScore, int maxRawScore, int maxModifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::GetRankForScore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "RankModel", "GetRankForScore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawScore, modifiedScore, maxRawScore, maxModifiedScore)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::RankModel::Rank, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawScore, modifiedScore, maxRawScore, maxModifiedScore);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RankModel/Rank
#include "GlobalNamespace/RankModel_Rank.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RankModel/Rank E
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "E"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank E
void GlobalNamespace::RankModel::Rank::_set_E(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "E", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank D
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_D() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_get_D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "D"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank D
void GlobalNamespace::RankModel::Rank::_set_D(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_set_D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "D", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank C
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_C() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_get_C");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "C"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank C
void GlobalNamespace::RankModel::Rank::_set_C(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_set_C");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "C", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank B
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "B"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank B
void GlobalNamespace::RankModel::Rank::_set_B(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "B", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank A
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "A"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank A
void GlobalNamespace::RankModel::Rank::_set_A(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "A", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank S
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_get_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "S"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank S
void GlobalNamespace::RankModel::Rank::_set_S(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_set_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "S", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank SS
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_SS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_get_SS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "SS"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank SS
void GlobalNamespace::RankModel::Rank::_set_SS(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_set_SS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "SS", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank SSS
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_SSS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_get_SSS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "SSS"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank SSS
void GlobalNamespace::RankModel::Rank::_set_SSS(GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModel::Rank::_set_SSS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "SSS", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SaberType SaberA
GlobalNamespace::SaberType GlobalNamespace::SaberType::_get_SaberA() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberType::_get_SaberA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SaberType>("", "SaberType", "SaberA"));
}
// Autogenerated static field setter
// Set static field: static public SaberType SaberA
void GlobalNamespace::SaberType::_set_SaberA(GlobalNamespace::SaberType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberType::_set_SaberA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberType", "SaberA", value));
}
// Autogenerated static field getter
// Get static field: static public SaberType SaberB
GlobalNamespace::SaberType GlobalNamespace::SaberType::_get_SaberB() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberType::_get_SaberB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SaberType>("", "SaberType", "SaberB"));
}
// Autogenerated static field setter
// Set static field: static public SaberType SaberB
void GlobalNamespace::SaberType::_set_SaberB(GlobalNamespace::SaberType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberType::_set_SaberB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberType", "SaberB", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberTypeExtensions
#include "GlobalNamespace/SaberTypeExtensions.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SaberTypeExtensions.MatchesColorType
bool GlobalNamespace::SaberTypeExtensions::MatchesColorType(GlobalNamespace::SaberType saberType, GlobalNamespace::ColorType colorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTypeExtensions::MatchesColorType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberTypeExtensions", "MatchesColorType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saberType, colorType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, saberType, colorType);
}
// Autogenerated method: SaberTypeExtensions.Node
UnityEngine::XR::XRNode GlobalNamespace::SaberTypeExtensions::Node(GlobalNamespace::SaberType saberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTypeExtensions::Node");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberTypeExtensions", "Node", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saberType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::XR::XRNode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, saberType);
}
// Autogenerated method: SaberTypeExtensions.MainSaber
GlobalNamespace::SaberType GlobalNamespace::SaberTypeExtensions::MainSaber(bool leftHanded) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTypeExtensions::MainSaber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberTypeExtensions", "MainSaber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leftHanded)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SaberType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leftHanded);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: QuantizedMathf
#include "GlobalNamespace/QuantizedMathf.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kQuaternionSerializableScaleFactor
int GlobalNamespace::QuantizedMathf::_get_kQuaternionSerializableScaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_get_kQuaternionSerializableScaleFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "QuantizedMathf", "kQuaternionSerializableScaleFactor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kQuaternionSerializableScaleFactor
void GlobalNamespace::QuantizedMathf::_set_kQuaternionSerializableScaleFactor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_set_kQuaternionSerializableScaleFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kQuaternionSerializableScaleFactor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kQuaternionSerializableEpsilon
float GlobalNamespace::QuantizedMathf::_get_kQuaternionSerializableEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_get_kQuaternionSerializableEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuantizedMathf", "kQuaternionSerializableEpsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kQuaternionSerializableEpsilon
void GlobalNamespace::QuantizedMathf::_set_kQuaternionSerializableEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_set_kQuaternionSerializableEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kQuaternionSerializableEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kVectorSerializableScaleInt
int GlobalNamespace::QuantizedMathf::_get_kVectorSerializableScaleInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_get_kVectorSerializableScaleInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "QuantizedMathf", "kVectorSerializableScaleInt"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kVectorSerializableScaleInt
void GlobalNamespace::QuantizedMathf::_set_kVectorSerializableScaleInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_set_kVectorSerializableScaleInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kVectorSerializableScaleInt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kVectorSerializableScale
float GlobalNamespace::QuantizedMathf::_get_kVectorSerializableScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_get_kVectorSerializableScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuantizedMathf", "kVectorSerializableScale"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kVectorSerializableScale
void GlobalNamespace::QuantizedMathf::_set_kVectorSerializableScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_set_kVectorSerializableScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kVectorSerializableScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kVectorSerializableEpsilon
float GlobalNamespace::QuantizedMathf::_get_kVectorSerializableEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_get_kVectorSerializableEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuantizedMathf", "kVectorSerializableEpsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kVectorSerializableEpsilon
void GlobalNamespace::QuantizedMathf::_set_kVectorSerializableEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::_set_kVectorSerializableEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kVectorSerializableEpsilon", value));
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(UnityEngine::Quaternion a, UnityEngine::Quaternion b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(float a, float b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, epsilon)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(int a, int b, int epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, epsilon)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(UnityEngine::Vector3 a, UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(UnityEngine::Pose a, UnityEngine::Pose b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: QuantizedMathf.QuantizedVectorComponentToString
::Il2CppString* GlobalNamespace::QuantizedMathf::QuantizedVectorComponentToString(int v) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuantizedMathf::QuantizedVectorComponentToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuantizedMathf", "QuantizedVectorComponentToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Vector3Serializable
#include "GlobalNamespace/Vector3Serializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Vector3Serializable.Serialize
void GlobalNamespace::Vector3Serializable::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: Vector3Serializable.Deserialize
void GlobalNamespace::Vector3Serializable::Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: Vector3Serializable.Equals
bool GlobalNamespace::Vector3Serializable::Equals_NEW(GlobalNamespace::Vector3Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: Vector3Serializable.Approximately
bool GlobalNamespace::Vector3Serializable::Approximately(GlobalNamespace::Vector3Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: Vector3Serializable.GetSize
int GlobalNamespace::Vector3Serializable::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::GetSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Vector3Serializable.Equals
bool GlobalNamespace::Vector3Serializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: Vector3Serializable.GetHashCode
int GlobalNamespace::Vector3Serializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Vector3Serializable.ToString
::Il2CppString* GlobalNamespace::Vector3Serializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: Vector3Serializable.op_Addition
GlobalNamespace::Vector3Serializable GlobalNamespace::operator+(const GlobalNamespace::Vector3Serializable& a, const GlobalNamespace::Vector3Serializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::op_Addition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Vector3Serializable", "op_Addition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Vector3Serializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Vector3Serializable.op_Subtraction
GlobalNamespace::Vector3Serializable GlobalNamespace::operator-(const GlobalNamespace::Vector3Serializable& a, const GlobalNamespace::Vector3Serializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3Serializable::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Vector3Serializable", "op_Subtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Vector3Serializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Vector4Serializable
#include "GlobalNamespace/Vector4Serializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Vector4Serializable.Serialize
void GlobalNamespace::Vector4Serializable::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: Vector4Serializable.Deserialize
void GlobalNamespace::Vector4Serializable::Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: Vector4Serializable.Equals
bool GlobalNamespace::Vector4Serializable::Equals_NEW(GlobalNamespace::Vector4Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: Vector4Serializable.Approximately
bool GlobalNamespace::Vector4Serializable::Approximately(GlobalNamespace::Vector4Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: Vector4Serializable.GetSize
int GlobalNamespace::Vector4Serializable::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::GetSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Vector4Serializable.Equals
bool GlobalNamespace::Vector4Serializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: Vector4Serializable.GetHashCode
int GlobalNamespace::Vector4Serializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Vector4Serializable.ToString
::Il2CppString* GlobalNamespace::Vector4Serializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: Vector4Serializable.op_Addition
GlobalNamespace::Vector4Serializable GlobalNamespace::operator+(const GlobalNamespace::Vector4Serializable& a, const GlobalNamespace::Vector4Serializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::op_Addition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Vector4Serializable", "op_Addition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Vector4Serializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Vector4Serializable.op_Subtraction
GlobalNamespace::Vector4Serializable GlobalNamespace::operator-(const GlobalNamespace::Vector4Serializable& a, const GlobalNamespace::Vector4Serializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector4Serializable::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Vector4Serializable", "op_Subtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Vector4Serializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: QuaternionSerializable
#include "GlobalNamespace/QuaternionSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSqrtTwo
float GlobalNamespace::QuaternionSerializable::_get_kSqrtTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::_get_kSqrtTwo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuaternionSerializable", "kSqrtTwo"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSqrtTwo
void GlobalNamespace::QuaternionSerializable::_set_kSqrtTwo(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::_set_kSqrtTwo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuaternionSerializable", "kSqrtTwo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kOneOverSqrtTwo
float GlobalNamespace::QuaternionSerializable::_get_kOneOverSqrtTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::_get_kOneOverSqrtTwo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuaternionSerializable", "kOneOverSqrtTwo"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kOneOverSqrtTwo
void GlobalNamespace::QuaternionSerializable::_set_kOneOverSqrtTwo(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::_set_kOneOverSqrtTwo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuaternionSerializable", "kOneOverSqrtTwo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kScale
float GlobalNamespace::QuaternionSerializable::_get_kScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::_get_kScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuaternionSerializable", "kScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kScale
void GlobalNamespace::QuaternionSerializable::_set_kScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::_set_kScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuaternionSerializable", "kScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kInvScale
float GlobalNamespace::QuaternionSerializable::_get_kInvScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::_get_kInvScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuaternionSerializable", "kInvScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kInvScale
void GlobalNamespace::QuaternionSerializable::_set_kInvScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::_set_kInvScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuaternionSerializable", "kInvScale", value));
}
// Autogenerated method: QuaternionSerializable.get_identity
GlobalNamespace::QuaternionSerializable GlobalNamespace::QuaternionSerializable::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::get_identity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuaternionSerializable", "get_identity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::QuaternionSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: QuaternionSerializable.ToSmallest
void GlobalNamespace::QuaternionSerializable::ToSmallest(UnityEngine::Quaternion q, int& sa, int& sb, int& sc) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::ToSmallest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuaternionSerializable", "ToSmallest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q, sa, sb, sc)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q, sa, sb, sc);
}
// Autogenerated method: QuaternionSerializable.FromSmallest
UnityEngine::Quaternion GlobalNamespace::QuaternionSerializable::FromSmallest(int sa, int sb, int sc) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::FromSmallest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuaternionSerializable", "FromSmallest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sa, sb, sc)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sa, sb, sc);
}
// Autogenerated method: QuaternionSerializable.Serialize
void GlobalNamespace::QuaternionSerializable::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: QuaternionSerializable.Deserialize
void GlobalNamespace::QuaternionSerializable::Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: QuaternionSerializable.Equals
bool GlobalNamespace::QuaternionSerializable::Equals_NEW(GlobalNamespace::QuaternionSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: QuaternionSerializable.Approximately
bool GlobalNamespace::QuaternionSerializable::Approximately(GlobalNamespace::QuaternionSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: QuaternionSerializable.GetSize
int GlobalNamespace::QuaternionSerializable::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::GetSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: QuaternionSerializable.Equals
bool GlobalNamespace::QuaternionSerializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: QuaternionSerializable.GetHashCode
int GlobalNamespace::QuaternionSerializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: QuaternionSerializable.ToString
::Il2CppString* GlobalNamespace::QuaternionSerializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: QuaternionSerializable.op_Addition
GlobalNamespace::QuaternionSerializable GlobalNamespace::operator+(const GlobalNamespace::QuaternionSerializable& a, const GlobalNamespace::QuaternionSerializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::op_Addition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuaternionSerializable", "op_Addition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::QuaternionSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: QuaternionSerializable.op_Subtraction
GlobalNamespace::QuaternionSerializable GlobalNamespace::operator-(const GlobalNamespace::QuaternionSerializable& a, const GlobalNamespace::QuaternionSerializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuaternionSerializable::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuaternionSerializable", "op_Subtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::QuaternionSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PoseSerializable
#include "GlobalNamespace/PoseSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PoseSerializable.get_identity
GlobalNamespace::PoseSerializable GlobalNamespace::PoseSerializable::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::get_identity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PoseSerializable", "get_identity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PoseSerializable.Serialize
void GlobalNamespace::PoseSerializable::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: PoseSerializable.Deserialize
void GlobalNamespace::PoseSerializable::Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: PoseSerializable.Equals
bool GlobalNamespace::PoseSerializable::Equals_NEW(GlobalNamespace::PoseSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: PoseSerializable.GetSize
int GlobalNamespace::PoseSerializable::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::GetSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: PoseSerializable.Equals
bool GlobalNamespace::PoseSerializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: PoseSerializable.GetHashCode
int GlobalNamespace::PoseSerializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: PoseSerializable.ToString
::Il2CppString* GlobalNamespace::PoseSerializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: PoseSerializable.op_Addition
GlobalNamespace::PoseSerializable GlobalNamespace::operator+(const GlobalNamespace::PoseSerializable& a, const GlobalNamespace::PoseSerializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::op_Addition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PoseSerializable", "op_Addition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: PoseSerializable.op_Subtraction
GlobalNamespace::PoseSerializable GlobalNamespace::operator-(const GlobalNamespace::PoseSerializable& a, const GlobalNamespace::PoseSerializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PoseSerializable::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PoseSerializable", "op_Subtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSerializable
#include "GlobalNamespace/ColorSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSerializable.Serialize
void GlobalNamespace::ColorSerializable::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSerializable::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: ColorSerializable.Deserialize
void GlobalNamespace::ColorSerializable::Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSerializable::Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: ColorSerializable.Equals
bool GlobalNamespace::ColorSerializable::Equals_NEW(GlobalNamespace::ColorSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSerializable::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: ColorSerializable.Equals
bool GlobalNamespace::ColorSerializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSerializable::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: ColorSerializable.GetHashCode
int GlobalNamespace::ColorSerializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSerializable::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: ColorSerializable.ToString
::Il2CppString* GlobalNamespace::ColorSerializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSerializable::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Color32Serializable
#include "GlobalNamespace/Color32Serializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Color32Serializable.Serialize
void GlobalNamespace::Color32Serializable::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Color32Serializable::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: Color32Serializable.Deserialize
void GlobalNamespace::Color32Serializable::Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Color32Serializable::Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: Color32Serializable.Equals
bool GlobalNamespace::Color32Serializable::Equals_NEW(GlobalNamespace::Color32Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Color32Serializable::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: Color32Serializable.Equals
bool GlobalNamespace::Color32Serializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Color32Serializable::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: Color32Serializable.GetHashCode
int GlobalNamespace::Color32Serializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Color32Serializable::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Color32Serializable.ToString
::Il2CppString* GlobalNamespace::Color32Serializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Color32Serializable::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorNoAlphaSerializable
#include "GlobalNamespace/ColorNoAlphaSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorNoAlphaSerializable.Serialize
void GlobalNamespace::ColorNoAlphaSerializable::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoAlphaSerializable::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: ColorNoAlphaSerializable.Deserialize
void GlobalNamespace::ColorNoAlphaSerializable::Deserialize_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoAlphaSerializable::Deserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: ColorNoAlphaSerializable.Equals
bool GlobalNamespace::ColorNoAlphaSerializable::Equals_NEW(GlobalNamespace::ColorNoAlphaSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoAlphaSerializable::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: ColorNoAlphaSerializable.Equals
bool GlobalNamespace::ColorNoAlphaSerializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoAlphaSerializable::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: ColorNoAlphaSerializable.GetHashCode
int GlobalNamespace::ColorNoAlphaSerializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoAlphaSerializable::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: ColorNoAlphaSerializable.ToString
::Il2CppString* GlobalNamespace::ColorNoAlphaSerializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoAlphaSerializable::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kToStringPrefix
::Il2CppString* GlobalNamespace::SongPackMask::_get_kToStringPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::_get_kToStringPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SongPackMask", "kToStringPrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringPrefix
void GlobalNamespace::SongPackMask::_set_kToStringPrefix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::_set_kToStringPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMask", "kToStringPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kToStringSuffix
::Il2CppString* GlobalNamespace::SongPackMask::_get_kToStringSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::_get_kToStringSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SongPackMask", "kToStringSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringSuffix
void GlobalNamespace::SongPackMask::_set_kToStringSuffix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::_set_kToStringSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMask", "kToStringSuffix", value));
}
// Autogenerated method: SongPackMask.get_all
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::get_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::get_all");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", "get_all", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPackMask.Contains
bool GlobalNamespace::SongPackMask::Contains(GlobalNamespace::SongPackMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: SongPackMask.DifferenceFrom
int GlobalNamespace::SongPackMask::DifferenceFrom(GlobalNamespace::SongPackMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::DifferenceFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "DifferenceFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other);
}
// Autogenerated method: SongPackMask.Serialize
void GlobalNamespace::SongPackMask::Serialize_NEW(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::Serialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: SongPackMask.CreateFromSerializedData
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::CreateFromSerializedData_NEW(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::CreateFromSerializedData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(*this, ___internal__method, reader);
}
// Autogenerated method: SongPackMask.Deserialize
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::Deserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: SongPackMask.ToShortString
::Il2CppString* GlobalNamespace::SongPackMask::ToShortString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::ToShortString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToShortString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: SongPackMask.ToBytes
::Array<uint8_t>* GlobalNamespace::SongPackMask::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::ToBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(*this, ___internal__method);
}
// Autogenerated method: SongPackMask.Equals
bool GlobalNamespace::SongPackMask::Equals_NEW(GlobalNamespace::SongPackMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::Equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: SongPackMask.TryParse
bool GlobalNamespace::SongPackMask::TryParse(::Il2CppString* stringSerializedMask, GlobalNamespace::SongPackMask& songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringSerializedMask, songPackMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask, songPackMask);
}
// Autogenerated method: SongPackMask.Parse
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::Parse(::Il2CppString* stringSerializedMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringSerializedMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask);
}
// Autogenerated method: SongPackMask.FromBytes
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::FromBytes(::Array<uint8_t>* bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::FromBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", "FromBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bytes, offset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: SongPackMask.ToString
::Il2CppString* GlobalNamespace::SongPackMask::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: SongPackMask.GetHashCode
int GlobalNamespace::SongPackMask::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: SongPackMask.Equals
bool GlobalNamespace::SongPackMask::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: SongPackMask.op_BitwiseOr
GlobalNamespace::SongPackMask GlobalNamespace::operator|(const GlobalNamespace::SongPackMask& a, const GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::op_BitwiseOr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", "op_BitwiseOr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SongPackMask.op_BitwiseAnd
GlobalNamespace::SongPackMask GlobalNamespace::operator&(const GlobalNamespace::SongPackMask& a, const GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::op_BitwiseAnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", "op_BitwiseAnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SongPackMask.op_Equality
bool GlobalNamespace::operator ==(const GlobalNamespace::SongPackMask& a, const GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SongPackMask.op_Inequality
bool GlobalNamespace::operator !=(const GlobalNamespace::SongPackMask& a, const GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMask::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VarIntExtensions
#include "GlobalNamespace/VarIntExtensions.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VarIntExtensions.PutVarInt
void GlobalNamespace::VarIntExtensions::PutVarInt(LiteNetLib::Utils::NetDataWriter* writer, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::PutVarInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "PutVarInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, writer, val);
}
// Autogenerated method: VarIntExtensions.GetVarInt
int GlobalNamespace::VarIntExtensions::GetVarInt(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::GetVarInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetVarInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: VarIntExtensions.PutVarUInt
void GlobalNamespace::VarIntExtensions::PutVarUInt(LiteNetLib::Utils::NetDataWriter* writer, uint val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::PutVarUInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "PutVarUInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, writer, val);
}
// Autogenerated method: VarIntExtensions.GetVarUInt
uint GlobalNamespace::VarIntExtensions::GetVarUInt(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::GetVarUInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetVarUInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: VarIntExtensions.PutVarLong
void GlobalNamespace::VarIntExtensions::PutVarLong(LiteNetLib::Utils::NetDataWriter* writer, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::PutVarLong");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "PutVarLong", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, writer, val);
}
// Autogenerated method: VarIntExtensions.GetVarLong
int64_t GlobalNamespace::VarIntExtensions::GetVarLong(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::GetVarLong");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetVarLong", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: VarIntExtensions.PutVarULong
void GlobalNamespace::VarIntExtensions::PutVarULong(LiteNetLib::Utils::NetDataWriter* writer, uint64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::PutVarULong");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "PutVarULong", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, writer, val);
}
// Autogenerated method: VarIntExtensions.GetVarULong
uint64_t GlobalNamespace::VarIntExtensions::GetVarULong(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::GetVarULong");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetVarULong", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: VarIntExtensions.TryGetVarUInt
bool GlobalNamespace::VarIntExtensions::TryGetVarUInt(LiteNetLib::Utils::NetDataReader* reader, uint& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::TryGetVarUInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "TryGetVarUInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader, value);
}
// Autogenerated method: VarIntExtensions.TryGetVarULong
bool GlobalNamespace::VarIntExtensions::TryGetVarULong(LiteNetLib::Utils::NetDataReader* reader, uint64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::TryGetVarULong");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "TryGetVarULong", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader, value);
}
// Autogenerated method: VarIntExtensions.GetSize
int GlobalNamespace::VarIntExtensions::GetSize(int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::GetSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val);
}
// Autogenerated method: VarIntExtensions.GetSize
int GlobalNamespace::VarIntExtensions::GetSize(uint val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::GetSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val);
}
// Autogenerated method: VarIntExtensions.GetSize
int GlobalNamespace::VarIntExtensions::GetSize(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::GetSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val);
}
// Autogenerated method: VarIntExtensions.GetSize
int GlobalNamespace::VarIntExtensions::GetSize(uint64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VarIntExtensions::GetSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelpers
#include "GlobalNamespace/AudioHelpers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelpers.NormalizedVolumeToDB
float GlobalNamespace::AudioHelpers::NormalizedVolumeToDB(float normalizedVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioHelpers::NormalizedVolumeToDB");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "AudioHelpers", "NormalizedVolumeToDB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(normalizedVolume)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, normalizedVolume);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CaptureAudioToWav
#include "GlobalNamespace/CaptureAudioToWav.hpp"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CaptureAudioToWav.Awake
void GlobalNamespace::CaptureAudioToWav::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CaptureAudioToWav::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CaptureAudioToWav.Update
void GlobalNamespace::CaptureAudioToWav::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CaptureAudioToWav::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CaptureAudioToWav.StartWriting
void GlobalNamespace::CaptureAudioToWav::StartWriting(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CaptureAudioToWav::StartWriting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartWriting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: CaptureAudioToWav.OnAudioFilterRead
void GlobalNamespace::CaptureAudioToWav::OnAudioFilterRead(::Array<float>* data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CaptureAudioToWav::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, channels)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: CaptureAudioToWav.ConvertAndWrite
void GlobalNamespace::CaptureAudioToWav::ConvertAndWrite(::Array<float>* dataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CaptureAudioToWav::ConvertAndWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConvertAndWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dataSource)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataSource);
}
// Autogenerated method: CaptureAudioToWav.WriteHeader
void GlobalNamespace::CaptureAudioToWav::WriteHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CaptureAudioToWav::WriteHeader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteHeader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RandomizedPitch
#include "GlobalNamespace/RandomizedPitch.hpp"
// Including type: RandomizedPitch/<PlayDelayedCoroutine>d__9
#include "GlobalNamespace/RandomizedPitch_-PlayDelayedCoroutine-d__9.hpp"
// Including type: RandomizedPitch/<RestorePitchWithDelay>d__10
#include "GlobalNamespace/RandomizedPitch_-RestorePitchWithDelay-d__10.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RandomizedPitch.OnEnable
void GlobalNamespace::RandomizedPitch::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch.Play
void GlobalNamespace::RandomizedPitch::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::Play");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch.PlayDelayed
void GlobalNamespace::RandomizedPitch::PlayDelayed(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::PlayDelayed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PlayDelayed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delay)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, delay);
}
// Autogenerated method: RandomizedPitch.PlayDelayedCoroutine
System::Collections::IEnumerator* GlobalNamespace::RandomizedPitch::PlayDelayedCoroutine(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::PlayDelayedCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PlayDelayedCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delay)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: RandomizedPitch.RestorePitchWithDelay
System::Collections::IEnumerator* GlobalNamespace::RandomizedPitch::RestorePitchWithDelay(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::RestorePitchWithDelay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RestorePitchWithDelay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delay)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RandomizedPitch/<PlayDelayedCoroutine>d__9
#include "GlobalNamespace/RandomizedPitch_-PlayDelayedCoroutine-d__9.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.System.IDisposable.Dispose
void GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.MoveNext
bool GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.System.Collections.IEnumerator.Reset
void GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RandomizedPitch/<RestorePitchWithDelay>d__10
#include "GlobalNamespace/RandomizedPitch_-RestorePitchWithDelay-d__10.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.System.IDisposable.Dispose
void GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.MoveNext
bool GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.System.Collections.IEnumerator.Reset
void GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ActivateOnPlatform
#include "GlobalNamespace/ActivateOnPlatform.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ActivateOnPlatform.Awake
void GlobalNamespace::ActivateOnPlatform::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ActivateOnPlatform::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CommandLineArguments
#include "GlobalNamespace/CommandLineArguments.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CommandLineArguments.Contains
bool GlobalNamespace::CommandLineArguments::Contains(::Il2CppString* argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CommandLineArguments::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "CommandLineArguments", "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(argument)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, argument);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DeactivateAnimatorOnInputFocusCapture
#include "GlobalNamespace/DeactivateAnimatorOnInputFocusCapture.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DeactivateAnimatorOnInputFocusCapture.Start
void GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAnimatorOnInputFocusCapture.OnDestroy
void GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAnimatorOnInputFocusCapture.HandleInputFocusCaptured
void GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::HandleInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::HandleInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleInputFocusCaptured", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAnimatorOnInputFocusCapture.HandleInputFocusReleased
void GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::HandleInputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::HandleInputFocusReleased");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleInputFocusReleased", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DeactivateOnInputFocusCapture
#include "GlobalNamespace/DeactivateOnInputFocusCapture.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DeactivateOnInputFocusCapture.OnEnable
void GlobalNamespace::DeactivateOnInputFocusCapture::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateOnInputFocusCapture::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateOnInputFocusCapture.OnDestroy
void GlobalNamespace::DeactivateOnInputFocusCapture::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateOnInputFocusCapture::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateOnInputFocusCapture.HandleInputFocusCaptured
void GlobalNamespace::DeactivateOnInputFocusCapture::HandleInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateOnInputFocusCapture::HandleInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleInputFocusCaptured", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateOnInputFocusCapture.HandleInputFocusReleased
void GlobalNamespace::DeactivateOnInputFocusCapture::HandleInputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateOnInputFocusCapture::HandleInputFocusReleased");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleInputFocusReleased", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FileHelpers
#include "GlobalNamespace/FileHelpers.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FileHelpers.GetEscapedURLForFilePath
::Il2CppString* GlobalNamespace::FileHelpers::GetEscapedURLForFilePath(::Il2CppString* filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileHelpers::GetEscapedURLForFilePath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FileHelpers", "GetEscapedURLForFilePath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filePath)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: FileHelpers.GetUniqueDirectoryNameByAppendingNumber
::Il2CppString* GlobalNamespace::FileHelpers::GetUniqueDirectoryNameByAppendingNumber(::Il2CppString* dirName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileHelpers::GetUniqueDirectoryNameByAppendingNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FileHelpers", "GetUniqueDirectoryNameByAppendingNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dirName)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dirName);
}
// Autogenerated method: FileHelpers.GetFilePaths
::Array<::Il2CppString*>* GlobalNamespace::FileHelpers::GetFilePaths(::Il2CppString* directoryPath, System::Collections::Generic::HashSet_1<::Il2CppString*>* extensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileHelpers::GetFilePaths");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FileHelpers", "GetFilePaths", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(directoryPath, extensions)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, directoryPath, extensions);
}
// Autogenerated method: FileHelpers.GetFileNamesFromFilePaths
::Array<::Il2CppString*>* GlobalNamespace::FileHelpers::GetFileNamesFromFilePaths(::Array<::Il2CppString*>* filePaths) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileHelpers::GetFileNamesFromFilePaths");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FileHelpers", "GetFileNamesFromFilePaths", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filePaths)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePaths);
}
// Autogenerated method: FileHelpers.SaveToJSONFile
void GlobalNamespace::FileHelpers::SaveToJSONFile(::Il2CppObject* obj, ::Il2CppString* filePath, ::Il2CppString* tempFilePath, ::Il2CppString* backupFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileHelpers::SaveToJSONFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FileHelpers", "SaveToJSONFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, filePath, tempFilePath, backupFilePath)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, filePath, tempFilePath, backupFilePath);
}
// Autogenerated method: FileHelpers.LoadJSONFile
::Il2CppString* GlobalNamespace::FileHelpers::LoadJSONFile(::Il2CppString* filePath, ::Il2CppString* backupFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileHelpers::LoadJSONFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FileHelpers", "LoadJSONFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filePath, backupFilePath)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath, backupFilePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FindUnityObjectsHelper
#include "GlobalNamespace/FindUnityObjectsHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FindUnityObjectsHelper.GetMonoBehavioursInLoadedScenes
System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* GlobalNamespace::FindUnityObjectsHelper::GetMonoBehavioursInLoadedScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FindUnityObjectsHelper::GetMonoBehavioursInLoadedScenes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FindUnityObjectsHelper", "GetMonoBehavioursInLoadedScenes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: FindUnityObjectsHelper.GetAllRootGameObjectsInLoadedScenes
System::Collections::Generic::List_1<UnityEngine::GameObject*>* GlobalNamespace::FindUnityObjectsHelper::GetAllRootGameObjectsInLoadedScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FindUnityObjectsHelper::GetAllRootGameObjectsInLoadedScenes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FindUnityObjectsHelper", "GetAllRootGameObjectsInLoadedScenes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::GameObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: FindUnityObjectsHelper.GetAllGameObjectsInGameObject
System::Collections::Generic::List_1<UnityEngine::GameObject*>* GlobalNamespace::FindUnityObjectsHelper::GetAllGameObjectsInGameObject(UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FindUnityObjectsHelper::GetAllGameObjectsInGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FindUnityObjectsHelper", "GetAllGameObjectsInGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(go)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::GameObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, go);
}
// Autogenerated method: FindUnityObjectsHelper.GetAllGameObjectsInLoadedScenes
System::Collections::Generic::List_1<UnityEngine::GameObject*>* GlobalNamespace::FindUnityObjectsHelper::GetAllGameObjectsInLoadedScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FindUnityObjectsHelper::GetAllGameObjectsInLoadedScenes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "FindUnityObjectsHelper", "GetAllGameObjectsInLoadedScenes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::GameObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRefreshable
#include "GlobalNamespace/IRefreshable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRefreshable.Refresh
void GlobalNamespace::IRefreshable::Refresh_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IRefreshable::Refresh_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KeyboardShortcutsManager
#include "GlobalNamespace/KeyboardShortcutsManager.hpp"
// Including type: KeyboardShortcutsManager/KeyboardShortcut
#include "GlobalNamespace/KeyboardShortcutsManager_KeyboardShortcut.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: KeyboardShortcutsManager.Update
void GlobalNamespace::KeyboardShortcutsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcuts
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcuts(System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, System::Action*>* shortcutActions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcuts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcuts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shortcutActions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shortcutActions);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcuts
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcuts(System::Collections::Generic::Dictionary_2<GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut*, System::Action*>* shortcutActions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcuts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcuts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shortcutActions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shortcutActions);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut(GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut* keyboardShortcut, System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyboardShortcut, callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyboardShortcut, callback);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut(UnityEngine::KeyCode mainKey, UnityEngine::KeyCode combinationKey1, UnityEngine::KeyCode combinationKey2, System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainKey, combinationKey1, combinationKey2, callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mainKey, combinationKey1, combinationKey2, callback);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut(UnityEngine::KeyCode mainKey, UnityEngine::KeyCode combinationKey1, System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainKey, combinationKey1, callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mainKey, combinationKey1, callback);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut(UnityEngine::KeyCode mainKey, System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainKey, callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mainKey, callback);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcuts
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcuts(System::Collections::Generic::Dictionary_2<UnityEngine::KeyCode, System::Action*>* shortcutActions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcuts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddKeyboardShortcuts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shortcutActions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shortcutActions);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcuts
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcuts(System::Collections::Generic::Dictionary_2<GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut*, System::Action*>* shortcutActions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcuts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddKeyboardShortcuts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shortcutActions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shortcutActions);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut(GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut* keyboardShortcut, System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddKeyboardShortcut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyboardShortcut, callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyboardShortcut, callback);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut(UnityEngine::KeyCode mainKey, UnityEngine::KeyCode combinationKey1, UnityEngine::KeyCode combinationKey2, System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddKeyboardShortcut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainKey, combinationKey1, combinationKey2, callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mainKey, combinationKey1, combinationKey2, callback);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut(UnityEngine::KeyCode mainKey, UnityEngine::KeyCode combinationKey1, System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddKeyboardShortcut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainKey, combinationKey1, callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mainKey, combinationKey1, callback);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut(UnityEngine::KeyCode mainKey, System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddKeyboardShortcut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainKey, callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mainKey, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: KeyboardShortcutsManager/KeyboardShortcut
#include "GlobalNamespace/KeyboardShortcutsManager_KeyboardShortcut.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: KeyboardShortcutsManager/KeyboardShortcut.GetHashCode
int GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: KeyboardShortcutsManager/KeyboardShortcut.Equals
bool GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MipMapBiasSpriteSetter
#include "GlobalNamespace/MipMapBiasSpriteSetter.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MipMapBiasSpriteSetter.Start
void GlobalNamespace::MipMapBiasSpriteSetter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MipMapBiasSpriteSetter::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityScenesHelper
#include "GlobalNamespace/UnityScenesHelper.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityScenesHelper.SetActiveRootObjectsInScene
void GlobalNamespace::UnityScenesHelper::SetActiveRootObjectsInScene(UnityEngine::SceneManagement::Scene scene, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnityScenesHelper::SetActiveRootObjectsInScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "UnityScenesHelper", "SetActiveRootObjectsInScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scene, active)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene, active);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DrawIfAttribute
#include "GlobalNamespace/DrawIfAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DrawIfAttribute/DisablingType
#include "GlobalNamespace/DrawIfAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DrawIfAttribute/DisablingType ReadOnly
GlobalNamespace::DrawIfAttribute::DisablingType GlobalNamespace::DrawIfAttribute::DisablingType::_get_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DrawIfAttribute::DisablingType::_get_ReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DrawIfAttribute::DisablingType>("", "DrawIfAttribute/DisablingType", "ReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public DrawIfAttribute/DisablingType ReadOnly
void GlobalNamespace::DrawIfAttribute::DisablingType::_set_ReadOnly(GlobalNamespace::DrawIfAttribute::DisablingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DrawIfAttribute::DisablingType::_set_ReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DrawIfAttribute/DisablingType", "ReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public DrawIfAttribute/DisablingType DontDraw
GlobalNamespace::DrawIfAttribute::DisablingType GlobalNamespace::DrawIfAttribute::DisablingType::_get_DontDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DrawIfAttribute::DisablingType::_get_DontDraw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DrawIfAttribute::DisablingType>("", "DrawIfAttribute/DisablingType", "DontDraw"));
}
// Autogenerated static field setter
// Set static field: static public DrawIfAttribute/DisablingType DontDraw
void GlobalNamespace::DrawIfAttribute::DisablingType::_set_DontDraw(GlobalNamespace::DrawIfAttribute::DisablingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DrawIfAttribute::DisablingType::_set_DontDraw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DrawIfAttribute/DisablingType", "DontDraw", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DrawHelpers
#include "GlobalNamespace/DrawHelpers.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DrawHelpers.DrawTexture
void GlobalNamespace::DrawHelpers::DrawTexture(UnityEngine::Texture* texture, float x, float y, float w, float h, UnityEngine::Material* mat, float sx, float sy, float sw, float sh) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DrawHelpers::DrawTexture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "DrawHelpers", "DrawTexture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(texture, x, y, w, h, mat, sx, sy, sw, sh)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, texture, x, y, w, h, mat, sx, sy, sw, sh);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DroppedFramesLabel
#include "GlobalNamespace/DroppedFramesLabel.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DroppedFramesLabel.Start
void GlobalNamespace::DroppedFramesLabel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DroppedFramesLabel::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DroppedFramesLabel.Update
void GlobalNamespace::DroppedFramesLabel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DroppedFramesLabel::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DroppedFramesLabel.RefreshText
void GlobalNamespace::DroppedFramesLabel::RefreshText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DroppedFramesLabel::RefreshText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Easing
#include "GlobalNamespace/Easing.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Easing.Linear
float GlobalNamespace::Easing::Linear(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::Linear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "Linear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InSine
float GlobalNamespace::Easing::InSine(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InSine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InSine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutSine
float GlobalNamespace::Easing::OutSine(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutSine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutSine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutSine
float GlobalNamespace::Easing::InOutSine(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutSine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutSine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InQuad
float GlobalNamespace::Easing::InQuad(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InQuad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InQuad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutQuad
float GlobalNamespace::Easing::OutQuad(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutQuad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutQuad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutQuad
float GlobalNamespace::Easing::InOutQuad(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutQuad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutQuad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InCubic
float GlobalNamespace::Easing::InCubic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InCubic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InCubic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutCubic
float GlobalNamespace::Easing::OutCubic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutCubic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutCubic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutCubic
float GlobalNamespace::Easing::InOutCubic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutCubic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutCubic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InQuart
float GlobalNamespace::Easing::InQuart(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InQuart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InQuart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutQuart
float GlobalNamespace::Easing::OutQuart(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutQuart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutQuart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutQuart
float GlobalNamespace::Easing::InOutQuart(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutQuart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutQuart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InQuint
float GlobalNamespace::Easing::InQuint(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InQuint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InQuint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutQuint
float GlobalNamespace::Easing::OutQuint(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutQuint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutQuint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutQuint
float GlobalNamespace::Easing::InOutQuint(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutQuint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutQuint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InExpo
float GlobalNamespace::Easing::InExpo(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InExpo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InExpo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutExpo
float GlobalNamespace::Easing::OutExpo(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutExpo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutExpo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutExpo
float GlobalNamespace::Easing::InOutExpo(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutExpo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutExpo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InCirc
float GlobalNamespace::Easing::InCirc(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InCirc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InCirc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutCirc
float GlobalNamespace::Easing::OutCirc(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutCirc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutCirc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutCirc
float GlobalNamespace::Easing::InOutCirc(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutCirc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutCirc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InBack
float GlobalNamespace::Easing::InBack(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InBack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InBack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutBack
float GlobalNamespace::Easing::OutBack(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutBack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutBack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutBack
float GlobalNamespace::Easing::InOutBack(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutBack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutBack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InElastic
float GlobalNamespace::Easing::InElastic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InElastic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InElastic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutElastic
float GlobalNamespace::Easing::OutElastic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutElastic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutElastic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutElastic
float GlobalNamespace::Easing::InOutElastic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutElastic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutElastic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InBounce
float GlobalNamespace::Easing::InBounce(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InBounce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InBounce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutBounce
float GlobalNamespace::Easing::OutBounce(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::OutBounce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "OutBounce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutBounce
float GlobalNamespace::Easing::InOutBounce(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Easing::InOutBounce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "Easing", "InOutBounce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RenderTextureExtensions
#include "GlobalNamespace/RenderTextureExtensions.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RenderTextureExtensions.GetTexture2D
UnityEngine::Texture2D* GlobalNamespace::RenderTextureExtensions::GetTexture2D(UnityEngine::RenderTexture* rt) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RenderTextureExtensions::GetTexture2D");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "RenderTextureExtensions", "GetTexture2D", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rt)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rt);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimeHelper
#include "GlobalNamespace/TimeHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCF4A14
// Autogenerated static field getter
// Get static field: static private System.Single <time>k__BackingField
float GlobalNamespace::TimeHelper::_get_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::_get_$time$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("", "TimeHelper", "<time>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <time>k__BackingField
void GlobalNamespace::TimeHelper::_set_$time$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::_set_$time$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeHelper", "<time>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCF4A24
// Autogenerated static field getter
// Get static field: static private System.Single <deltaTime>k__BackingField
float GlobalNamespace::TimeHelper::_get_$deltaTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::_get_$deltaTime$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("", "TimeHelper", "<deltaTime>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <deltaTime>k__BackingField
void GlobalNamespace::TimeHelper::_set_$deltaTime$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::_set_$deltaTime$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeHelper", "<deltaTime>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCF4A34
// Autogenerated static field getter
// Get static field: static private System.Single <fixedDeltaTime>k__BackingField
float GlobalNamespace::TimeHelper::_get_$fixedDeltaTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::_get_$fixedDeltaTime$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("", "TimeHelper", "<fixedDeltaTime>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <fixedDeltaTime>k__BackingField
void GlobalNamespace::TimeHelper::_set_$fixedDeltaTime$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::_set_$fixedDeltaTime$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeHelper", "<fixedDeltaTime>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCF4A44
// Autogenerated static field getter
// Get static field: static private System.Single <interpolationFactor>k__BackingField
float GlobalNamespace::TimeHelper::_get_$interpolationFactor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::_get_$interpolationFactor$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("", "TimeHelper", "<interpolationFactor>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <interpolationFactor>k__BackingField
void GlobalNamespace::TimeHelper::_set_$interpolationFactor$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::_set_$interpolationFactor$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeHelper", "<interpolationFactor>k__BackingField", value));
}
// Autogenerated method: TimeHelper.get_time
float GlobalNamespace::TimeHelper::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::get_time");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeHelper", "get_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TimeHelper.set_time
void GlobalNamespace::TimeHelper::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::set_time");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeHelper", "set_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TimeHelper.get_deltaTime
float GlobalNamespace::TimeHelper::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeHelper", "get_deltaTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TimeHelper.set_deltaTime
void GlobalNamespace::TimeHelper::set_deltaTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::set_deltaTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeHelper", "set_deltaTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TimeHelper.get_fixedDeltaTime
float GlobalNamespace::TimeHelper::get_fixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::get_fixedDeltaTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeHelper", "get_fixedDeltaTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TimeHelper.set_fixedDeltaTime
void GlobalNamespace::TimeHelper::set_fixedDeltaTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::set_fixedDeltaTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeHelper", "set_fixedDeltaTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TimeHelper.get_interpolationFactor
float GlobalNamespace::TimeHelper::get_interpolationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::get_interpolationFactor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeHelper", "get_interpolationFactor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TimeHelper.set_interpolationFactor
void GlobalNamespace::TimeHelper::set_interpolationFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::set_interpolationFactor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeHelper", "set_interpolationFactor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TimeHelper.Awake
void GlobalNamespace::TimeHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeHelper.FixedUpdate
void GlobalNamespace::TimeHelper::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeHelper.Update
void GlobalNamespace::TimeHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimeHelper::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ManualUpdate
#include "GlobalNamespace/ManualUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ManualUpdateManager
#include "GlobalNamespace/ManualUpdateManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ActivateOnVisible
#include "GlobalNamespace/ActivateOnVisible.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ActivateOnVisible.Awake
void GlobalNamespace::ActivateOnVisible::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ActivateOnVisible::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ActivateOnVisible.OnBecameVisible
void GlobalNamespace::ActivateOnVisible::OnBecameVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ActivateOnVisible::OnBecameVisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBecameVisible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ActivateOnVisible.OnBecameInvisible
void GlobalNamespace::ActivateOnVisible::OnBecameInvisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ActivateOnVisible::OnBecameInvisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBecameInvisible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlphabetScrollInfo
#include "GlobalNamespace/AlphabetScrollInfo.hpp"
// Including type: AlphabetScrollInfo/Data
#include "GlobalNamespace/AlphabetScrollInfo_Data.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlphabetScrollInfo/Data
#include "GlobalNamespace/AlphabetScrollInfo_Data.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
