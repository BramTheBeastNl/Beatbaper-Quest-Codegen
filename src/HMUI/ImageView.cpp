// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: HMUI.CurvedCanvasSettingsHelper
#include "HMUI/CurvedCanvasSettingsHelper.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDA7638
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 kVec2Zero
UnityEngine::Vector2 HMUI::ImageView::_get_kVec2Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_get_kVec2Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("HMUI", "ImageView", "kVec2Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 kVec2Zero
void HMUI::ImageView::_set_kVec2Zero(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_set_kVec2Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "kVec2Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDA7648
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 kVec3Zero
UnityEngine::Vector3 HMUI::ImageView::_get_kVec3Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_get_kVec3Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("HMUI", "ImageView", "kVec3Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 kVec3Zero
void HMUI::ImageView::_set_kVec3Zero(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_set_kVec3Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "kVec3Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDA7658
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 kVec4Zero
UnityEngine::Vector4 HMUI::ImageView::_get_kVec4Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_get_kVec4Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector4>("HMUI", "ImageView", "kVec4Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 kVec4Zero
void HMUI::ImageView::_set_kVec4Zero(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_set_kVec4Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "kVec4Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDA7668
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_VertScratch
::Array<UnityEngine::Vector2>* HMUI::ImageView::_get_s_VertScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_get_s_VertScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "ImageView", "s_VertScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_VertScratch
void HMUI::ImageView::_set_s_VertScratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_set_s_VertScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_VertScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDA7678
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UVScratch
::Array<UnityEngine::Vector2>* HMUI::ImageView::_get_s_UVScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_get_s_UVScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "ImageView", "s_UVScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UVScratch
void HMUI::ImageView::_set_s_UVScratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_set_s_UVScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_UVScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDA7688
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UV1Scratch
::Array<UnityEngine::Vector2>* HMUI::ImageView::_get_s_UV1Scratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_get_s_UV1Scratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "ImageView", "s_UV1Scratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UV1Scratch
void HMUI::ImageView::_set_s_UV1Scratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_set_s_UV1Scratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_UV1Scratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDA7698
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color[] s_ColorScratch
::Array<UnityEngine::Color>* HMUI::ImageView::_get_s_ColorScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_get_s_ColorScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Color>*>("HMUI", "ImageView", "s_ColorScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color[] s_ColorScratch
void HMUI::ImageView::_set_s_ColorScratch(::Array<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_set_s_ColorScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_ColorScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDA76A8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Xy
::Array<UnityEngine::Vector3>* HMUI::ImageView::_get_s_Xy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_get_s_Xy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("HMUI", "ImageView", "s_Xy"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Xy
void HMUI::ImageView::_set_s_Xy(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_set_s_Xy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_Xy", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDA76B8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Uv
::Array<UnityEngine::Vector3>* HMUI::ImageView::_get_s_Uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_get_s_Uv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("HMUI", "ImageView", "s_Uv"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Uv
void HMUI::ImageView::_set_s_Uv(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("_set_s_Uv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_Uv", value));
}
// Autogenerated method: HMUI.ImageView.get_gradient
bool HMUI::ImageView::get_gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("get_gradient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gradient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.get_skew
float HMUI::ImageView::get_skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("get_skew");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_skew", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.set_color0
void HMUI::ImageView::set_color0(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("set_color0");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_color0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageView.set_color1
void HMUI::ImageView::set_color1(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("set_color1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_color1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageView.GenerateSimpleSprite
void HMUI::ImageView::GenerateSimpleSprite(UnityEngine::UI::VertexHelper* vh, bool lPreserveAspect, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("GenerateSimpleSprite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateSimpleSprite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(vh, lPreserveAspect, curvedUIRadius)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vh, lPreserveAspect, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.GenerateSlicedSprite
void HMUI::ImageView::GenerateSlicedSprite(UnityEngine::UI::VertexHelper* toFill, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("GenerateSlicedSprite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateSlicedSprite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(toFill, curvedUIRadius)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toFill, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.GenerateTiledSprite
void HMUI::ImageView::GenerateTiledSprite(UnityEngine::UI::VertexHelper* toFill, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("GenerateTiledSprite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateTiledSprite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(toFill, curvedUIRadius)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toFill, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.AddQuad
void HMUI::ImageView::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color, UnityEngine::Vector2 uvMin, UnityEngine::Vector2 uvMax, float elementWidthScale, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("AddQuad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(vertexHelper, posMin, posMax, color, uvMin, uvMax, elementWidthScale, curvedUIRadius)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uvMin, uvMax, elementWidthScale, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.AddQuad
void HMUI::ImageView::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color, UnityEngine::Vector2 uv0Min, UnityEngine::Vector2 uv0Max, UnityEngine::Vector2 uv1Min, UnityEngine::Vector2 uv1Max, float elementWidthScale, float curvedUIRadius, float skewFactor, float skewOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("AddQuad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(vertexHelper, posMin, posMax, color, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset);
}
// Autogenerated method: HMUI.ImageView.AddQuadWithHorizontalGradient
void HMUI::ImageView::AddQuadWithHorizontalGradient(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color0, UnityEngine::Color32 color1, UnityEngine::Vector2 uv0Min, UnityEngine::Vector2 uv0Max, UnityEngine::Vector2 uv1Min, UnityEngine::Vector2 uv1Max, float elementWidthScale, float curvedUIRadius, float skewFactor, float skewOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("AddQuadWithHorizontalGradient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuadWithHorizontalGradient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset);
}
// Autogenerated method: HMUI.ImageView.AddQuadWithVerticalGradient
void HMUI::ImageView::AddQuadWithVerticalGradient(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color0, UnityEngine::Color32 color1, UnityEngine::Vector2 uv0Min, UnityEngine::Vector2 uv0Max, UnityEngine::Vector2 uv1Min, UnityEngine::Vector2 uv1Max, float elementWidthScale, float curvedUIRadius, float skewFactor, float skewOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("AddQuadWithVerticalGradient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuadWithVerticalGradient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset);
}
// Autogenerated method: HMUI.ImageView.GenerateFilledSprite
void HMUI::ImageView::GenerateFilledSprite(UnityEngine::UI::VertexHelper* toFill, bool preserveAspect, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("GenerateFilledSprite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateFilledSprite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(toFill, preserveAspect, curvedUIRadius)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toFill, preserveAspect, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.GetNumberOfElements
int HMUI::ImageView::GetNumberOfElements(float curvedUIRadius, float width) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("GetNumberOfElements");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", "GetNumberOfElements", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(curvedUIRadius, width)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, curvedUIRadius, width);
}
// Autogenerated method: HMUI.ImageView.OnEnable
void HMUI::ImageView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.OnPopulateMesh
void HMUI::ImageView::OnPopulateMesh(UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("OnPopulateMesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(toFill)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated method: HMUI.ImageView.AddQuad
void HMUI::ImageView::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, ::Array<UnityEngine::Vector3>* quadPositions, UnityEngine::Color32 color, ::Array<UnityEngine::Vector3>* quadUVs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("AddQuad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(vertexHelper, quadPositions, color, quadUVs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, quadPositions, color, quadUVs);
}
// Autogenerated method: HMUI.ImageView.GetAdjustedBorders
UnityEngine::Vector4 HMUI::ImageView::GetAdjustedBorders(UnityEngine::Vector4 border, UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("GetAdjustedBorders");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", "GetAdjustedBorders", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(border, rect)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, border, rect);
}
// Autogenerated method: HMUI.ImageView.RadialCut
bool HMUI::ImageView::RadialCut(::Array<UnityEngine::Vector3>* xy, ::Array<UnityEngine::Vector3>* uv, float fill, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("RadialCut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", "RadialCut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(xy, uv, fill, invert, corner)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xy, uv, fill, invert, corner);
}
// Autogenerated method: HMUI.ImageView.RadialCut
void HMUI::ImageView::RadialCut(::Array<UnityEngine::Vector3>* xy, float cos, float sin, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("RadialCut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", "RadialCut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(xy, cos, sin, invert, corner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xy, cos, sin, invert, corner);
}
// Autogenerated method: HMUI.ImageView.GetDrawingDimensions
UnityEngine::Vector4 HMUI::ImageView::GetDrawingDimensions(bool shouldPreserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext("GetDrawingDimensions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDrawingDimensions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shouldPreserveAspect)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method, shouldPreserveAspect);
}
// Autogenerated method: HMUI.ImageView..cctor
void HMUI::ImageView::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ImageView").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "ImageView", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
