// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.TableView/CellsGroup
#include "HMUI/TableView_CellsGroup.hpp"
// Including type: HMUI.TableView/IDataSource
#include "HMUI/TableView_IDataSource.hpp"
// Including type: HMUI.TableView/<RefreshScrollButtonsCoroutine>d__55
#include "HMUI/TableView_-RefreshScrollButtonsCoroutine-d__55.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.TableViewScroller/ScrollPositionType
#include "HMUI/TableViewScroller_ScrollPositionType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.TableView.set_selectionType
void HMUI::TableView::set_selectionType(HMUI::TableViewSelectionType value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_selectionType", value));
}
// Autogenerated method: HMUI.TableView.add_didSelectCellWithIdxEvent
void HMUI::TableView::add_didSelectCellWithIdxEvent(System::Action_2<HMUI::TableView*, int>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_didSelectCellWithIdxEvent", value));
}
// Autogenerated method: HMUI.TableView.remove_didSelectCellWithIdxEvent
void HMUI::TableView::remove_didSelectCellWithIdxEvent(System::Action_2<HMUI::TableView*, int>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_didSelectCellWithIdxEvent", value));
}
// Autogenerated method: HMUI.TableView.add_cellWasPressedEvent
void HMUI::TableView::add_cellWasPressedEvent(System::Action_2<HMUI::TableView*, HMUI::TableCell*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_cellWasPressedEvent", value));
}
// Autogenerated method: HMUI.TableView.remove_cellWasPressedEvent
void HMUI::TableView::remove_cellWasPressedEvent(System::Action_2<HMUI::TableView*, HMUI::TableCell*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_cellWasPressedEvent", value));
}
// Autogenerated method: HMUI.TableView.get_dataSource
HMUI::TableView::IDataSource* HMUI::TableView::get_dataSource() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::TableView::IDataSource*>(this, "get_dataSource"));
}
// Autogenerated method: HMUI.TableView.set_dataSource
void HMUI::TableView::set_dataSource(HMUI::TableView::IDataSource* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_dataSource", value));
}
// Autogenerated method: HMUI.TableView.get_visibleCells
System::Collections::Generic::IEnumerable_1<HMUI::TableCell*>* HMUI::TableView::get_visibleCells() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerable_1<HMUI::TableCell*>*>(this, "get_visibleCells"));
}
// Autogenerated method: HMUI.TableView.get_scrollRectTransform
UnityEngine::RectTransform* HMUI::TableView::get_scrollRectTransform() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::RectTransform*>(this, "get_scrollRectTransform"));
}
// Autogenerated method: HMUI.TableView.get_contentTransform
UnityEngine::RectTransform* HMUI::TableView::get_contentTransform() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::RectTransform*>(this, "get_contentTransform"));
}
// Autogenerated method: HMUI.TableView.get_numberOfCells
int HMUI::TableView::get_numberOfCells() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_numberOfCells"));
}
// Autogenerated method: HMUI.TableView.get_cellSize
float HMUI::TableView::get_cellSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_cellSize"));
}
// Autogenerated method: HMUI.TableView.get_tableType
HMUI::TableView::TableType HMUI::TableView::get_tableType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::TableView::TableType>(this, "get_tableType"));
}
// Autogenerated method: HMUI.TableView.Awake
void HMUI::TableView::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: HMUI.TableView.OnEnable
void HMUI::TableView::OnEnable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnEnable"));
}
// Autogenerated method: HMUI.TableView.Init
void HMUI::TableView::Init() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init"));
}
// Autogenerated method: HMUI.TableView.OnDestroy
void HMUI::TableView::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: HMUI.TableView.Hide
void HMUI::TableView::Hide() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Hide"));
}
// Autogenerated method: HMUI.TableView.Show
void HMUI::TableView::Show() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Show"));
}
// Autogenerated method: HMUI.TableView.RefreshScrollButtons
void HMUI::TableView::RefreshScrollButtons(bool instant) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshScrollButtons", instant));
}
// Autogenerated method: HMUI.TableView.RefreshScrollButtonsCoroutine
System::Collections::IEnumerator* HMUI::TableView::RefreshScrollButtonsCoroutine() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "RefreshScrollButtonsCoroutine"));
}
// Autogenerated method: HMUI.TableView.RefreshContentSize
void HMUI::TableView::RefreshContentSize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshContentSize"));
}
// Autogenerated method: HMUI.TableView.RefreshCellsContent
void HMUI::TableView::RefreshCellsContent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshCellsContent"));
}
// Autogenerated method: HMUI.TableView.RefreshCells
void HMUI::TableView::RefreshCells(bool forcedVisualsRefresh, bool forcedContentRefresh) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshCells", forcedVisualsRefresh, forcedContentRefresh));
}
// Autogenerated method: HMUI.TableView.LayoutCellForIdx
void HMUI::TableView::LayoutCellForIdx(HMUI::TableCell* cell, int idx, float offset) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LayoutCellForIdx", cell, idx, offset));
}
// Autogenerated method: HMUI.TableView.AddCellToReusableCells
void HMUI::TableView::AddCellToReusableCells(HMUI::TableCell* cell) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddCellToReusableCells", cell));
}
// Autogenerated method: HMUI.TableView.HandleScrollRectValueChanged
void HMUI::TableView::HandleScrollRectValueChanged(UnityEngine::Vector2 pos) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleScrollRectValueChanged", pos));
}
// Autogenerated method: HMUI.TableView.DidSelectCellWithIdx
void HMUI::TableView::DidSelectCellWithIdx(int idx) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DidSelectCellWithIdx", idx));
}
// Autogenerated method: HMUI.TableView.ReloadData
void HMUI::TableView::ReloadData() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReloadData"));
}
// Autogenerated method: HMUI.TableView.InsertCells
void HMUI::TableView::InsertCells(int idx, int count) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InsertCells", idx, count));
}
// Autogenerated method: HMUI.TableView.DeleteCells
void HMUI::TableView::DeleteCells(int idx, int count) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DeleteCells", idx, count));
}
// Autogenerated method: HMUI.TableView.DequeueReusableCellForIdentifier
HMUI::TableCell* HMUI::TableView::DequeueReusableCellForIdentifier(::Il2CppString* identifier) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::TableCell*>(this, "DequeueReusableCellForIdentifier", identifier));
}
// Autogenerated method: HMUI.TableView.SelectCellWithIdx
void HMUI::TableView::SelectCellWithIdx(int idx, bool callbackTable) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SelectCellWithIdx", idx, callbackTable));
}
// Autogenerated method: HMUI.TableView.ClearSelection
void HMUI::TableView::ClearSelection() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearSelection"));
}
// Autogenerated method: HMUI.TableView.ClearHighlights
void HMUI::TableView::ClearHighlights() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearHighlights"));
}
// Autogenerated method: HMUI.TableView.ScrollToCellWithIdx
void HMUI::TableView::ScrollToCellWithIdx(int idx, HMUI::TableViewScroller::ScrollPositionType scrollPositionType, bool animated) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ScrollToCellWithIdx", idx, scrollPositionType, animated));
}
// Autogenerated method: HMUI.TableView.<Init>b__50_0
void HMUI::TableView::$Init$b__50_0() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Init>b__50_0"));
}
// Autogenerated method: HMUI.TableView.<Init>b__50_1
void HMUI::TableView::$Init$b__50_1() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Init>b__50_1"));
}
// Autogenerated method: HMUI.TableView.get_selectionType
HMUI::TableViewSelectionType HMUI::TableView::get_selectionType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::TableViewSelectionType>(this, "get_selectionType"));
}
// Autogenerated method: HMUI.TableView.CellWasPressed
void HMUI::TableView::CellWasPressed(HMUI::TableCell* cell) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CellWasPressed", cell));
}
// Autogenerated method: HMUI.TableView.CellSelectionStateDidChange
void HMUI::TableView::CellSelectionStateDidChange(HMUI::TableCell* changedCell) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CellSelectionStateDidChange", changedCell));
}
// Autogenerated method: HMUI.TableView..ctor
HMUI::TableView* HMUI::TableView::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<TableView*>());
}
