// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.VerticalScrollIndicator
#include "HMUI/VerticalScrollIndicator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.VerticalScrollIndicator.set_progress
void HMUI::VerticalScrollIndicator::set_progress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("VerticalScrollIndicator").WithContext("set_progress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_progress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.get_progress
float HMUI::VerticalScrollIndicator::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("VerticalScrollIndicator").WithContext("get_progress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.set_normalizedPageHeight
void HMUI::VerticalScrollIndicator::set_normalizedPageHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("VerticalScrollIndicator").WithContext("set_normalizedPageHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_normalizedPageHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.get_normalizedPageHeight
float HMUI::VerticalScrollIndicator::get_normalizedPageHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("VerticalScrollIndicator").WithContext("get_normalizedPageHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_normalizedPageHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.set_disabled
void HMUI::VerticalScrollIndicator::set_disabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("VerticalScrollIndicator").WithContext("set_disabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_disabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.OnEnable
void HMUI::VerticalScrollIndicator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("VerticalScrollIndicator").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.RefreshHandle
void HMUI::VerticalScrollIndicator::RefreshHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("VerticalScrollIndicator").WithContext("RefreshHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
