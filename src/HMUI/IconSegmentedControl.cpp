// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: HMUI.IconSegmentedControl/DataItem
#include "HMUI/IconSegmentedControl_DataItem.hpp"
// Including type: HMUI.IconSegmentedControlCell
#include "HMUI/IconSegmentedControlCell.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: HMUI.SegmentedControlCell
#include "HMUI/SegmentedControlCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.IconSegmentedControl.Init
void HMUI::IconSegmentedControl::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IconSegmentedControl").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Init", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.IconSegmentedControl.SetData
void HMUI::IconSegmentedControl::SetData(::Array<HMUI::IconSegmentedControl::DataItem*>* dataItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IconSegmentedControl").WithContext("SetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetData", {}, ::il2cpp_utils::ExtractTypes(dataItems)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataItems);
}
// Autogenerated method: HMUI.IconSegmentedControl.InstantiateCell
HMUI::IconSegmentedControlCell* HMUI::IconSegmentedControl::InstantiateCell(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IconSegmentedControl").WithContext("InstantiateCell");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<HMUI::IconSegmentedControlCell*>(), "InstantiateCell", {}, ::il2cpp_utils::ExtractTypes(prefab)));
  return ::il2cpp_utils::RunMethodThrow<HMUI::IconSegmentedControlCell*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: HMUI.IconSegmentedControl.NumberOfCells
int HMUI::IconSegmentedControl::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IconSegmentedControl").WithContext("NumberOfCells");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "NumberOfCells", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.IconSegmentedControl.CellForCellNumber
HMUI::SegmentedControlCell* HMUI::IconSegmentedControl::CellForCellNumber(int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IconSegmentedControl").WithContext("CellForCellNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<HMUI::SegmentedControlCell*>(), "CellForCellNumber", {}, ::il2cpp_utils::ExtractTypes(cellNumber)));
  return ::il2cpp_utils::RunMethodThrow<HMUI::SegmentedControlCell*, false>(this, ___internal__method, cellNumber);
}
// Autogenerated method: HMUI.IconSegmentedControl..ctor
HMUI::IconSegmentedControl* HMUI::IconSegmentedControl::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IconSegmentedControl").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<IconSegmentedControl*>());
}
