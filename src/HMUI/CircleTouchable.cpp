// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.CircleTouchable
#include "HMUI/CircleTouchable.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.CircleTouchable.UpdateCachedReferences
void HMUI::CircleTouchable::UpdateCachedReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("CircleTouchable").WithContext("UpdateCachedReferences");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateCachedReferences", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.CircleTouchable.OnDrawGizmosSelected
void HMUI::CircleTouchable::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("CircleTouchable").WithContext("OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.CircleTouchable.DrawGizmoCircle
void HMUI::CircleTouchable::DrawGizmoCircle(UnityEngine::Vector3 center, float radius, int steps) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("CircleTouchable").WithContext("DrawGizmoCircle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DrawGizmoCircle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(center, radius, steps)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, center, radius, steps);
}
// Autogenerated method: HMUI.CircleTouchable.OnEnable
void HMUI::CircleTouchable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("CircleTouchable").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.CircleTouchable.Raycast
bool HMUI::CircleTouchable::Raycast(UnityEngine::Vector2 sp, UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("CircleTouchable").WithContext("Raycast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sp, eventCamera)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
