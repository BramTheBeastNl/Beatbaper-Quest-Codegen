// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SegmentedControlCell
#include "HMUI/SegmentedControlCell.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.SegmentedControlCell.get_cellNumber
int HMUI::SegmentedControlCell::get_cellNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SegmentedControlCell").WithContext("get_cellNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_cellNumber", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SegmentedControlCell.set_cellNumber
void HMUI::SegmentedControlCell::set_cellNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SegmentedControlCell").WithContext("set_cellNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_cellNumber", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SegmentedControlCell.SegmentedControlSetup
void HMUI::SegmentedControlCell::SegmentedControlSetup(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SegmentedControlCell").WithContext("SegmentedControlSetup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SegmentedControlSetup", {}, ::il2cpp_utils::ExtractTypes(segmentedControl, cellNumber)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: HMUI.SegmentedControlCell.InternalToggle
void HMUI::SegmentedControlCell::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SegmentedControlCell").WithContext("InternalToggle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "InternalToggle", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SegmentedControlCell..ctor
HMUI::SegmentedControlCell* HMUI::SegmentedControlCell::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SegmentedControlCell").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SegmentedControlCell*>());
}
