// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.SegmentedControlCell
#include "HMUI/SegmentedControlCell.hpp"
// Including type: HMUI.SegmentedControlCell/TransitionType
#include "HMUI/SegmentedControlCell_TransitionType.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.SegmentedControlCell.get_cellNumber
int HMUI::SegmentedControlCell::get_cellNumber() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_cellNumber"));
}
// Autogenerated method: HMUI.SegmentedControlCell.SegmentedControlSetup
void HMUI::SegmentedControlCell::SegmentedControlSetup(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SegmentedControlSetup", segmentedControl, cellNumber));
}
// Autogenerated method: HMUI.SegmentedControlCell.get_selected
bool HMUI::SegmentedControlCell::get_selected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_selected"));
}
// Autogenerated method: HMUI.SegmentedControlCell.set_selected
void HMUI::SegmentedControlCell::set_selected(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_selected", value));
}
// Autogenerated method: HMUI.SegmentedControlCell.get_highlighted
bool HMUI::SegmentedControlCell::get_highlighted() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_highlighted"));
}
// Autogenerated method: HMUI.SegmentedControlCell.ChangeSelection
void HMUI::SegmentedControlCell::ChangeSelection(bool value, HMUI::SegmentedControlCell::TransitionType transitionType, bool useCallback, bool ignoreCurrentValue) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ChangeSelection", value, transitionType, useCallback, ignoreCurrentValue));
}
// Autogenerated method: HMUI.SegmentedControlCell.ChangeHighlight
void HMUI::SegmentedControlCell::ChangeHighlight(bool value, HMUI::SegmentedControlCell::TransitionType transitionType, bool ignoreCurrentValue) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ChangeHighlight", value, transitionType, ignoreCurrentValue));
}
// Autogenerated method: HMUI.SegmentedControlCell.InternalToggle
void HMUI::SegmentedControlCell::InternalToggle() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InternalToggle"));
}
// Autogenerated method: HMUI.SegmentedControlCell.SelectionDidChange
void HMUI::SegmentedControlCell::SelectionDidChange(HMUI::SegmentedControlCell::TransitionType transitionType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SelectionDidChange", transitionType));
}
// Autogenerated method: HMUI.SegmentedControlCell.HighlightDidChange
void HMUI::SegmentedControlCell::HighlightDidChange(HMUI::SegmentedControlCell::TransitionType transitionType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HighlightDidChange", transitionType));
}
// Autogenerated method: HMUI.SegmentedControlCell.Start
void HMUI::SegmentedControlCell::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: HMUI.SegmentedControlCell.OnPointerClick
void HMUI::SegmentedControlCell::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnPointerClick", eventData));
}
// Autogenerated method: HMUI.SegmentedControlCell.OnSubmit
void HMUI::SegmentedControlCell::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnSubmit", eventData));
}
// Autogenerated method: HMUI.SegmentedControlCell.OnPointerEnter
void HMUI::SegmentedControlCell::OnPointerEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnPointerEnter", eventData));
}
// Autogenerated method: HMUI.SegmentedControlCell.OnPointerExit
void HMUI::SegmentedControlCell::OnPointerExit(UnityEngine::EventSystems::PointerEventData* eventData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnPointerExit", eventData));
}
// Autogenerated method: HMUI.SegmentedControlCell..ctor
HMUI::SegmentedControlCell* HMUI::SegmentedControlCell::New_ctor() {
  return (SegmentedControlCell*)THROW_UNLESS(il2cpp_utils::New("HMUI", "SegmentedControlCell"));
}
