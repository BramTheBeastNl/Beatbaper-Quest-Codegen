// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.SectionTableView
#include "HMUI/SectionTableView.hpp"
// Including type: HMUI.SectionTableView/IDataSource
#include "HMUI/SectionTableView_IDataSource.hpp"
// Including type: HMUI.SectionTableView/Section
#include "HMUI/SectionTableView_Section.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: HMUI.TableViewScroller/ScrollPositionType
#include "HMUI/TableViewScroller_ScrollPositionType.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.SectionTableView.add_didSelectRowInSectionEvent
void HMUI::SectionTableView::add_didSelectRowInSectionEvent(System::Action_3<HMUI::SectionTableView*, int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("add_didSelectRowInSectionEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "add_didSelectRowInSectionEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.remove_didSelectRowInSectionEvent
void HMUI::SectionTableView::remove_didSelectRowInSectionEvent(System::Action_3<HMUI::SectionTableView*, int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("remove_didSelectRowInSectionEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "remove_didSelectRowInSectionEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.add_didSelectHeaderEvent
void HMUI::SectionTableView::add_didSelectHeaderEvent(System::Action_2<HMUI::SectionTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("add_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "add_didSelectHeaderEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.remove_didSelectHeaderEvent
void HMUI::SectionTableView::remove_didSelectHeaderEvent(System::Action_2<HMUI::SectionTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("remove_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "remove_didSelectHeaderEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.get_dataSource
HMUI::SectionTableView::IDataSource* HMUI::SectionTableView::get_dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("get_dataSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<HMUI::SectionTableView::IDataSource*>(), "get_dataSource", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::SectionTableView::IDataSource*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.set_dataSource
void HMUI::SectionTableView::set_dataSource(HMUI::SectionTableView::IDataSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("set_dataSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_dataSource", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.IsSectionUnfolded
bool HMUI::SectionTableView::IsSectionUnfolded(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("IsSectionUnfolded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "IsSectionUnfolded", {}, ::il2cpp_utils::ExtractTypes(section)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView.ReloadData
void HMUI::SectionTableView::ReloadData(bool resetFoldState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("ReloadData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReloadData", {}, ::il2cpp_utils::ExtractTypes(resetFoldState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resetFoldState);
}
// Autogenerated method: HMUI.SectionTableView.UnfoldAllSections
void HMUI::SectionTableView::UnfoldAllSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("UnfoldAllSections");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UnfoldAllSections", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.FoldAll
void HMUI::SectionTableView::FoldAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("FoldAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "FoldAll", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.UnfoldSection
void HMUI::SectionTableView::UnfoldSection(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("UnfoldSection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UnfoldSection", {}, ::il2cpp_utils::ExtractTypes(section)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView.FoldSection
void HMUI::SectionTableView::FoldSection(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("FoldSection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "FoldSection", {}, ::il2cpp_utils::ExtractTypes(section)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView.ScrollToRow
void HMUI::SectionTableView::ScrollToRow(int section, int row, HMUI::TableViewScroller::ScrollPositionType scrollPositionType, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("ScrollToRow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ScrollToRow", {}, ::il2cpp_utils::ExtractTypes(section, row, scrollPositionType, animated)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, section, row, scrollPositionType, animated);
}
// Autogenerated method: HMUI.SectionTableView.SectionAndRowForBaseRow
void HMUI::SectionTableView::SectionAndRowForBaseRow(int baseRow, int& section, int& row, bool& isSectionHeader) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("SectionAndRowForBaseRow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SectionAndRowForBaseRow", {}, ::il2cpp_utils::ExtractTypes(baseRow, section, row, isSectionHeader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, baseRow, section, row, isSectionHeader);
}
// Autogenerated method: HMUI.SectionTableView.CellSize
float HMUI::SectionTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("CellSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<float>(), "CellSize", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.NumberOfCells
int HMUI::SectionTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("NumberOfCells");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "NumberOfCells", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.CellForIdx
HMUI::TableCell* HMUI::SectionTableView::CellForIdx(HMUI::TableView* tableView, int baseRow) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("CellForIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<HMUI::TableCell*>(), "CellForIdx", {}, ::il2cpp_utils::ExtractTypes(tableView, baseRow)));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, baseRow);
}
// Autogenerated method: HMUI.SectionTableView.ReloadData
void HMUI::SectionTableView::ReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("ReloadData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReloadData", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.DidSelectCellWithIdx
void HMUI::SectionTableView::DidSelectCellWithIdx(int baseRow) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext("DidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "DidSelectCellWithIdx", {}, ::il2cpp_utils::ExtractTypes(baseRow)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, baseRow);
}
// Autogenerated method: HMUI.SectionTableView..ctor
HMUI::SectionTableView* HMUI::SectionTableView::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("SectionTableView").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SectionTableView*>());
}
