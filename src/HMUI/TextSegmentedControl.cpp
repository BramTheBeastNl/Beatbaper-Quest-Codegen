// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: HMUI.TextSegmentedControlCell
#include "HMUI/TextSegmentedControlCell.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: HMUI.SegmentedControlCell
#include "HMUI/SegmentedControlCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.TextSegmentedControl.SetTexts
void HMUI::TextSegmentedControl::SetTexts(System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>* texts) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("TextSegmentedControl").WithContext("SetTexts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTexts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(texts)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, texts);
}
// Autogenerated method: HMUI.TextSegmentedControl.InstantiateCell
HMUI::TextSegmentedControlCell* HMUI::TextSegmentedControl::InstantiateCell(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("TextSegmentedControl").WithContext("InstantiateCell");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstantiateCell", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab)));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TextSegmentedControlCell*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: HMUI.TextSegmentedControl.NumberOfCells
int HMUI::TextSegmentedControl::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("TextSegmentedControl").WithContext("NumberOfCells");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TextSegmentedControl.CellForCellNumber
HMUI::SegmentedControlCell* HMUI::TextSegmentedControl::CellForCellNumber(int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("TextSegmentedControl").WithContext("CellForCellNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CellForCellNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cellNumber)));
  return ::il2cpp_utils::RunMethodThrow<HMUI::SegmentedControlCell*, false>(this, ___internal__method, cellNumber);
}
