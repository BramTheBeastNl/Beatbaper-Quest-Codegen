// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.GradientImage
#include "HMUI/GradientImage.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: HMUI.GradientImage/OriginHorizontal
#include "HMUI/GradientImage_OriginHorizontal.hpp"
// Including type: HMUI.GradientImage/OriginVertical
#include "HMUI/GradientImage_OriginVertical.hpp"
// Including type: HMUI.GradientImage/Origin90
#include "HMUI/GradientImage_Origin90.hpp"
// Including type: HMUI.GradientImage/Origin180
#include "HMUI/GradientImage_Origin180.hpp"
// Including type: HMUI.GradientImage/Origin360
#include "HMUI/GradientImage_Origin360.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_VertScratch
::Array<UnityEngine::Vector2>* HMUI::GradientImage::_get_s_VertScratch() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "GradientImage", "s_VertScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_VertScratch
void HMUI::GradientImage::_set_s_VertScratch(::Array<UnityEngine::Vector2>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_VertScratch", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UVScratch
::Array<UnityEngine::Vector2>* HMUI::GradientImage::_get_s_UVScratch() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("HMUI", "GradientImage", "s_UVScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UVScratch
void HMUI::GradientImage::_set_s_UVScratch(::Array<UnityEngine::Vector2>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_UVScratch", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color[] s_ColorScratch
::Array<UnityEngine::Color>* HMUI::GradientImage::_get_s_ColorScratch() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Color>*>("HMUI", "GradientImage", "s_ColorScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color[] s_ColorScratch
void HMUI::GradientImage::_set_s_ColorScratch(::Array<UnityEngine::Color>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_ColorScratch", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Xy
::Array<UnityEngine::Vector3>* HMUI::GradientImage::_get_s_Xy() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("HMUI", "GradientImage", "s_Xy"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Xy
void HMUI::GradientImage::_set_s_Xy(::Array<UnityEngine::Vector3>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_Xy", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Uv
::Array<UnityEngine::Vector3>* HMUI::GradientImage::_get_s_Uv() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("HMUI", "GradientImage", "s_Uv"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Uv
void HMUI::GradientImage::_set_s_Uv(::Array<UnityEngine::Vector3>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_Uv", value));
}
// Autogenerated method: HMUI.GradientImage.get_sprite
UnityEngine::Sprite* HMUI::GradientImage::get_sprite() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Sprite*>(this, "get_sprite"));
}
// Autogenerated method: HMUI.GradientImage.set_sprite
void HMUI::GradientImage::set_sprite(UnityEngine::Sprite* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_sprite", value));
}
// Autogenerated method: HMUI.GradientImage.get_color0
UnityEngine::Color HMUI::GradientImage::get_color0() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_color0"));
}
// Autogenerated method: HMUI.GradientImage.set_color0
void HMUI::GradientImage::set_color0(UnityEngine::Color value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_color0", value));
}
// Autogenerated method: HMUI.GradientImage.get_color1
UnityEngine::Color HMUI::GradientImage::get_color1() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_color1"));
}
// Autogenerated method: HMUI.GradientImage.set_color1
void HMUI::GradientImage::set_color1(UnityEngine::Color value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_color1", value));
}
// Autogenerated method: HMUI.GradientImage.get_overrideSprite
UnityEngine::Sprite* HMUI::GradientImage::get_overrideSprite() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Sprite*>(this, "get_overrideSprite"));
}
// Autogenerated method: HMUI.GradientImage.set_overrideSprite
void HMUI::GradientImage::set_overrideSprite(UnityEngine::Sprite* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_overrideSprite", value));
}
// Autogenerated method: HMUI.GradientImage.get_type
HMUI::GradientImage::Type HMUI::GradientImage::get_type() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::GradientImage::Type>(this, "get_type"));
}
// Autogenerated method: HMUI.GradientImage.set_type
void HMUI::GradientImage::set_type(HMUI::GradientImage::Type value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_type", value));
}
// Autogenerated method: HMUI.GradientImage.get_preserveAspect
bool HMUI::GradientImage::get_preserveAspect() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_preserveAspect"));
}
// Autogenerated method: HMUI.GradientImage.set_preserveAspect
void HMUI::GradientImage::set_preserveAspect(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_preserveAspect", value));
}
// Autogenerated method: HMUI.GradientImage.get_fillCenter
bool HMUI::GradientImage::get_fillCenter() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_fillCenter"));
}
// Autogenerated method: HMUI.GradientImage.set_fillCenter
void HMUI::GradientImage::set_fillCenter(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fillCenter", value));
}
// Autogenerated method: HMUI.GradientImage.get_fillMethod
HMUI::GradientImage::FillMethod HMUI::GradientImage::get_fillMethod() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::GradientImage::FillMethod>(this, "get_fillMethod"));
}
// Autogenerated method: HMUI.GradientImage.set_fillMethod
void HMUI::GradientImage::set_fillMethod(HMUI::GradientImage::FillMethod value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fillMethod", value));
}
// Autogenerated method: HMUI.GradientImage.get_fillAmount
float HMUI::GradientImage::get_fillAmount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_fillAmount"));
}
// Autogenerated method: HMUI.GradientImage.set_fillAmount
void HMUI::GradientImage::set_fillAmount(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fillAmount", value));
}
// Autogenerated method: HMUI.GradientImage.get_fillClockwise
bool HMUI::GradientImage::get_fillClockwise() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_fillClockwise"));
}
// Autogenerated method: HMUI.GradientImage.set_fillClockwise
void HMUI::GradientImage::set_fillClockwise(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fillClockwise", value));
}
// Autogenerated method: HMUI.GradientImage.get_fillOrigin
int HMUI::GradientImage::get_fillOrigin() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_fillOrigin"));
}
// Autogenerated method: HMUI.GradientImage.set_fillOrigin
void HMUI::GradientImage::set_fillOrigin(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_fillOrigin", value));
}
// Autogenerated method: HMUI.GradientImage.get_eventAlphaThreshold
float HMUI::GradientImage::get_eventAlphaThreshold() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_eventAlphaThreshold"));
}
// Autogenerated method: HMUI.GradientImage.set_eventAlphaThreshold
void HMUI::GradientImage::set_eventAlphaThreshold(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_eventAlphaThreshold", value));
}
// Autogenerated method: HMUI.GradientImage.get_hasBorder
bool HMUI::GradientImage::get_hasBorder() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasBorder"));
}
// Autogenerated method: HMUI.GradientImage.get_pixelsPerUnit
float HMUI::GradientImage::get_pixelsPerUnit() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_pixelsPerUnit"));
}
// Autogenerated method: HMUI.GradientImage.GetDrawingDimensions
UnityEngine::Vector4 HMUI::GradientImage::GetDrawingDimensions(bool shouldPreserveAspect) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector4>(this, "GetDrawingDimensions", shouldPreserveAspect));
}
// Autogenerated method: HMUI.GradientImage.GenerateSimpleSprite
void HMUI::GradientImage::GenerateSimpleSprite(UnityEngine::UI::VertexHelper* vh, bool lPreserveAspect) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GenerateSimpleSprite", vh, lPreserveAspect));
}
// Autogenerated method: HMUI.GradientImage.GenerateSlicedSprite
void HMUI::GradientImage::GenerateSlicedSprite(UnityEngine::UI::VertexHelper* toFill) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GenerateSlicedSprite", toFill));
}
// Autogenerated method: HMUI.GradientImage.GenerateTiledSprite
void HMUI::GradientImage::GenerateTiledSprite(UnityEngine::UI::VertexHelper* toFill) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GenerateTiledSprite", toFill));
}
// Autogenerated method: HMUI.GradientImage.AddQuad
void HMUI::GradientImage::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, ::Array<UnityEngine::Vector3>* quadPositions, UnityEngine::Color32 color, ::Array<UnityEngine::Vector3>* quadUVs) {
  THROW_UNLESS(il2cpp_utils::RunMethod("HMUI", "GradientImage", "AddQuad", vertexHelper, quadPositions, color, quadUVs));
}
// Autogenerated method: HMUI.GradientImage.AddQuad
void HMUI::GradientImage::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color, UnityEngine::Vector2 uvMin, UnityEngine::Vector2 uvMax) {
  THROW_UNLESS(il2cpp_utils::RunMethod("HMUI", "GradientImage", "AddQuad", vertexHelper, posMin, posMax, color, uvMin, uvMax));
}
// Autogenerated method: HMUI.GradientImage.AddQuad
void HMUI::GradientImage::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color0, UnityEngine::Color32 color1, UnityEngine::Vector2 uvMin, UnityEngine::Vector2 uvMax) {
  THROW_UNLESS(il2cpp_utils::RunMethod("HMUI", "GradientImage", "AddQuad", vertexHelper, posMin, posMax, color0, color1, uvMin, uvMax));
}
// Autogenerated method: HMUI.GradientImage.GetAdjustedBorders
UnityEngine::Vector4 HMUI::GradientImage::GetAdjustedBorders(UnityEngine::Vector4 border, UnityEngine::Rect rect) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector4>(this, "GetAdjustedBorders", border, rect));
}
// Autogenerated method: HMUI.GradientImage.GenerateFilledSprite
void HMUI::GradientImage::GenerateFilledSprite(UnityEngine::UI::VertexHelper* toFill, bool preserveAspect) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GenerateFilledSprite", toFill, preserveAspect));
}
// Autogenerated method: HMUI.GradientImage.RadialCut
bool HMUI::GradientImage::RadialCut(::Array<UnityEngine::Vector3>* xy, ::Array<UnityEngine::Vector3>* uv, float fill, bool invert, int corner) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("HMUI", "GradientImage", "RadialCut", xy, uv, fill, invert, corner));
}
// Autogenerated method: HMUI.GradientImage.RadialCut
void HMUI::GradientImage::RadialCut(::Array<UnityEngine::Vector3>* xy, float cos, float sin, bool invert, int corner) {
  THROW_UNLESS(il2cpp_utils::RunMethod("HMUI", "GradientImage", "RadialCut", xy, cos, sin, invert, corner));
}
// Autogenerated method: HMUI.GradientImage.MapCoordinate
UnityEngine::Vector2 HMUI::GradientImage::MapCoordinate(UnityEngine::Vector2 local, UnityEngine::Rect rect) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>(this, "MapCoordinate", local, rect));
}
// Autogenerated method: HMUI.GradientImage..ctor
HMUI::GradientImage* HMUI::GradientImage::New_ctor() {
  return (GradientImage*)THROW_UNLESS(il2cpp_utils::New("HMUI", "GradientImage"));
}
// Autogenerated method: HMUI.GradientImage.get_mainTexture
UnityEngine::Texture* HMUI::GradientImage::get_mainTexture() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Texture*>(this, "get_mainTexture"));
}
// Autogenerated method: HMUI.GradientImage.OnBeforeSerialize
void HMUI::GradientImage::OnBeforeSerialize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnBeforeSerialize"));
}
void HMUI::GradientImage::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  HMUI::GradientImage::OnBeforeSerialize();
}
// Autogenerated method: HMUI.GradientImage.OnAfterDeserialize
void HMUI::GradientImage::OnAfterDeserialize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnAfterDeserialize"));
}
void HMUI::GradientImage::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  HMUI::GradientImage::OnAfterDeserialize();
}
// Autogenerated method: HMUI.GradientImage.SetNativeSize
void HMUI::GradientImage::SetNativeSize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetNativeSize"));
}
// Autogenerated method: HMUI.GradientImage.OnPopulateMesh
void HMUI::GradientImage::OnPopulateMesh(UnityEngine::UI::VertexHelper* toFill) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnPopulateMesh", toFill));
}
// Autogenerated method: HMUI.GradientImage.CalculateLayoutInputHorizontal
void HMUI::GradientImage::CalculateLayoutInputHorizontal() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CalculateLayoutInputHorizontal"));
}
// Autogenerated method: HMUI.GradientImage.CalculateLayoutInputVertical
void HMUI::GradientImage::CalculateLayoutInputVertical() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CalculateLayoutInputVertical"));
}
// Autogenerated method: HMUI.GradientImage.get_minWidth
float HMUI::GradientImage::get_minWidth() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_minWidth"));
}
// Autogenerated method: HMUI.GradientImage.get_preferredWidth
float HMUI::GradientImage::get_preferredWidth() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_preferredWidth"));
}
// Autogenerated method: HMUI.GradientImage.get_flexibleWidth
float HMUI::GradientImage::get_flexibleWidth() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_flexibleWidth"));
}
// Autogenerated method: HMUI.GradientImage.get_minHeight
float HMUI::GradientImage::get_minHeight() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_minHeight"));
}
// Autogenerated method: HMUI.GradientImage.get_preferredHeight
float HMUI::GradientImage::get_preferredHeight() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_preferredHeight"));
}
// Autogenerated method: HMUI.GradientImage.get_flexibleHeight
float HMUI::GradientImage::get_flexibleHeight() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_flexibleHeight"));
}
// Autogenerated method: HMUI.GradientImage.get_layoutPriority
int HMUI::GradientImage::get_layoutPriority() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_layoutPriority"));
}
// Autogenerated method: HMUI.GradientImage.IsRaycastLocationValid
bool HMUI::GradientImage::IsRaycastLocationValid(UnityEngine::Vector2 screenPoint, UnityEngine::Camera* eventCamera) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsRaycastLocationValid", screenPoint, eventCamera));
}
// Autogenerated method: HMUI.GradientImage..cctor
void HMUI::GradientImage::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("HMUI", "GradientImage", ".cctor"));
}
