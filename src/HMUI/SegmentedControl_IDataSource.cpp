// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SegmentedControl/IDataSource
#include "HMUI/SegmentedControl_IDataSource.hpp"
// Including type: HMUI.SegmentedControlCell
#include "HMUI/SegmentedControlCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.SegmentedControl/IDataSource.NumberOfCells
int HMUI::SegmentedControl::IDataSource::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IDataSource").WithContext("NumberOfCells");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SegmentedControl/IDataSource.CellForCellNumber
HMUI::SegmentedControlCell* HMUI::SegmentedControl::IDataSource::CellForCellNumber(int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IDataSource").WithContext("CellForCellNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CellForCellNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cellNumber)));
  return ::il2cpp_utils::RunMethodThrow<HMUI::SegmentedControlCell*, false>(this, ___internal__method, cellNumber);
}
