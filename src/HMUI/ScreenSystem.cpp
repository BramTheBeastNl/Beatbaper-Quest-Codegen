// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScreenSystem
#include "HMUI/ScreenSystem.hpp"
// Including type: HMUI.Screen
#include "HMUI/Screen.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.TitleViewController
#include "HMUI/TitleViewController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ScreenSystem.get_titleViewController
HMUI::TitleViewController* HMUI::ScreenSystem::get_titleViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("get_titleViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_titleViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TitleViewController*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_mainScreen
HMUI::Screen* HMUI::ScreenSystem::get_mainScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("get_mainScreen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mainScreen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_leftScreen
HMUI::Screen* HMUI::ScreenSystem::get_leftScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("get_leftScreen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftScreen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_rightScreen
HMUI::Screen* HMUI::ScreenSystem::get_rightScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("get_rightScreen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightScreen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_bottomScreen
HMUI::Screen* HMUI::ScreenSystem::get_bottomScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("get_bottomScreen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_bottomScreen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_topScreen
HMUI::Screen* HMUI::ScreenSystem::get_topScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("get_topScreen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_topScreen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.add_backButtonWasPressedEvent
void HMUI::ScreenSystem::add_backButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("add_backButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_backButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ScreenSystem.remove_backButtonWasPressedEvent
void HMUI::ScreenSystem::remove_backButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("remove_backButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_backButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ScreenSystem.Awake
void HMUI::ScreenSystem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.OnDestroy
void HMUI::ScreenSystem::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.SetBackButton
void HMUI::ScreenSystem::SetBackButton(bool visible, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("SetBackButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBackButton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(visible, animated)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, visible, animated);
}
// Autogenerated method: HMUI.ScreenSystem.<Awake>b__24_0
void HMUI::ScreenSystem::$Awake$b__24_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenSystem").WithContext("<Awake>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__24_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
