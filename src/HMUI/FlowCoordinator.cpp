// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.FlowCoordinator
#include "HMUI/FlowCoordinator.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass35_0
#include "HMUI/FlowCoordinator_--c__DisplayClass35_0.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass36_0
#include "HMUI/FlowCoordinator_--c__DisplayClass36_0.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass37_0
#include "HMUI/FlowCoordinator_--c__DisplayClass37_0.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass38_0
#include "HMUI/FlowCoordinator_--c__DisplayClass38_0.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass38_1
#include "HMUI/FlowCoordinator_--c__DisplayClass38_1.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass39_0
#include "HMUI/FlowCoordinator_--c__DisplayClass39_0.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass41_0
#include "HMUI/FlowCoordinator_--c__DisplayClass41_0.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass42_0
#include "HMUI/FlowCoordinator_--c__DisplayClass42_0.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass45_0
#include "HMUI/FlowCoordinator_--c__DisplayClass45_0.hpp"
// Including type: HMUI.FlowCoordinator/<>c__DisplayClass46_0
#include "HMUI/FlowCoordinator_--c__DisplayClass46_0.hpp"
// Including type: UnityEngine.EventSystems.BaseInputModule
#include "UnityEngine/EventSystems/BaseInputModule.hpp"
// Including type: HMUI.ScreenSystem
#include "HMUI/ScreenSystem.hpp"
// Including type: HMUI.ViewController/AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: HMUI.NavigationController
#include "HMUI/NavigationController.hpp"
// Including type: HMUI.ViewController/AnimationDirection
#include "HMUI/ViewController_AnimationDirection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.FlowCoordinator.get_topViewController
HMUI::ViewController* HMUI::FlowCoordinator::get_topViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("get_topViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<HMUI::ViewController*>(), "get_topViewController", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.get_childFlowCoordinator
HMUI::FlowCoordinator* HMUI::FlowCoordinator::get_childFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("get_childFlowCoordinator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<HMUI::FlowCoordinator*>(), "get_childFlowCoordinator", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::FlowCoordinator*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.get_isActivated
bool HMUI::FlowCoordinator::get_isActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("get_isActivated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_isActivated", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.get_title
::Il2CppString* HMUI::FlowCoordinator::get_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("get_title");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_title", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.SetTitle
void HMUI::FlowCoordinator::SetTitle(::Il2CppString* value, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("SetTitle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetTitle", {}, ::il2cpp_utils::ExtractTypes(value, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, animationType);
}
// Autogenerated method: HMUI.FlowCoordinator.set_showBackButton
void HMUI::FlowCoordinator::set_showBackButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("set_showBackButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_showBackButton", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.FlowCoordinator.get_showBackButton
bool HMUI::FlowCoordinator::get_showBackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("get_showBackButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_showBackButton", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.__StartOnScreenSystem
void HMUI::FlowCoordinator::__StartOnScreenSystem(HMUI::ScreenSystem* screenSystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("__StartOnScreenSystem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "__StartOnScreenSystem", {}, ::il2cpp_utils::ExtractTypes(screenSystem)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, screenSystem);
}
// Autogenerated method: HMUI.FlowCoordinator.PresentFlowCoordinator
void HMUI::FlowCoordinator::PresentFlowCoordinator(HMUI::FlowCoordinator* flowCoordinator, System::Action* finishedCallback, HMUI::ViewController::AnimationDirection animationDirection, bool immediately, bool replaceTopViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("PresentFlowCoordinator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "PresentFlowCoordinator", {}, ::il2cpp_utils::ExtractTypes(flowCoordinator, finishedCallback, animationDirection, immediately, replaceTopViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flowCoordinator, finishedCallback, animationDirection, immediately, replaceTopViewController);
}
// Autogenerated method: HMUI.FlowCoordinator.DismissFlowCoordinator
void HMUI::FlowCoordinator::DismissFlowCoordinator(HMUI::FlowCoordinator* flowCoordinator, HMUI::ViewController::AnimationDirection animationDirection, System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("DismissFlowCoordinator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "DismissFlowCoordinator", {}, ::il2cpp_utils::ExtractTypes(flowCoordinator, animationDirection, finishedCallback, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flowCoordinator, animationDirection, finishedCallback, immediately);
}
// Autogenerated method: HMUI.FlowCoordinator.ReplaceChildFlowCoordinator
void HMUI::FlowCoordinator::ReplaceChildFlowCoordinator(HMUI::FlowCoordinator* flowCoordinator, System::Action* finishedCallback, HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("ReplaceChildFlowCoordinator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReplaceChildFlowCoordinator", {}, ::il2cpp_utils::ExtractTypes(flowCoordinator, finishedCallback, animationDirection, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flowCoordinator, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.FlowCoordinator.PresentViewController
void HMUI::FlowCoordinator::PresentViewController(HMUI::ViewController* viewController, System::Action* finishedCallback, HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("PresentViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "PresentViewController", {}, ::il2cpp_utils::ExtractTypes(viewController, finishedCallback, animationDirection, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.FlowCoordinator.DismissViewController
void HMUI::FlowCoordinator::DismissViewController(HMUI::ViewController* viewController, HMUI::ViewController::AnimationDirection animationDirection, System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("DismissViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "DismissViewController", {}, ::il2cpp_utils::ExtractTypes(viewController, animationDirection, finishedCallback, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, animationDirection, finishedCallback, immediately);
}
// Autogenerated method: HMUI.FlowCoordinator.ReplaceTopViewController
void HMUI::FlowCoordinator::ReplaceTopViewController(HMUI::ViewController* viewController, System::Action* finishedCallback, HMUI::ViewController::AnimationType animationType, HMUI::ViewController::AnimationDirection animationDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("ReplaceTopViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReplaceTopViewController", {}, ::il2cpp_utils::ExtractTypes(viewController, finishedCallback, animationType, animationDirection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, finishedCallback, animationType, animationDirection);
}
// Autogenerated method: HMUI.FlowCoordinator.ReplaceTopViewController
void HMUI::FlowCoordinator::ReplaceTopViewController(HMUI::ViewController* viewController, HMUI::FlowCoordinator* originalOwnerFlowCoordinator, HMUI::FlowCoordinator* newOwnerFlowCoordinator, System::Action* finishedCallback, HMUI::ViewController::AnimationType animationType, HMUI::ViewController::AnimationDirection animationDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("ReplaceTopViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReplaceTopViewController", {}, ::il2cpp_utils::ExtractTypes(viewController, originalOwnerFlowCoordinator, newOwnerFlowCoordinator, finishedCallback, animationType, animationDirection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, originalOwnerFlowCoordinator, newOwnerFlowCoordinator, finishedCallback, animationType, animationDirection);
}
// Autogenerated method: HMUI.FlowCoordinator.PushViewControllerToNavigationController
void HMUI::FlowCoordinator::PushViewControllerToNavigationController(HMUI::NavigationController* navigationController, HMUI::ViewController* viewController, System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("PushViewControllerToNavigationController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "PushViewControllerToNavigationController", {}, ::il2cpp_utils::ExtractTypes(navigationController, viewController, finishedCallback, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, navigationController, viewController, finishedCallback, immediately);
}
// Autogenerated method: HMUI.FlowCoordinator.SetViewControllersToNavigationController
void HMUI::FlowCoordinator::SetViewControllersToNavigationController(HMUI::NavigationController* navigationController, ::Array<HMUI::ViewController*>* viewControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("SetViewControllersToNavigationController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetViewControllersToNavigationController", {}, ::il2cpp_utils::ExtractTypes(navigationController, viewControllers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, navigationController, viewControllers);
}
// Creating initializer_list -> params proxy for: System.Void SetViewControllersToNavigationController(HMUI.NavigationController navigationController, params HMUI.ViewController[] viewControllers)
void HMUI::FlowCoordinator::SetViewControllersToNavigationController(HMUI::NavigationController* navigationController, std::initializer_list<HMUI::ViewController*> viewControllers) {
  HMUI::FlowCoordinator::SetViewControllersToNavigationController(navigationController, ::Array<HMUI::ViewController*>::New(viewControllers));
}
// Autogenerated method: HMUI.FlowCoordinator.SetViewControllerToNavigationController
void HMUI::FlowCoordinator::SetViewControllerToNavigationController(HMUI::NavigationController* navigationController, HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("SetViewControllerToNavigationController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetViewControllerToNavigationController", {}, ::il2cpp_utils::ExtractTypes(navigationController, viewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, navigationController, viewController);
}
// Autogenerated method: HMUI.FlowCoordinator.PopViewControllerFromNavigationController
void HMUI::FlowCoordinator::PopViewControllerFromNavigationController(HMUI::NavigationController* navigationController, System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("PopViewControllerFromNavigationController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "PopViewControllerFromNavigationController", {}, ::il2cpp_utils::ExtractTypes(navigationController, finishedCallback, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, navigationController, finishedCallback, immediately);
}
// Autogenerated method: HMUI.FlowCoordinator.PopViewControllersFromNavigationController
void HMUI::FlowCoordinator::PopViewControllersFromNavigationController(HMUI::NavigationController* navigationController, int numberOfControllers, System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("PopViewControllersFromNavigationController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "PopViewControllersFromNavigationController", {}, ::il2cpp_utils::ExtractTypes(navigationController, numberOfControllers, finishedCallback, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, navigationController, numberOfControllers, finishedCallback, immediately);
}
// Autogenerated method: HMUI.FlowCoordinator.SetLeftScreenViewController
void HMUI::FlowCoordinator::SetLeftScreenViewController(HMUI::ViewController* viewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("SetLeftScreenViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetLeftScreenViewController", {}, ::il2cpp_utils::ExtractTypes(viewController, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, animationType);
}
// Autogenerated method: HMUI.FlowCoordinator.SetRightScreenViewController
void HMUI::FlowCoordinator::SetRightScreenViewController(HMUI::ViewController* viewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("SetRightScreenViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetRightScreenViewController", {}, ::il2cpp_utils::ExtractTypes(viewController, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, animationType);
}
// Autogenerated method: HMUI.FlowCoordinator.SetBottomScreenViewController
void HMUI::FlowCoordinator::SetBottomScreenViewController(HMUI::ViewController* viewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("SetBottomScreenViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetBottomScreenViewController", {}, ::il2cpp_utils::ExtractTypes(viewController, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, animationType);
}
// Autogenerated method: HMUI.FlowCoordinator.SetTopScreenViewController
void HMUI::FlowCoordinator::SetTopScreenViewController(HMUI::ViewController* viewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("SetTopScreenViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetTopScreenViewController", {}, ::il2cpp_utils::ExtractTypes(viewController, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, animationType);
}
// Autogenerated method: HMUI.FlowCoordinator.PresentTitle
void HMUI::FlowCoordinator::PresentTitle(::Il2CppString* title, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("PresentTitle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "PresentTitle", {}, ::il2cpp_utils::ExtractTypes(title, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, title, animationType);
}
// Autogenerated method: HMUI.FlowCoordinator.IsFlowCoordinatorInHierarchy
bool HMUI::FlowCoordinator::IsFlowCoordinatorInHierarchy(HMUI::FlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("IsFlowCoordinatorInHierarchy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "IsFlowCoordinatorInHierarchy", {}, ::il2cpp_utils::ExtractTypes(flowCoordinator)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flowCoordinator);
}
// Autogenerated method: HMUI.FlowCoordinator.YoungestChildFlowCoordinatorOrSelf
HMUI::FlowCoordinator* HMUI::FlowCoordinator::YoungestChildFlowCoordinatorOrSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("YoungestChildFlowCoordinatorOrSelf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<HMUI::FlowCoordinator*>(), "YoungestChildFlowCoordinatorOrSelf", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::FlowCoordinator*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.ProvideInitialViewControllers
void HMUI::FlowCoordinator::ProvideInitialViewControllers(HMUI::ViewController* mainViewController, HMUI::ViewController* leftScreenViewController, HMUI::ViewController* rightScreenViewController, HMUI::ViewController* bottomScreenViewController, HMUI::ViewController* topScreenViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("ProvideInitialViewControllers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ProvideInitialViewControllers", {}, ::il2cpp_utils::ExtractTypes(mainViewController, leftScreenViewController, rightScreenViewController, bottomScreenViewController, topScreenViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mainViewController, leftScreenViewController, rightScreenViewController, bottomScreenViewController, topScreenViewController);
}
// Autogenerated method: HMUI.FlowCoordinator.Activate
void HMUI::FlowCoordinator::Activate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Activate", {}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy, screenSystemEnabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HMUI.FlowCoordinator.Deactivate
void HMUI::FlowCoordinator::Deactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("Deactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Deactivate", {}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy, screenSystemDisabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HMUI.FlowCoordinator.__ExternalActivate
void HMUI::FlowCoordinator::__ExternalActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("__ExternalActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "__ExternalActivate", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.__ExternalDeactivate
void HMUI::FlowCoordinator::__ExternalDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("__ExternalDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "__ExternalDeactivate", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.HandleScreenSystemBackButtonWasPressed
void HMUI::FlowCoordinator::HandleScreenSystemBackButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("HandleScreenSystemBackButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleScreenSystemBackButtonWasPressed", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.SetGlobalUserInteraction
void HMUI::FlowCoordinator::SetGlobalUserInteraction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("SetGlobalUserInteraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetGlobalUserInteraction", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.FlowCoordinator.DidActivate
void HMUI::FlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("DidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "DidActivate", {}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy, screenSystemEnabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HMUI.FlowCoordinator.DidDeactivate
void HMUI::FlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("DidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "DidDeactivate", {}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy, screenSystemDisabling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HMUI.FlowCoordinator.TransitionDidStart
void HMUI::FlowCoordinator::TransitionDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("TransitionDidStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TransitionDidStart", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.TransitionDidFinish
void HMUI::FlowCoordinator::TransitionDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("TransitionDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TransitionDidFinish", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.TopViewControllerWillChange
void HMUI::FlowCoordinator::TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("TopViewControllerWillChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TopViewControllerWillChange", {}, ::il2cpp_utils::ExtractTypes(oldViewController, newViewController, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: HMUI.FlowCoordinator.InitialViewControllerWasPresented
void HMUI::FlowCoordinator::InitialViewControllerWasPresented() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("InitialViewControllerWasPresented");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "InitialViewControllerWasPresented", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.FlowCoordinator.BackButtonWasPressed
void HMUI::FlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("BackButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "BackButtonWasPressed", {}, ::il2cpp_utils::ExtractTypes(topViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated method: HMUI.FlowCoordinator.Log
void HMUI::FlowCoordinator::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext("Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("HMUI", "FlowCoordinator", il2cpp_utils::NoArgClass<void>(), "Log", {}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: HMUI.FlowCoordinator..ctor
HMUI::FlowCoordinator* HMUI::FlowCoordinator::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("FlowCoordinator").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<FlowCoordinator*>());
}
