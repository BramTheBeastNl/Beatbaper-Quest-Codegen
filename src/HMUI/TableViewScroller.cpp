// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableViewScroller
#include "HMUI/TableViewScroller.hpp"
// Including type: HMUI.TableViewScroller/ScrollPositionType
#include "HMUI/TableViewScroller_ScrollPositionType.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: HMUI.VerticalScrollIndicator
#include "HMUI/VerticalScrollIndicator.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.EventSystemListener
#include "HMUI/EventSystemListener.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kJoystickScrollSpeed
float HMUI::TableViewScroller::_get_kJoystickScrollSpeed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "TableViewScroller", "kJoystickScrollSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kJoystickScrollSpeed
void HMUI::TableViewScroller::_set_kJoystickScrollSpeed(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableViewScroller", "kJoystickScrollSpeed", value));
}
// Autogenerated method: HMUI.TableViewScroller.add_positionDidChangeEvent
void HMUI::TableViewScroller::add_positionDidChangeEvent(System::Action_2<HMUI::TableViewScroller*, float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_positionDidChangeEvent", value));
}
// Autogenerated method: HMUI.TableViewScroller.remove_positionDidChangeEvent
void HMUI::TableViewScroller::remove_positionDidChangeEvent(System::Action_2<HMUI::TableViewScroller*, float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_positionDidChangeEvent", value));
}
// Autogenerated method: HMUI.TableViewScroller.get_position
float HMUI::TableViewScroller::get_position() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_position"));
}
// Autogenerated method: HMUI.TableViewScroller.set_position
void HMUI::TableViewScroller::set_position(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_position", value));
}
// Autogenerated method: HMUI.TableViewScroller.get_targetPosition
float HMUI::TableViewScroller::get_targetPosition() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_targetPosition"));
}
// Autogenerated method: HMUI.TableViewScroller.get_scrollableSize
float HMUI::TableViewScroller::get_scrollableSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_scrollableSize"));
}
// Autogenerated method: HMUI.TableViewScroller.Init
void HMUI::TableViewScroller::Init(HMUI::TableView* tableView, UnityEngine::UI::Button* pageUpButton, UnityEngine::UI::Button* pageDownButton, HMUI::VerticalScrollIndicator* verticalScrollIndicator, HMUI::EventSystemListener* eventSystemListener, GlobalNamespace::IVRPlatformHelper* platformHelper, bool hideScrollButtonsIfNotNeeded, bool hideScrollIndicatorIfNotNeeded) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", tableView, pageUpButton, pageDownButton, verticalScrollIndicator, eventSystemListener, platformHelper, hideScrollButtonsIfNotNeeded, hideScrollIndicatorIfNotNeeded));
}
// Autogenerated method: HMUI.TableViewScroller.OnDestroy
void HMUI::TableViewScroller::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: HMUI.TableViewScroller.ScrollToCellWithIdx
void HMUI::TableViewScroller::ScrollToCellWithIdx(int idx, HMUI::TableViewScroller::ScrollPositionType scrollPositionType, bool animated) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ScrollToCellWithIdx", idx, scrollPositionType, animated));
}
// Autogenerated method: HMUI.TableViewScroller.Update
void HMUI::TableViewScroller::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: HMUI.TableViewScroller.UpdateVerticalScrollIndicator
void HMUI::TableViewScroller::UpdateVerticalScrollIndicator(float posY) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateVerticalScrollIndicator", posY));
}
// Autogenerated method: HMUI.TableViewScroller.GetNumberOfVisibleCells
float HMUI::TableViewScroller::GetNumberOfVisibleCells() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "GetNumberOfVisibleCells"));
}
// Autogenerated method: HMUI.TableViewScroller.RefreshScrollableSize
void HMUI::TableViewScroller::RefreshScrollableSize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshScrollableSize"));
}
// Autogenerated method: HMUI.TableViewScroller.HandleTableViewDidReloadData
void HMUI::TableViewScroller::HandleTableViewDidReloadData(HMUI::TableView* tableView) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleTableViewDidReloadData", tableView));
}
// Autogenerated method: HMUI.TableViewScroller.HandleTableViewDidInsertCells
void HMUI::TableViewScroller::HandleTableViewDidInsertCells(HMUI::TableView* tableView) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleTableViewDidInsertCells", tableView));
}
// Autogenerated method: HMUI.TableViewScroller.HandleTableViewDidDeleteCells
void HMUI::TableViewScroller::HandleTableViewDidDeleteCells(HMUI::TableView* tableView) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleTableViewDidDeleteCells", tableView));
}
// Autogenerated method: HMUI.TableViewScroller.HandleTableViewDidChangeRectSize
void HMUI::TableViewScroller::HandleTableViewDidChangeRectSize(HMUI::TableView* tableView) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleTableViewDidChangeRectSize", tableView));
}
// Autogenerated method: HMUI.TableViewScroller.PageScrollUp
void HMUI::TableViewScroller::PageScrollUp() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PageScrollUp"));
}
// Autogenerated method: HMUI.TableViewScroller.PageScrollDown
void HMUI::TableViewScroller::PageScrollDown() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PageScrollDown"));
}
// Autogenerated method: HMUI.TableViewScroller.RefreshScrollBar
void HMUI::TableViewScroller::RefreshScrollBar() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshScrollBar"));
}
// Autogenerated method: HMUI.TableViewScroller.HandlePointerDidEnter
void HMUI::TableViewScroller::HandlePointerDidEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePointerDidEnter", eventData));
}
// Autogenerated method: HMUI.TableViewScroller.HandlePointerDidExit
void HMUI::TableViewScroller::HandlePointerDidExit(UnityEngine::EventSystems::PointerEventData* eventData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePointerDidExit", eventData));
}
// Autogenerated method: HMUI.TableViewScroller.HandleJoystickWasNotCenteredThisFrame
void HMUI::TableViewScroller::HandleJoystickWasNotCenteredThisFrame(UnityEngine::Vector2 deltaPos) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleJoystickWasNotCenteredThisFrame", deltaPos));
}
// Autogenerated method: HMUI.TableViewScroller.HandleJoystickWasCenteredThisFrame
void HMUI::TableViewScroller::HandleJoystickWasCenteredThisFrame() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleJoystickWasCenteredThisFrame"));
}
// Autogenerated method: HMUI.TableViewScroller.<Init>b__27_0
void HMUI::TableViewScroller::$Init$b__27_0() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Init>b__27_0"));
}
// Autogenerated method: HMUI.TableViewScroller.<Init>b__27_1
void HMUI::TableViewScroller::$Init$b__27_1() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Init>b__27_1"));
}
// Autogenerated method: HMUI.TableViewScroller..ctor
HMUI::TableViewScroller* HMUI::TableViewScroller::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<TableViewScroller*>());
}
