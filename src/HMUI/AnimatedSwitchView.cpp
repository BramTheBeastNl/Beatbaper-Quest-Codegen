// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView
#include "HMUI/AnimatedSwitchView.hpp"
// Including type: HMUI.AnimatedSwitchView/ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
// Including type: HMUI.AnimatedSwitchView/GetColorDelegate
#include "HMUI/AnimatedSwitchView_GetColorDelegate.hpp"
// Including type: HMUI.AnimatedSwitchView/<>c
#include "HMUI/AnimatedSwitchView_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.AnimatedSwitchView.Awake
void HMUI::AnimatedSwitchView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Awake", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.Start
void HMUI::AnimatedSwitchView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Start", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.OnDestroy
void HMUI::AnimatedSwitchView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDestroy", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.Update
void HMUI::AnimatedSwitchView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Update", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpPosition
void HMUI::AnimatedSwitchView::LerpPosition(float switchAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("LerpPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LerpPosition", {}, ::il2cpp_utils::ExtractTypes(switchAmount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, switchAmount);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpStretch
void HMUI::AnimatedSwitchView::LerpStretch(float switchAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("LerpStretch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LerpStretch", {}, ::il2cpp_utils::ExtractTypes(switchAmount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, switchAmount);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpColors
void HMUI::AnimatedSwitchView::LerpColors(float switchAmount, float highlightAmount, float disabledAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("LerpColors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LerpColors", {}, ::il2cpp_utils::ExtractTypes(switchAmount, highlightAmount, disabledAmount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, switchAmount, highlightAmount, disabledAmount);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpColor
UnityEngine::Color HMUI::AnimatedSwitchView::LerpColor(float switchAmount, float highlightAmount, float disabledAmount, HMUI::AnimatedSwitchView::GetColorDelegate* getColorDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("LerpColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Color>(), "LerpColor", {}, ::il2cpp_utils::ExtractTypes(switchAmount, highlightAmount, disabledAmount, getColorDelegate)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, switchAmount, highlightAmount, disabledAmount, getColorDelegate);
}
// Autogenerated method: HMUI.AnimatedSwitchView.HandleOnValueChanged
void HMUI::AnimatedSwitchView::HandleOnValueChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("HandleOnValueChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleOnValueChanged", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.AnimatedSwitchView.HandleStateDidChange
void HMUI::AnimatedSwitchView::HandleStateDidChange(HMUI::ToggleWithCallbacks::SelectionState selectionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext("HandleStateDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleStateDidChange", {}, ::il2cpp_utils::ExtractTypes(selectionState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selectionState);
}
// Autogenerated method: HMUI.AnimatedSwitchView..ctor
HMUI::AnimatedSwitchView* HMUI::AnimatedSwitchView::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("AnimatedSwitchView").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<AnimatedSwitchView*>());
}
