// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView
#include "HMUI/AnimatedSwitchView.hpp"
// Including type: HMUI.AnimatedSwitchView/ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
// Including type: HMUI.AnimatedSwitchView/GetColorDelegate
#include "HMUI/AnimatedSwitchView_GetColorDelegate.hpp"
// Including type: HMUI.AnimatedSwitchView/<>c
#include "HMUI/AnimatedSwitchView_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.AnimatedSwitchView.Awake
void HMUI::AnimatedSwitchView::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: HMUI.AnimatedSwitchView.Start
void HMUI::AnimatedSwitchView::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: HMUI.AnimatedSwitchView.OnDestroy
void HMUI::AnimatedSwitchView::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: HMUI.AnimatedSwitchView.Update
void HMUI::AnimatedSwitchView::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpPosition
void HMUI::AnimatedSwitchView::LerpPosition(float switchAmount) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LerpPosition", switchAmount));
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpStretch
void HMUI::AnimatedSwitchView::LerpStretch(float switchAmount) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LerpStretch", switchAmount));
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpColors
void HMUI::AnimatedSwitchView::LerpColors(float switchAmount, float highlightAmount, float disabledAmount) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LerpColors", switchAmount, highlightAmount, disabledAmount));
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpColor
UnityEngine::Color HMUI::AnimatedSwitchView::LerpColor(float switchAmount, float highlightAmount, float disabledAmount, HMUI::AnimatedSwitchView::GetColorDelegate* getColorDelegate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "LerpColor", switchAmount, highlightAmount, disabledAmount, getColorDelegate));
}
// Autogenerated method: HMUI.AnimatedSwitchView.HandleOnValueChanged
void HMUI::AnimatedSwitchView::HandleOnValueChanged(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleOnValueChanged", value));
}
// Autogenerated method: HMUI.AnimatedSwitchView.HandleStateDidChange
void HMUI::AnimatedSwitchView::HandleStateDidChange(HMUI::ToggleWithCallbacks::SelectionState selectionState) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleStateDidChange", selectionState));
}
// Autogenerated method: HMUI.AnimatedSwitchView..ctor
HMUI::AnimatedSwitchView* HMUI::AnimatedSwitchView::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<AnimatedSwitchView*>());
}
