// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.InputFieldViewChangeBinder
#include "HMUI/InputFieldViewChangeBinder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.InputFieldViewChangeBinder.Init
void HMUI::InputFieldViewChangeBinder::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("InputFieldViewChangeBinder").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewChangeBinder.AddBindings
void HMUI::InputFieldViewChangeBinder::AddBindings(System::Collections::Generic::List_1<System::Tuple_2<HMUI::InputFieldView*, System::Action_1<HMUI::InputFieldView*>*>*>* bindings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("InputFieldViewChangeBinder").WithContext("AddBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindings)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindings);
}
// Autogenerated method: HMUI.InputFieldViewChangeBinder.AddBinding
void HMUI::InputFieldViewChangeBinder::AddBinding(HMUI::InputFieldView* inputField, System::Action_1<HMUI::InputFieldView*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("InputFieldViewChangeBinder").WithContext("AddBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputField, action)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputField, action);
}
// Autogenerated method: HMUI.InputFieldViewChangeBinder.ClearBindings
void HMUI::InputFieldViewChangeBinder::ClearBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("InputFieldViewChangeBinder").WithContext("ClearBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewChangeBinder.Disable
void HMUI::InputFieldViewChangeBinder::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("InputFieldViewChangeBinder").WithContext("Disable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewChangeBinder.Enable
void HMUI::InputFieldViewChangeBinder::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("InputFieldViewChangeBinder").WithContext("Enable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Enable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
