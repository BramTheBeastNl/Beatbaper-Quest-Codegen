// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SectionTableView/IDataSource
#include "HMUI/SectionTableView_IDataSource.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.SectionTableView/IDataSource.RowHeight
float HMUI::SectionTableView::IDataSource::RowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IDataSource").WithContext("RowHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RowHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView/IDataSource.NumberOfSections
int HMUI::SectionTableView::IDataSource::NumberOfSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IDataSource").WithContext("NumberOfSections");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NumberOfSections", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView/IDataSource.NumberOfRowsInSection
int HMUI::SectionTableView::IDataSource::NumberOfRowsInSection(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IDataSource").WithContext("NumberOfRowsInSection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NumberOfRowsInSection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(section)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView/IDataSource.CellForSectionHeader
HMUI::TableCell* HMUI::SectionTableView::IDataSource::CellForSectionHeader(int section, bool unfolded) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IDataSource").WithContext("CellForSectionHeader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CellForSectionHeader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(section, unfolded)));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, section, unfolded);
}
// Autogenerated method: HMUI.SectionTableView/IDataSource.CellForRowInSection
HMUI::TableCell* HMUI::SectionTableView::IDataSource::CellForRowInSection(int section, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("IDataSource").WithContext("CellForRowInSection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CellForRowInSection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(section, row)));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, section, row);
}
