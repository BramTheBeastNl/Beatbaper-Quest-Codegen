// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.AnimatedSwitchView/GetColorDelegate
#include "HMUI/AnimatedSwitchView_GetColorDelegate.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: HMUI.AnimatedSwitchView/ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.AnimatedSwitchView/GetColorDelegate..ctor
HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::GetColorDelegate::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  return THROW_UNLESS(il2cpp_utils::New<AnimatedSwitchView::GetColorDelegate*>(object, method));
}
// Autogenerated method: HMUI.AnimatedSwitchView/GetColorDelegate.Invoke
UnityEngine::Color HMUI::AnimatedSwitchView::GetColorDelegate::Invoke(HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "Invoke", colorBlock));
}
// Autogenerated method: HMUI.AnimatedSwitchView/GetColorDelegate.BeginInvoke
System::IAsyncResult* HMUI::AnimatedSwitchView::GetColorDelegate::BeginInvoke(HMUI::AnimatedSwitchView::ColorBlock* colorBlock, System::AsyncCallback* callback, ::Il2CppObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", colorBlock, callback, object));
}
// Autogenerated method: HMUI.AnimatedSwitchView/GetColorDelegate.EndInvoke
UnityEngine::Color HMUI::AnimatedSwitchView::GetColorDelegate::EndInvoke(System::IAsyncResult* result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "EndInvoke", result));
}
