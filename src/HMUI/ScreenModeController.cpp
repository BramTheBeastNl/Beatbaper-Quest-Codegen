// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ScreenModeController
#include "HMUI/ScreenModeController.hpp"
// Including type: HMUI.CurvedCanvasSettings
#include "HMUI/CurvedCanvasSettings.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: HMUI.ScreenModeData
#include "HMUI/ScreenModeData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ScreenModeController.Awake
void HMUI::ScreenModeController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenModeController").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Awake", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenModeController.SetMode
void HMUI::ScreenModeController::SetMode(HMUI::ScreenModeData* screenModeData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenModeController").WithContext("SetMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetMode", {}, ::il2cpp_utils::ExtractTypes(screenModeData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, screenModeData);
}
// Autogenerated method: HMUI.ScreenModeController.SetDefaultMode
void HMUI::ScreenModeController::SetDefaultMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenModeController").WithContext("SetDefaultMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetDefaultMode", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenModeController..ctor
HMUI::ScreenModeController* HMUI::ScreenModeController::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("HMUI").WithContext("ScreenModeController").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ScreenModeController*>());
}
