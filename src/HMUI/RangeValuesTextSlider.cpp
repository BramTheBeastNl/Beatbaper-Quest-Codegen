// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.RangeValuesTextSlider
#include "HMUI/RangeValuesTextSlider.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.RangeValuesTextSlider.get_minValue
float HMUI::RangeValuesTextSlider::get_minValue() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_minValue"));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.set_minValue
void HMUI::RangeValuesTextSlider::set_minValue(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_minValue", value));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.get_maxValue
float HMUI::RangeValuesTextSlider::get_maxValue() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_maxValue"));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.set_maxValue
void HMUI::RangeValuesTextSlider::set_maxValue(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_maxValue", value));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.set_value
void HMUI::RangeValuesTextSlider::set_value(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_value", value));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.get_value
float HMUI::RangeValuesTextSlider::get_value() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_value"));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.add_valueDidChangeEvent
void HMUI::RangeValuesTextSlider::add_valueDidChangeEvent(System::Action_2<HMUI::RangeValuesTextSlider*, float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_valueDidChangeEvent", value));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.remove_valueDidChangeEvent
void HMUI::RangeValuesTextSlider::remove_valueDidChangeEvent(System::Action_2<HMUI::RangeValuesTextSlider*, float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_valueDidChangeEvent", value));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.HandleNormalizedValueDidChange
void HMUI::RangeValuesTextSlider::HandleNormalizedValueDidChange(HMUI::TextSlider* slider, float normalizedValue) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNormalizedValueDidChange", slider, normalizedValue));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.ConvertFromNormalizedValue
float HMUI::RangeValuesTextSlider::ConvertFromNormalizedValue(float normalizedValue) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "ConvertFromNormalizedValue", normalizedValue));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.NormalizeValue
float HMUI::RangeValuesTextSlider::NormalizeValue(float rangeValue) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "NormalizeValue", rangeValue));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.TextForValue
::CsString* HMUI::RangeValuesTextSlider::TextForValue(float value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "TextForValue", value));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.<Awake>b__17_0
void HMUI::RangeValuesTextSlider::$Awake$b__17_0() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Awake>b__17_0"));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.<Awake>b__17_1
void HMUI::RangeValuesTextSlider::$Awake$b__17_1() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Awake>b__17_1"));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.Awake
void HMUI::RangeValuesTextSlider::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.OnDestroy
void HMUI::RangeValuesTextSlider::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: HMUI.RangeValuesTextSlider.TextForNormalizedValue
::CsString* HMUI::RangeValuesTextSlider::TextForNormalizedValue(float normalizedValue) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "TextForNormalizedValue", normalizedValue));
}
// Autogenerated method: HMUI.RangeValuesTextSlider..ctor
HMUI::RangeValuesTextSlider* HMUI::RangeValuesTextSlider::New_ctor() {
  return (RangeValuesTextSlider*)THROW_UNLESS(il2cpp_utils::New("HMUI", "RangeValuesTextSlider"));
}
