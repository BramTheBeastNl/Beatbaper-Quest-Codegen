// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.PanelAnimationSO.ExecuteAnimation
void HMUI::PanelAnimationSO::ExecuteAnimation(UnityEngine::GameObject* go) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ExecuteAnimation", go));
}
// Autogenerated method: HMUI.PanelAnimationSO.ExecuteAnimation
void HMUI::PanelAnimationSO::ExecuteAnimation(UnityEngine::GameObject* go, System::Action* finishedCallback) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ExecuteAnimation", go, finishedCallback));
}
// Autogenerated method: HMUI.PanelAnimationSO.ExecuteAnimation
void HMUI::PanelAnimationSO::ExecuteAnimation(UnityEngine::GameObject* go, UnityEngine::CanvasGroup* parentCanvasGroup, System::Action* finishedCallback) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ExecuteAnimation", go, parentCanvasGroup, finishedCallback));
}
// Autogenerated method: HMUI.PanelAnimationSO.ExecuteAnimation
void HMUI::PanelAnimationSO::ExecuteAnimation(UnityEngine::GameObject* go, UnityEngine::CanvasGroup* parentCanvasGroup, bool instant, System::Action* finishedCallback) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ExecuteAnimation", go, parentCanvasGroup, instant, finishedCallback));
}
// Autogenerated method: HMUI.PanelAnimationSO..ctor
HMUI::PanelAnimationSO* HMUI::PanelAnimationSO::New_ctor() {
  return (PanelAnimationSO*)THROW_UNLESS(il2cpp_utils::New("HMUI", "PanelAnimationSO"));
}
