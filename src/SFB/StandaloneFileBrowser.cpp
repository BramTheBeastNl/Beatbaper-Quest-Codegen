// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SFB.StandaloneFileBrowser
#include "SFB/StandaloneFileBrowser.hpp"
// Including type: SFB.IStandaloneFileBrowser
#include "SFB/IStandaloneFileBrowser.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDD3560
// Autogenerated static field getter
// Get static field: static private readonly SFB.IStandaloneFileBrowser _platformWrapper
SFB::IStandaloneFileBrowser* SFB::StandaloneFileBrowser::_get__platformWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("_get__platformWrapper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<SFB::IStandaloneFileBrowser*>("SFB", "StandaloneFileBrowser", "_platformWrapper"));
}
// Autogenerated static field setter
// Set static field: static private readonly SFB.IStandaloneFileBrowser _platformWrapper
void SFB::StandaloneFileBrowser::_set__platformWrapper(SFB::IStandaloneFileBrowser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("_set__platformWrapper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SFB", "StandaloneFileBrowser", "_platformWrapper", value));
}
// Autogenerated method: SFB.StandaloneFileBrowser..cctor
void SFB::StandaloneFileBrowser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFilePanel
::Array<::Il2CppString*>* SFB::StandaloneFileBrowser::OpenFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* extension, bool multiselect) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("OpenFilePanel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFilePanel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, extension, multiselect)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, extension, multiselect);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFilePanel
::Array<::Il2CppString*>* SFB::StandaloneFileBrowser::OpenFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Array<SFB::ExtensionFilter>* extensions, bool multiselect) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("OpenFilePanel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFilePanel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, extensions, multiselect)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, extensions, multiselect);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFilePanelAsync
void SFB::StandaloneFileBrowser::OpenFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* extension, bool multiselect, System::Action_1<::Array<::Il2CppString*>*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("OpenFilePanelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFilePanelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, extension, multiselect, cb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, extension, multiselect, cb);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFilePanelAsync
void SFB::StandaloneFileBrowser::OpenFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Array<SFB::ExtensionFilter>* extensions, bool multiselect, System::Action_1<::Array<::Il2CppString*>*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("OpenFilePanelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFilePanelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, extensions, multiselect, cb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, extensions, multiselect, cb);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFolderPanel
::Array<::Il2CppString*>* SFB::StandaloneFileBrowser::OpenFolderPanel(::Il2CppString* title, ::Il2CppString* directory, bool multiselect) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("OpenFolderPanel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFolderPanel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, multiselect)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, multiselect);
}
// Autogenerated method: SFB.StandaloneFileBrowser.OpenFolderPanelAsync
void SFB::StandaloneFileBrowser::OpenFolderPanelAsync(::Il2CppString* title, ::Il2CppString* directory, bool multiselect, System::Action_1<::Array<::Il2CppString*>*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("OpenFolderPanelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "OpenFolderPanelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, multiselect, cb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, multiselect, cb);
}
// Autogenerated method: SFB.StandaloneFileBrowser.SaveFilePanel
::Il2CppString* SFB::StandaloneFileBrowser::SaveFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Il2CppString* extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("SaveFilePanel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "SaveFilePanel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, defaultName, extension)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, defaultName, extension);
}
// Autogenerated method: SFB.StandaloneFileBrowser.SaveFilePanel
::Il2CppString* SFB::StandaloneFileBrowser::SaveFilePanel(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Array<SFB::ExtensionFilter>* extensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("SaveFilePanel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "SaveFilePanel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, defaultName, extensions)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, defaultName, extensions);
}
// Autogenerated method: SFB.StandaloneFileBrowser.SaveFilePanelAsync
void SFB::StandaloneFileBrowser::SaveFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Il2CppString* extension, System::Action_1<::Il2CppString*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("SaveFilePanelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "SaveFilePanelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, defaultName, extension, cb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, defaultName, extension, cb);
}
// Autogenerated method: SFB.StandaloneFileBrowser.SaveFilePanelAsync
void SFB::StandaloneFileBrowser::SaveFilePanelAsync(::Il2CppString* title, ::Il2CppString* directory, ::Il2CppString* defaultName, ::Array<SFB::ExtensionFilter>* extensions, System::Action_1<::Il2CppString*>* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("SFB").WithContext("StandaloneFileBrowser").WithContext("SaveFilePanelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("SFB", "StandaloneFileBrowser", "SaveFilePanelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(title, directory, defaultName, extensions, cb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, title, directory, defaultName, extensions, cb);
}
