// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Completed includes
// Type namespace: Org.BouncyCastle.Utilities.Date
namespace Org::BouncyCastle::Utilities::Date {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Org.BouncyCastle.Utilities.Date.DateTimeUtilities
  class DateTimeUtilities : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: DateTimeUtilities
    DateTimeUtilities() noexcept {}
    // Get static field: static public readonly System.DateTime UnixEpoch
    static System::DateTime _get_UnixEpoch();
    // Set static field: static public readonly System.DateTime UnixEpoch
    static void _set_UnixEpoch(System::DateTime value);
    // static public System.Int64 DateTimeToUnixMs(System.DateTime dateTime)
    // Offset: 0x1F8A054
    static int64_t DateTimeToUnixMs(System::DateTime dateTime);
    // static public System.Int64 CurrentUnixMs()
    // Offset: 0x1F8A1A8
    static int64_t CurrentUnixMs();
    // static private System.Void .cctor()
    // Offset: 0x1F8A238
    static void _cctor();
  }; // Org.BouncyCastle.Utilities.Date.DateTimeUtilities
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Utilities::Date::DateTimeUtilities*, "Org.BouncyCastle.Utilities.Date", "DateTimeUtilities");
// Writing MetadataGetter for method: Org::BouncyCastle::Utilities::Date::DateTimeUtilities::DateTimeToUnixMs
// Il2CppName: DateTimeToUnixMs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(System::DateTime)>(&Org::BouncyCastle::Utilities::Date::DateTimeUtilities::DateTimeToUnixMs)> {
  const MethodInfo* get() {
    static auto* dateTime = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Utilities::Date::DateTimeUtilities*), "DateTimeToUnixMs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dateTime});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Utilities::Date::DateTimeUtilities::CurrentUnixMs
// Il2CppName: CurrentUnixMs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)()>(&Org::BouncyCastle::Utilities::Date::DateTimeUtilities::CurrentUnixMs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Utilities::Date::DateTimeUtilities*), "CurrentUnixMs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Utilities::Date::DateTimeUtilities::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Org::BouncyCastle::Utilities::Date::DateTimeUtilities::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Utilities::Date::DateTimeUtilities*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
