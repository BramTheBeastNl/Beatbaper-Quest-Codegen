// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Type namespace: Org.BouncyCastle.Math.EC.Rfc7748
namespace Org::BouncyCastle::Math::EC::Rfc7748 {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Org.BouncyCastle.Math.EC.Rfc7748.X448Field
  // [CLSCompliantAttribute] Offset: DE1F68
  class X448Field : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: X448Field
    X448Field() noexcept {}
    // static public System.Void Add(System.UInt32[] x, System.UInt32[] y, System.UInt32[] z)
    // Offset: 0x1D2A414
    static void Add(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* z);
    // static public System.Void Carry(System.UInt32[] z)
    // Offset: 0x1D2A494
    static void Carry(::Array<uint>* z);
    // static public System.Void CMov(System.Int32 cond, System.UInt32[] x, System.Int32 xOff, System.UInt32[] z, System.Int32 zOff)
    // Offset: 0x1D2A620
    static void CMov(int cond, ::Array<uint>* x, int xOff, ::Array<uint>* z, int zOff);
    // static public System.Void CNegate(System.Int32 negate, System.UInt32[] z)
    // Offset: 0x1D2A6AC
    static void CNegate(int negate, ::Array<uint>* z);
    // static public System.Void Copy(System.UInt32[] x, System.Int32 xOff, System.UInt32[] z, System.Int32 zOff)
    // Offset: 0x1D2AADC
    static void Copy(::Array<uint>* x, int xOff, ::Array<uint>* z, int zOff);
    // static public System.UInt32[] Create()
    // Offset: 0x1D2A6FC
    static ::Array<uint>* Create();
    // static public System.Void Encode(System.UInt32[] x, System.Byte[] z, System.Int32 zOff)
    // Offset: 0x1D2AB58
    static void Encode(::Array<uint>* x, ::Array<uint8_t>* z, int zOff);
    // static private System.Void Encode24(System.UInt32 n, System.Byte[] bs, System.Int32 off)
    // Offset: 0x1D2AC98
    static void Encode24(uint n, ::Array<uint8_t>* bs, int off);
    // static private System.Void Encode32(System.UInt32 n, System.Byte[] bs, System.Int32 off)
    // Offset: 0x1D2AD08
    static void Encode32(uint n, ::Array<uint8_t>* bs, int off);
    // static private System.Void Encode56(System.UInt32[] x, System.Int32 xOff, System.Byte[] bs, System.Int32 off)
    // Offset: 0x1D2AC1C
    static void Encode56(::Array<uint>* x, int xOff, ::Array<uint8_t>* bs, int off);
    // static public System.Void Inv(System.UInt32[] x, System.UInt32[] z)
    // Offset: 0x1D2AD94
    static void Inv(::Array<uint>* x, ::Array<uint>* z);
    // static public System.Int32 IsZero(System.UInt32[] x)
    // Offset: 0x1D2B99C
    static int IsZero(::Array<uint>* x);
    // static public System.Void Mul(System.UInt32[] x, System.UInt32 y, System.UInt32[] z)
    // Offset: 0x1D2B9FC
    static void Mul(::Array<uint>* x, uint y, ::Array<uint>* z);
    // static public System.Void Mul(System.UInt32[] x, System.UInt32[] y, System.UInt32[] z)
    // Offset: 0x1D2B034
    static void Mul(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* z);
    // static public System.Void Normalize(System.UInt32[] z)
    // Offset: 0x1D2BC00
    static void Normalize(::Array<uint>* z);
    // static public System.Void One(System.UInt32[] z)
    // Offset: 0x1D2BCE4
    static void One(::Array<uint>* z);
    // static private System.Void PowPm3d4(System.UInt32[] x, System.UInt32[] z)
    // Offset: 0x1D2ADEC
    static void PowPm3d4(::Array<uint>* x, ::Array<uint>* z);
    // static private System.Void Reduce(System.UInt32[] z, System.Int32 x)
    // Offset: 0x1D2BC2C
    static void Reduce(::Array<uint>* z, int x);
    // static public System.Void Sqr(System.UInt32[] x, System.UInt32[] z)
    // Offset: 0x1D2BD40
    static void Sqr(::Array<uint>* x, ::Array<uint>* z);
    // static public System.Void Sqr(System.UInt32[] x, System.Int32 n, System.UInt32[] z)
    // Offset: 0x1D2AFE8
    static void Sqr(::Array<uint>* x, int n, ::Array<uint>* z);
    // static public System.Void Sub(System.UInt32[] x, System.UInt32[] y, System.UInt32[] z)
    // Offset: 0x1D2A748
    static void Sub(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* z);
    // static public System.Void SubOne(System.UInt32[] z)
    // Offset: 0x1D2C2FC
    static void SubOne(::Array<uint>* z);
    // static public System.Void Zero(System.UInt32[] z)
    // Offset: 0x1D2C34C
    static void Zero(::Array<uint>* z);
  }; // Org.BouncyCastle.Math.EC.Rfc7748.X448Field
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Math::EC::Rfc7748::X448Field*, "Org.BouncyCastle.Math.EC.Rfc7748", "X448Field");
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Add
// Il2CppName: Add
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Carry
// Il2CppName: Carry
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::CMov
// Il2CppName: CMov
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::CNegate
// Il2CppName: CNegate
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Copy
// Il2CppName: Copy
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Create
// Il2CppName: Create
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Encode
// Il2CppName: Encode
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Encode24
// Il2CppName: Encode24
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Encode32
// Il2CppName: Encode32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Encode56
// Il2CppName: Encode56
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Inv
// Il2CppName: Inv
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::IsZero
// Il2CppName: IsZero
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Mul
// Il2CppName: Mul
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Mul
// Il2CppName: Mul
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Normalize
// Il2CppName: Normalize
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::One
// Il2CppName: One
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::PowPm3d4
// Il2CppName: PowPm3d4
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Reduce
// Il2CppName: Reduce
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Sqr
// Il2CppName: Sqr
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Sqr
// Il2CppName: Sqr
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Sub
// Il2CppName: Sub
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::SubOne
// Il2CppName: SubOne
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Org::BouncyCastle::Math::EC::Rfc7748::X448Field::Zero
// Il2CppName: Zero
// Cannot perform method pointer template specialization from operators!
