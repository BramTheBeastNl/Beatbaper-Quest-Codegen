// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Type namespace: Org.BouncyCastle.Math.EC.Rfc7748
namespace Org::BouncyCastle::Math::EC::Rfc7748 {
  // Autogenerated type: Org.BouncyCastle.Math.EC.Rfc7748.X448Field
  class X448Field : public ::Il2CppObject {
    public:
    // static public System.Void Add(System.UInt32[] x, System.UInt32[] y, System.UInt32[] z)
    // Offset: 0x18F9E80
    static void Add(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* z);
    // static public System.Void Carry(System.UInt32[] z)
    // Offset: 0x18F9F00
    static void Carry(::Array<uint>* z);
    // static public System.Void CMov(System.Int32 cond, System.UInt32[] x, System.Int32 xOff, System.UInt32[] z, System.Int32 zOff)
    // Offset: 0x18FA08C
    static void CMov(int cond, ::Array<uint>* x, int xOff, ::Array<uint>* z, int zOff);
    // static public System.Void CNegate(System.Int32 negate, System.UInt32[] z)
    // Offset: 0x18FA118
    static void CNegate(int negate, ::Array<uint>* z);
    // static public System.Void Copy(System.UInt32[] x, System.Int32 xOff, System.UInt32[] z, System.Int32 zOff)
    // Offset: 0x18FA548
    static void Copy(::Array<uint>* x, int xOff, ::Array<uint>* z, int zOff);
    // static public System.UInt32[] Create()
    // Offset: 0x18FA168
    static ::Array<uint>* Create();
    // static public System.Void Encode(System.UInt32[] x, System.Byte[] z, System.Int32 zOff)
    // Offset: 0x18FA5C4
    static void Encode(::Array<uint>* x, ::Array<uint8_t>* z, int zOff);
    // static private System.Void Encode24(System.UInt32 n, System.Byte[] bs, System.Int32 off)
    // Offset: 0x18FA704
    static void Encode24(uint n, ::Array<uint8_t>* bs, int off);
    // static private System.Void Encode32(System.UInt32 n, System.Byte[] bs, System.Int32 off)
    // Offset: 0x18FA774
    static void Encode32(uint n, ::Array<uint8_t>* bs, int off);
    // static private System.Void Encode56(System.UInt32[] x, System.Int32 xOff, System.Byte[] bs, System.Int32 off)
    // Offset: 0x18FA688
    static void Encode56(::Array<uint>* x, int xOff, ::Array<uint8_t>* bs, int off);
    // static public System.Void Inv(System.UInt32[] x, System.UInt32[] z)
    // Offset: 0x18FA800
    static void Inv(::Array<uint>* x, ::Array<uint>* z);
    // static public System.Int32 IsZero(System.UInt32[] x)
    // Offset: 0x18FB408
    static int IsZero(::Array<uint>* x);
    // static public System.Void Mul(System.UInt32[] x, System.UInt32 y, System.UInt32[] z)
    // Offset: 0x18FB468
    static void Mul(::Array<uint>* x, uint y, ::Array<uint>* z);
    // static public System.Void Mul(System.UInt32[] x, System.UInt32[] y, System.UInt32[] z)
    // Offset: 0x18FAAA0
    static void Mul(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* z);
    // static public System.Void Normalize(System.UInt32[] z)
    // Offset: 0x18FB66C
    static void Normalize(::Array<uint>* z);
    // static public System.Void One(System.UInt32[] z)
    // Offset: 0x18FB750
    static void One(::Array<uint>* z);
    // static private System.Void PowPm3d4(System.UInt32[] x, System.UInt32[] z)
    // Offset: 0x18FA858
    static void PowPm3d4(::Array<uint>* x, ::Array<uint>* z);
    // static private System.Void Reduce(System.UInt32[] z, System.Int32 x)
    // Offset: 0x18FB698
    static void Reduce(::Array<uint>* z, int x);
    // static public System.Void Sqr(System.UInt32[] x, System.UInt32[] z)
    // Offset: 0x18FB7AC
    static void Sqr(::Array<uint>* x, ::Array<uint>* z);
    // static public System.Void Sqr(System.UInt32[] x, System.Int32 n, System.UInt32[] z)
    // Offset: 0x18FAA54
    static void Sqr(::Array<uint>* x, int n, ::Array<uint>* z);
    // static public System.Void Sub(System.UInt32[] x, System.UInt32[] y, System.UInt32[] z)
    // Offset: 0x18FA1B4
    static void Sub(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* z);
    // static public System.Void SubOne(System.UInt32[] z)
    // Offset: 0x18FBD68
    static void SubOne(::Array<uint>* z);
    // static public System.Void Zero(System.UInt32[] z)
    // Offset: 0x18FBDB8
    static void Zero(::Array<uint>* z);
  }; // Org.BouncyCastle.Math.EC.Rfc7748.X448Field
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Math::EC::Rfc7748::X448Field*, "Org.BouncyCastle.Math.EC.Rfc7748", "X448Field");
#pragma pack(pop)
