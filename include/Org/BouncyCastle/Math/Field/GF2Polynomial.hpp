// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.Field.IPolynomial
#include "Org/BouncyCastle/Math/Field/IPolynomial.hpp"
// Completed includes
// Type namespace: Org.BouncyCastle.Math.Field
namespace Org::BouncyCastle::Math::Field {
  // Autogenerated type: Org.BouncyCastle.Math.Field.GF2Polynomial
  class GF2Polynomial : public ::Il2CppObject, public Org::BouncyCastle::Math::Field::IPolynomial {
    public:
    // protected readonly System.Int32[] exponents
    // Offset: 0x10
    ::Array<int>* exponents;
    // Creating conversion operator: operator ::Array<int>*
    constexpr operator ::Array<int>*() const noexcept {
      return exponents;
    }
    // System.Void .ctor(System.Int32[] exponents)
    // Offset: 0x1902CE4
    static GF2Polynomial* New_ctor(::Array<int>* exponents);
    // public System.Int32 get_Degree()
    // Offset: 0x1903084
    // Implemented from: Org.BouncyCastle.Math.Field.IPolynomial
    // Base method: System.Int32 IPolynomial::get_Degree()
    int get_Degree();
    // public System.Int32[] GetExponentsPresent()
    // Offset: 0x19030C4
    // Implemented from: Org.BouncyCastle.Math.Field.IPolynomial
    // Base method: System.Int32[] IPolynomial::GetExponentsPresent()
    ::Array<int>* GetExponentsPresent();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x1903130
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1903218
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // Org.BouncyCastle.Math.Field.GF2Polynomial
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Math::Field::GF2Polynomial*, "Org.BouncyCastle.Math.Field", "GF2Polynomial");
#pragma pack(pop)
