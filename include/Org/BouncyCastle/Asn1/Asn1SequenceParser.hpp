// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Org.BouncyCastle.Asn1.IAsn1Convertible
#include "Org/BouncyCastle/Asn1/IAsn1Convertible.hpp"
// Completed includes
// Type namespace: Org.BouncyCastle.Asn1
namespace Org::BouncyCastle::Asn1 {
  // Forward declaring type: Asn1SequenceParser
  class Asn1SequenceParser;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Org::BouncyCastle::Asn1::Asn1SequenceParser);
DEFINE_IL2CPP_ARG_TYPE(::Org::BouncyCastle::Asn1::Asn1SequenceParser*, "Org.BouncyCastle.Asn1", "Asn1SequenceParser");
// Type namespace: Org.BouncyCastle.Asn1
namespace Org::BouncyCastle::Asn1 {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Org.BouncyCastle.Asn1.Asn1SequenceParser
  // [TokenAttribute] Offset: FFFFFFFF
  class Asn1SequenceParser/*, public ::Org::BouncyCastle::Asn1::IAsn1Convertible*/ {
    public:
    // Creating interface conversion operator: operator ::Org::BouncyCastle::Asn1::IAsn1Convertible
    operator ::Org::BouncyCastle::Asn1::IAsn1Convertible() noexcept {
      return *reinterpret_cast<::Org::BouncyCastle::Asn1::IAsn1Convertible*>(this);
    }
    // Creating interface conversion operator: i_IAsn1Convertible
    inline ::Org::BouncyCastle::Asn1::IAsn1Convertible* i_IAsn1Convertible() noexcept {
      return reinterpret_cast<::Org::BouncyCastle::Asn1::IAsn1Convertible*>(this);
    }
  }; // Org.BouncyCastle.Asn1.Asn1SequenceParser
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
