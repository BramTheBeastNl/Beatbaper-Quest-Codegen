// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.StackedController
#include "HMUI/StackedController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ViewController
  class ViewController;
}
// Completed forward declares
// Type namespace: HMUI
namespace HMUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: HMUI.StackedController/<>c
  // [CompilerGeneratedAttribute] Offset: DF7DD0
  class StackedController::$$c : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: $$c
    $$c() noexcept {}
    // Get static field: static public readonly HMUI.StackedController/<>c <>9
    static HMUI::StackedController::$$c* _get_$$9();
    // Set static field: static public readonly HMUI.StackedController/<>c <>9
    static void _set_$$9(HMUI::StackedController::$$c* value);
    // static private System.Void .cctor()
    // Offset: 0x12BD6E4
    static void _cctor();
    // System.Void <PushViewController>g__AnimationLayouter|3_0(System.Single t, HMUI.ViewController[] viewControllers)
    // Offset: 0x12BD750
    void $PushViewController$g__AnimationLayouter_3_0(float t, ::Array<HMUI::ViewController*>* viewControllers);
    // public System.Void .ctor()
    // Offset: 0x12BD748
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StackedController::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("HMUI::StackedController::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StackedController::$$c*, creationType>()));
    }
  }; // HMUI.StackedController/<>c
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(HMUI::StackedController::$$c*, "HMUI", "StackedController/<>c");
// Writing MetadataGetter for method: HMUI::StackedController::$$c::_cctor
// Il2CppName: .cctor
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: HMUI::StackedController::$$c::$PushViewController$g__AnimationLayouter_3_0
// Il2CppName: <PushViewController>g__AnimationLayouter|3_0
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: HMUI::StackedController::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
