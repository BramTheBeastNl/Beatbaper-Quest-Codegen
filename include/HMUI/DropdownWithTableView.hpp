// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ModalView
  class ModalView;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: HMUI
namespace HMUI {
  // Size: 0x44
  #pragma pack(push, 1)
  // Autogenerated type: HMUI.DropdownWithTableView
  // [RequireComponent] Offset: D01C78
  class DropdownWithTableView : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.UI.Button _button
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::UI::Button* button;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // private HMUI.TableView _tableView
    // Size: 0x8
    // Offset: 0x20
    HMUI::TableView* tableView;
    // Field size check
    static_assert(sizeof(HMUI::TableView*) == 0x8);
    // private HMUI.ModalView _modalView
    // Size: 0x8
    // Offset: 0x28
    HMUI::ModalView* modalView;
    // Field size check
    static_assert(sizeof(HMUI::ModalView*) == 0x8);
    // private System.Int32 _numberOfVisibleCells
    // Size: 0x4
    // Offset: 0x30
    int numberOfVisibleCells;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: numberOfVisibleCells and: didSelectCellWithIdxEvent
    char __padding3[0x4] = {};
    // [CompilerGeneratedAttribute] Offset: 0xD032D4
    // private System.Action`2<HMUI.DropdownWithTableView,System.Int32> didSelectCellWithIdxEvent
    // Size: 0x8
    // Offset: 0x38
    System::Action_2<HMUI::DropdownWithTableView*, int>* didSelectCellWithIdxEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<HMUI::DropdownWithTableView*, int>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD032E4
    // private System.Int32 <selectedIndex>k__BackingField
    // Size: 0x4
    // Offset: 0x40
    int selectedIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: DropdownWithTableView
    DropdownWithTableView(UnityEngine::UI::Button* button_ = {}, HMUI::TableView* tableView_ = {}, HMUI::ModalView* modalView_ = {}, int numberOfVisibleCells_ = {}, System::Action_2<HMUI::DropdownWithTableView*, int>* didSelectCellWithIdxEvent_ = {}, int selectedIndex_ = {}) noexcept : button{button_}, tableView{tableView_}, modalView{modalView_}, numberOfVisibleCells{numberOfVisibleCells_}, didSelectCellWithIdxEvent{didSelectCellWithIdxEvent_}, selectedIndex{selectedIndex_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_didSelectCellWithIdxEvent(System.Action`2<HMUI.DropdownWithTableView,System.Int32> value)
    // Offset: 0x1225AB0
    void add_didSelectCellWithIdxEvent(System::Action_2<HMUI::DropdownWithTableView*, int>* value);
    // public System.Void remove_didSelectCellWithIdxEvent(System.Action`2<HMUI.DropdownWithTableView,System.Int32> value)
    // Offset: 0x1225B54
    void remove_didSelectCellWithIdxEvent(System::Action_2<HMUI::DropdownWithTableView*, int>* value);
    // public HMUI.TableView/IDataSource get_tableViewDataSource()
    // Offset: 0x1225BF8
    HMUI::TableView::IDataSource* get_tableViewDataSource();
    // public System.Int32 get_selectedIndex()
    // Offset: 0x1225C14
    int get_selectedIndex();
    // private System.Void set_selectedIndex(System.Int32 value)
    // Offset: 0x1225C1C
    void set_selectedIndex(int value);
    // public System.Void Init(HMUI.TableView/IDataSource tableViewDataSource)
    // Offset: 0x1225C24
    void Init(HMUI::TableView::IDataSource* tableViewDataSource);
    // public System.Void ReloadData()
    // Offset: 0x1225C44
    void ReloadData();
    // public System.Void SelectCellWithIdx(System.Int32 idx)
    // Offset: 0x1225E40
    void SelectCellWithIdx(int idx);
    // protected System.Void Awake()
    // Offset: 0x1225E68
    void Awake();
    // protected System.Void OnDisable()
    // Offset: 0x1225FAC
    void OnDisable();
    // protected System.Void OnDestroy()
    // Offset: 0x1225FFC
    void OnDestroy();
    // private System.Void RefreshSize(HMUI.TableView/IDataSource dataSource)
    // Offset: 0x1225C88
    void RefreshSize(HMUI::TableView::IDataSource* dataSource);
    // private System.Void OnButtonClick()
    // Offset: 0x12261C8
    void OnButtonClick();
    // private System.Void HandleTableViewDidSelectCellWithIdx(HMUI.TableView tableView, System.Int32 idx)
    // Offset: 0x1226254
    void HandleTableViewDidSelectCellWithIdx(HMUI::TableView* tableView, int idx);
    // private System.Void Hide(System.Boolean animated)
    // Offset: 0x1225FB4
    void Hide(bool animated);
    // private System.Void Show(System.Boolean animated)
    // Offset: 0x12261D0
    void Show(bool animated);
    // private System.Void HandleModalViewBlockerClicked()
    // Offset: 0x12262CC
    void HandleModalViewBlockerClicked();
    // public System.Void .ctor()
    // Offset: 0x12262D4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DropdownWithTableView* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("HMUI::DropdownWithTableView::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DropdownWithTableView*, creationType>()));
    }
  }; // HMUI.DropdownWithTableView
  #pragma pack(pop)
  static check_size<sizeof(DropdownWithTableView), 64 + sizeof(int)> __HMUI_DropdownWithTableViewSizeCheck;
  static_assert(sizeof(DropdownWithTableView) == 0x44);
}
DEFINE_IL2CPP_ARG_TYPE(HMUI::DropdownWithTableView*, "HMUI", "DropdownWithTableView");
