// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: TableViewSelectionType
  struct TableViewSelectionType;
}
// Completed forward declares
// Type namespace: HMUI
namespace HMUI {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: HMUI.ITableCellOwner
  class ITableCellOwner {
    public:
    // Creating value type constructor for type: ITableCellOwner
    ITableCellOwner() noexcept {}
    // public HMUI.TableViewSelectionType get_selectionType()
    // Offset: 0xFFFFFFFF
    HMUI::TableViewSelectionType get_selectionType();
    // public System.Boolean get_canSelectSelectedCell()
    // Offset: 0xFFFFFFFF
    bool get_canSelectSelectedCell();
    // public System.Int32 get_numberOfCells()
    // Offset: 0xFFFFFFFF
    int get_numberOfCells();
  }; // HMUI.ITableCellOwner
  #pragma pack(pop)
  // Writing MetadataGetter for method: ITableCellOwner::get_selectionType
  // Il2CppName: get_selectionType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::TableViewSelectionType (ITableCellOwner::*)()>(&ITableCellOwner::get_selectionType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ITableCellOwner*), "get_selectionType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ITableCellOwner::get_canSelectSelectedCell
  // Il2CppName: get_canSelectSelectedCell
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ITableCellOwner::*)()>(&ITableCellOwner::get_canSelectSelectedCell)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ITableCellOwner*), "get_canSelectSelectedCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ITableCellOwner::get_numberOfCells
  // Il2CppName: get_numberOfCells
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ITableCellOwner::*)()>(&ITableCellOwner::get_numberOfCells)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ITableCellOwner*), "get_numberOfCells", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HMUI::ITableCellOwner*, "HMUI", "ITableCellOwner");
