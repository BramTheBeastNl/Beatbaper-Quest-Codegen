// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Xml.SmallXmlParser
#include "Mono/Xml/SmallXmlParser.hpp"
// Including type: Mono.Xml.SmallXmlParser/IContentHandler
#include "Mono/Xml/SmallXmlParser_IContentHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security
namespace System::Security {
  // Forward declaring type: SecurityElement
  class SecurityElement;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Stack
  class Stack;
}
// Completed forward declares
// Type namespace: Mono.Xml
namespace Mono::Xml {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Xml.SecurityParser
  class SecurityParser : public Mono::Xml::SmallXmlParser/*, public Mono::Xml::SmallXmlParser::IContentHandler*/ {
    public:
    // Writing base type padding for base size: 0x61 to desired offset: 0x68
    char ___base_padding[0x7] = {};
    // private System.Security.SecurityElement root
    // Size: 0x8
    // Offset: 0x68
    System::Security::SecurityElement* root;
    // Field size check
    static_assert(sizeof(System::Security::SecurityElement*) == 0x8);
    // private System.Security.SecurityElement current
    // Size: 0x8
    // Offset: 0x70
    System::Security::SecurityElement* current;
    // Field size check
    static_assert(sizeof(System::Security::SecurityElement*) == 0x8);
    // private System.Collections.Stack stack
    // Size: 0x8
    // Offset: 0x78
    System::Collections::Stack* stack;
    // Field size check
    static_assert(sizeof(System::Collections::Stack*) == 0x8);
    // Creating value type constructor for type: SecurityParser
    SecurityParser(System::Security::SecurityElement* root_ = {}, System::Security::SecurityElement* current_ = {}, System::Collections::Stack* stack_ = {}) noexcept : root{root_}, current{current_}, stack{stack_} {}
    // Creating interface conversion operator: operator Mono::Xml::SmallXmlParser::IContentHandler
    operator Mono::Xml::SmallXmlParser::IContentHandler() noexcept {
      return *reinterpret_cast<Mono::Xml::SmallXmlParser::IContentHandler*>(this);
    }
    // public System.Void LoadXml(System.String xml)
    // Offset: 0x18DD0E8
    void LoadXml(::Il2CppString* xml);
    // public System.Security.SecurityElement ToXml()
    // Offset: 0x18EDBD4
    System::Security::SecurityElement* ToXml();
    // public System.Void OnStartParsing(Mono.Xml.SmallXmlParser parser)
    // Offset: 0x18EDBDC
    void OnStartParsing(Mono::Xml::SmallXmlParser* parser);
    // public System.Void OnProcessingInstruction(System.String name, System.String text)
    // Offset: 0x18EDBE0
    void OnProcessingInstruction(::Il2CppString* name, ::Il2CppString* text);
    // public System.Void OnIgnorableWhitespace(System.String s)
    // Offset: 0x18EDBE4
    void OnIgnorableWhitespace(::Il2CppString* s);
    // public System.Void OnStartElement(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x18EDBE8
    void OnStartElement(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // public System.Void OnEndElement(System.String name)
    // Offset: 0x18EDE8C
    void OnEndElement(::Il2CppString* name);
    // public System.Void OnChars(System.String ch)
    // Offset: 0x18EDF0C
    void OnChars(::Il2CppString* ch);
    // public System.Void OnEndParsing(Mono.Xml.SmallXmlParser parser)
    // Offset: 0x18EDF9C
    void OnEndParsing(Mono::Xml::SmallXmlParser* parser);
    // public System.Void .ctor()
    // Offset: 0x18DD080
    // Implemented from: Mono.Xml.SmallXmlParser
    // Base method: System.Void SmallXmlParser::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SecurityParser* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Mono::Xml::SecurityParser::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SecurityParser*, creationType>()));
    }
  }; // Mono.Xml.SecurityParser
  #pragma pack(pop)
  static check_size<sizeof(SecurityParser), 120 + sizeof(System::Collections::Stack*)> __Mono_Xml_SecurityParserSizeCheck;
  static_assert(sizeof(SecurityParser) == 0x80);
}
DEFINE_IL2CPP_ARG_TYPE(Mono::Xml::SecurityParser*, "Mono.Xml", "SecurityParser");
