// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.PKCS8
#include "Mono/Security/Cryptography/PKCS8.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: RSA
  class RSA;
  // Forward declaring type: DSA
  class DSA;
  // Forward declaring type: DSAParameters
  struct DSAParameters;
  // Forward declaring type: AsymmetricAlgorithm
  class AsymmetricAlgorithm;
}
// Completed forward declares
// Type namespace: Mono.Security.Cryptography
namespace Mono::Security::Cryptography {
  // Autogenerated type: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo
  class PKCS8::PrivateKeyInfo : public ::Il2CppObject {
    public:
    // private System.Int32 _version
    // Offset: 0x10
    int version;
    // private System.String _algorithm
    // Offset: 0x18
    ::Il2CppString* algorithm;
    // private System.Byte[] _key
    // Offset: 0x20
    ::Array<uint8_t>* key;
    // private System.Collections.ArrayList _list
    // Offset: 0x28
    System::Collections::ArrayList* list;
    // public System.Void .ctor(System.Byte[] data)
    // Offset: 0x1926230
    static PKCS8::PrivateKeyInfo* New_ctor(::Array<uint8_t>* data);
    // public System.Byte[] get_PrivateKey()
    // Offset: 0x19264A8
    ::Array<uint8_t>* get_PrivateKey();
    // private System.Void Decode(System.Byte[] data)
    // Offset: 0x192625C
    void Decode(::Array<uint8_t>* data);
    // static private System.Byte[] RemoveLeadingZero(System.Byte[] bigInt)
    // Offset: 0x1926524
    static ::Array<uint8_t>* RemoveLeadingZero(::Array<uint8_t>* bigInt);
    // static private System.Byte[] Normalize(System.Byte[] bigInt, System.Int32 length)
    // Offset: 0x19265D0
    static ::Array<uint8_t>* Normalize(::Array<uint8_t>* bigInt, int length);
    // static public System.Security.Cryptography.RSA DecodeRSA(System.Byte[] keypair)
    // Offset: 0x1926684
    static System::Security::Cryptography::RSA* DecodeRSA(::Array<uint8_t>* keypair);
    // static public System.Byte[] Encode(System.Security.Cryptography.RSA rsa)
    // Offset: 0x1926AA4
    static ::Array<uint8_t>* Encode(System::Security::Cryptography::RSA* rsa);
    // static public System.Security.Cryptography.DSA DecodeDSA(System.Byte[] privateKey, System.Security.Cryptography.DSAParameters dsaParameters)
    // Offset: 0x1926C80
    static System::Security::Cryptography::DSA* DecodeDSA(::Array<uint8_t>* privateKey, System::Security::Cryptography::DSAParameters dsaParameters);
    // static public System.Byte[] Encode(System.Security.Cryptography.DSA dsa)
    // Offset: 0x1926DA8
    static ::Array<uint8_t>* Encode(System::Security::Cryptography::DSA* dsa);
    // static public System.Byte[] Encode(System.Security.Cryptography.AsymmetricAlgorithm aa)
    // Offset: 0x1926DF4
    static ::Array<uint8_t>* Encode(System::Security::Cryptography::AsymmetricAlgorithm* aa);
    // public System.Void .ctor()
    // Offset: 0x19261B8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static PKCS8::PrivateKeyInfo* New_ctor();
  }; // Mono.Security.Cryptography.PKCS8/PrivateKeyInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Mono::Security::Cryptography::PKCS8::PrivateKeyInfo*, "Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo");
#pragma pack(pop)
