// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFObject
#include "Mono/Net/CFObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Mono.Net
namespace Mono::Net {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Net.CFDictionary
  // [DefaultMemberAttribute] Offset: D87448
  class CFDictionary : public Mono::Net::CFObject {
    public:
    // Creating value type constructor for type: CFDictionary
    CFDictionary() noexcept {}
    // Get static field: static private readonly System.IntPtr KeyCallbacks
    static System::IntPtr _get_KeyCallbacks();
    // Set static field: static private readonly System.IntPtr KeyCallbacks
    static void _set_KeyCallbacks(System::IntPtr value);
    // Get static field: static private readonly System.IntPtr ValueCallbacks
    static System::IntPtr _get_ValueCallbacks();
    // Set static field: static private readonly System.IntPtr ValueCallbacks
    static void _set_ValueCallbacks(System::IntPtr value);
    // static private System.Void .cctor()
    // Offset: 0x15E9838
    static void _cctor();
    // static private System.IntPtr CFDictionaryGetValue(System.IntPtr handle, System.IntPtr key)
    // Offset: 0x15E9978
    static System::IntPtr CFDictionaryGetValue(System::IntPtr handle, System::IntPtr key);
    // public System.IntPtr GetValue(System.IntPtr key)
    // Offset: 0x15E9A08
    System::IntPtr GetValue(System::IntPtr key);
    // public System.IntPtr get_Item(System.IntPtr key)
    // Offset: 0x15E9A80
    System::IntPtr get_Item(System::IntPtr key);
    // public System.Void .ctor(System.IntPtr handle, System.Boolean own)
    // Offset: 0x15E9928
    // Implemented from: Mono.Net.CFObject
    // Base method: System.Void CFObject::.ctor(System.IntPtr handle, System.Boolean own)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CFDictionary* New_ctor(System::IntPtr handle, bool own) {
      static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFDictionary::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CFDictionary*, creationType>(handle, own)));
    }
  }; // Mono.Net.CFDictionary
  #pragma pack(pop)
  // Writing MetadataGetter for method: CFDictionary::_cctor
  // Il2CppName: .cctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CFDictionary::_cctor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CFDictionary*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: CFDictionary::CFDictionaryGetValue
  // Il2CppName: CFDictionaryGetValue
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::IntPtr)>(&CFDictionary::CFDictionaryGetValue)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CFDictionary*), "CFDictionaryGetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
    }
  };
  // Writing MetadataGetter for method: CFDictionary::GetValue
  // Il2CppName: GetValue
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (CFDictionary::*)(System::IntPtr)>(&CFDictionary::GetValue)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CFDictionary*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
    }
  };
  // Writing MetadataGetter for method: CFDictionary::get_Item
  // Il2CppName: get_Item
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (CFDictionary::*)(System::IntPtr)>(&CFDictionary::get_Item)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CFDictionary*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
    }
  };
  // Writing MetadataGetter for method: CFDictionary::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CFDictionary::*)(System::IntPtr, bool)>(&CFDictionary::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CFDictionary*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CFDictionary::*)(System::IntPtr, bool)>(&CFDictionary::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CFDictionary*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(Mono::Net::CFDictionary*, "Mono.Net", "CFDictionary");
