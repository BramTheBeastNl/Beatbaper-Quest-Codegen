// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: ModestTree.Util
namespace ModestTree::Util {
  // Autogenerated type: ModestTree.Util.ValuePair`3
  template<typename T1, typename T2, typename T3>
  class ValuePair_3 : public ::Il2CppObject {
    public:
    // public readonly T1 First
    // Offset: 0x0
    T1 First;
    // public readonly T2 Second
    // Offset: 0x0
    T2 Second;
    // public readonly T3 Third
    // Offset: 0x0
    T3 Third;
    // public System.Void .ctor(T1 first, T2 second, T3 third)
    // Offset: 0xFFFFFFFF
    static ValuePair_3<T1, T2, T3>* New_ctor(T1 first, T2 second, T3 third) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree::Util").WithContext("ValuePair_3").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ValuePair_3<T1, T2, T3>*>(first, second, third)));
    }
    // public System.Boolean Equals(ModestTree.Util.ValuePair`3<T1,T2,T3> that)
    // Offset: 0xFFFFFFFF
    bool Equals(ModestTree::Util::ValuePair_3<T1, T2, T3>* that) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree::Util").WithContext("ValuePair_3").WithContext("Equals");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(that)));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, that);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static ValuePair_3<T1, T2, T3>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree::Util").WithContext("ValuePair_3").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ValuePair_3<T1, T2, T3>*>()));
    }
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree::Util").WithContext("ValuePair_3").WithContext("Equals");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(obj)));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
    }
    // public override System.Int32 GetHashCode()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("ModestTree::Util").WithContext("ValuePair_3").WithContext("GetHashCode");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetHashCode", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
    }
  }; // ModestTree.Util.ValuePair`3
  // Could not write size check! Type: ModestTree.Util.ValuePair`3 is generic!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(ModestTree::Util::ValuePair_3, "ModestTree.Util", "ValuePair`3");
#pragma pack(pop)
