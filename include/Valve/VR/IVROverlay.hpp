// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Valve::VR
namespace Valve::VR {
}
// Completed forward declares
// Type namespace: Valve.VR
namespace Valve::VR {
  // Size: 0x290
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Valve.VR.IVROverlay
  // [TokenAttribute] Offset: FFFFFFFF
  struct IVROverlay/*, public System::ValueType*/ {
    public:
    // Nested type: Valve::VR::IVROverlay::_FindOverlay
    class _FindOverlay;
    // Nested type: Valve::VR::IVROverlay::_CreateOverlay
    class _CreateOverlay;
    // Nested type: Valve::VR::IVROverlay::_DestroyOverlay
    class _DestroyOverlay;
    // Nested type: Valve::VR::IVROverlay::_SetHighQualityOverlay
    class _SetHighQualityOverlay;
    // Nested type: Valve::VR::IVROverlay::_GetHighQualityOverlay
    class _GetHighQualityOverlay;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayKey
    class _GetOverlayKey;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayName
    class _GetOverlayName;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayName
    class _SetOverlayName;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayImageData
    class _GetOverlayImageData;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayErrorNameFromEnum
    class _GetOverlayErrorNameFromEnum;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayRenderingPid
    class _SetOverlayRenderingPid;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayRenderingPid
    class _GetOverlayRenderingPid;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayFlag
    class _SetOverlayFlag;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayFlag
    class _GetOverlayFlag;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayColor
    class _SetOverlayColor;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayColor
    class _GetOverlayColor;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayAlpha
    class _SetOverlayAlpha;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayAlpha
    class _GetOverlayAlpha;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayTexelAspect
    class _SetOverlayTexelAspect;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTexelAspect
    class _GetOverlayTexelAspect;
    // Nested type: Valve::VR::IVROverlay::_SetOverlaySortOrder
    class _SetOverlaySortOrder;
    // Nested type: Valve::VR::IVROverlay::_GetOverlaySortOrder
    class _GetOverlaySortOrder;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayWidthInMeters
    class _SetOverlayWidthInMeters;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayWidthInMeters
    class _GetOverlayWidthInMeters;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters
    class _SetOverlayAutoCurveDistanceRangeInMeters;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters
    class _GetOverlayAutoCurveDistanceRangeInMeters;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayTextureColorSpace
    class _SetOverlayTextureColorSpace;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTextureColorSpace
    class _GetOverlayTextureColorSpace;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayTextureBounds
    class _SetOverlayTextureBounds;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTextureBounds
    class _GetOverlayTextureBounds;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayRenderModel
    class _GetOverlayRenderModel;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayRenderModel
    class _SetOverlayRenderModel;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTransformType
    class _GetOverlayTransformType;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayTransformAbsolute
    class _SetOverlayTransformAbsolute;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTransformAbsolute
    class _GetOverlayTransformAbsolute;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative
    class _SetOverlayTransformTrackedDeviceRelative;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative
    class _GetOverlayTransformTrackedDeviceRelative;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent
    class _SetOverlayTransformTrackedDeviceComponent;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent
    class _GetOverlayTransformTrackedDeviceComponent;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative
    class _GetOverlayTransformOverlayRelative;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative
    class _SetOverlayTransformOverlayRelative;
    // Nested type: Valve::VR::IVROverlay::_ShowOverlay
    class _ShowOverlay;
    // Nested type: Valve::VR::IVROverlay::_HideOverlay
    class _HideOverlay;
    // Nested type: Valve::VR::IVROverlay::_IsOverlayVisible
    class _IsOverlayVisible;
    // Nested type: Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates
    class _GetTransformForOverlayCoordinates;
    // Nested type: Valve::VR::IVROverlay::_PollNextOverlayEvent
    class _PollNextOverlayEvent;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayInputMethod
    class _GetOverlayInputMethod;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayInputMethod
    class _SetOverlayInputMethod;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayMouseScale
    class _GetOverlayMouseScale;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayMouseScale
    class _SetOverlayMouseScale;
    // Nested type: Valve::VR::IVROverlay::_ComputeOverlayIntersection
    class _ComputeOverlayIntersection;
    // Nested type: Valve::VR::IVROverlay::_IsHoverTargetOverlay
    class _IsHoverTargetOverlay;
    // Nested type: Valve::VR::IVROverlay::_GetGamepadFocusOverlay
    class _GetGamepadFocusOverlay;
    // Nested type: Valve::VR::IVROverlay::_SetGamepadFocusOverlay
    class _SetGamepadFocusOverlay;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayNeighbor
    class _SetOverlayNeighbor;
    // Nested type: Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor
    class _MoveGamepadFocusToNeighbor;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform
    class _SetOverlayDualAnalogTransform;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform
    class _GetOverlayDualAnalogTransform;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayTexture
    class _SetOverlayTexture;
    // Nested type: Valve::VR::IVROverlay::_ClearOverlayTexture
    class _ClearOverlayTexture;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayRaw
    class _SetOverlayRaw;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayFromFile
    class _SetOverlayFromFile;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTexture
    class _GetOverlayTexture;
    // Nested type: Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle
    class _ReleaseNativeOverlayHandle;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayTextureSize
    class _GetOverlayTextureSize;
    // Nested type: Valve::VR::IVROverlay::_CreateDashboardOverlay
    class _CreateDashboardOverlay;
    // Nested type: Valve::VR::IVROverlay::_IsDashboardVisible
    class _IsDashboardVisible;
    // Nested type: Valve::VR::IVROverlay::_IsActiveDashboardOverlay
    class _IsActiveDashboardOverlay;
    // Nested type: Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess
    class _SetDashboardOverlaySceneProcess;
    // Nested type: Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess
    class _GetDashboardOverlaySceneProcess;
    // Nested type: Valve::VR::IVROverlay::_ShowDashboard
    class _ShowDashboard;
    // Nested type: Valve::VR::IVROverlay::_GetPrimaryDashboardDevice
    class _GetPrimaryDashboardDevice;
    // Nested type: Valve::VR::IVROverlay::_ShowKeyboard
    class _ShowKeyboard;
    // Nested type: Valve::VR::IVROverlay::_ShowKeyboardForOverlay
    class _ShowKeyboardForOverlay;
    // Nested type: Valve::VR::IVROverlay::_GetKeyboardText
    class _GetKeyboardText;
    // Nested type: Valve::VR::IVROverlay::_HideKeyboard
    class _HideKeyboard;
    // Nested type: Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute
    class _SetKeyboardTransformAbsolute;
    // Nested type: Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay
    class _SetKeyboardPositionForOverlay;
    // Nested type: Valve::VR::IVROverlay::_SetOverlayIntersectionMask
    class _SetOverlayIntersectionMask;
    // Nested type: Valve::VR::IVROverlay::_GetOverlayFlags
    class _GetOverlayFlags;
    // Nested type: Valve::VR::IVROverlay::_ShowMessageOverlay
    class _ShowMessageOverlay;
    // Nested type: Valve::VR::IVROverlay::_CloseMessageOverlay
    class _CloseMessageOverlay;
    // Valve.VR.IVROverlay/Valve.VR._FindOverlay FindOverlay
    // Size: 0x8
    // Offset: 0x0
    Valve::VR::IVROverlay::_FindOverlay* FindOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_FindOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._CreateOverlay CreateOverlay
    // Size: 0x8
    // Offset: 0x8
    Valve::VR::IVROverlay::_CreateOverlay* CreateOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_CreateOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._DestroyOverlay DestroyOverlay
    // Size: 0x8
    // Offset: 0x10
    Valve::VR::IVROverlay::_DestroyOverlay* DestroyOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_DestroyOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetHighQualityOverlay SetHighQualityOverlay
    // Size: 0x8
    // Offset: 0x18
    Valve::VR::IVROverlay::_SetHighQualityOverlay* SetHighQualityOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetHighQualityOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetHighQualityOverlay GetHighQualityOverlay
    // Size: 0x8
    // Offset: 0x20
    Valve::VR::IVROverlay::_GetHighQualityOverlay* GetHighQualityOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetHighQualityOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayKey GetOverlayKey
    // Size: 0x8
    // Offset: 0x28
    Valve::VR::IVROverlay::_GetOverlayKey* GetOverlayKey;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayKey*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayName GetOverlayName
    // Size: 0x8
    // Offset: 0x30
    Valve::VR::IVROverlay::_GetOverlayName* GetOverlayName;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayName*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayName SetOverlayName
    // Size: 0x8
    // Offset: 0x38
    Valve::VR::IVROverlay::_SetOverlayName* SetOverlayName;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayName*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayImageData GetOverlayImageData
    // Size: 0x8
    // Offset: 0x40
    Valve::VR::IVROverlay::_GetOverlayImageData* GetOverlayImageData;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayImageData*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum
    // Size: 0x8
    // Offset: 0x48
    Valve::VR::IVROverlay::_GetOverlayErrorNameFromEnum* GetOverlayErrorNameFromEnum;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayErrorNameFromEnum*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayRenderingPid SetOverlayRenderingPid
    // Size: 0x8
    // Offset: 0x50
    Valve::VR::IVROverlay::_SetOverlayRenderingPid* SetOverlayRenderingPid;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayRenderingPid*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayRenderingPid GetOverlayRenderingPid
    // Size: 0x8
    // Offset: 0x58
    Valve::VR::IVROverlay::_GetOverlayRenderingPid* GetOverlayRenderingPid;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayRenderingPid*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayFlag SetOverlayFlag
    // Size: 0x8
    // Offset: 0x60
    Valve::VR::IVROverlay::_SetOverlayFlag* SetOverlayFlag;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayFlag*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayFlag GetOverlayFlag
    // Size: 0x8
    // Offset: 0x68
    Valve::VR::IVROverlay::_GetOverlayFlag* GetOverlayFlag;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayFlag*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayColor SetOverlayColor
    // Size: 0x8
    // Offset: 0x70
    Valve::VR::IVROverlay::_SetOverlayColor* SetOverlayColor;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayColor*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayColor GetOverlayColor
    // Size: 0x8
    // Offset: 0x78
    Valve::VR::IVROverlay::_GetOverlayColor* GetOverlayColor;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayColor*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayAlpha SetOverlayAlpha
    // Size: 0x8
    // Offset: 0x80
    Valve::VR::IVROverlay::_SetOverlayAlpha* SetOverlayAlpha;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayAlpha*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayAlpha GetOverlayAlpha
    // Size: 0x8
    // Offset: 0x88
    Valve::VR::IVROverlay::_GetOverlayAlpha* GetOverlayAlpha;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayAlpha*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayTexelAspect SetOverlayTexelAspect
    // Size: 0x8
    // Offset: 0x90
    Valve::VR::IVROverlay::_SetOverlayTexelAspect* SetOverlayTexelAspect;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayTexelAspect*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTexelAspect GetOverlayTexelAspect
    // Size: 0x8
    // Offset: 0x98
    Valve::VR::IVROverlay::_GetOverlayTexelAspect* GetOverlayTexelAspect;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTexelAspect*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlaySortOrder SetOverlaySortOrder
    // Size: 0x8
    // Offset: 0xA0
    Valve::VR::IVROverlay::_SetOverlaySortOrder* SetOverlaySortOrder;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlaySortOrder*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlaySortOrder GetOverlaySortOrder
    // Size: 0x8
    // Offset: 0xA8
    Valve::VR::IVROverlay::_GetOverlaySortOrder* GetOverlaySortOrder;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlaySortOrder*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayWidthInMeters SetOverlayWidthInMeters
    // Size: 0x8
    // Offset: 0xB0
    Valve::VR::IVROverlay::_SetOverlayWidthInMeters* SetOverlayWidthInMeters;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayWidthInMeters*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayWidthInMeters GetOverlayWidthInMeters
    // Size: 0x8
    // Offset: 0xB8
    Valve::VR::IVROverlay::_GetOverlayWidthInMeters* GetOverlayWidthInMeters;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayWidthInMeters*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters
    // Size: 0x8
    // Offset: 0xC0
    Valve::VR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters* SetOverlayAutoCurveDistanceRangeInMeters;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters
    // Size: 0x8
    // Offset: 0xC8
    Valve::VR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters* GetOverlayAutoCurveDistanceRangeInMeters;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayTextureColorSpace SetOverlayTextureColorSpace
    // Size: 0x8
    // Offset: 0xD0
    Valve::VR::IVROverlay::_SetOverlayTextureColorSpace* SetOverlayTextureColorSpace;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayTextureColorSpace*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureColorSpace GetOverlayTextureColorSpace
    // Size: 0x8
    // Offset: 0xD8
    Valve::VR::IVROverlay::_GetOverlayTextureColorSpace* GetOverlayTextureColorSpace;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTextureColorSpace*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayTextureBounds SetOverlayTextureBounds
    // Size: 0x8
    // Offset: 0xE0
    Valve::VR::IVROverlay::_SetOverlayTextureBounds* SetOverlayTextureBounds;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayTextureBounds*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureBounds GetOverlayTextureBounds
    // Size: 0x8
    // Offset: 0xE8
    Valve::VR::IVROverlay::_GetOverlayTextureBounds* GetOverlayTextureBounds;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTextureBounds*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayRenderModel GetOverlayRenderModel
    // Size: 0x8
    // Offset: 0xF0
    Valve::VR::IVROverlay::_GetOverlayRenderModel* GetOverlayRenderModel;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayRenderModel*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayRenderModel SetOverlayRenderModel
    // Size: 0x8
    // Offset: 0xF8
    Valve::VR::IVROverlay::_SetOverlayRenderModel* SetOverlayRenderModel;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayRenderModel*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformType GetOverlayTransformType
    // Size: 0x8
    // Offset: 0x100
    Valve::VR::IVROverlay::_GetOverlayTransformType* GetOverlayTransformType;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTransformType*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformAbsolute SetOverlayTransformAbsolute
    // Size: 0x8
    // Offset: 0x108
    Valve::VR::IVROverlay::_SetOverlayTransformAbsolute* SetOverlayTransformAbsolute;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayTransformAbsolute*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformAbsolute GetOverlayTransformAbsolute
    // Size: 0x8
    // Offset: 0x110
    Valve::VR::IVROverlay::_GetOverlayTransformAbsolute* GetOverlayTransformAbsolute;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTransformAbsolute*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative
    // Size: 0x8
    // Offset: 0x118
    Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative* SetOverlayTransformTrackedDeviceRelative;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative
    // Size: 0x8
    // Offset: 0x120
    Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative* GetOverlayTransformTrackedDeviceRelative;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent
    // Size: 0x8
    // Offset: 0x128
    Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent* SetOverlayTransformTrackedDeviceComponent;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent
    // Size: 0x8
    // Offset: 0x130
    Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent* GetOverlayTransformTrackedDeviceComponent;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative
    // Size: 0x8
    // Offset: 0x138
    Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative* GetOverlayTransformOverlayRelative;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative
    // Size: 0x8
    // Offset: 0x140
    Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative* SetOverlayTransformOverlayRelative;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._ShowOverlay ShowOverlay
    // Size: 0x8
    // Offset: 0x148
    Valve::VR::IVROverlay::_ShowOverlay* ShowOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_ShowOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._HideOverlay HideOverlay
    // Size: 0x8
    // Offset: 0x150
    Valve::VR::IVROverlay::_HideOverlay* HideOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_HideOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._IsOverlayVisible IsOverlayVisible
    // Size: 0x8
    // Offset: 0x158
    Valve::VR::IVROverlay::_IsOverlayVisible* IsOverlayVisible;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_IsOverlayVisible*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates
    // Size: 0x8
    // Offset: 0x160
    Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates* GetTransformForOverlayCoordinates;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._PollNextOverlayEvent PollNextOverlayEvent
    // Size: 0x8
    // Offset: 0x168
    Valve::VR::IVROverlay::_PollNextOverlayEvent* PollNextOverlayEvent;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_PollNextOverlayEvent*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayInputMethod GetOverlayInputMethod
    // Size: 0x8
    // Offset: 0x170
    Valve::VR::IVROverlay::_GetOverlayInputMethod* GetOverlayInputMethod;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayInputMethod*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayInputMethod SetOverlayInputMethod
    // Size: 0x8
    // Offset: 0x178
    Valve::VR::IVROverlay::_SetOverlayInputMethod* SetOverlayInputMethod;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayInputMethod*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayMouseScale GetOverlayMouseScale
    // Size: 0x8
    // Offset: 0x180
    Valve::VR::IVROverlay::_GetOverlayMouseScale* GetOverlayMouseScale;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayMouseScale*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayMouseScale SetOverlayMouseScale
    // Size: 0x8
    // Offset: 0x188
    Valve::VR::IVROverlay::_SetOverlayMouseScale* SetOverlayMouseScale;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayMouseScale*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._ComputeOverlayIntersection ComputeOverlayIntersection
    // Size: 0x8
    // Offset: 0x190
    Valve::VR::IVROverlay::_ComputeOverlayIntersection* ComputeOverlayIntersection;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_ComputeOverlayIntersection*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._IsHoverTargetOverlay IsHoverTargetOverlay
    // Size: 0x8
    // Offset: 0x198
    Valve::VR::IVROverlay::_IsHoverTargetOverlay* IsHoverTargetOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_IsHoverTargetOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetGamepadFocusOverlay GetGamepadFocusOverlay
    // Size: 0x8
    // Offset: 0x1A0
    Valve::VR::IVROverlay::_GetGamepadFocusOverlay* GetGamepadFocusOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetGamepadFocusOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetGamepadFocusOverlay SetGamepadFocusOverlay
    // Size: 0x8
    // Offset: 0x1A8
    Valve::VR::IVROverlay::_SetGamepadFocusOverlay* SetGamepadFocusOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetGamepadFocusOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayNeighbor SetOverlayNeighbor
    // Size: 0x8
    // Offset: 0x1B0
    Valve::VR::IVROverlay::_SetOverlayNeighbor* SetOverlayNeighbor;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayNeighbor*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor
    // Size: 0x8
    // Offset: 0x1B8
    Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor* MoveGamepadFocusToNeighbor;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform
    // Size: 0x8
    // Offset: 0x1C0
    Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform* SetOverlayDualAnalogTransform;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform
    // Size: 0x8
    // Offset: 0x1C8
    Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform* GetOverlayDualAnalogTransform;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayTexture SetOverlayTexture
    // Size: 0x8
    // Offset: 0x1D0
    Valve::VR::IVROverlay::_SetOverlayTexture* SetOverlayTexture;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayTexture*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._ClearOverlayTexture ClearOverlayTexture
    // Size: 0x8
    // Offset: 0x1D8
    Valve::VR::IVROverlay::_ClearOverlayTexture* ClearOverlayTexture;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_ClearOverlayTexture*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayRaw SetOverlayRaw
    // Size: 0x8
    // Offset: 0x1E0
    Valve::VR::IVROverlay::_SetOverlayRaw* SetOverlayRaw;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayRaw*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayFromFile SetOverlayFromFile
    // Size: 0x8
    // Offset: 0x1E8
    Valve::VR::IVROverlay::_SetOverlayFromFile* SetOverlayFromFile;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayFromFile*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTexture GetOverlayTexture
    // Size: 0x8
    // Offset: 0x1F0
    Valve::VR::IVROverlay::_GetOverlayTexture* GetOverlayTexture;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTexture*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle
    // Size: 0x8
    // Offset: 0x1F8
    Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle* ReleaseNativeOverlayHandle;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureSize GetOverlayTextureSize
    // Size: 0x8
    // Offset: 0x200
    Valve::VR::IVROverlay::_GetOverlayTextureSize* GetOverlayTextureSize;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayTextureSize*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._CreateDashboardOverlay CreateDashboardOverlay
    // Size: 0x8
    // Offset: 0x208
    Valve::VR::IVROverlay::_CreateDashboardOverlay* CreateDashboardOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_CreateDashboardOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._IsDashboardVisible IsDashboardVisible
    // Size: 0x8
    // Offset: 0x210
    Valve::VR::IVROverlay::_IsDashboardVisible* IsDashboardVisible;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_IsDashboardVisible*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._IsActiveDashboardOverlay IsActiveDashboardOverlay
    // Size: 0x8
    // Offset: 0x218
    Valve::VR::IVROverlay::_IsActiveDashboardOverlay* IsActiveDashboardOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_IsActiveDashboardOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess
    // Size: 0x8
    // Offset: 0x220
    Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess* SetDashboardOverlaySceneProcess;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess
    // Size: 0x8
    // Offset: 0x228
    Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess* GetDashboardOverlaySceneProcess;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._ShowDashboard ShowDashboard
    // Size: 0x8
    // Offset: 0x230
    Valve::VR::IVROverlay::_ShowDashboard* ShowDashboard;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_ShowDashboard*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetPrimaryDashboardDevice GetPrimaryDashboardDevice
    // Size: 0x8
    // Offset: 0x238
    Valve::VR::IVROverlay::_GetPrimaryDashboardDevice* GetPrimaryDashboardDevice;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetPrimaryDashboardDevice*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._ShowKeyboard ShowKeyboard
    // Size: 0x8
    // Offset: 0x240
    Valve::VR::IVROverlay::_ShowKeyboard* ShowKeyboard;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_ShowKeyboard*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._ShowKeyboardForOverlay ShowKeyboardForOverlay
    // Size: 0x8
    // Offset: 0x248
    Valve::VR::IVROverlay::_ShowKeyboardForOverlay* ShowKeyboardForOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_ShowKeyboardForOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetKeyboardText GetKeyboardText
    // Size: 0x8
    // Offset: 0x250
    Valve::VR::IVROverlay::_GetKeyboardText* GetKeyboardText;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetKeyboardText*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._HideKeyboard HideKeyboard
    // Size: 0x8
    // Offset: 0x258
    Valve::VR::IVROverlay::_HideKeyboard* HideKeyboard;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_HideKeyboard*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute
    // Size: 0x8
    // Offset: 0x260
    Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute* SetKeyboardTransformAbsolute;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay
    // Size: 0x8
    // Offset: 0x268
    Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay* SetKeyboardPositionForOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._SetOverlayIntersectionMask SetOverlayIntersectionMask
    // Size: 0x8
    // Offset: 0x270
    Valve::VR::IVROverlay::_SetOverlayIntersectionMask* SetOverlayIntersectionMask;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_SetOverlayIntersectionMask*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._GetOverlayFlags GetOverlayFlags
    // Size: 0x8
    // Offset: 0x278
    Valve::VR::IVROverlay::_GetOverlayFlags* GetOverlayFlags;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_GetOverlayFlags*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._ShowMessageOverlay ShowMessageOverlay
    // Size: 0x8
    // Offset: 0x280
    Valve::VR::IVROverlay::_ShowMessageOverlay* ShowMessageOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_ShowMessageOverlay*) == 0x8);
    // Valve.VR.IVROverlay/Valve.VR._CloseMessageOverlay CloseMessageOverlay
    // Size: 0x8
    // Offset: 0x288
    Valve::VR::IVROverlay::_CloseMessageOverlay* CloseMessageOverlay;
    // Field size check
    static_assert(sizeof(Valve::VR::IVROverlay::_CloseMessageOverlay*) == 0x8);
    // Creating value type constructor for type: IVROverlay
    constexpr IVROverlay(Valve::VR::IVROverlay::_FindOverlay* FindOverlay_ = {}, Valve::VR::IVROverlay::_CreateOverlay* CreateOverlay_ = {}, Valve::VR::IVROverlay::_DestroyOverlay* DestroyOverlay_ = {}, Valve::VR::IVROverlay::_SetHighQualityOverlay* SetHighQualityOverlay_ = {}, Valve::VR::IVROverlay::_GetHighQualityOverlay* GetHighQualityOverlay_ = {}, Valve::VR::IVROverlay::_GetOverlayKey* GetOverlayKey_ = {}, Valve::VR::IVROverlay::_GetOverlayName* GetOverlayName_ = {}, Valve::VR::IVROverlay::_SetOverlayName* SetOverlayName_ = {}, Valve::VR::IVROverlay::_GetOverlayImageData* GetOverlayImageData_ = {}, Valve::VR::IVROverlay::_GetOverlayErrorNameFromEnum* GetOverlayErrorNameFromEnum_ = {}, Valve::VR::IVROverlay::_SetOverlayRenderingPid* SetOverlayRenderingPid_ = {}, Valve::VR::IVROverlay::_GetOverlayRenderingPid* GetOverlayRenderingPid_ = {}, Valve::VR::IVROverlay::_SetOverlayFlag* SetOverlayFlag_ = {}, Valve::VR::IVROverlay::_GetOverlayFlag* GetOverlayFlag_ = {}, Valve::VR::IVROverlay::_SetOverlayColor* SetOverlayColor_ = {}, Valve::VR::IVROverlay::_GetOverlayColor* GetOverlayColor_ = {}, Valve::VR::IVROverlay::_SetOverlayAlpha* SetOverlayAlpha_ = {}, Valve::VR::IVROverlay::_GetOverlayAlpha* GetOverlayAlpha_ = {}, Valve::VR::IVROverlay::_SetOverlayTexelAspect* SetOverlayTexelAspect_ = {}, Valve::VR::IVROverlay::_GetOverlayTexelAspect* GetOverlayTexelAspect_ = {}, Valve::VR::IVROverlay::_SetOverlaySortOrder* SetOverlaySortOrder_ = {}, Valve::VR::IVROverlay::_GetOverlaySortOrder* GetOverlaySortOrder_ = {}, Valve::VR::IVROverlay::_SetOverlayWidthInMeters* SetOverlayWidthInMeters_ = {}, Valve::VR::IVROverlay::_GetOverlayWidthInMeters* GetOverlayWidthInMeters_ = {}, Valve::VR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters* SetOverlayAutoCurveDistanceRangeInMeters_ = {}, Valve::VR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters* GetOverlayAutoCurveDistanceRangeInMeters_ = {}, Valve::VR::IVROverlay::_SetOverlayTextureColorSpace* SetOverlayTextureColorSpace_ = {}, Valve::VR::IVROverlay::_GetOverlayTextureColorSpace* GetOverlayTextureColorSpace_ = {}, Valve::VR::IVROverlay::_SetOverlayTextureBounds* SetOverlayTextureBounds_ = {}, Valve::VR::IVROverlay::_GetOverlayTextureBounds* GetOverlayTextureBounds_ = {}, Valve::VR::IVROverlay::_GetOverlayRenderModel* GetOverlayRenderModel_ = {}, Valve::VR::IVROverlay::_SetOverlayRenderModel* SetOverlayRenderModel_ = {}, Valve::VR::IVROverlay::_GetOverlayTransformType* GetOverlayTransformType_ = {}, Valve::VR::IVROverlay::_SetOverlayTransformAbsolute* SetOverlayTransformAbsolute_ = {}, Valve::VR::IVROverlay::_GetOverlayTransformAbsolute* GetOverlayTransformAbsolute_ = {}, Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative* SetOverlayTransformTrackedDeviceRelative_ = {}, Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative* GetOverlayTransformTrackedDeviceRelative_ = {}, Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent* SetOverlayTransformTrackedDeviceComponent_ = {}, Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent* GetOverlayTransformTrackedDeviceComponent_ = {}, Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative* GetOverlayTransformOverlayRelative_ = {}, Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative* SetOverlayTransformOverlayRelative_ = {}, Valve::VR::IVROverlay::_ShowOverlay* ShowOverlay_ = {}, Valve::VR::IVROverlay::_HideOverlay* HideOverlay_ = {}, Valve::VR::IVROverlay::_IsOverlayVisible* IsOverlayVisible_ = {}, Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates* GetTransformForOverlayCoordinates_ = {}, Valve::VR::IVROverlay::_PollNextOverlayEvent* PollNextOverlayEvent_ = {}, Valve::VR::IVROverlay::_GetOverlayInputMethod* GetOverlayInputMethod_ = {}, Valve::VR::IVROverlay::_SetOverlayInputMethod* SetOverlayInputMethod_ = {}, Valve::VR::IVROverlay::_GetOverlayMouseScale* GetOverlayMouseScale_ = {}, Valve::VR::IVROverlay::_SetOverlayMouseScale* SetOverlayMouseScale_ = {}, Valve::VR::IVROverlay::_ComputeOverlayIntersection* ComputeOverlayIntersection_ = {}, Valve::VR::IVROverlay::_IsHoverTargetOverlay* IsHoverTargetOverlay_ = {}, Valve::VR::IVROverlay::_GetGamepadFocusOverlay* GetGamepadFocusOverlay_ = {}, Valve::VR::IVROverlay::_SetGamepadFocusOverlay* SetGamepadFocusOverlay_ = {}, Valve::VR::IVROverlay::_SetOverlayNeighbor* SetOverlayNeighbor_ = {}, Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor* MoveGamepadFocusToNeighbor_ = {}, Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform* SetOverlayDualAnalogTransform_ = {}, Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform* GetOverlayDualAnalogTransform_ = {}, Valve::VR::IVROverlay::_SetOverlayTexture* SetOverlayTexture_ = {}, Valve::VR::IVROverlay::_ClearOverlayTexture* ClearOverlayTexture_ = {}, Valve::VR::IVROverlay::_SetOverlayRaw* SetOverlayRaw_ = {}, Valve::VR::IVROverlay::_SetOverlayFromFile* SetOverlayFromFile_ = {}, Valve::VR::IVROverlay::_GetOverlayTexture* GetOverlayTexture_ = {}, Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle* ReleaseNativeOverlayHandle_ = {}, Valve::VR::IVROverlay::_GetOverlayTextureSize* GetOverlayTextureSize_ = {}, Valve::VR::IVROverlay::_CreateDashboardOverlay* CreateDashboardOverlay_ = {}, Valve::VR::IVROverlay::_IsDashboardVisible* IsDashboardVisible_ = {}, Valve::VR::IVROverlay::_IsActiveDashboardOverlay* IsActiveDashboardOverlay_ = {}, Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess* SetDashboardOverlaySceneProcess_ = {}, Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess* GetDashboardOverlaySceneProcess_ = {}, Valve::VR::IVROverlay::_ShowDashboard* ShowDashboard_ = {}, Valve::VR::IVROverlay::_GetPrimaryDashboardDevice* GetPrimaryDashboardDevice_ = {}, Valve::VR::IVROverlay::_ShowKeyboard* ShowKeyboard_ = {}, Valve::VR::IVROverlay::_ShowKeyboardForOverlay* ShowKeyboardForOverlay_ = {}, Valve::VR::IVROverlay::_GetKeyboardText* GetKeyboardText_ = {}, Valve::VR::IVROverlay::_HideKeyboard* HideKeyboard_ = {}, Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute* SetKeyboardTransformAbsolute_ = {}, Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay* SetKeyboardPositionForOverlay_ = {}, Valve::VR::IVROverlay::_SetOverlayIntersectionMask* SetOverlayIntersectionMask_ = {}, Valve::VR::IVROverlay::_GetOverlayFlags* GetOverlayFlags_ = {}, Valve::VR::IVROverlay::_ShowMessageOverlay* ShowMessageOverlay_ = {}, Valve::VR::IVROverlay::_CloseMessageOverlay* CloseMessageOverlay_ = {}) noexcept : FindOverlay{FindOverlay_}, CreateOverlay{CreateOverlay_}, DestroyOverlay{DestroyOverlay_}, SetHighQualityOverlay{SetHighQualityOverlay_}, GetHighQualityOverlay{GetHighQualityOverlay_}, GetOverlayKey{GetOverlayKey_}, GetOverlayName{GetOverlayName_}, SetOverlayName{SetOverlayName_}, GetOverlayImageData{GetOverlayImageData_}, GetOverlayErrorNameFromEnum{GetOverlayErrorNameFromEnum_}, SetOverlayRenderingPid{SetOverlayRenderingPid_}, GetOverlayRenderingPid{GetOverlayRenderingPid_}, SetOverlayFlag{SetOverlayFlag_}, GetOverlayFlag{GetOverlayFlag_}, SetOverlayColor{SetOverlayColor_}, GetOverlayColor{GetOverlayColor_}, SetOverlayAlpha{SetOverlayAlpha_}, GetOverlayAlpha{GetOverlayAlpha_}, SetOverlayTexelAspect{SetOverlayTexelAspect_}, GetOverlayTexelAspect{GetOverlayTexelAspect_}, SetOverlaySortOrder{SetOverlaySortOrder_}, GetOverlaySortOrder{GetOverlaySortOrder_}, SetOverlayWidthInMeters{SetOverlayWidthInMeters_}, GetOverlayWidthInMeters{GetOverlayWidthInMeters_}, SetOverlayAutoCurveDistanceRangeInMeters{SetOverlayAutoCurveDistanceRangeInMeters_}, GetOverlayAutoCurveDistanceRangeInMeters{GetOverlayAutoCurveDistanceRangeInMeters_}, SetOverlayTextureColorSpace{SetOverlayTextureColorSpace_}, GetOverlayTextureColorSpace{GetOverlayTextureColorSpace_}, SetOverlayTextureBounds{SetOverlayTextureBounds_}, GetOverlayTextureBounds{GetOverlayTextureBounds_}, GetOverlayRenderModel{GetOverlayRenderModel_}, SetOverlayRenderModel{SetOverlayRenderModel_}, GetOverlayTransformType{GetOverlayTransformType_}, SetOverlayTransformAbsolute{SetOverlayTransformAbsolute_}, GetOverlayTransformAbsolute{GetOverlayTransformAbsolute_}, SetOverlayTransformTrackedDeviceRelative{SetOverlayTransformTrackedDeviceRelative_}, GetOverlayTransformTrackedDeviceRelative{GetOverlayTransformTrackedDeviceRelative_}, SetOverlayTransformTrackedDeviceComponent{SetOverlayTransformTrackedDeviceComponent_}, GetOverlayTransformTrackedDeviceComponent{GetOverlayTransformTrackedDeviceComponent_}, GetOverlayTransformOverlayRelative{GetOverlayTransformOverlayRelative_}, SetOverlayTransformOverlayRelative{SetOverlayTransformOverlayRelative_}, ShowOverlay{ShowOverlay_}, HideOverlay{HideOverlay_}, IsOverlayVisible{IsOverlayVisible_}, GetTransformForOverlayCoordinates{GetTransformForOverlayCoordinates_}, PollNextOverlayEvent{PollNextOverlayEvent_}, GetOverlayInputMethod{GetOverlayInputMethod_}, SetOverlayInputMethod{SetOverlayInputMethod_}, GetOverlayMouseScale{GetOverlayMouseScale_}, SetOverlayMouseScale{SetOverlayMouseScale_}, ComputeOverlayIntersection{ComputeOverlayIntersection_}, IsHoverTargetOverlay{IsHoverTargetOverlay_}, GetGamepadFocusOverlay{GetGamepadFocusOverlay_}, SetGamepadFocusOverlay{SetGamepadFocusOverlay_}, SetOverlayNeighbor{SetOverlayNeighbor_}, MoveGamepadFocusToNeighbor{MoveGamepadFocusToNeighbor_}, SetOverlayDualAnalogTransform{SetOverlayDualAnalogTransform_}, GetOverlayDualAnalogTransform{GetOverlayDualAnalogTransform_}, SetOverlayTexture{SetOverlayTexture_}, ClearOverlayTexture{ClearOverlayTexture_}, SetOverlayRaw{SetOverlayRaw_}, SetOverlayFromFile{SetOverlayFromFile_}, GetOverlayTexture{GetOverlayTexture_}, ReleaseNativeOverlayHandle{ReleaseNativeOverlayHandle_}, GetOverlayTextureSize{GetOverlayTextureSize_}, CreateDashboardOverlay{CreateDashboardOverlay_}, IsDashboardVisible{IsDashboardVisible_}, IsActiveDashboardOverlay{IsActiveDashboardOverlay_}, SetDashboardOverlaySceneProcess{SetDashboardOverlaySceneProcess_}, GetDashboardOverlaySceneProcess{GetDashboardOverlaySceneProcess_}, ShowDashboard{ShowDashboard_}, GetPrimaryDashboardDevice{GetPrimaryDashboardDevice_}, ShowKeyboard{ShowKeyboard_}, ShowKeyboardForOverlay{ShowKeyboardForOverlay_}, GetKeyboardText{GetKeyboardText_}, HideKeyboard{HideKeyboard_}, SetKeyboardTransformAbsolute{SetKeyboardTransformAbsolute_}, SetKeyboardPositionForOverlay{SetKeyboardPositionForOverlay_}, SetOverlayIntersectionMask{SetOverlayIntersectionMask_}, GetOverlayFlags{GetOverlayFlags_}, ShowMessageOverlay{ShowMessageOverlay_}, CloseMessageOverlay{CloseMessageOverlay_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._FindOverlay FindOverlay
    Valve::VR::IVROverlay::_FindOverlay* _get_FindOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._FindOverlay FindOverlay
    void _set_FindOverlay(Valve::VR::IVROverlay::_FindOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._CreateOverlay CreateOverlay
    Valve::VR::IVROverlay::_CreateOverlay* _get_CreateOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._CreateOverlay CreateOverlay
    void _set_CreateOverlay(Valve::VR::IVROverlay::_CreateOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._DestroyOverlay DestroyOverlay
    Valve::VR::IVROverlay::_DestroyOverlay* _get_DestroyOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._DestroyOverlay DestroyOverlay
    void _set_DestroyOverlay(Valve::VR::IVROverlay::_DestroyOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetHighQualityOverlay SetHighQualityOverlay
    Valve::VR::IVROverlay::_SetHighQualityOverlay* _get_SetHighQualityOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetHighQualityOverlay SetHighQualityOverlay
    void _set_SetHighQualityOverlay(Valve::VR::IVROverlay::_SetHighQualityOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetHighQualityOverlay GetHighQualityOverlay
    Valve::VR::IVROverlay::_GetHighQualityOverlay* _get_GetHighQualityOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetHighQualityOverlay GetHighQualityOverlay
    void _set_GetHighQualityOverlay(Valve::VR::IVROverlay::_GetHighQualityOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayKey GetOverlayKey
    Valve::VR::IVROverlay::_GetOverlayKey* _get_GetOverlayKey();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayKey GetOverlayKey
    void _set_GetOverlayKey(Valve::VR::IVROverlay::_GetOverlayKey* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayName GetOverlayName
    Valve::VR::IVROverlay::_GetOverlayName* _get_GetOverlayName();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayName GetOverlayName
    void _set_GetOverlayName(Valve::VR::IVROverlay::_GetOverlayName* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayName SetOverlayName
    Valve::VR::IVROverlay::_SetOverlayName* _get_SetOverlayName();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayName SetOverlayName
    void _set_SetOverlayName(Valve::VR::IVROverlay::_SetOverlayName* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayImageData GetOverlayImageData
    Valve::VR::IVROverlay::_GetOverlayImageData* _get_GetOverlayImageData();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayImageData GetOverlayImageData
    void _set_GetOverlayImageData(Valve::VR::IVROverlay::_GetOverlayImageData* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum
    Valve::VR::IVROverlay::_GetOverlayErrorNameFromEnum* _get_GetOverlayErrorNameFromEnum();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum
    void _set_GetOverlayErrorNameFromEnum(Valve::VR::IVROverlay::_GetOverlayErrorNameFromEnum* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayRenderingPid SetOverlayRenderingPid
    Valve::VR::IVROverlay::_SetOverlayRenderingPid* _get_SetOverlayRenderingPid();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayRenderingPid SetOverlayRenderingPid
    void _set_SetOverlayRenderingPid(Valve::VR::IVROverlay::_SetOverlayRenderingPid* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayRenderingPid GetOverlayRenderingPid
    Valve::VR::IVROverlay::_GetOverlayRenderingPid* _get_GetOverlayRenderingPid();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayRenderingPid GetOverlayRenderingPid
    void _set_GetOverlayRenderingPid(Valve::VR::IVROverlay::_GetOverlayRenderingPid* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayFlag SetOverlayFlag
    Valve::VR::IVROverlay::_SetOverlayFlag* _get_SetOverlayFlag();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayFlag SetOverlayFlag
    void _set_SetOverlayFlag(Valve::VR::IVROverlay::_SetOverlayFlag* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayFlag GetOverlayFlag
    Valve::VR::IVROverlay::_GetOverlayFlag* _get_GetOverlayFlag();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayFlag GetOverlayFlag
    void _set_GetOverlayFlag(Valve::VR::IVROverlay::_GetOverlayFlag* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayColor SetOverlayColor
    Valve::VR::IVROverlay::_SetOverlayColor* _get_SetOverlayColor();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayColor SetOverlayColor
    void _set_SetOverlayColor(Valve::VR::IVROverlay::_SetOverlayColor* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayColor GetOverlayColor
    Valve::VR::IVROverlay::_GetOverlayColor* _get_GetOverlayColor();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayColor GetOverlayColor
    void _set_GetOverlayColor(Valve::VR::IVROverlay::_GetOverlayColor* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayAlpha SetOverlayAlpha
    Valve::VR::IVROverlay::_SetOverlayAlpha* _get_SetOverlayAlpha();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayAlpha SetOverlayAlpha
    void _set_SetOverlayAlpha(Valve::VR::IVROverlay::_SetOverlayAlpha* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayAlpha GetOverlayAlpha
    Valve::VR::IVROverlay::_GetOverlayAlpha* _get_GetOverlayAlpha();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayAlpha GetOverlayAlpha
    void _set_GetOverlayAlpha(Valve::VR::IVROverlay::_GetOverlayAlpha* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTexelAspect SetOverlayTexelAspect
    Valve::VR::IVROverlay::_SetOverlayTexelAspect* _get_SetOverlayTexelAspect();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTexelAspect SetOverlayTexelAspect
    void _set_SetOverlayTexelAspect(Valve::VR::IVROverlay::_SetOverlayTexelAspect* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTexelAspect GetOverlayTexelAspect
    Valve::VR::IVROverlay::_GetOverlayTexelAspect* _get_GetOverlayTexelAspect();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTexelAspect GetOverlayTexelAspect
    void _set_GetOverlayTexelAspect(Valve::VR::IVROverlay::_GetOverlayTexelAspect* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlaySortOrder SetOverlaySortOrder
    Valve::VR::IVROverlay::_SetOverlaySortOrder* _get_SetOverlaySortOrder();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlaySortOrder SetOverlaySortOrder
    void _set_SetOverlaySortOrder(Valve::VR::IVROverlay::_SetOverlaySortOrder* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlaySortOrder GetOverlaySortOrder
    Valve::VR::IVROverlay::_GetOverlaySortOrder* _get_GetOverlaySortOrder();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlaySortOrder GetOverlaySortOrder
    void _set_GetOverlaySortOrder(Valve::VR::IVROverlay::_GetOverlaySortOrder* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayWidthInMeters SetOverlayWidthInMeters
    Valve::VR::IVROverlay::_SetOverlayWidthInMeters* _get_SetOverlayWidthInMeters();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayWidthInMeters SetOverlayWidthInMeters
    void _set_SetOverlayWidthInMeters(Valve::VR::IVROverlay::_SetOverlayWidthInMeters* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayWidthInMeters GetOverlayWidthInMeters
    Valve::VR::IVROverlay::_GetOverlayWidthInMeters* _get_GetOverlayWidthInMeters();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayWidthInMeters GetOverlayWidthInMeters
    void _set_GetOverlayWidthInMeters(Valve::VR::IVROverlay::_GetOverlayWidthInMeters* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters
    Valve::VR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters* _get_SetOverlayAutoCurveDistanceRangeInMeters();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters
    void _set_SetOverlayAutoCurveDistanceRangeInMeters(Valve::VR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters
    Valve::VR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters* _get_GetOverlayAutoCurveDistanceRangeInMeters();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters
    void _set_GetOverlayAutoCurveDistanceRangeInMeters(Valve::VR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTextureColorSpace SetOverlayTextureColorSpace
    Valve::VR::IVROverlay::_SetOverlayTextureColorSpace* _get_SetOverlayTextureColorSpace();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTextureColorSpace SetOverlayTextureColorSpace
    void _set_SetOverlayTextureColorSpace(Valve::VR::IVROverlay::_SetOverlayTextureColorSpace* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureColorSpace GetOverlayTextureColorSpace
    Valve::VR::IVROverlay::_GetOverlayTextureColorSpace* _get_GetOverlayTextureColorSpace();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureColorSpace GetOverlayTextureColorSpace
    void _set_GetOverlayTextureColorSpace(Valve::VR::IVROverlay::_GetOverlayTextureColorSpace* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTextureBounds SetOverlayTextureBounds
    Valve::VR::IVROverlay::_SetOverlayTextureBounds* _get_SetOverlayTextureBounds();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTextureBounds SetOverlayTextureBounds
    void _set_SetOverlayTextureBounds(Valve::VR::IVROverlay::_SetOverlayTextureBounds* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureBounds GetOverlayTextureBounds
    Valve::VR::IVROverlay::_GetOverlayTextureBounds* _get_GetOverlayTextureBounds();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureBounds GetOverlayTextureBounds
    void _set_GetOverlayTextureBounds(Valve::VR::IVROverlay::_GetOverlayTextureBounds* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayRenderModel GetOverlayRenderModel
    Valve::VR::IVROverlay::_GetOverlayRenderModel* _get_GetOverlayRenderModel();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayRenderModel GetOverlayRenderModel
    void _set_GetOverlayRenderModel(Valve::VR::IVROverlay::_GetOverlayRenderModel* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayRenderModel SetOverlayRenderModel
    Valve::VR::IVROverlay::_SetOverlayRenderModel* _get_SetOverlayRenderModel();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayRenderModel SetOverlayRenderModel
    void _set_SetOverlayRenderModel(Valve::VR::IVROverlay::_SetOverlayRenderModel* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformType GetOverlayTransformType
    Valve::VR::IVROverlay::_GetOverlayTransformType* _get_GetOverlayTransformType();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformType GetOverlayTransformType
    void _set_GetOverlayTransformType(Valve::VR::IVROverlay::_GetOverlayTransformType* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformAbsolute SetOverlayTransformAbsolute
    Valve::VR::IVROverlay::_SetOverlayTransformAbsolute* _get_SetOverlayTransformAbsolute();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformAbsolute SetOverlayTransformAbsolute
    void _set_SetOverlayTransformAbsolute(Valve::VR::IVROverlay::_SetOverlayTransformAbsolute* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformAbsolute GetOverlayTransformAbsolute
    Valve::VR::IVROverlay::_GetOverlayTransformAbsolute* _get_GetOverlayTransformAbsolute();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformAbsolute GetOverlayTransformAbsolute
    void _set_GetOverlayTransformAbsolute(Valve::VR::IVROverlay::_GetOverlayTransformAbsolute* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative
    Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative* _get_SetOverlayTransformTrackedDeviceRelative();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative
    void _set_SetOverlayTransformTrackedDeviceRelative(Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative
    Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative* _get_GetOverlayTransformTrackedDeviceRelative();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative
    void _set_GetOverlayTransformTrackedDeviceRelative(Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent
    Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent* _get_SetOverlayTransformTrackedDeviceComponent();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent
    void _set_SetOverlayTransformTrackedDeviceComponent(Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent
    Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent* _get_GetOverlayTransformTrackedDeviceComponent();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent
    void _set_GetOverlayTransformTrackedDeviceComponent(Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative
    Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative* _get_GetOverlayTransformOverlayRelative();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative
    void _set_GetOverlayTransformOverlayRelative(Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative
    Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative* _get_SetOverlayTransformOverlayRelative();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative
    void _set_SetOverlayTransformOverlayRelative(Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._ShowOverlay ShowOverlay
    Valve::VR::IVROverlay::_ShowOverlay* _get_ShowOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._ShowOverlay ShowOverlay
    void _set_ShowOverlay(Valve::VR::IVROverlay::_ShowOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._HideOverlay HideOverlay
    Valve::VR::IVROverlay::_HideOverlay* _get_HideOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._HideOverlay HideOverlay
    void _set_HideOverlay(Valve::VR::IVROverlay::_HideOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._IsOverlayVisible IsOverlayVisible
    Valve::VR::IVROverlay::_IsOverlayVisible* _get_IsOverlayVisible();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._IsOverlayVisible IsOverlayVisible
    void _set_IsOverlayVisible(Valve::VR::IVROverlay::_IsOverlayVisible* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates
    Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates* _get_GetTransformForOverlayCoordinates();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates
    void _set_GetTransformForOverlayCoordinates(Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._PollNextOverlayEvent PollNextOverlayEvent
    Valve::VR::IVROverlay::_PollNextOverlayEvent* _get_PollNextOverlayEvent();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._PollNextOverlayEvent PollNextOverlayEvent
    void _set_PollNextOverlayEvent(Valve::VR::IVROverlay::_PollNextOverlayEvent* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayInputMethod GetOverlayInputMethod
    Valve::VR::IVROverlay::_GetOverlayInputMethod* _get_GetOverlayInputMethod();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayInputMethod GetOverlayInputMethod
    void _set_GetOverlayInputMethod(Valve::VR::IVROverlay::_GetOverlayInputMethod* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayInputMethod SetOverlayInputMethod
    Valve::VR::IVROverlay::_SetOverlayInputMethod* _get_SetOverlayInputMethod();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayInputMethod SetOverlayInputMethod
    void _set_SetOverlayInputMethod(Valve::VR::IVROverlay::_SetOverlayInputMethod* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayMouseScale GetOverlayMouseScale
    Valve::VR::IVROverlay::_GetOverlayMouseScale* _get_GetOverlayMouseScale();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayMouseScale GetOverlayMouseScale
    void _set_GetOverlayMouseScale(Valve::VR::IVROverlay::_GetOverlayMouseScale* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayMouseScale SetOverlayMouseScale
    Valve::VR::IVROverlay::_SetOverlayMouseScale* _get_SetOverlayMouseScale();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayMouseScale SetOverlayMouseScale
    void _set_SetOverlayMouseScale(Valve::VR::IVROverlay::_SetOverlayMouseScale* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._ComputeOverlayIntersection ComputeOverlayIntersection
    Valve::VR::IVROverlay::_ComputeOverlayIntersection* _get_ComputeOverlayIntersection();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._ComputeOverlayIntersection ComputeOverlayIntersection
    void _set_ComputeOverlayIntersection(Valve::VR::IVROverlay::_ComputeOverlayIntersection* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._IsHoverTargetOverlay IsHoverTargetOverlay
    Valve::VR::IVROverlay::_IsHoverTargetOverlay* _get_IsHoverTargetOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._IsHoverTargetOverlay IsHoverTargetOverlay
    void _set_IsHoverTargetOverlay(Valve::VR::IVROverlay::_IsHoverTargetOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetGamepadFocusOverlay GetGamepadFocusOverlay
    Valve::VR::IVROverlay::_GetGamepadFocusOverlay* _get_GetGamepadFocusOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetGamepadFocusOverlay GetGamepadFocusOverlay
    void _set_GetGamepadFocusOverlay(Valve::VR::IVROverlay::_GetGamepadFocusOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetGamepadFocusOverlay SetGamepadFocusOverlay
    Valve::VR::IVROverlay::_SetGamepadFocusOverlay* _get_SetGamepadFocusOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetGamepadFocusOverlay SetGamepadFocusOverlay
    void _set_SetGamepadFocusOverlay(Valve::VR::IVROverlay::_SetGamepadFocusOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayNeighbor SetOverlayNeighbor
    Valve::VR::IVROverlay::_SetOverlayNeighbor* _get_SetOverlayNeighbor();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayNeighbor SetOverlayNeighbor
    void _set_SetOverlayNeighbor(Valve::VR::IVROverlay::_SetOverlayNeighbor* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor
    Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor* _get_MoveGamepadFocusToNeighbor();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor
    void _set_MoveGamepadFocusToNeighbor(Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform
    Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform* _get_SetOverlayDualAnalogTransform();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform
    void _set_SetOverlayDualAnalogTransform(Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform
    Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform* _get_GetOverlayDualAnalogTransform();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform
    void _set_GetOverlayDualAnalogTransform(Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTexture SetOverlayTexture
    Valve::VR::IVROverlay::_SetOverlayTexture* _get_SetOverlayTexture();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayTexture SetOverlayTexture
    void _set_SetOverlayTexture(Valve::VR::IVROverlay::_SetOverlayTexture* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._ClearOverlayTexture ClearOverlayTexture
    Valve::VR::IVROverlay::_ClearOverlayTexture* _get_ClearOverlayTexture();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._ClearOverlayTexture ClearOverlayTexture
    void _set_ClearOverlayTexture(Valve::VR::IVROverlay::_ClearOverlayTexture* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayRaw SetOverlayRaw
    Valve::VR::IVROverlay::_SetOverlayRaw* _get_SetOverlayRaw();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayRaw SetOverlayRaw
    void _set_SetOverlayRaw(Valve::VR::IVROverlay::_SetOverlayRaw* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayFromFile SetOverlayFromFile
    Valve::VR::IVROverlay::_SetOverlayFromFile* _get_SetOverlayFromFile();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayFromFile SetOverlayFromFile
    void _set_SetOverlayFromFile(Valve::VR::IVROverlay::_SetOverlayFromFile* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTexture GetOverlayTexture
    Valve::VR::IVROverlay::_GetOverlayTexture* _get_GetOverlayTexture();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTexture GetOverlayTexture
    void _set_GetOverlayTexture(Valve::VR::IVROverlay::_GetOverlayTexture* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle
    Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle* _get_ReleaseNativeOverlayHandle();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle
    void _set_ReleaseNativeOverlayHandle(Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureSize GetOverlayTextureSize
    Valve::VR::IVROverlay::_GetOverlayTextureSize* _get_GetOverlayTextureSize();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureSize GetOverlayTextureSize
    void _set_GetOverlayTextureSize(Valve::VR::IVROverlay::_GetOverlayTextureSize* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._CreateDashboardOverlay CreateDashboardOverlay
    Valve::VR::IVROverlay::_CreateDashboardOverlay* _get_CreateDashboardOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._CreateDashboardOverlay CreateDashboardOverlay
    void _set_CreateDashboardOverlay(Valve::VR::IVROverlay::_CreateDashboardOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._IsDashboardVisible IsDashboardVisible
    Valve::VR::IVROverlay::_IsDashboardVisible* _get_IsDashboardVisible();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._IsDashboardVisible IsDashboardVisible
    void _set_IsDashboardVisible(Valve::VR::IVROverlay::_IsDashboardVisible* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._IsActiveDashboardOverlay IsActiveDashboardOverlay
    Valve::VR::IVROverlay::_IsActiveDashboardOverlay* _get_IsActiveDashboardOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._IsActiveDashboardOverlay IsActiveDashboardOverlay
    void _set_IsActiveDashboardOverlay(Valve::VR::IVROverlay::_IsActiveDashboardOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess
    Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess* _get_SetDashboardOverlaySceneProcess();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess
    void _set_SetDashboardOverlaySceneProcess(Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess
    Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess* _get_GetDashboardOverlaySceneProcess();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess
    void _set_GetDashboardOverlaySceneProcess(Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._ShowDashboard ShowDashboard
    Valve::VR::IVROverlay::_ShowDashboard* _get_ShowDashboard();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._ShowDashboard ShowDashboard
    void _set_ShowDashboard(Valve::VR::IVROverlay::_ShowDashboard* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetPrimaryDashboardDevice GetPrimaryDashboardDevice
    Valve::VR::IVROverlay::_GetPrimaryDashboardDevice* _get_GetPrimaryDashboardDevice();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetPrimaryDashboardDevice GetPrimaryDashboardDevice
    void _set_GetPrimaryDashboardDevice(Valve::VR::IVROverlay::_GetPrimaryDashboardDevice* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._ShowKeyboard ShowKeyboard
    Valve::VR::IVROverlay::_ShowKeyboard* _get_ShowKeyboard();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._ShowKeyboard ShowKeyboard
    void _set_ShowKeyboard(Valve::VR::IVROverlay::_ShowKeyboard* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._ShowKeyboardForOverlay ShowKeyboardForOverlay
    Valve::VR::IVROverlay::_ShowKeyboardForOverlay* _get_ShowKeyboardForOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._ShowKeyboardForOverlay ShowKeyboardForOverlay
    void _set_ShowKeyboardForOverlay(Valve::VR::IVROverlay::_ShowKeyboardForOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetKeyboardText GetKeyboardText
    Valve::VR::IVROverlay::_GetKeyboardText* _get_GetKeyboardText();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetKeyboardText GetKeyboardText
    void _set_GetKeyboardText(Valve::VR::IVROverlay::_GetKeyboardText* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._HideKeyboard HideKeyboard
    Valve::VR::IVROverlay::_HideKeyboard* _get_HideKeyboard();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._HideKeyboard HideKeyboard
    void _set_HideKeyboard(Valve::VR::IVROverlay::_HideKeyboard* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute
    Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute* _get_SetKeyboardTransformAbsolute();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute
    void _set_SetKeyboardTransformAbsolute(Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay
    Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay* _get_SetKeyboardPositionForOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay
    void _set_SetKeyboardPositionForOverlay(Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayIntersectionMask SetOverlayIntersectionMask
    Valve::VR::IVROverlay::_SetOverlayIntersectionMask* _get_SetOverlayIntersectionMask();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._SetOverlayIntersectionMask SetOverlayIntersectionMask
    void _set_SetOverlayIntersectionMask(Valve::VR::IVROverlay::_SetOverlayIntersectionMask* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayFlags GetOverlayFlags
    Valve::VR::IVROverlay::_GetOverlayFlags* _get_GetOverlayFlags();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._GetOverlayFlags GetOverlayFlags
    void _set_GetOverlayFlags(Valve::VR::IVROverlay::_GetOverlayFlags* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._ShowMessageOverlay ShowMessageOverlay
    Valve::VR::IVROverlay::_ShowMessageOverlay* _get_ShowMessageOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._ShowMessageOverlay ShowMessageOverlay
    void _set_ShowMessageOverlay(Valve::VR::IVROverlay::_ShowMessageOverlay* value);
    // Get instance field: Valve.VR.IVROverlay/Valve.VR._CloseMessageOverlay CloseMessageOverlay
    Valve::VR::IVROverlay::_CloseMessageOverlay* _get_CloseMessageOverlay();
    // Set instance field: Valve.VR.IVROverlay/Valve.VR._CloseMessageOverlay CloseMessageOverlay
    void _set_CloseMessageOverlay(Valve::VR::IVROverlay::_CloseMessageOverlay* value);
  }; // Valve.VR.IVROverlay
  #pragma pack(pop)
  static check_size<sizeof(IVROverlay), 648 + sizeof(Valve::VR::IVROverlay::_CloseMessageOverlay*)> __Valve_VR_IVROverlaySizeCheck;
  static_assert(sizeof(IVROverlay) == 0x290);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Valve::VR::IVROverlay, "Valve.VR", "IVROverlay");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
