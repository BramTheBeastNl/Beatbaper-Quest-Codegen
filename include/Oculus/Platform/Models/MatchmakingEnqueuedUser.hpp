// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Oculus::Platform::Models
namespace Oculus::Platform::Models {
  // Forward declaring type: User
  class User;
}
// Completed forward declares
// Type namespace: Oculus.Platform.Models
namespace Oculus::Platform::Models {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.Models.MatchmakingEnqueuedUser
  // [TokenAttribute] Offset: FFFFFFFF
  class MatchmakingEnqueuedUser : public ::Il2CppObject {
    public:
    // public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> CustomData
    // Size: 0x8
    // Offset: 0x10
    System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* CustomData;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*) == 0x8);
    // public readonly Oculus.Platform.Models.User UserOptional
    // Size: 0x8
    // Offset: 0x18
    Oculus::Platform::Models::User* UserOptional;
    // Field size check
    static_assert(sizeof(Oculus::Platform::Models::User*) == 0x8);
    // [ObsoleteAttribute] Offset: 0xDEAE7C
    // public readonly Oculus.Platform.Models.User User
    // Size: 0x8
    // Offset: 0x20
    Oculus::Platform::Models::User* User;
    // Field size check
    static_assert(sizeof(Oculus::Platform::Models::User*) == 0x8);
    // Creating value type constructor for type: MatchmakingEnqueuedUser
    MatchmakingEnqueuedUser(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* CustomData_ = {}, Oculus::Platform::Models::User* UserOptional_ = {}, Oculus::Platform::Models::User* User_ = {}) noexcept : CustomData{CustomData_}, UserOptional{UserOptional_}, User{User_} {}
    // Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> CustomData
    System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* _get_CustomData();
    // Set instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> CustomData
    void _set_CustomData(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* value);
    // Get instance field: public readonly Oculus.Platform.Models.User UserOptional
    Oculus::Platform::Models::User* _get_UserOptional();
    // Set instance field: public readonly Oculus.Platform.Models.User UserOptional
    void _set_UserOptional(Oculus::Platform::Models::User* value);
    // Get instance field: public readonly Oculus.Platform.Models.User User
    Oculus::Platform::Models::User* _get_User();
    // Set instance field: public readonly Oculus.Platform.Models.User User
    void _set_User(Oculus::Platform::Models::User* value);
    // public System.Void .ctor(System.IntPtr o)
    // Offset: 0x14A9E74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MatchmakingEnqueuedUser* New_ctor(System::IntPtr o) {
      static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::MatchmakingEnqueuedUser::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MatchmakingEnqueuedUser*, creationType>(o)));
    }
  }; // Oculus.Platform.Models.MatchmakingEnqueuedUser
  #pragma pack(pop)
  static check_size<sizeof(MatchmakingEnqueuedUser), 32 + sizeof(Oculus::Platform::Models::User*)> __Oculus_Platform_Models_MatchmakingEnqueuedUserSizeCheck;
  static_assert(sizeof(MatchmakingEnqueuedUser) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::Models::MatchmakingEnqueuedUser*, "Oculus.Platform.Models", "MatchmakingEnqueuedUser");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Platform::Models::MatchmakingEnqueuedUser::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
