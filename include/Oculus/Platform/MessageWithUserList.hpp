// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Platform::Models
namespace Oculus::Platform::Models {
  // Forward declaring type: UserList
  class UserList;
}
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Platform.MessageWithUserList
  class MessageWithUserList : public Oculus::Platform::Message_1<Oculus::Platform::Models::UserList*> {
    public:
    // Creating value type constructor for type: MessageWithUserList
    MessageWithUserList() noexcept {}
    // protected Oculus.Platform.Models.UserList GetDataFromMessage(System.IntPtr c_message)
    // Offset: 0x14D59D4
    Oculus::Platform::Models::UserList* GetDataFromMessage(System::IntPtr c_message);
    // public System.Void .ctor(System.IntPtr c_message)
    // Offset: 0x14CB4B8
    // Implemented from: Oculus.Platform.Message`1
    // Base method: System.Void Message_1::.ctor(System.IntPtr c_message)
    // Base method: System.Void Message::.ctor(System.IntPtr c_message)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MessageWithUserList* New_ctor(System::IntPtr c_message) {
      static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithUserList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MessageWithUserList*, creationType>(c_message)));
    }
    // public override Oculus.Platform.Models.UserList GetUserList()
    // Offset: 0x14D5990
    // Implemented from: Oculus.Platform.Message
    // Base method: Oculus.Platform.Models.UserList Message::GetUserList()
    Oculus::Platform::Models::UserList* GetUserList();
  }; // Oculus.Platform.MessageWithUserList
  // Writing MetadataGetter for method: MessageWithUserList::GetDataFromMessage
  // Il2CppName: GetDataFromMessage
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserList* (MessageWithUserList::*)(System::IntPtr)>(&MessageWithUserList::GetDataFromMessage)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(MessageWithUserList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
    }
  };
  // Writing MetadataGetter for method: MessageWithUserList::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserList::*)(System::IntPtr)>(&MessageWithUserList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(MessageWithUserList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithUserList::*)(System::IntPtr)>(&MessageWithUserList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(MessageWithUserList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
    }
  };
  // Writing MetadataGetter for method: MessageWithUserList::GetUserList
  // Il2CppName: GetUserList
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserList* (MessageWithUserList::*)()>(&MessageWithUserList::GetUserList)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(MessageWithUserList*), "GetUserList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::MessageWithUserList*, "Oculus.Platform", "MessageWithUserList");
