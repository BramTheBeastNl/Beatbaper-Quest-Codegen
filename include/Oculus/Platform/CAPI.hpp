// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.KeyValuePairType
#include "Oculus/Platform/KeyValuePairType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: SendPolicy
  struct SendPolicy;
  // Forward declaring type: VoipMuteState
  struct VoipMuteState;
  // Forward declaring type: SystemVoipStatus
  struct SystemVoipStatus;
  // Forward declaring type: VoipDtxState
  struct VoipDtxState;
  // Forward declaring type: VoipBitrate
  struct VoipBitrate;
  // Forward declaring type: VoipSampleRate
  struct VoipSampleRate;
  // Forward declaring type: LeaderboardFilterType
  struct LeaderboardFilterType;
  // Forward declaring type: LeaderboardStartAt
  struct LeaderboardStartAt;
  // Forward declaring type: LivestreamingAudience
  struct LivestreamingAudience;
  // Forward declaring type: LivestreamingMicrophoneStatus
  struct LivestreamingMicrophoneStatus;
  // Forward declaring type: MatchmakingStatApproach
  struct MatchmakingStatApproach;
  // Forward declaring type: MediaContentType
  struct MediaContentType;
  // Forward declaring type: NetSyncVoipMicSource
  struct NetSyncVoipMicSource;
  // Forward declaring type: NetSyncVoipStreamMode
  struct NetSyncVoipStreamMode;
  // Forward declaring type: RoomJoinPolicy
  struct RoomJoinPolicy;
  // Forward declaring type: RoomMembershipLockStatus
  struct RoomMembershipLockStatus;
  // Forward declaring type: PermissionType
  struct PermissionType;
  // Forward declaring type: AchievementType
  struct AchievementType;
  // Forward declaring type: ChallengeCreationType
  struct ChallengeCreationType;
  // Forward declaring type: ChallengeVisibility
  struct ChallengeVisibility;
  // Forward declaring type: CloudStorageDataStatus
  struct CloudStorageDataStatus;
  // Forward declaring type: CloudStorageUpdateStatus
  struct CloudStorageUpdateStatus;
  // Forward declaring type: LaunchType
  struct LaunchType;
  // Forward declaring type: ServiceProvider
  struct ServiceProvider;
  // Forward declaring type: LivestreamingStartStatus
  struct LivestreamingStartStatus;
  // Forward declaring type: NetSyncDisconnectReason
  struct NetSyncDisconnectReason;
  // Forward declaring type: NetSyncConnectionStatus
  struct NetSyncConnectionStatus;
  // Forward declaring type: PeerConnectionState
  struct PeerConnectionState;
  // Forward declaring type: PartyUpdateAction
  struct PartyUpdateAction;
  // Forward declaring type: PlatformInitializeResult
  struct PlatformInitializeResult;
  // Forward declaring type: RoomJoinability
  struct RoomJoinability;
  // Forward declaring type: RoomType
  struct RoomType;
  // Forward declaring type: SdkAccountType
  struct SdkAccountType;
  // Forward declaring type: ShareMediaStatus
  struct ShareMediaStatus;
  // Forward declaring type: PermissionGrantStatus
  struct PermissionGrantStatus;
  // Forward declaring type: UserPresenceStatus
  struct UserPresenceStatus;
  // Forward declaring type: AbuseReportType
  struct AbuseReportType;
  // Forward declaring type: ChallengeViewerFilter
  struct ChallengeViewerFilter;
  // Forward declaring type: RichPresenceExtraContext
  struct RichPresenceExtraContext;
  // Forward declaring type: UserOrdering
  struct UserOrdering;
  // Forward declaring type: TimeWindow
  struct TimeWindow;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: UIntPtr
  struct UIntPtr;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: UTF8Encoding
  class UTF8Encoding;
}
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.CAPI
  class CAPI : public ::Il2CppObject {
    public:
    // Nested type: Oculus::Platform::CAPI::ovrKeyValuePair
    struct ovrKeyValuePair;
    // Nested type: Oculus::Platform::CAPI::ovrNetSyncVec3
    struct ovrNetSyncVec3;
    // Nested type: Oculus::Platform::CAPI::ovrMatchmakingCriterion
    struct ovrMatchmakingCriterion;
    // Nested type: Oculus::Platform::CAPI::ovrMatchmakingCustomQueryData
    struct ovrMatchmakingCustomQueryData;
    // Nested type: Oculus::Platform::CAPI::OculusInitParams
    struct OculusInitParams;
    // Nested type: Oculus::Platform::CAPI::FilterCallback
    class FilterCallback;
    // Size: 0x28
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: Oculus.Platform.CAPI/ovrKeyValuePair
    struct ovrKeyValuePair/*, public System::ValueType*/ {
      public:
      // public System.String key_
      // Size: 0x8
      // Offset: 0x0
      ::Il2CppString* key;
      // Field size check
      static_assert(sizeof(::Il2CppString*) == 0x8);
      // private Oculus.Platform.KeyValuePairType valueType_
      // Size: 0x4
      // Offset: 0x8
      Oculus::Platform::KeyValuePairType valueType;
      // Field size check
      static_assert(sizeof(Oculus::Platform::KeyValuePairType) == 0x4);
      // Padding between fields: valueType and: stringValue
      char __padding1[0x4] = {};
      // public System.String stringValue_
      // Size: 0x8
      // Offset: 0x10
      ::Il2CppString* stringValue;
      // Field size check
      static_assert(sizeof(::Il2CppString*) == 0x8);
      // public System.Int32 intValue_
      // Size: 0x4
      // Offset: 0x18
      int intValue;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Padding between fields: intValue and: doubleValue
      char __padding3[0x4] = {};
      // public System.Double doubleValue_
      // Size: 0x8
      // Offset: 0x20
      double doubleValue;
      // Field size check
      static_assert(sizeof(double) == 0x8);
      // Creating value type constructor for type: ovrKeyValuePair
      constexpr ovrKeyValuePair(::Il2CppString* key_ = {}, Oculus::Platform::KeyValuePairType valueType_ = {}, ::Il2CppString* stringValue_ = {}, int intValue_ = {}, double doubleValue_ = {}) noexcept : key{key_}, valueType{valueType_}, stringValue{stringValue_}, intValue{intValue_}, doubleValue{doubleValue_} {}
      // Creating interface conversion operator: operator System::ValueType
      operator System::ValueType() noexcept {
        return *reinterpret_cast<System::ValueType*>(this);
      }
      // public System.Void .ctor(System.String key, System.String value)
      // Offset: 0xDFDB3C
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      ovrKeyValuePair(::Il2CppString* key, ::Il2CppString* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, key, value);
      }
      // public System.Void .ctor(System.String key, System.Int32 value)
      // Offset: 0xDFDB54
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      ovrKeyValuePair(::Il2CppString* key, int value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, key, value);
      }
      // public System.Void .ctor(System.String key, System.Double value)
      // Offset: 0xDFDB70
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      ovrKeyValuePair(::Il2CppString* key, double value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, key, value);
      }
    }; // Oculus.Platform.CAPI/ovrKeyValuePair
    #pragma pack(pop)
    static check_size<sizeof(CAPI::ovrKeyValuePair), 32 + sizeof(double)> __Oculus_Platform_CAPI_ovrKeyValuePairSizeCheck;
    static_assert(sizeof(CAPI::ovrKeyValuePair) == 0x28);
    // Creating value type constructor for type: CAPI
    CAPI() noexcept {}
    // static field const value: static public System.String DLL_NAME
    static constexpr const char* DLL_NAME = "ovrplatformloader";
    // Get static field: static public System.String DLL_NAME
    static ::Il2CppString* _get_DLL_NAME();
    // Set static field: static public System.String DLL_NAME
    static void _set_DLL_NAME(::Il2CppString* value);
    // Get static field: static private System.Text.UTF8Encoding nativeStringEncoding
    static System::Text::UTF8Encoding* _get_nativeStringEncoding();
    // Set static field: static private System.Text.UTF8Encoding nativeStringEncoding
    static void _set_nativeStringEncoding(System::Text::UTF8Encoding* value);
    // static field const value: static public System.Int32 VoipFilterBufferSize
    static constexpr const int VoipFilterBufferSize = 480;
    // Get static field: static public System.Int32 VoipFilterBufferSize
    static int _get_VoipFilterBufferSize();
    // Set static field: static public System.Int32 VoipFilterBufferSize
    static void _set_VoipFilterBufferSize(int value);
    // static public System.IntPtr ArrayOfStructsToIntPtr(System.Array ar)
    // Offset: 0x1CA3ADC
    static System::IntPtr ArrayOfStructsToIntPtr(System::Array* ar);
    // static public Oculus.Platform.CAPI/ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(System.Collections.Generic.Dictionary`2<System.String,System.Object> dict)
    // Offset: 0x1CA3C9C
    static ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* DictionaryToOVRKeyValuePairs(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* dict);
    // static public System.Byte[] IntPtrToByteArray(System.IntPtr data, System.UInt64 size)
    // Offset: 0x1CA4148
    static ::Array<uint8_t>* IntPtrToByteArray(System::IntPtr data, uint64_t size);
    // static public System.Collections.Generic.Dictionary`2<System.String,System.String> DataStoreFromNative(System.IntPtr pointer)
    // Offset: 0x1CA4204
    static System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* DataStoreFromNative(System::IntPtr pointer);
    // static public System.String StringFromNative(System.IntPtr pointer)
    // Offset: 0x1CA450C
    static ::Il2CppString* StringFromNative(System::IntPtr pointer);
    // static public System.Int32 GetNativeStringLengthNotIncludingNullTerminator(System.IntPtr pointer)
    // Offset: 0x1CA4624
    static int GetNativeStringLengthNotIncludingNullTerminator(System::IntPtr pointer);
    // static public System.DateTime DateTimeFromNative(System.UInt64 seconds_since_the_one_true_epoch)
    // Offset: 0x1CA46B0
    static System::DateTime DateTimeFromNative(uint64_t seconds_since_the_one_true_epoch);
    // static public System.UInt64 DateTimeToNative(System.DateTime dt)
    // Offset: 0x1CA4720
    static uint64_t DateTimeToNative(System::DateTime dt);
    // static public System.Byte[] BlobFromNative(System.UInt32 size, System.IntPtr pointer)
    // Offset: 0x1CA481C
    static ::Array<uint8_t>* BlobFromNative(uint size, System::IntPtr pointer);
    // static public System.Byte[] FiledataFromNative(System.UInt32 size, System.IntPtr pointer)
    // Offset: 0x1CA4900
    static ::Array<uint8_t>* FiledataFromNative(uint size, System::IntPtr pointer);
    // static public System.IntPtr StringToNative(System.String s)
    // Offset: 0x1CA49A4
    static System::IntPtr StringToNative(::Il2CppString* s);
    // static public System.Boolean ovr_UnityInitWrapper(System.String appId)
    // Offset: 0x1CA1AA4
    static bool ovr_UnityInitWrapper(::Il2CppString* appId);
    // static public System.Void ovr_UnityInitGlobals(System.IntPtr loggingCB)
    // Offset: 0x1CA4B14
    static void ovr_UnityInitGlobals(System::IntPtr loggingCB);
    // static public System.UInt64 ovr_UnityInitWrapperAsynchronous(System.String appId)
    // Offset: 0x1CA1C28
    static uint64_t ovr_UnityInitWrapperAsynchronous(::Il2CppString* appId);
    // static public System.Boolean ovr_UnityInitWrapperStandalone(System.String accessToken, System.IntPtr loggingCB)
    // Offset: 0x1CA4B94
    static bool ovr_UnityInitWrapperStandalone(::Il2CppString* accessToken, System::IntPtr loggingCB);
    // static public System.UInt64 ovr_Platform_InitializeStandaloneOculus(ref Oculus.Platform.CAPI/OculusInitParams init)
    // Offset: 0x1CA4C40
    static uint64_t ovr_Platform_InitializeStandaloneOculus(Oculus::Platform::CAPI::OculusInitParams& init);
    // static public System.UInt64 ovr_PlatformInitializeWithAccessToken(System.UInt64 appId, System.String accessToken)
    // Offset: 0x1CA4D18
    static uint64_t ovr_PlatformInitializeWithAccessToken(uint64_t appId, ::Il2CppString* accessToken);
    // static public System.Boolean ovr_UnityInitWrapperWindows(System.String appId, System.IntPtr loggingCB)
    // Offset: 0x1CA4DC4
    static bool ovr_UnityInitWrapperWindows(::Il2CppString* appId, System::IntPtr loggingCB);
    // static public System.UInt64 ovr_UnityInitWrapperWindowsAsynchronous(System.String appId, System.IntPtr loggingCB)
    // Offset: 0x1CA4E70
    static uint64_t ovr_UnityInitWrapperWindowsAsynchronous(::Il2CppString* appId, System::IntPtr loggingCB);
    // static public System.Boolean ovr_SetDeveloperAccessToken(System.String accessToken)
    // Offset: 0x1CA4F18
    static bool ovr_SetDeveloperAccessToken(::Il2CppString* accessToken);
    // static public System.String ovr_GetLoggedInUserLocale()
    // Offset: 0x1CA4FB4
    static ::Il2CppString* ovr_GetLoggedInUserLocale();
    // static private System.IntPtr ovr_GetLoggedInUserLocale_Native()
    // Offset: 0x1CA5014
    static System::IntPtr ovr_GetLoggedInUserLocale_Native();
    // static public System.IntPtr ovr_PopMessage()
    // Offset: 0x1CA5088
    static System::IntPtr ovr_PopMessage();
    // static public System.Void ovr_FreeMessage(System.IntPtr message)
    // Offset: 0x1CA50FC
    static void ovr_FreeMessage(System::IntPtr message);
    // static public System.IntPtr ovr_Voip_CreateEncoder()
    // Offset: 0x1CA517C
    static System::IntPtr ovr_Voip_CreateEncoder();
    // static public System.Void ovr_Voip_DestroyEncoder(System.IntPtr encoder)
    // Offset: 0x1CA51F0
    static void ovr_Voip_DestroyEncoder(System::IntPtr encoder);
    // static public System.IntPtr ovr_Voip_CreateDecoder()
    // Offset: 0x1CA5270
    static System::IntPtr ovr_Voip_CreateDecoder();
    // static public System.Void ovr_Voip_DestroyDecoder(System.IntPtr decoder)
    // Offset: 0x1CA52E4
    static void ovr_Voip_DestroyDecoder(System::IntPtr decoder);
    // static public System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UInt64 compressedSize)
    // Offset: 0x1CA5364
    static void ovr_VoipDecoder_Decode(System::IntPtr obj, ::Array<uint8_t>* compressedData, uint64_t compressedSize);
    // static public System.IntPtr ovr_Microphone_Create()
    // Offset: 0x1CA5404
    static System::IntPtr ovr_Microphone_Create();
    // static public System.Void ovr_Microphone_Destroy(System.IntPtr obj)
    // Offset: 0x1CA5478
    static void ovr_Microphone_Destroy(System::IntPtr obj);
    // static public System.Void ovr_Voip_SetSystemVoipPassthrough(System.Boolean passthrough)
    // Offset: 0x1CA54F8
    static void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);
    // static public System.Void ovr_Voip_SetSystemVoipMicrophoneMuted(Oculus.Platform.VoipMuteState muted)
    // Offset: 0x1CA5578
    static void ovr_Voip_SetSystemVoipMicrophoneMuted(Oculus::Platform::VoipMuteState muted);
    // static public System.Void ovr_UnityResetTestPlatform()
    // Offset: 0x1CA55F8
    static void ovr_UnityResetTestPlatform();
    // static public System.UInt64 ovr_HTTP_GetWithMessageType(System.String url, System.Int32 messageType)
    // Offset: 0x1CA17D4
    static uint64_t ovr_HTTP_GetWithMessageType(::Il2CppString* url, int messageType);
    // static public System.Void ovr_CrashApplication()
    // Offset: 0x1CA5668
    static void ovr_CrashApplication();
    // static public System.Void ovr_Voip_SetMicrophoneFilterCallback(Oculus.Platform.CAPI/FilterCallback cb)
    // Offset: 0x1CA56D8
    static void ovr_Voip_SetMicrophoneFilterCallback(Oculus::Platform::CAPI::FilterCallback* cb);
    // static public System.Void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(Oculus.Platform.CAPI/FilterCallback cb, System.UIntPtr bufferSizeElements)
    // Offset: 0x1CA575C
    static void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(Oculus::Platform::CAPI::FilterCallback* cb, System::UIntPtr bufferSizeElements);
    // static public System.Void LogNewEvent(System.String eventName, System.Collections.Generic.Dictionary`2<System.String,System.String> values)
    // Offset: 0x1CA57F0
    static void LogNewEvent(::Il2CppString* eventName, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* values);
    // static public System.Void ovr_Log_NewEvent(System.IntPtr eventName, System.IntPtr[] values, System.UIntPtr length)
    // Offset: 0x1CA5AF4
    static void ovr_Log_NewEvent(System::IntPtr eventName, ::Array<System::IntPtr>* values, System::UIntPtr length);
    // static public System.IntPtr ovr_ApplicationLifecycle_GetLaunchDetails()
    // Offset: 0x1CA20FC
    static System::IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();
    // static public System.UInt64 ovr_HTTP_StartTransfer(System.String url, Oculus.Platform.CAPI/ovrKeyValuePair[] headers)
    // Offset: 0x1CA5B94
    static uint64_t ovr_HTTP_StartTransfer(::Il2CppString* url, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* headers);
    // static private System.UInt64 ovr_HTTP_StartTransfer_Native(System.IntPtr url, Oculus.Platform.CAPI/ovrKeyValuePair[] headers, System.UIntPtr numItems)
    // Offset: 0x1CA5C88
    static uint64_t ovr_HTTP_StartTransfer_Native(System::IntPtr url, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* headers, System::UIntPtr numItems);
    // static public System.Boolean ovr_HTTP_Write(System.UInt64 transferId, System.Byte[] bytes, System.UIntPtr length)
    // Offset: 0x1CA5DE4
    static bool ovr_HTTP_Write(uint64_t transferId, ::Array<uint8_t>* bytes, System::UIntPtr length);
    // static public System.Void ovr_HTTP_WriteEOM(System.UInt64 transferId)
    // Offset: 0x1CA5E8C
    static void ovr_HTTP_WriteEOM(uint64_t transferId);
    // static public System.String ovr_Message_GetStringForJavascript(System.IntPtr message)
    // Offset: 0x1CA5F08
    static ::Il2CppString* ovr_Message_GetStringForJavascript(System::IntPtr message);
    // static private System.IntPtr ovr_Message_GetStringForJavascript_Native(System.IntPtr message)
    // Offset: 0x1CA5F70
    static System::IntPtr ovr_Message_GetStringForJavascript_Native(System::IntPtr message);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CA5FF0
    static System::UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(int64_t connection_id, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CA6090
    static System::UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(int64_t connection_id, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CA6130
    static System::UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(int64_t connection_id, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CA61D0
    static System::UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(int64_t connection_id, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.Boolean ovr_NetSync_GetListenerPosition(System.Int64 connection_id, System.UInt64 sessionId, ref Oculus.Platform.CAPI/ovrNetSyncVec3 position)
    // Offset: 0x1CA6270
    static bool ovr_NetSync_GetListenerPosition(int64_t connection_id, uint64_t sessionId, Oculus::Platform::CAPI::ovrNetSyncVec3& position);
    // static public System.UIntPtr ovr_NetSync_GetMonostreamFloatPCM(System.Int64 connection_id, System.UInt64 sessionId, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CA6310
    static System::UIntPtr ovr_NetSync_GetMonostreamFloatPCM(int64_t connection_id, uint64_t sessionId, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetMonostreamInt16PCM(System.Int64 connection_id, System.UInt64 session_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CA63C0
    static System::UIntPtr ovr_NetSync_GetMonostreamInt16PCM(int64_t connection_id, uint64_t session_id, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetPcmBufferMaxSamples()
    // Offset: 0x1CA6470
    static System::UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();
    // static public System.Boolean ovr_NetSync_GetVoipAmplitude(System.Int64 connection_id, System.UInt64 sessionId, ref System.Single amplitude)
    // Offset: 0x1CA64E4
    static bool ovr_NetSync_GetVoipAmplitude(int64_t connection_id, uint64_t sessionId, float& amplitude);
    // static public System.Void ovr_NetSync_SetListenerPosition(System.Int64 connection_id, ref Oculus.Platform.CAPI/ovrNetSyncVec3 position)
    // Offset: 0x1CA6584
    static void ovr_NetSync_SetListenerPosition(int64_t connection_id, Oculus::Platform::CAPI::ovrNetSyncVec3& position);
    // static public System.Void ovr_Net_Accept(System.UInt64 peerID)
    // Offset: 0x1CA6614
    static void ovr_Net_Accept(uint64_t peerID);
    // static public System.Boolean ovr_Net_AcceptForCurrentRoom()
    // Offset: 0x1CA6694
    static bool ovr_Net_AcceptForCurrentRoom();
    // static public System.Void ovr_Net_Close(System.UInt64 peerID)
    // Offset: 0x1CA6710
    static void ovr_Net_Close(uint64_t peerID);
    // static public System.Void ovr_Net_CloseForCurrentRoom()
    // Offset: 0x1CA6790
    static void ovr_Net_CloseForCurrentRoom();
    // static public System.Void ovr_Net_Connect(System.UInt64 peerID)
    // Offset: 0x1CA6800
    static void ovr_Net_Connect(uint64_t peerID);
    // static public System.Boolean ovr_Net_IsConnected(System.UInt64 peerID)
    // Offset: 0x1CA6880
    static bool ovr_Net_IsConnected(uint64_t peerID);
    // static public System.UInt64 ovr_Net_Ping(System.UInt64 peerID)
    // Offset: 0x1CA6908
    static uint64_t ovr_Net_Ping(uint64_t peerID);
    // static public System.IntPtr ovr_Net_ReadPacket()
    // Offset: 0x1CA6988
    static System::IntPtr ovr_Net_ReadPacket();
    // static public System.Boolean ovr_Net_SendPacket(System.UInt64 userID, System.UIntPtr length, System.Byte[] bytes, Oculus.Platform.SendPolicy policy)
    // Offset: 0x1CA69FC
    static bool ovr_Net_SendPacket(uint64_t userID, System::UIntPtr length, ::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy);
    // static public System.Boolean ovr_Net_SendPacketToCurrentRoom(System.UIntPtr length, System.Byte[] bytes, Oculus.Platform.SendPolicy policy)
    // Offset: 0x1CA6AB4
    static bool ovr_Net_SendPacketToCurrentRoom(System::UIntPtr length, ::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy);
    // static public System.Int32 ovr_Party_PluginGetSharedMemHandle()
    // Offset: 0x1CA6B5C
    static int ovr_Party_PluginGetSharedMemHandle();
    // static public Oculus.Platform.VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted()
    // Offset: 0x1CA6BD0
    static Oculus::Platform::VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();
    // static public System.Boolean ovr_Party_PluginGetVoipPassthrough()
    // Offset: 0x1CA6C44
    static bool ovr_Party_PluginGetVoipPassthrough();
    // static public Oculus.Platform.SystemVoipStatus ovr_Party_PluginGetVoipStatus()
    // Offset: 0x1CA6CC0
    static Oculus::Platform::SystemVoipStatus ovr_Party_PluginGetVoipStatus();
    // static public System.Void ovr_Voip_Accept(System.UInt64 userID)
    // Offset: 0x1CA6D34
    static void ovr_Voip_Accept(uint64_t userID);
    // static public Oculus.Platform.VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(System.UInt64 peerID)
    // Offset: 0x1CA6DB4
    static Oculus::Platform::VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(uint64_t peerID);
    // static public Oculus.Platform.VoipBitrate ovr_Voip_GetLocalBitrate(System.UInt64 peerID)
    // Offset: 0x1CA6E34
    static Oculus::Platform::VoipBitrate ovr_Voip_GetLocalBitrate(uint64_t peerID);
    // static public System.UIntPtr ovr_Voip_GetOutputBufferMaxSize()
    // Offset: 0x1CA6EB4
    static System::UIntPtr ovr_Voip_GetOutputBufferMaxSize();
    // static public System.UIntPtr ovr_Voip_GetPCM(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CA6F28
    static System::UIntPtr ovr_Voip_GetPCM(uint64_t senderID, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Voip_GetPCMFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CA6FC8
    static System::UIntPtr ovr_Voip_GetPCMFloat(uint64_t senderID, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Voip_GetPCMSize(System.UInt64 senderID)
    // Offset: 0x1CA7068
    static System::UIntPtr ovr_Voip_GetPCMSize(uint64_t senderID);
    // static public System.UIntPtr ovr_Voip_GetPCMWithTimestamp(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)
    // Offset: 0x1CA70E8
    static System::UIntPtr ovr_Voip_GetPCMWithTimestamp(uint64_t senderID, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements, ::Array<uint>* timestamp);
    // static public System.UIntPtr ovr_Voip_GetPCMWithTimestampFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)
    // Offset: 0x1CA71A0
    static System::UIntPtr ovr_Voip_GetPCMWithTimestampFloat(uint64_t senderID, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements, ::Array<uint>* timestamp);
    // static public Oculus.Platform.VoipBitrate ovr_Voip_GetRemoteBitrate(System.UInt64 peerID)
    // Offset: 0x1CA7258
    static Oculus::Platform::VoipBitrate ovr_Voip_GetRemoteBitrate(uint64_t peerID);
    // static public System.UInt32 ovr_Voip_GetSyncTimestamp(System.UInt64 userID)
    // Offset: 0x1CA72D8
    static uint ovr_Voip_GetSyncTimestamp(uint64_t userID);
    // static public System.Int64 ovr_Voip_GetSyncTimestampDifference(System.UInt32 lhs, System.UInt32 rhs)
    // Offset: 0x1CA7358
    static int64_t ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);
    // static public Oculus.Platform.VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted()
    // Offset: 0x1CA73E8
    static Oculus::Platform::VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();
    // static public Oculus.Platform.SystemVoipStatus ovr_Voip_GetSystemVoipStatus()
    // Offset: 0x1CA745C
    static Oculus::Platform::SystemVoipStatus ovr_Voip_GetSystemVoipStatus();
    // static public System.Void ovr_Voip_SetMicrophoneMuted(Oculus.Platform.VoipMuteState state)
    // Offset: 0x1CA74D0
    static void ovr_Voip_SetMicrophoneMuted(Oculus::Platform::VoipMuteState state);
    // static public System.Void ovr_Voip_SetNewConnectionOptions(System.IntPtr voipOptions)
    // Offset: 0x1CA7550
    static void ovr_Voip_SetNewConnectionOptions(System::IntPtr voipOptions);
    // static public System.Void ovr_Voip_SetOutputSampleRate(Oculus.Platform.VoipSampleRate rate)
    // Offset: 0x1CA75D0
    static void ovr_Voip_SetOutputSampleRate(Oculus::Platform::VoipSampleRate rate);
    // static public System.Void ovr_Voip_Start(System.UInt64 userID)
    // Offset: 0x1CA7650
    static void ovr_Voip_Start(uint64_t userID);
    // static public System.Void ovr_Voip_Stop(System.UInt64 userID)
    // Offset: 0x1CA76D0
    static void ovr_Voip_Stop(uint64_t userID);
    // static public System.UInt64 ovr_Achievements_AddCount(System.String name, System.UInt64 count)
    // Offset: 0x1CA09F8
    static uint64_t ovr_Achievements_AddCount(::Il2CppString* name, uint64_t count);
    // static private System.UInt64 ovr_Achievements_AddCount_Native(System.IntPtr name, System.UInt64 count)
    // Offset: 0x1CA7750
    static uint64_t ovr_Achievements_AddCount_Native(System::IntPtr name, uint64_t count);
    // static public System.UInt64 ovr_Achievements_AddFields(System.String name, System.String fields)
    // Offset: 0x1CA0BD0
    static uint64_t ovr_Achievements_AddFields(::Il2CppString* name, ::Il2CppString* fields);
    // static private System.UInt64 ovr_Achievements_AddFields_Native(System.IntPtr name, System.IntPtr fields)
    // Offset: 0x1CA77E0
    static uint64_t ovr_Achievements_AddFields_Native(System::IntPtr name, System::IntPtr fields);
    // static public System.UInt64 ovr_Achievements_GetAllDefinitions()
    // Offset: 0x1CA0DAC
    static uint64_t ovr_Achievements_GetAllDefinitions();
    // static public System.UInt64 ovr_Achievements_GetAllProgress()
    // Offset: 0x1CA0F28
    static uint64_t ovr_Achievements_GetAllProgress();
    // static public System.UInt64 ovr_Achievements_GetDefinitionsByName(System.String[] names, System.Int32 count)
    // Offset: 0x1CA10C8
    static uint64_t ovr_Achievements_GetDefinitionsByName(::Array<::Il2CppString*>* names, int count);
    // static public System.UInt64 ovr_Achievements_GetProgressByName(System.String[] names, System.Int32 count)
    // Offset: 0x1CA1348
    static uint64_t ovr_Achievements_GetProgressByName(::Array<::Il2CppString*>* names, int count);
    // static public System.UInt64 ovr_Achievements_Unlock(System.String name)
    // Offset: 0x1CA15B4
    static uint64_t ovr_Achievements_Unlock(::Il2CppString* name);
    // static private System.UInt64 ovr_Achievements_Unlock_Native(System.IntPtr name)
    // Offset: 0x1CA7870
    static uint64_t ovr_Achievements_Unlock_Native(System::IntPtr name);
    // static public System.UInt64 ovr_Application_ExecuteCoordinatedLaunch(System.UInt64 appID, System.UInt64 roomID)
    // Offset: 0x1CA78F0
    static uint64_t ovr_Application_ExecuteCoordinatedLaunch(uint64_t appID, uint64_t roomID);
    // static public System.UInt64 ovr_Application_GetInstalledApplications()
    // Offset: 0x1CA7980
    static uint64_t ovr_Application_GetInstalledApplications();
    // static public System.UInt64 ovr_Application_GetVersion()
    // Offset: 0x1CA1DD0
    static uint64_t ovr_Application_GetVersion();
    // static public System.UInt64 ovr_Application_LaunchOtherApp(System.UInt64 appID, System.IntPtr deeplink_options)
    // Offset: 0x1CA1FE0
    static uint64_t ovr_Application_LaunchOtherApp(uint64_t appID, System::IntPtr deeplink_options);
    // static public System.UInt64 ovr_ApplicationLifecycle_GetRegisteredPIDs()
    // Offset: 0x1CA79F4
    static uint64_t ovr_ApplicationLifecycle_GetRegisteredPIDs();
    // static public System.UInt64 ovr_ApplicationLifecycle_GetSessionKey()
    // Offset: 0x1CA7A68
    static uint64_t ovr_ApplicationLifecycle_GetSessionKey();
    // static public System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey(System.String sessionKey)
    // Offset: 0x1CA7ADC
    static uint64_t ovr_ApplicationLifecycle_RegisterSessionKey(::Il2CppString* sessionKey);
    // static private System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey_Native(System.IntPtr sessionKey)
    // Offset: 0x1CA7B84
    static uint64_t ovr_ApplicationLifecycle_RegisterSessionKey_Native(System::IntPtr sessionKey);
    // static public System.UInt64 ovr_AssetFile_Delete(System.UInt64 assetFileID)
    // Offset: 0x1CA2640
    static uint64_t ovr_AssetFile_Delete(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DeleteById(System.UInt64 assetFileID)
    // Offset: 0x1CA27D8
    static uint64_t ovr_AssetFile_DeleteById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DeleteByName(System.String assetFileName)
    // Offset: 0x1CA2970
    static uint64_t ovr_AssetFile_DeleteByName(::Il2CppString* assetFileName);
    // static private System.UInt64 ovr_AssetFile_DeleteByName_Native(System.IntPtr assetFileName)
    // Offset: 0x1CA7C04
    static uint64_t ovr_AssetFile_DeleteByName_Native(System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_Download(System.UInt64 assetFileID)
    // Offset: 0x1CA2B30
    static uint64_t ovr_AssetFile_Download(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadById(System.UInt64 assetFileID)
    // Offset: 0x1CA2CC8
    static uint64_t ovr_AssetFile_DownloadById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadByName(System.String assetFileName)
    // Offset: 0x1CA2E60
    static uint64_t ovr_AssetFile_DownloadByName(::Il2CppString* assetFileName);
    // static private System.UInt64 ovr_AssetFile_DownloadByName_Native(System.IntPtr assetFileName)
    // Offset: 0x1CA7C84
    static uint64_t ovr_AssetFile_DownloadByName_Native(System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_DownloadCancel(System.UInt64 assetFileID)
    // Offset: 0x1CA3020
    static uint64_t ovr_AssetFile_DownloadCancel(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadCancelById(System.UInt64 assetFileID)
    // Offset: 0x1CA31B8
    static uint64_t ovr_AssetFile_DownloadCancelById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadCancelByName(System.String assetFileName)
    // Offset: 0x1CA3350
    static uint64_t ovr_AssetFile_DownloadCancelByName(::Il2CppString* assetFileName);
    // static private System.UInt64 ovr_AssetFile_DownloadCancelByName_Native(System.IntPtr assetFileName)
    // Offset: 0x1CA7D04
    static uint64_t ovr_AssetFile_DownloadCancelByName_Native(System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_GetList()
    // Offset: 0x1CA3500
    static uint64_t ovr_AssetFile_GetList();
    // static public System.UInt64 ovr_AssetFile_Status(System.UInt64 assetFileID)
    // Offset: 0x1CA368C
    static uint64_t ovr_AssetFile_Status(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_StatusById(System.UInt64 assetFileID)
    // Offset: 0x1CA3824
    static uint64_t ovr_AssetFile_StatusById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_StatusByName(System.String assetFileName)
    // Offset: 0x1CA39BC
    static uint64_t ovr_AssetFile_StatusByName(::Il2CppString* assetFileName);
    // static private System.UInt64 ovr_AssetFile_StatusByName_Native(System.IntPtr assetFileName)
    // Offset: 0x1CA7D84
    static uint64_t ovr_AssetFile_StatusByName_Native(System::IntPtr assetFileName);
    // static public System.UInt64 ovr_Avatar_UpdateMetaData(System.String avatarMetaData, System.String imageFilePath)
    // Offset: 0x1CA7E04
    static uint64_t ovr_Avatar_UpdateMetaData(::Il2CppString* avatarMetaData, ::Il2CppString* imageFilePath);
    // static private System.UInt64 ovr_Avatar_UpdateMetaData_Native(System.IntPtr avatarMetaData, System.IntPtr imageFilePath)
    // Offset: 0x1CA7ED8
    static uint64_t ovr_Avatar_UpdateMetaData_Native(System::IntPtr avatarMetaData, System::IntPtr imageFilePath);
    // static public System.UInt64 ovr_Cal_FinalizeApplication(System.UInt64 groupingObject, System.UInt64[] userIDs, System.Int32 numUserIDs, System.UInt64 finalized_application_ID)
    // Offset: 0x1CA7F68
    static uint64_t ovr_Cal_FinalizeApplication(uint64_t groupingObject, ::Array<uint64_t>* userIDs, int numUserIDs, uint64_t finalized_application_ID);
    // static public System.UInt64 ovr_Cal_GetSuggestedApplications(System.UInt64 groupingObject, System.UInt64[] userIDs, System.Int32 numUserIDs)
    // Offset: 0x1CA8018
    static uint64_t ovr_Cal_GetSuggestedApplications(uint64_t groupingObject, ::Array<uint64_t>* userIDs, int numUserIDs);
    // static public System.UInt64 ovr_Cal_ProposeApplication(System.UInt64 groupingObject, System.UInt64[] userIDs, System.Int32 numUserIDs, System.UInt64 proposed_application_ID)
    // Offset: 0x1CA80B8
    static uint64_t ovr_Cal_ProposeApplication(uint64_t groupingObject, ::Array<uint64_t>* userIDs, int numUserIDs, uint64_t proposed_application_ID);
    // static public System.UInt64 ovr_Challenges_Create(System.String leaderboardName, System.IntPtr challengeOptions)
    // Offset: 0x1CA8168
    static uint64_t ovr_Challenges_Create(::Il2CppString* leaderboardName, System::IntPtr challengeOptions);
    // static private System.UInt64 ovr_Challenges_Create_Native(System.IntPtr leaderboardName, System.IntPtr challengeOptions)
    // Offset: 0x1CA8220
    static uint64_t ovr_Challenges_Create_Native(System::IntPtr leaderboardName, System::IntPtr challengeOptions);
    // static public System.UInt64 ovr_Challenges_DeclineInvite(System.UInt64 challengeID)
    // Offset: 0x1CA82B0
    static uint64_t ovr_Challenges_DeclineInvite(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_Delete(System.UInt64 challengeID)
    // Offset: 0x1CA8330
    static uint64_t ovr_Challenges_Delete(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_Get(System.UInt64 challengeID)
    // Offset: 0x1CA83B0
    static uint64_t ovr_Challenges_Get(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_GetEntries(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x1CA8430
    static uint64_t ovr_Challenges_GetEntries(uint64_t challengeID, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt);
    // static public System.UInt64 ovr_Challenges_GetEntriesAfterRank(System.UInt64 challengeID, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x1CA84D8
    static uint64_t ovr_Challenges_GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank);
    // static public System.UInt64 ovr_Challenges_GetEntriesByIds(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x1CA8570
    static uint64_t ovr_Challenges_GetEntriesByIds(uint64_t challengeID, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs, uint userIDLength);
    // static public System.UInt64 ovr_Challenges_GetList(System.IntPtr challengeOptions, System.Int32 limit)
    // Offset: 0x1CA8628
    static uint64_t ovr_Challenges_GetList(System::IntPtr challengeOptions, int limit);
    // static public System.UInt64 ovr_Challenges_GetNextChallenges(System.IntPtr handle)
    // Offset: 0x1CA86B8
    static uint64_t ovr_Challenges_GetNextChallenges(System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_GetNextEntries(System.IntPtr handle)
    // Offset: 0x1CA8738
    static uint64_t ovr_Challenges_GetNextEntries(System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_GetPreviousChallenges(System.IntPtr handle)
    // Offset: 0x1CA87B8
    static uint64_t ovr_Challenges_GetPreviousChallenges(System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_GetPreviousEntries(System.IntPtr handle)
    // Offset: 0x1CA8838
    static uint64_t ovr_Challenges_GetPreviousEntries(System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_Join(System.UInt64 challengeID)
    // Offset: 0x1CA88B8
    static uint64_t ovr_Challenges_Join(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_Leave(System.UInt64 challengeID)
    // Offset: 0x1CA8938
    static uint64_t ovr_Challenges_Leave(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_UpdateInfo(System.UInt64 challengeID, System.IntPtr challengeOptions)
    // Offset: 0x1CA89B8
    static uint64_t ovr_Challenges_UpdateInfo(uint64_t challengeID, System::IntPtr challengeOptions);
    // static public System.UInt64 ovr_CloudStorage_Delete(System.String bucket, System.String key)
    // Offset: 0x1CA8A48
    static uint64_t ovr_CloudStorage_Delete(::Il2CppString* bucket, ::Il2CppString* key);
    // static private System.UInt64 ovr_CloudStorage_Delete_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x1CA8B1C
    static uint64_t ovr_CloudStorage_Delete_Native(System::IntPtr bucket, System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_Load(System.String bucket, System.String key)
    // Offset: 0x1CA8BAC
    static uint64_t ovr_CloudStorage_Load(::Il2CppString* bucket, ::Il2CppString* key);
    // static private System.UInt64 ovr_CloudStorage_Load_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x1CA8C80
    static uint64_t ovr_CloudStorage_Load_Native(System::IntPtr bucket, System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_LoadBucketMetadata(System.String bucket)
    // Offset: 0x1CA8D10
    static uint64_t ovr_CloudStorage_LoadBucketMetadata(::Il2CppString* bucket);
    // static private System.UInt64 ovr_CloudStorage_LoadBucketMetadata_Native(System.IntPtr bucket)
    // Offset: 0x1CA8DB8
    static uint64_t ovr_CloudStorage_LoadBucketMetadata_Native(System::IntPtr bucket);
    // static public System.UInt64 ovr_CloudStorage_LoadConflictMetadata(System.String bucket, System.String key)
    // Offset: 0x1CA8E38
    static uint64_t ovr_CloudStorage_LoadConflictMetadata(::Il2CppString* bucket, ::Il2CppString* key);
    // static private System.UInt64 ovr_CloudStorage_LoadConflictMetadata_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x1CA8F0C
    static uint64_t ovr_CloudStorage_LoadConflictMetadata_Native(System::IntPtr bucket, System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_LoadHandle(System.String handle)
    // Offset: 0x1CA8F9C
    static uint64_t ovr_CloudStorage_LoadHandle(::Il2CppString* handle);
    // static private System.UInt64 ovr_CloudStorage_LoadHandle_Native(System.IntPtr handle)
    // Offset: 0x1CA9044
    static uint64_t ovr_CloudStorage_LoadHandle_Native(System::IntPtr handle);
    // static public System.UInt64 ovr_CloudStorage_LoadMetadata(System.String bucket, System.String key)
    // Offset: 0x1CA90C4
    static uint64_t ovr_CloudStorage_LoadMetadata(::Il2CppString* bucket, ::Il2CppString* key);
    // static private System.UInt64 ovr_CloudStorage_LoadMetadata_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x1CA9198
    static uint64_t ovr_CloudStorage_LoadMetadata_Native(System::IntPtr bucket, System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_ResolveKeepLocal(System.String bucket, System.String key, System.String remoteHandle)
    // Offset: 0x1CA9228
    static uint64_t ovr_CloudStorage_ResolveKeepLocal(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle);
    // static private System.UInt64 ovr_CloudStorage_ResolveKeepLocal_Native(System.IntPtr bucket, System.IntPtr key, System.IntPtr remoteHandle)
    // Offset: 0x1CA931C
    static uint64_t ovr_CloudStorage_ResolveKeepLocal_Native(System::IntPtr bucket, System::IntPtr key, System::IntPtr remoteHandle);
    // static public System.UInt64 ovr_CloudStorage_ResolveKeepRemote(System.String bucket, System.String key, System.String remoteHandle)
    // Offset: 0x1CA93B4
    static uint64_t ovr_CloudStorage_ResolveKeepRemote(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle);
    // static private System.UInt64 ovr_CloudStorage_ResolveKeepRemote_Native(System.IntPtr bucket, System.IntPtr key, System.IntPtr remoteHandle)
    // Offset: 0x1CA94A8
    static uint64_t ovr_CloudStorage_ResolveKeepRemote_Native(System::IntPtr bucket, System::IntPtr key, System::IntPtr remoteHandle);
    // static public System.UInt64 ovr_CloudStorage_Save(System.String bucket, System.String key, System.Byte[] data, System.UInt32 dataSize, System.Int64 counter, System.String extraData)
    // Offset: 0x1CA9540
    static uint64_t ovr_CloudStorage_Save(::Il2CppString* bucket, ::Il2CppString* key, ::Array<uint8_t>* data, uint dataSize, int64_t counter, ::Il2CppString* extraData);
    // static private System.UInt64 ovr_CloudStorage_Save_Native(System.IntPtr bucket, System.IntPtr key, System.Byte[] data, System.UInt32 dataSize, System.Int64 counter, System.IntPtr extraData)
    // Offset: 0x1CA965C
    static uint64_t ovr_CloudStorage_Save_Native(System::IntPtr bucket, System::IntPtr key, ::Array<uint8_t>* data, uint dataSize, int64_t counter, System::IntPtr extraData);
    // static public System.UInt64 ovr_CloudStorage2_GetUserDirectoryPath()
    // Offset: 0x1CA9724
    static uint64_t ovr_CloudStorage2_GetUserDirectoryPath();
    // static public System.UInt64 ovr_Colocation_GetCurrentMapUuid()
    // Offset: 0x1CA9798
    static uint64_t ovr_Colocation_GetCurrentMapUuid();
    // static public System.UInt64 ovr_Colocation_RequestMap(System.String uuid)
    // Offset: 0x1CA980C
    static uint64_t ovr_Colocation_RequestMap(::Il2CppString* uuid);
    // static private System.UInt64 ovr_Colocation_RequestMap_Native(System.IntPtr uuid)
    // Offset: 0x1CA98B4
    static uint64_t ovr_Colocation_RequestMap_Native(System::IntPtr uuid);
    // static public System.UInt64 ovr_Colocation_ShareMap(System.String uuid)
    // Offset: 0x1CA9934
    static uint64_t ovr_Colocation_ShareMap(::Il2CppString* uuid);
    // static private System.UInt64 ovr_Colocation_ShareMap_Native(System.IntPtr uuid)
    // Offset: 0x1CA99DC
    static uint64_t ovr_Colocation_ShareMap_Native(System::IntPtr uuid);
    // static public System.UInt64 ovr_Entitlement_GetIsViewerEntitled()
    // Offset: 0x1CA9A5C
    static uint64_t ovr_Entitlement_GetIsViewerEntitled();
    // static public System.UInt64 ovr_GraphAPI_Get(System.String url)
    // Offset: 0x1CA9AD0
    static uint64_t ovr_GraphAPI_Get(::Il2CppString* url);
    // static private System.UInt64 ovr_GraphAPI_Get_Native(System.IntPtr url)
    // Offset: 0x1CA9B78
    static uint64_t ovr_GraphAPI_Get_Native(System::IntPtr url);
    // static public System.UInt64 ovr_GraphAPI_Post(System.String url)
    // Offset: 0x1CA9BF8
    static uint64_t ovr_GraphAPI_Post(::Il2CppString* url);
    // static private System.UInt64 ovr_GraphAPI_Post_Native(System.IntPtr url)
    // Offset: 0x1CA9CA0
    static uint64_t ovr_GraphAPI_Post_Native(System::IntPtr url);
    // static public System.UInt64 ovr_HTTP_Get(System.String url)
    // Offset: 0x1CA9D1C
    static uint64_t ovr_HTTP_Get(::Il2CppString* url);
    // static private System.UInt64 ovr_HTTP_Get_Native(System.IntPtr url)
    // Offset: 0x1CA9DC4
    static uint64_t ovr_HTTP_Get_Native(System::IntPtr url);
    // static public System.UInt64 ovr_HTTP_GetToFile(System.String url, System.String diskFile)
    // Offset: 0x1CA9E44
    static uint64_t ovr_HTTP_GetToFile(::Il2CppString* url, ::Il2CppString* diskFile);
    // static private System.UInt64 ovr_HTTP_GetToFile_Native(System.IntPtr url, System.IntPtr diskFile)
    // Offset: 0x1CA9F18
    static uint64_t ovr_HTTP_GetToFile_Native(System::IntPtr url, System::IntPtr diskFile);
    // static public System.UInt64 ovr_HTTP_MultiPartPost(System.String url, System.String filepath_param_name, System.String filepath, System.String access_token, Oculus.Platform.CAPI/ovrKeyValuePair[] post_params)
    // Offset: 0x1CA9FA8
    static uint64_t ovr_HTTP_MultiPartPost(::Il2CppString* url, ::Il2CppString* filepath_param_name, ::Il2CppString* filepath, ::Il2CppString* access_token, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* post_params);
    // static private System.UInt64 ovr_HTTP_MultiPartPost_Native(System.IntPtr url, System.IntPtr filepath_param_name, System.IntPtr filepath, System.IntPtr access_token, Oculus.Platform.CAPI/ovrKeyValuePair[] post_params, System.UIntPtr numItems)
    // Offset: 0x1CAA104
    static uint64_t ovr_HTTP_MultiPartPost_Native(System::IntPtr url, System::IntPtr filepath_param_name, System::IntPtr filepath, System::IntPtr access_token, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* post_params, System::UIntPtr numItems);
    // static public System.UInt64 ovr_HTTP_Post(System.String url)
    // Offset: 0x1CAA290
    static uint64_t ovr_HTTP_Post(::Il2CppString* url);
    // static private System.UInt64 ovr_HTTP_Post_Native(System.IntPtr url)
    // Offset: 0x1CAA338
    static uint64_t ovr_HTTP_Post_Native(System::IntPtr url);
    // static public System.UInt64 ovr_IAP_ConsumePurchase(System.String sku)
    // Offset: 0x1CAA3B8
    static uint64_t ovr_IAP_ConsumePurchase(::Il2CppString* sku);
    // static private System.UInt64 ovr_IAP_ConsumePurchase_Native(System.IntPtr sku)
    // Offset: 0x1CAA460
    static uint64_t ovr_IAP_ConsumePurchase_Native(System::IntPtr sku);
    // static public System.UInt64 ovr_IAP_GetProductsBySKU(System.String[] skus, System.Int32 count)
    // Offset: 0x1CAA4E0
    static uint64_t ovr_IAP_GetProductsBySKU(::Array<::Il2CppString*>* skus, int count);
    // static public System.UInt64 ovr_IAP_GetViewerPurchases()
    // Offset: 0x1CAA634
    static uint64_t ovr_IAP_GetViewerPurchases();
    // static public System.UInt64 ovr_IAP_GetViewerPurchasesDurableCache()
    // Offset: 0x1CAA6A8
    static uint64_t ovr_IAP_GetViewerPurchasesDurableCache();
    // static public System.UInt64 ovr_IAP_LaunchCheckoutFlow(System.String sku)
    // Offset: 0x1CAA71C
    static uint64_t ovr_IAP_LaunchCheckoutFlow(::Il2CppString* sku);
    // static private System.UInt64 ovr_IAP_LaunchCheckoutFlow_Native(System.IntPtr sku)
    // Offset: 0x1CAA7C4
    static uint64_t ovr_IAP_LaunchCheckoutFlow_Native(System::IntPtr sku);
    // static public System.UInt64 ovr_LanguagePack_GetCurrent()
    // Offset: 0x1CAA844
    static uint64_t ovr_LanguagePack_GetCurrent();
    // static public System.UInt64 ovr_LanguagePack_SetCurrent(System.String tag)
    // Offset: 0x1CAA8B8
    static uint64_t ovr_LanguagePack_SetCurrent(::Il2CppString* tag);
    // static private System.UInt64 ovr_LanguagePack_SetCurrent_Native(System.IntPtr tag)
    // Offset: 0x1CAA960
    static uint64_t ovr_LanguagePack_SetCurrent_Native(System::IntPtr tag);
    // static public System.UInt64 ovr_Leaderboard_GetEntries(System.String leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x1CAA9E0
    static uint64_t ovr_Leaderboard_GetEntries(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt);
    // static private System.UInt64 ovr_Leaderboard_GetEntries_Native(System.IntPtr leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x1CAAAB0
    static uint64_t ovr_Leaderboard_GetEntries_Native(System::IntPtr leaderboardName, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt);
    // static public System.UInt64 ovr_Leaderboard_GetEntriesAfterRank(System.String leaderboardName, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x1CAAB58
    static uint64_t ovr_Leaderboard_GetEntriesAfterRank(::Il2CppString* leaderboardName, int limit, uint64_t afterRank);
    // static private System.UInt64 ovr_Leaderboard_GetEntriesAfterRank_Native(System.IntPtr leaderboardName, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x1CAAC18
    static uint64_t ovr_Leaderboard_GetEntriesAfterRank_Native(System::IntPtr leaderboardName, int limit, uint64_t afterRank);
    // static public System.UInt64 ovr_Leaderboard_GetEntriesByIds(System.String leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x1CAACB0
    static uint64_t ovr_Leaderboard_GetEntriesByIds(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs, uint userIDLength);
    // static private System.UInt64 ovr_Leaderboard_GetEntriesByIds_Native(System.IntPtr leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x1CAAD88
    static uint64_t ovr_Leaderboard_GetEntriesByIds_Native(System::IntPtr leaderboardName, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs, uint userIDLength);
    // static public System.UInt64 ovr_Leaderboard_GetNextEntries(System.IntPtr handle)
    // Offset: 0x1CAAE40
    static uint64_t ovr_Leaderboard_GetNextEntries(System::IntPtr handle);
    // static public System.UInt64 ovr_Leaderboard_GetPreviousEntries(System.IntPtr handle)
    // Offset: 0x1CAAEC0
    static uint64_t ovr_Leaderboard_GetPreviousEntries(System::IntPtr handle);
    // static public System.UInt64 ovr_Leaderboard_WriteEntry(System.String leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x1CAAF40
    static uint64_t ovr_Leaderboard_WriteEntry(::Il2CppString* leaderboardName, int64_t score, ::Array<uint8_t>* extraData, uint extraDataLength, bool forceUpdate);
    // static private System.UInt64 ovr_Leaderboard_WriteEntry_Native(System.IntPtr leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x1CAB018
    static uint64_t ovr_Leaderboard_WriteEntry_Native(System::IntPtr leaderboardName, int64_t score, ::Array<uint8_t>* extraData, uint extraDataLength, bool forceUpdate);
    // static public System.UInt64 ovr_Livestreaming_GetStatus()
    // Offset: 0x1CAB0D0
    static uint64_t ovr_Livestreaming_GetStatus();
    // static public System.UInt64 ovr_Livestreaming_IsAllowedForApplication(System.String packageName)
    // Offset: 0x1CAB144
    static uint64_t ovr_Livestreaming_IsAllowedForApplication(::Il2CppString* packageName);
    // static private System.UInt64 ovr_Livestreaming_IsAllowedForApplication_Native(System.IntPtr packageName)
    // Offset: 0x1CAB1EC
    static uint64_t ovr_Livestreaming_IsAllowedForApplication_Native(System::IntPtr packageName);
    // static public System.UInt64 ovr_Livestreaming_PauseStream()
    // Offset: 0x1CAB26C
    static uint64_t ovr_Livestreaming_PauseStream();
    // static public System.UInt64 ovr_Livestreaming_ResumeStream()
    // Offset: 0x1CAB2E0
    static uint64_t ovr_Livestreaming_ResumeStream();
    // static public System.UInt64 ovr_Livestreaming_StartPartyStream()
    // Offset: 0x1CAB354
    static uint64_t ovr_Livestreaming_StartPartyStream();
    // static public System.UInt64 ovr_Livestreaming_StartStream(Oculus.Platform.LivestreamingAudience audience, Oculus.Platform.LivestreamingMicrophoneStatus micStatus)
    // Offset: 0x1CAB3C8
    static uint64_t ovr_Livestreaming_StartStream(Oculus::Platform::LivestreamingAudience audience, Oculus::Platform::LivestreamingMicrophoneStatus micStatus);
    // static public System.UInt64 ovr_Livestreaming_StopPartyStream()
    // Offset: 0x1CAB458
    static uint64_t ovr_Livestreaming_StopPartyStream();
    // static public System.UInt64 ovr_Livestreaming_StopStream()
    // Offset: 0x1CAB4CC
    static uint64_t ovr_Livestreaming_StopStream();
    // static public System.UInt64 ovr_Livestreaming_UpdateCommentsOverlayVisibility(System.Boolean isVisible)
    // Offset: 0x1CAB540
    static uint64_t ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);
    // static public System.UInt64 ovr_Livestreaming_UpdateMicStatus(Oculus.Platform.LivestreamingMicrophoneStatus micStatus)
    // Offset: 0x1CAB5C0
    static uint64_t ovr_Livestreaming_UpdateMicStatus(Oculus::Platform::LivestreamingMicrophoneStatus micStatus);
    // static public System.UInt64 ovr_Matchmaking_Browse(System.String pool, System.IntPtr customQueryData)
    // Offset: 0x1CAB640
    static uint64_t ovr_Matchmaking_Browse(::Il2CppString* pool, System::IntPtr customQueryData);
    // static private System.UInt64 ovr_Matchmaking_Browse_Native(System.IntPtr pool, System.IntPtr customQueryData)
    // Offset: 0x1CAB6F8
    static uint64_t ovr_Matchmaking_Browse_Native(System::IntPtr pool, System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_Browse2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1CAB788
    static uint64_t ovr_Matchmaking_Browse2(::Il2CppString* pool, System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_Browse2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1CAB840
    static uint64_t ovr_Matchmaking_Browse2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_Cancel(System.String pool, System.String requestHash)
    // Offset: 0x1CAB8D0
    static uint64_t ovr_Matchmaking_Cancel(::Il2CppString* pool, ::Il2CppString* requestHash);
    // static private System.UInt64 ovr_Matchmaking_Cancel_Native(System.IntPtr pool, System.IntPtr requestHash)
    // Offset: 0x1CAB9A4
    static uint64_t ovr_Matchmaking_Cancel_Native(System::IntPtr pool, System::IntPtr requestHash);
    // static public System.UInt64 ovr_Matchmaking_Cancel2()
    // Offset: 0x1CABA34
    static uint64_t ovr_Matchmaking_Cancel2();
    // static public System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom(System.String pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates, System.IntPtr customQueryData)
    // Offset: 0x1CABAA8
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates, System::IntPtr customQueryData);
    // static private System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom_Native(System.IntPtr pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates, System.IntPtr customQueryData)
    // Offset: 0x1CABB78
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom_Native(System::IntPtr pool, uint maxUsers, bool subscribeToUpdates, System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1CABC20
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom2(::Il2CppString* pool, System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1CABCD8
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_CreateRoom(System.String pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates)
    // Offset: 0x1CABD68
    static uint64_t ovr_Matchmaking_CreateRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates);
    // static private System.UInt64 ovr_Matchmaking_CreateRoom_Native(System.IntPtr pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates)
    // Offset: 0x1CABE28
    static uint64_t ovr_Matchmaking_CreateRoom_Native(System::IntPtr pool, uint maxUsers, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Matchmaking_CreateRoom2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1CABEC0
    static uint64_t ovr_Matchmaking_CreateRoom2(::Il2CppString* pool, System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_CreateRoom2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1CABF78
    static uint64_t ovr_Matchmaking_CreateRoom2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_Enqueue(System.String pool, System.IntPtr customQueryData)
    // Offset: 0x1CAC008
    static uint64_t ovr_Matchmaking_Enqueue(::Il2CppString* pool, System::IntPtr customQueryData);
    // static private System.UInt64 ovr_Matchmaking_Enqueue_Native(System.IntPtr pool, System.IntPtr customQueryData)
    // Offset: 0x1CAC0C0
    static uint64_t ovr_Matchmaking_Enqueue_Native(System::IntPtr pool, System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_Enqueue2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1CAC150
    static uint64_t ovr_Matchmaking_Enqueue2(::Il2CppString* pool, System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_Enqueue2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1CAC208
    static uint64_t ovr_Matchmaking_Enqueue2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_EnqueueRoom(System.UInt64 roomID, System.IntPtr customQueryData)
    // Offset: 0x1CAC298
    static uint64_t ovr_Matchmaking_EnqueueRoom(uint64_t roomID, System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_EnqueueRoom2(System.UInt64 roomID, System.IntPtr matchmakingOptions)
    // Offset: 0x1CAC328
    static uint64_t ovr_Matchmaking_EnqueueRoom2(uint64_t roomID, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_GetAdminSnapshot()
    // Offset: 0x1CAC3B8
    static uint64_t ovr_Matchmaking_GetAdminSnapshot();
    // static public System.UInt64 ovr_Matchmaking_GetStats(System.String pool, System.UInt32 maxLevel, Oculus.Platform.MatchmakingStatApproach approach)
    // Offset: 0x1CAC42C
    static uint64_t ovr_Matchmaking_GetStats(::Il2CppString* pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach);
    // static private System.UInt64 ovr_Matchmaking_GetStats_Native(System.IntPtr pool, System.UInt32 maxLevel, Oculus.Platform.MatchmakingStatApproach approach)
    // Offset: 0x1CAC4EC
    static uint64_t ovr_Matchmaking_GetStats_Native(System::IntPtr pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach);
    // static public System.UInt64 ovr_Matchmaking_JoinRoom(System.UInt64 roomID, System.Boolean subscribeToUpdates)
    // Offset: 0x1CAC584
    static uint64_t ovr_Matchmaking_JoinRoom(uint64_t roomID, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Matchmaking_ReportResultInsecure(System.UInt64 roomID, Oculus.Platform.CAPI/ovrKeyValuePair[] data)
    // Offset: 0x1CAC614
    static uint64_t ovr_Matchmaking_ReportResultInsecure(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data);
    // static private System.UInt64 ovr_Matchmaking_ReportResultInsecure_Native(System.UInt64 roomID, Oculus.Platform.CAPI/ovrKeyValuePair[] data, System.UIntPtr numItems)
    // Offset: 0x1CAC6C8
    static uint64_t ovr_Matchmaking_ReportResultInsecure_Native(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data, System::UIntPtr numItems);
    // static public System.UInt64 ovr_Matchmaking_StartMatch(System.UInt64 roomID)
    // Offset: 0x1CAC824
    static uint64_t ovr_Matchmaking_StartMatch(uint64_t roomID);
    // static public System.UInt64 ovr_Media_ShareToFacebook(System.String postTextSuggestion, System.String filePath, Oculus.Platform.MediaContentType contentType)
    // Offset: 0x1CAC8A4
    static uint64_t ovr_Media_ShareToFacebook(::Il2CppString* postTextSuggestion, ::Il2CppString* filePath, Oculus::Platform::MediaContentType contentType);
    // static private System.UInt64 ovr_Media_ShareToFacebook_Native(System.IntPtr postTextSuggestion, System.IntPtr filePath, Oculus.Platform.MediaContentType contentType)
    // Offset: 0x1CAC980
    static uint64_t ovr_Media_ShareToFacebook_Native(System::IntPtr postTextSuggestion, System::IntPtr filePath, Oculus::Platform::MediaContentType contentType);
    // static public System.UInt64 ovr_NetSync_Connect(System.IntPtr connect_options)
    // Offset: 0x1CACA18
    static uint64_t ovr_NetSync_Connect(System::IntPtr connect_options);
    // static public System.UInt64 ovr_NetSync_Disconnect(System.Int64 connection_id)
    // Offset: 0x1CACA98
    static uint64_t ovr_NetSync_Disconnect(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetSessions(System.Int64 connection_id)
    // Offset: 0x1CACB18
    static uint64_t ovr_NetSync_GetSessions(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetVoipAttenuation(System.Int64 connection_id)
    // Offset: 0x1CACB98
    static uint64_t ovr_NetSync_GetVoipAttenuation(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetVoipAttenuationDefault()
    // Offset: 0x1CACC18
    static uint64_t ovr_NetSync_GetVoipAttenuationDefault();
    // static public System.UInt64 ovr_NetSync_SetVoipAttenuation(System.Int64 connection_id, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)
    // Offset: 0x1CACC8C
    static uint64_t ovr_NetSync_SetVoipAttenuation(int64_t connection_id, ::Array<float>* distances, ::Array<float>* decibels, System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipAttenuationModel(System.Int64 connection_id, System.String name, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)
    // Offset: 0x1CACD44
    static uint64_t ovr_NetSync_SetVoipAttenuationModel(int64_t connection_id, ::Il2CppString* name, ::Array<float>* distances, ::Array<float>* decibels, System::UIntPtr count);
    // static private System.UInt64 ovr_NetSync_SetVoipAttenuationModel_Native(System.Int64 connection_id, System.IntPtr name, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)
    // Offset: 0x1CACE20
    static uint64_t ovr_NetSync_SetVoipAttenuationModel_Native(int64_t connection_id, System::IntPtr name, ::Array<float>* distances, ::Array<float>* decibels, System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipChannelCfg(System.Int64 connection_id, System.String channel_name, System.String attnmodel, System.Boolean disable_spatialization)
    // Offset: 0x1CACEE0
    static uint64_t ovr_NetSync_SetVoipChannelCfg(int64_t connection_id, ::Il2CppString* channel_name, ::Il2CppString* attnmodel, bool disable_spatialization);
    // static private System.UInt64 ovr_NetSync_SetVoipChannelCfg_Native(System.Int64 connection_id, System.IntPtr channel_name, System.IntPtr attnmodel, System.Boolean disable_spatialization)
    // Offset: 0x1CACFCC
    static uint64_t ovr_NetSync_SetVoipChannelCfg_Native(int64_t connection_id, System::IntPtr channel_name, System::IntPtr attnmodel, bool disable_spatialization);
    // static public System.UInt64 ovr_NetSync_SetVoipGroup(System.Int64 connection_id, System.String group_id)
    // Offset: 0x1CAD074
    static uint64_t ovr_NetSync_SetVoipGroup(int64_t connection_id, ::Il2CppString* group_id);
    // static private System.UInt64 ovr_NetSync_SetVoipGroup_Native(System.Int64 connection_id, System.IntPtr group_id)
    // Offset: 0x1CAD130
    static uint64_t ovr_NetSync_SetVoipGroup_Native(int64_t connection_id, System::IntPtr group_id);
    // static public System.UInt64 ovr_NetSync_SetVoipListentoChannels(System.Int64 connection_id, System.String[] listento_channels, System.UIntPtr count)
    // Offset: 0x1CAD1C0
    static uint64_t ovr_NetSync_SetVoipListentoChannels(int64_t connection_id, ::Array<::Il2CppString*>* listento_channels, System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipMicSource(System.Int64 connection_id, Oculus.Platform.NetSyncVoipMicSource mic_source)
    // Offset: 0x1CAD324
    static uint64_t ovr_NetSync_SetVoipMicSource(int64_t connection_id, Oculus::Platform::NetSyncVoipMicSource mic_source);
    // static public System.UInt64 ovr_NetSync_SetVoipSessionMuted(System.Int64 connection_id, System.UInt64 session_id, System.Boolean muted)
    // Offset: 0x1CAD3B4
    static uint64_t ovr_NetSync_SetVoipSessionMuted(int64_t connection_id, uint64_t session_id, bool muted);
    // static public System.UInt64 ovr_NetSync_SetVoipSpeaktoChannels(System.Int64 connection_id, System.String[] speakto_channels, System.UIntPtr count)
    // Offset: 0x1CAD44C
    static uint64_t ovr_NetSync_SetVoipSpeaktoChannels(int64_t connection_id, ::Array<::Il2CppString*>* speakto_channels, System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipStreamMode(System.Int64 connection_id, System.UInt64 sessionId, Oculus.Platform.NetSyncVoipStreamMode streamMode)
    // Offset: 0x1CAD5B0
    static uint64_t ovr_NetSync_SetVoipStreamMode(int64_t connection_id, uint64_t sessionId, Oculus::Platform::NetSyncVoipStreamMode streamMode);
    // static public System.UInt64 ovr_Notification_GetRoomInvites()
    // Offset: 0x1CAD648
    static uint64_t ovr_Notification_GetRoomInvites();
    // static public System.UInt64 ovr_Notification_MarkAsRead(System.UInt64 notificationID)
    // Offset: 0x1CAD6BC
    static uint64_t ovr_Notification_MarkAsRead(uint64_t notificationID);
    // static public System.UInt64 ovr_Party_Create()
    // Offset: 0x1CAD73C
    static uint64_t ovr_Party_Create();
    // static public System.UInt64 ovr_Party_GatherInApplication(System.UInt64 partyID, System.UInt64 appID)
    // Offset: 0x1CAD7B0
    static uint64_t ovr_Party_GatherInApplication(uint64_t partyID, uint64_t appID);
    // static public System.UInt64 ovr_Party_Get(System.UInt64 partyID)
    // Offset: 0x1CAD840
    static uint64_t ovr_Party_Get(uint64_t partyID);
    // static public System.UInt64 ovr_Party_GetCurrent()
    // Offset: 0x1CAD8C0
    static uint64_t ovr_Party_GetCurrent();
    // static public System.UInt64 ovr_Party_GetCurrentForUser(System.UInt64 userID)
    // Offset: 0x1CAD934
    static uint64_t ovr_Party_GetCurrentForUser(uint64_t userID);
    // static public System.UInt64 ovr_Party_Invite(System.UInt64 partyID, System.UInt64 userID)
    // Offset: 0x1CAD9B4
    static uint64_t ovr_Party_Invite(uint64_t partyID, uint64_t userID);
    // static public System.UInt64 ovr_Party_Join(System.UInt64 partyID)
    // Offset: 0x1CADA40
    static uint64_t ovr_Party_Join(uint64_t partyID);
    // static public System.UInt64 ovr_Party_Leave(System.UInt64 partyID)
    // Offset: 0x1CADAC0
    static uint64_t ovr_Party_Leave(uint64_t partyID);
    // static public System.UInt64 ovr_RichPresence_Clear()
    // Offset: 0x1CADB40
    static uint64_t ovr_RichPresence_Clear();
    // static public System.UInt64 ovr_RichPresence_GetDestinations()
    // Offset: 0x1CADBB4
    static uint64_t ovr_RichPresence_GetDestinations();
    // static public System.UInt64 ovr_RichPresence_Set(System.IntPtr richPresenceOptions)
    // Offset: 0x1CADC28
    static uint64_t ovr_RichPresence_Set(System::IntPtr richPresenceOptions);
    // static public System.UInt64 ovr_Room_CreateAndJoinPrivate(Oculus.Platform.RoomJoinPolicy joinPolicy, System.UInt32 maxUsers, System.Boolean subscribeToUpdates)
    // Offset: 0x1CADCA8
    static uint64_t ovr_Room_CreateAndJoinPrivate(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Room_CreateAndJoinPrivate2(Oculus.Platform.RoomJoinPolicy joinPolicy, System.UInt32 maxUsers, System.IntPtr roomOptions)
    // Offset: 0x1CADD40
    static uint64_t ovr_Room_CreateAndJoinPrivate2(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, System::IntPtr roomOptions);
    // static public System.UInt64 ovr_Room_Get(System.UInt64 roomID)
    // Offset: 0x1CADDD8
    static uint64_t ovr_Room_Get(uint64_t roomID);
    // static public System.UInt64 ovr_Room_GetCurrent()
    // Offset: 0x1CADE58
    static uint64_t ovr_Room_GetCurrent();
    // static public System.UInt64 ovr_Room_GetCurrentForUser(System.UInt64 userID)
    // Offset: 0x1CADECC
    static uint64_t ovr_Room_GetCurrentForUser(uint64_t userID);
    // static public System.UInt64 ovr_Room_GetInvitableUsers()
    // Offset: 0x1CADF4C
    static uint64_t ovr_Room_GetInvitableUsers();
    // static public System.UInt64 ovr_Room_GetInvitableUsers2(System.IntPtr roomOptions)
    // Offset: 0x1CADFC0
    static uint64_t ovr_Room_GetInvitableUsers2(System::IntPtr roomOptions);
    // static public System.UInt64 ovr_Room_GetModeratedRooms()
    // Offset: 0x1CAE040
    static uint64_t ovr_Room_GetModeratedRooms();
    // static public System.UInt64 ovr_Room_GetSocialRooms(System.UInt64 appID)
    // Offset: 0x1CAE0B4
    static uint64_t ovr_Room_GetSocialRooms(uint64_t appID);
    // static public System.UInt64 ovr_Room_InviteUser(System.UInt64 roomID, System.String inviteToken)
    // Offset: 0x1CAE134
    static uint64_t ovr_Room_InviteUser(uint64_t roomID, ::Il2CppString* inviteToken);
    // static private System.UInt64 ovr_Room_InviteUser_Native(System.UInt64 roomID, System.IntPtr inviteToken)
    // Offset: 0x1CAE1F0
    static uint64_t ovr_Room_InviteUser_Native(uint64_t roomID, System::IntPtr inviteToken);
    // static public System.UInt64 ovr_Room_Join(System.UInt64 roomID, System.Boolean subscribeToUpdates)
    // Offset: 0x1CAE280
    static uint64_t ovr_Room_Join(uint64_t roomID, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Room_Join2(System.UInt64 roomID, System.IntPtr roomOptions)
    // Offset: 0x1CAE310
    static uint64_t ovr_Room_Join2(uint64_t roomID, System::IntPtr roomOptions);
    // static public System.UInt64 ovr_Room_KickUser(System.UInt64 roomID, System.UInt64 userID, System.Int32 kickDurationSeconds)
    // Offset: 0x1CAE3A0
    static uint64_t ovr_Room_KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds);
    // static public System.UInt64 ovr_Room_LaunchInvitableUserFlow(System.UInt64 roomID)
    // Offset: 0x1CAE434
    static uint64_t ovr_Room_LaunchInvitableUserFlow(uint64_t roomID);
    // static public System.UInt64 ovr_Room_Leave(System.UInt64 roomID)
    // Offset: 0x1CAE4B4
    static uint64_t ovr_Room_Leave(uint64_t roomID);
    // static public System.UInt64 ovr_Room_SetDescription(System.UInt64 roomID, System.String description)
    // Offset: 0x1CAE534
    static uint64_t ovr_Room_SetDescription(uint64_t roomID, ::Il2CppString* description);
    // static private System.UInt64 ovr_Room_SetDescription_Native(System.UInt64 roomID, System.IntPtr description)
    // Offset: 0x1CAE5F0
    static uint64_t ovr_Room_SetDescription_Native(uint64_t roomID, System::IntPtr description);
    // static public System.UInt64 ovr_Room_UpdateDataStore(System.UInt64 roomID, Oculus.Platform.CAPI/ovrKeyValuePair[] data)
    // Offset: 0x1CAE680
    static uint64_t ovr_Room_UpdateDataStore(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data);
    // static private System.UInt64 ovr_Room_UpdateDataStore_Native(System.UInt64 roomID, Oculus.Platform.CAPI/ovrKeyValuePair[] data, System.UIntPtr numItems)
    // Offset: 0x1CAE734
    static uint64_t ovr_Room_UpdateDataStore_Native(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data, System::UIntPtr numItems);
    // static public System.UInt64 ovr_Room_UpdateMembershipLockStatus(System.UInt64 roomID, Oculus.Platform.RoomMembershipLockStatus membershipLockStatus)
    // Offset: 0x1CAE88C
    static uint64_t ovr_Room_UpdateMembershipLockStatus(uint64_t roomID, Oculus::Platform::RoomMembershipLockStatus membershipLockStatus);
    // static public System.UInt64 ovr_Room_UpdateOwner(System.UInt64 roomID, System.UInt64 userID)
    // Offset: 0x1CAE91C
    static uint64_t ovr_Room_UpdateOwner(uint64_t roomID, uint64_t userID);
    // static public System.UInt64 ovr_Room_UpdatePrivateRoomJoinPolicy(System.UInt64 roomID, Oculus.Platform.RoomJoinPolicy newJoinPolicy)
    // Offset: 0x1CAE9AC
    static uint64_t ovr_Room_UpdatePrivateRoomJoinPolicy(uint64_t roomID, Oculus::Platform::RoomJoinPolicy newJoinPolicy);
    // static public System.UInt64 ovr_SystemPermissions_GetStatus(Oculus.Platform.PermissionType permType)
    // Offset: 0x1CAEA3C
    static uint64_t ovr_SystemPermissions_GetStatus(Oculus::Platform::PermissionType permType);
    // static public System.UInt64 ovr_SystemPermissions_LaunchDeeplink(Oculus.Platform.PermissionType permType)
    // Offset: 0x1CAEABC
    static uint64_t ovr_SystemPermissions_LaunchDeeplink(Oculus::Platform::PermissionType permType);
    // static public System.UInt64 ovr_User_CancelRecordingForReportFlow(System.String recordingUUID)
    // Offset: 0x1CAEB3C
    static uint64_t ovr_User_CancelRecordingForReportFlow(::Il2CppString* recordingUUID);
    // static private System.UInt64 ovr_User_CancelRecordingForReportFlow_Native(System.IntPtr recordingUUID)
    // Offset: 0x1CAEBE4
    static uint64_t ovr_User_CancelRecordingForReportFlow_Native(System::IntPtr recordingUUID);
    // static public System.UInt64 ovr_User_Get(System.UInt64 userID)
    // Offset: 0x1CAEC64
    static uint64_t ovr_User_Get(uint64_t userID);
    // static public System.UInt64 ovr_User_GetAccessToken()
    // Offset: 0x1CAECE4
    static uint64_t ovr_User_GetAccessToken();
    // static public System.UInt64 ovr_User_GetLinkedAccounts(System.IntPtr userOptions)
    // Offset: 0x1CAED58
    static uint64_t ovr_User_GetLinkedAccounts(System::IntPtr userOptions);
    // static public System.UInt64 ovr_User_GetLoggedInUser()
    // Offset: 0x1CAEDD8
    static uint64_t ovr_User_GetLoggedInUser();
    // static public System.UInt64 ovr_User_GetLoggedInUserFriends()
    // Offset: 0x1CAEE4C
    static uint64_t ovr_User_GetLoggedInUserFriends();
    // static public System.UInt64 ovr_User_GetLoggedInUserFriendsAndRooms()
    // Offset: 0x1CAEEC0
    static uint64_t ovr_User_GetLoggedInUserFriendsAndRooms();
    // static public System.UInt64 ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(System.IntPtr userOptions)
    // Offset: 0x1CAEF34
    static uint64_t ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(System::IntPtr userOptions);
    // static public System.UInt64 ovr_User_GetOrgScopedID(System.UInt64 userID)
    // Offset: 0x1CAEFB4
    static uint64_t ovr_User_GetOrgScopedID(uint64_t userID);
    // static public System.UInt64 ovr_User_GetSdkAccounts()
    // Offset: 0x1CAF034
    static uint64_t ovr_User_GetSdkAccounts();
    // static public System.UInt64 ovr_User_GetUserProof()
    // Offset: 0x1CAF0A8
    static uint64_t ovr_User_GetUserProof();
    // static public System.UInt64 ovr_User_LaunchBlockFlow(System.UInt64 userID)
    // Offset: 0x1CAF11C
    static uint64_t ovr_User_LaunchBlockFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchFriendRequestFlow(System.UInt64 userID)
    // Offset: 0x1CAF19C
    static uint64_t ovr_User_LaunchFriendRequestFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchProfile(System.UInt64 userID)
    // Offset: 0x1CAF21C
    static uint64_t ovr_User_LaunchProfile(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchReportFlow(System.UInt64 userID)
    // Offset: 0x1CAF29C
    static uint64_t ovr_User_LaunchReportFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchReportFlow2(System.UInt64 optionalUserID, System.IntPtr abuseReportOptions)
    // Offset: 0x1CAF31C
    static uint64_t ovr_User_LaunchReportFlow2(uint64_t optionalUserID, System::IntPtr abuseReportOptions);
    // static public System.UInt64 ovr_User_LaunchUnblockFlow(System.UInt64 userID)
    // Offset: 0x1CAF3AC
    static uint64_t ovr_User_LaunchUnblockFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_NewEntitledTestUser()
    // Offset: 0x1CAF42C
    static uint64_t ovr_User_NewEntitledTestUser();
    // static public System.UInt64 ovr_User_NewTestUser()
    // Offset: 0x1CAF4A0
    static uint64_t ovr_User_NewTestUser();
    // static public System.UInt64 ovr_User_NewTestUserFriends()
    // Offset: 0x1CAF514
    static uint64_t ovr_User_NewTestUserFriends();
    // static public System.UInt64 ovr_User_StartRecordingForReportFlow()
    // Offset: 0x1CAF588
    static uint64_t ovr_User_StartRecordingForReportFlow();
    // static public System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow(System.UInt64 optionalUserID, System.String optionalRecordingUUID)
    // Offset: 0x1CAF5FC
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow(uint64_t optionalUserID, ::Il2CppString* optionalRecordingUUID);
    // static private System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID)
    // Offset: 0x1CAF6B8
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow_Native(uint64_t optionalUserID, System::IntPtr optionalRecordingUUID);
    // static public System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2(System.UInt64 optionalUserID, System.String optionalRecordingUUID, System.IntPtr abuseReportOptions)
    // Offset: 0x1CAF748
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow2(uint64_t optionalUserID, ::Il2CppString* optionalRecordingUUID, System::IntPtr abuseReportOptions);
    // static private System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID, System.IntPtr abuseReportOptions)
    // Offset: 0x1CAF80C
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow2_Native(uint64_t optionalUserID, System::IntPtr optionalRecordingUUID, System::IntPtr abuseReportOptions);
    // static public System.UInt64 ovr_User_TestUserCreateDeviceManifest(System.String deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)
    // Offset: 0x1CAF8A4
    static uint64_t ovr_User_TestUserCreateDeviceManifest(::Il2CppString* deviceID, ::Array<uint64_t>* appIDs, int numAppIDs);
    // static private System.UInt64 ovr_User_TestUserCreateDeviceManifest_Native(System.IntPtr deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)
    // Offset: 0x1CAF964
    static uint64_t ovr_User_TestUserCreateDeviceManifest_Native(System::IntPtr deviceID, ::Array<uint64_t>* appIDs, int numAppIDs);
    // static public System.UInt64 ovr_Voip_SetSystemVoipSuppressed(System.Boolean suppressed)
    // Offset: 0x1CAFA04
    static uint64_t ovr_Voip_SetSystemVoipSuppressed(bool suppressed);
    // static public System.String ovr_AbuseReportRecording_GetRecordingUuid(System.IntPtr obj)
    // Offset: 0x1CAFA84
    static ::Il2CppString* ovr_AbuseReportRecording_GetRecordingUuid(System::IntPtr obj);
    // static private System.IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(System.IntPtr obj)
    // Offset: 0x1CAFAEC
    static System::IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_AchievementDefinition_GetBitfieldLength(System.IntPtr obj)
    // Offset: 0x1CAFB6C
    static uint ovr_AchievementDefinition_GetBitfieldLength(System::IntPtr obj);
    // static public System.String ovr_AchievementDefinition_GetName(System.IntPtr obj)
    // Offset: 0x1CAFBEC
    static ::Il2CppString* ovr_AchievementDefinition_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementDefinition_GetName_Native(System.IntPtr obj)
    // Offset: 0x1CAFC54
    static System::IntPtr ovr_AchievementDefinition_GetName_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_AchievementDefinition_GetTarget(System.IntPtr obj)
    // Offset: 0x1CAFCD4
    static uint64_t ovr_AchievementDefinition_GetTarget(System::IntPtr obj);
    // static public Oculus.Platform.AchievementType ovr_AchievementDefinition_GetType(System.IntPtr obj)
    // Offset: 0x1CAFD54
    static Oculus::Platform::AchievementType ovr_AchievementDefinition_GetType(System::IntPtr obj);
    // static public System.IntPtr ovr_AchievementDefinitionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CAFDD4
    static System::IntPtr ovr_AchievementDefinitionArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_AchievementDefinitionArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CAFE64
    static ::Il2CppString* ovr_AchievementDefinitionArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CAFECC
    static System::IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_AchievementDefinitionArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CAFF4C
    static System::UIntPtr ovr_AchievementDefinitionArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_AchievementDefinitionArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CAFFCC
    static bool ovr_AchievementDefinitionArray_HasNextPage(System::IntPtr obj);
    // static public System.String ovr_AchievementProgress_GetBitfield(System.IntPtr obj)
    // Offset: 0x1CB0054
    static ::Il2CppString* ovr_AchievementProgress_GetBitfield(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgress_GetBitfield_Native(System.IntPtr obj)
    // Offset: 0x1CB00BC
    static System::IntPtr ovr_AchievementProgress_GetBitfield_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_AchievementProgress_GetCount(System.IntPtr obj)
    // Offset: 0x1CB013C
    static uint64_t ovr_AchievementProgress_GetCount(System::IntPtr obj);
    // static public System.Boolean ovr_AchievementProgress_GetIsUnlocked(System.IntPtr obj)
    // Offset: 0x1CB01BC
    static bool ovr_AchievementProgress_GetIsUnlocked(System::IntPtr obj);
    // static public System.String ovr_AchievementProgress_GetName(System.IntPtr obj)
    // Offset: 0x1CB0244
    static ::Il2CppString* ovr_AchievementProgress_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgress_GetName_Native(System.IntPtr obj)
    // Offset: 0x1CB02AC
    static System::IntPtr ovr_AchievementProgress_GetName_Native(System::IntPtr obj);
    // static public System.DateTime ovr_AchievementProgress_GetUnlockTime(System.IntPtr obj)
    // Offset: 0x1CB032C
    static System::DateTime ovr_AchievementProgress_GetUnlockTime(System::IntPtr obj);
    // static private System.UInt64 ovr_AchievementProgress_GetUnlockTime_Native(System.IntPtr obj)
    // Offset: 0x1CB0394
    static uint64_t ovr_AchievementProgress_GetUnlockTime_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_AchievementProgressArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB0414
    static System::IntPtr ovr_AchievementProgressArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_AchievementProgressArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CB04A4
    static ::Il2CppString* ovr_AchievementProgressArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB050C
    static System::IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_AchievementProgressArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB058C
    static System::UIntPtr ovr_AchievementProgressArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_AchievementProgressArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CB060C
    static bool ovr_AchievementProgressArray_HasNextPage(System::IntPtr obj);
    // static public System.Boolean ovr_AchievementUpdate_GetJustUnlocked(System.IntPtr obj)
    // Offset: 0x1CB0694
    static bool ovr_AchievementUpdate_GetJustUnlocked(System::IntPtr obj);
    // static public System.String ovr_AchievementUpdate_GetName(System.IntPtr obj)
    // Offset: 0x1CB071C
    static ::Il2CppString* ovr_AchievementUpdate_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementUpdate_GetName_Native(System.IntPtr obj)
    // Offset: 0x1CB0784
    static System::IntPtr ovr_AchievementUpdate_GetName_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_Application_GetID(System.IntPtr obj)
    // Offset: 0x1CB0804
    static uint64_t ovr_Application_GetID(System::IntPtr obj);
    // static public System.Int32 ovr_ApplicationVersion_GetCurrentCode(System.IntPtr obj)
    // Offset: 0x1CB0884
    static int ovr_ApplicationVersion_GetCurrentCode(System::IntPtr obj);
    // static public System.String ovr_ApplicationVersion_GetCurrentName(System.IntPtr obj)
    // Offset: 0x1CB0904
    static ::Il2CppString* ovr_ApplicationVersion_GetCurrentName(System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationVersion_GetCurrentName_Native(System.IntPtr obj)
    // Offset: 0x1CB096C
    static System::IntPtr ovr_ApplicationVersion_GetCurrentName_Native(System::IntPtr obj);
    // static public System.Int32 ovr_ApplicationVersion_GetLatestCode(System.IntPtr obj)
    // Offset: 0x1CB09EC
    static int ovr_ApplicationVersion_GetLatestCode(System::IntPtr obj);
    // static public System.String ovr_ApplicationVersion_GetLatestName(System.IntPtr obj)
    // Offset: 0x1CB0A6C
    static ::Il2CppString* ovr_ApplicationVersion_GetLatestName(System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationVersion_GetLatestName_Native(System.IntPtr obj)
    // Offset: 0x1CB0AD4
    static System::IntPtr ovr_ApplicationVersion_GetLatestName_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetDetails_GetAssetId(System.IntPtr obj)
    // Offset: 0x1CB0B54
    static uint64_t ovr_AssetDetails_GetAssetId(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetAssetType(System.IntPtr obj)
    // Offset: 0x1CB0BD4
    static ::Il2CppString* ovr_AssetDetails_GetAssetType(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetAssetType_Native(System.IntPtr obj)
    // Offset: 0x1CB0C3C
    static System::IntPtr ovr_AssetDetails_GetAssetType_Native(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetDownloadStatus(System.IntPtr obj)
    // Offset: 0x1CB0CBC
    static ::Il2CppString* ovr_AssetDetails_GetDownloadStatus(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetDownloadStatus_Native(System.IntPtr obj)
    // Offset: 0x1CB0D24
    static System::IntPtr ovr_AssetDetails_GetDownloadStatus_Native(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetFilepath(System.IntPtr obj)
    // Offset: 0x1CB0DA4
    static ::Il2CppString* ovr_AssetDetails_GetFilepath(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x1CB0E0C
    static System::IntPtr ovr_AssetDetails_GetFilepath_Native(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetIapStatus(System.IntPtr obj)
    // Offset: 0x1CB0E8C
    static ::Il2CppString* ovr_AssetDetails_GetIapStatus(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetIapStatus_Native(System.IntPtr obj)
    // Offset: 0x1CB0EF4
    static System::IntPtr ovr_AssetDetails_GetIapStatus_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_AssetDetails_GetLanguage(System.IntPtr obj)
    // Offset: 0x1CB0F74
    static System::IntPtr ovr_AssetDetails_GetLanguage(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetMetadata(System.IntPtr obj)
    // Offset: 0x1CB0FF4
    static ::Il2CppString* ovr_AssetDetails_GetMetadata(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetMetadata_Native(System.IntPtr obj)
    // Offset: 0x1CB105C
    static System::IntPtr ovr_AssetDetails_GetMetadata_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_AssetDetailsArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB10DC
    static System::IntPtr ovr_AssetDetailsArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_AssetDetailsArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB116C
    static System::UIntPtr ovr_AssetDetailsArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDeleteResult_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x1CB11EC
    static uint64_t ovr_AssetFileDeleteResult_GetAssetFileId(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDeleteResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x1CB126C
    static uint64_t ovr_AssetFileDeleteResult_GetAssetId(System::IntPtr obj);
    // static public System.String ovr_AssetFileDeleteResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x1CB12EC
    static ::Il2CppString* ovr_AssetFileDeleteResult_GetFilepath(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x1CB1354
    static System::IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDeleteResult_GetSuccess(System.IntPtr obj)
    // Offset: 0x1CB13D4
    static bool ovr_AssetFileDeleteResult_GetSuccess(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x1CB145C
    static uint64_t ovr_AssetFileDownloadCancelResult_GetAssetFileId(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x1CB14DC
    static uint64_t ovr_AssetFileDownloadCancelResult_GetAssetId(System::IntPtr obj);
    // static public System.String ovr_AssetFileDownloadCancelResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x1CB155C
    static ::Il2CppString* ovr_AssetFileDownloadCancelResult_GetFilepath(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x1CB15C4
    static System::IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDownloadCancelResult_GetSuccess(System.IntPtr obj)
    // Offset: 0x1CB1644
    static bool ovr_AssetFileDownloadCancelResult_GetSuccess(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x1CB16CC
    static uint64_t ovr_AssetFileDownloadResult_GetAssetId(System::IntPtr obj);
    // static public System.String ovr_AssetFileDownloadResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x1CB174C
    static ::Il2CppString* ovr_AssetFileDownloadResult_GetFilepath(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x1CB17B4
    static System::IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x1CB1834
    static uint64_t ovr_AssetFileDownloadUpdate_GetAssetFileId(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetId(System.IntPtr obj)
    // Offset: 0x1CB18B4
    static uint64_t ovr_AssetFileDownloadUpdate_GetAssetId(System::IntPtr obj);
    // static public System.UInt32 ovr_AssetFileDownloadUpdate_GetBytesTotal(System.IntPtr obj)
    // Offset: 0x1CB1934
    static uint ovr_AssetFileDownloadUpdate_GetBytesTotal(System::IntPtr obj);
    // static public System.Int32 ovr_AssetFileDownloadUpdate_GetBytesTransferred(System.IntPtr obj)
    // Offset: 0x1CB19B4
    static int ovr_AssetFileDownloadUpdate_GetBytesTransferred(System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDownloadUpdate_GetCompleted(System.IntPtr obj)
    // Offset: 0x1CB1A34
    static bool ovr_AssetFileDownloadUpdate_GetCompleted(System::IntPtr obj);
    // static public System.Int32 ovr_CalApplicationFinalized_GetCountdownMS(System.IntPtr obj)
    // Offset: 0x1CB1ABC
    static int ovr_CalApplicationFinalized_GetCountdownMS(System::IntPtr obj);
    // static public System.UInt64 ovr_CalApplicationFinalized_GetID(System.IntPtr obj)
    // Offset: 0x1CB1B3C
    static uint64_t ovr_CalApplicationFinalized_GetID(System::IntPtr obj);
    // static public System.String ovr_CalApplicationFinalized_GetLaunchDetails(System.IntPtr obj)
    // Offset: 0x1CB1BBC
    static ::Il2CppString* ovr_CalApplicationFinalized_GetLaunchDetails(System::IntPtr obj);
    // static private System.IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(System.IntPtr obj)
    // Offset: 0x1CB1C24
    static System::IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_CalApplicationProposed_GetID(System.IntPtr obj)
    // Offset: 0x1CB1CA4
    static uint64_t ovr_CalApplicationProposed_GetID(System::IntPtr obj);
    // static public System.UInt64 ovr_CalApplicationSuggestion_GetID(System.IntPtr obj)
    // Offset: 0x1CB1D24
    static uint64_t ovr_CalApplicationSuggestion_GetID(System::IntPtr obj);
    // static public System.String ovr_CalApplicationSuggestion_GetSocialContext(System.IntPtr obj)
    // Offset: 0x1CB1DA4
    static ::Il2CppString* ovr_CalApplicationSuggestion_GetSocialContext(System::IntPtr obj);
    // static private System.IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(System.IntPtr obj)
    // Offset: 0x1CB1E0C
    static System::IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_CalApplicationSuggestionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB1E8C
    static System::IntPtr ovr_CalApplicationSuggestionArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_CalApplicationSuggestionArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB1F1C
    static System::UIntPtr ovr_CalApplicationSuggestionArray_GetSize(System::IntPtr obj);
    // static public Oculus.Platform.ChallengeCreationType ovr_Challenge_GetCreationType(System.IntPtr obj)
    // Offset: 0x1CB1F9C
    static Oculus::Platform::ChallengeCreationType ovr_Challenge_GetCreationType(System::IntPtr obj);
    // static public System.String ovr_Challenge_GetDescription(System.IntPtr obj)
    // Offset: 0x1CB201C
    static ::Il2CppString* ovr_Challenge_GetDescription(System::IntPtr obj);
    // static private System.IntPtr ovr_Challenge_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x1CB2084
    static System::IntPtr ovr_Challenge_GetDescription_Native(System::IntPtr obj);
    // static public System.DateTime ovr_Challenge_GetEndDate(System.IntPtr obj)
    // Offset: 0x1CB2104
    static System::DateTime ovr_Challenge_GetEndDate(System::IntPtr obj);
    // static private System.UInt64 ovr_Challenge_GetEndDate_Native(System.IntPtr obj)
    // Offset: 0x1CB216C
    static uint64_t ovr_Challenge_GetEndDate_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_Challenge_GetID(System.IntPtr obj)
    // Offset: 0x1CB21EC
    static uint64_t ovr_Challenge_GetID(System::IntPtr obj);
    // static public System.IntPtr ovr_Challenge_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x1CB226C
    static System::IntPtr ovr_Challenge_GetInvitedUsers(System::IntPtr obj);
    // static public System.IntPtr ovr_Challenge_GetLeaderboard(System.IntPtr obj)
    // Offset: 0x1CB22EC
    static System::IntPtr ovr_Challenge_GetLeaderboard(System::IntPtr obj);
    // static public System.IntPtr ovr_Challenge_GetParticipants(System.IntPtr obj)
    // Offset: 0x1CB236C
    static System::IntPtr ovr_Challenge_GetParticipants(System::IntPtr obj);
    // static public System.DateTime ovr_Challenge_GetStartDate(System.IntPtr obj)
    // Offset: 0x1CB23EC
    static System::DateTime ovr_Challenge_GetStartDate(System::IntPtr obj);
    // static private System.UInt64 ovr_Challenge_GetStartDate_Native(System.IntPtr obj)
    // Offset: 0x1CB2454
    static uint64_t ovr_Challenge_GetStartDate_Native(System::IntPtr obj);
    // static public System.String ovr_Challenge_GetTitle(System.IntPtr obj)
    // Offset: 0x1CB24D4
    static ::Il2CppString* ovr_Challenge_GetTitle(System::IntPtr obj);
    // static private System.IntPtr ovr_Challenge_GetTitle_Native(System.IntPtr obj)
    // Offset: 0x1CB253C
    static System::IntPtr ovr_Challenge_GetTitle_Native(System::IntPtr obj);
    // static public Oculus.Platform.ChallengeVisibility ovr_Challenge_GetVisibility(System.IntPtr obj)
    // Offset: 0x1CB25BC
    static Oculus::Platform::ChallengeVisibility ovr_Challenge_GetVisibility(System::IntPtr obj);
    // static public System.IntPtr ovr_ChallengeArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB263C
    static System::IntPtr ovr_ChallengeArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_ChallengeArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CB26CC
    static ::Il2CppString* ovr_ChallengeArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB2734
    static System::IntPtr ovr_ChallengeArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.String ovr_ChallengeArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x1CB27B4
    static ::Il2CppString* ovr_ChallengeArray_GetPreviousUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB281C
    static System::IntPtr ovr_ChallengeArray_GetPreviousUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_ChallengeArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB289C
    static System::UIntPtr ovr_ChallengeArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_ChallengeArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x1CB291C
    static uint64_t ovr_ChallengeArray_GetTotalCount(System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CB299C
    static bool ovr_ChallengeArray_HasNextPage(System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x1CB2A24
    static bool ovr_ChallengeArray_HasPreviousPage(System::IntPtr obj);
    // static public System.Byte[] ovr_ChallengeEntry_GetExtraData(System.IntPtr obj)
    // Offset: 0x1CB2AAC
    static ::Array<uint8_t>* ovr_ChallengeEntry_GetExtraData(System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntry_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x1CB2BA8
    static System::IntPtr ovr_ChallengeEntry_GetExtraData_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_ChallengeEntry_GetExtraDataLength(System.IntPtr obj)
    // Offset: 0x1CB2C28
    static uint ovr_ChallengeEntry_GetExtraDataLength(System::IntPtr obj);
    // static public System.Int32 ovr_ChallengeEntry_GetRank(System.IntPtr obj)
    // Offset: 0x1CB2CA8
    static int ovr_ChallengeEntry_GetRank(System::IntPtr obj);
    // static public System.Int64 ovr_ChallengeEntry_GetScore(System.IntPtr obj)
    // Offset: 0x1CB2D28
    static int64_t ovr_ChallengeEntry_GetScore(System::IntPtr obj);
    // static public System.DateTime ovr_ChallengeEntry_GetTimestamp(System.IntPtr obj)
    // Offset: 0x1CB2DA8
    static System::DateTime ovr_ChallengeEntry_GetTimestamp(System::IntPtr obj);
    // static private System.UInt64 ovr_ChallengeEntry_GetTimestamp_Native(System.IntPtr obj)
    // Offset: 0x1CB2E10
    static uint64_t ovr_ChallengeEntry_GetTimestamp_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_ChallengeEntry_GetUser(System.IntPtr obj)
    // Offset: 0x1CB2E90
    static System::IntPtr ovr_ChallengeEntry_GetUser(System::IntPtr obj);
    // static public System.IntPtr ovr_ChallengeEntryArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB2F10
    static System::IntPtr ovr_ChallengeEntryArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_ChallengeEntryArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CB2FA0
    static ::Il2CppString* ovr_ChallengeEntryArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntryArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB3008
    static System::IntPtr ovr_ChallengeEntryArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.String ovr_ChallengeEntryArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x1CB3088
    static ::Il2CppString* ovr_ChallengeEntryArray_GetPreviousUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntryArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB30F0
    static System::IntPtr ovr_ChallengeEntryArray_GetPreviousUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_ChallengeEntryArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB3170
    static System::UIntPtr ovr_ChallengeEntryArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_ChallengeEntryArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x1CB31F0
    static uint64_t ovr_ChallengeEntryArray_GetTotalCount(System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeEntryArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CB3270
    static bool ovr_ChallengeEntryArray_HasNextPage(System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeEntryArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x1CB32F8
    static bool ovr_ChallengeEntryArray_HasPreviousPage(System::IntPtr obj);
    // static public System.String ovr_CloudStorage2UserDirectoryPathResponse_GetPath(System.IntPtr obj)
    // Offset: 0x1CB3380
    static ::Il2CppString* ovr_CloudStorage2UserDirectoryPathResponse_GetPath(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(System.IntPtr obj)
    // Offset: 0x1CB33E8
    static System::IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_CloudStorageConflictMetadata_GetLocal(System.IntPtr obj)
    // Offset: 0x1CB3468
    static System::IntPtr ovr_CloudStorageConflictMetadata_GetLocal(System::IntPtr obj);
    // static public System.IntPtr ovr_CloudStorageConflictMetadata_GetRemote(System.IntPtr obj)
    // Offset: 0x1CB34E8
    static System::IntPtr ovr_CloudStorageConflictMetadata_GetRemote(System::IntPtr obj);
    // static public System.String ovr_CloudStorageData_GetBucket(System.IntPtr obj)
    // Offset: 0x1CB3568
    static ::Il2CppString* ovr_CloudStorageData_GetBucket(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageData_GetBucket_Native(System.IntPtr obj)
    // Offset: 0x1CB35D0
    static System::IntPtr ovr_CloudStorageData_GetBucket_Native(System::IntPtr obj);
    // static public System.Byte[] ovr_CloudStorageData_GetData(System.IntPtr obj)
    // Offset: 0x1CB3650
    static ::Array<uint8_t>* ovr_CloudStorageData_GetData(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageData_GetData_Native(System.IntPtr obj)
    // Offset: 0x1CB374C
    static System::IntPtr ovr_CloudStorageData_GetData_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_CloudStorageData_GetDataSize(System.IntPtr obj)
    // Offset: 0x1CB36CC
    static uint ovr_CloudStorageData_GetDataSize(System::IntPtr obj);
    // static public System.String ovr_CloudStorageData_GetKey(System.IntPtr obj)
    // Offset: 0x1CB37CC
    static ::Il2CppString* ovr_CloudStorageData_GetKey(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageData_GetKey_Native(System.IntPtr obj)
    // Offset: 0x1CB3834
    static System::IntPtr ovr_CloudStorageData_GetKey_Native(System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetBucket(System.IntPtr obj)
    // Offset: 0x1CB38B4
    static ::Il2CppString* ovr_CloudStorageMetadata_GetBucket(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetBucket_Native(System.IntPtr obj)
    // Offset: 0x1CB391C
    static System::IntPtr ovr_CloudStorageMetadata_GetBucket_Native(System::IntPtr obj);
    // static public System.Int64 ovr_CloudStorageMetadata_GetCounter(System.IntPtr obj)
    // Offset: 0x1CB399C
    static int64_t ovr_CloudStorageMetadata_GetCounter(System::IntPtr obj);
    // static public System.UInt32 ovr_CloudStorageMetadata_GetDataSize(System.IntPtr obj)
    // Offset: 0x1CB3A1C
    static uint ovr_CloudStorageMetadata_GetDataSize(System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetExtraData(System.IntPtr obj)
    // Offset: 0x1CB3A9C
    static ::Il2CppString* ovr_CloudStorageMetadata_GetExtraData(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x1CB3B04
    static System::IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetKey(System.IntPtr obj)
    // Offset: 0x1CB3B84
    static ::Il2CppString* ovr_CloudStorageMetadata_GetKey(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetKey_Native(System.IntPtr obj)
    // Offset: 0x1CB3BEC
    static System::IntPtr ovr_CloudStorageMetadata_GetKey_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_CloudStorageMetadata_GetSaveTime(System.IntPtr obj)
    // Offset: 0x1CB3C6C
    static uint64_t ovr_CloudStorageMetadata_GetSaveTime(System::IntPtr obj);
    // static public Oculus.Platform.CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(System.IntPtr obj)
    // Offset: 0x1CB3CEC
    static Oculus::Platform::CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetVersionHandle(System.IntPtr obj)
    // Offset: 0x1CB3D6C
    static ::Il2CppString* ovr_CloudStorageMetadata_GetVersionHandle(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(System.IntPtr obj)
    // Offset: 0x1CB3DD4
    static System::IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_CloudStorageMetadataArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB3E54
    static System::IntPtr ovr_CloudStorageMetadataArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_CloudStorageMetadataArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CB3EE4
    static ::Il2CppString* ovr_CloudStorageMetadataArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB3F4C
    static System::IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_CloudStorageMetadataArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB3FCC
    static System::UIntPtr ovr_CloudStorageMetadataArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_CloudStorageMetadataArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CB404C
    static bool ovr_CloudStorageMetadataArray_HasNextPage(System::IntPtr obj);
    // static public System.String ovr_CloudStorageUpdateResponse_GetBucket(System.IntPtr obj)
    // Offset: 0x1CB40D4
    static ::Il2CppString* ovr_CloudStorageUpdateResponse_GetBucket(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(System.IntPtr obj)
    // Offset: 0x1CB413C
    static System::IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(System::IntPtr obj);
    // static public System.String ovr_CloudStorageUpdateResponse_GetKey(System.IntPtr obj)
    // Offset: 0x1CB41BC
    static ::Il2CppString* ovr_CloudStorageUpdateResponse_GetKey(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(System.IntPtr obj)
    // Offset: 0x1CB4224
    static System::IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(System::IntPtr obj);
    // static public Oculus.Platform.CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(System.IntPtr obj)
    // Offset: 0x1CB42A4
    static Oculus::Platform::CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(System::IntPtr obj);
    // static public System.String ovr_CloudStorageUpdateResponse_GetVersionHandle(System.IntPtr obj)
    // Offset: 0x1CB4324
    static ::Il2CppString* ovr_CloudStorageUpdateResponse_GetVersionHandle(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(System.IntPtr obj)
    // Offset: 0x1CB438C
    static System::IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_DataStore_Contains(System.IntPtr obj, System.String key)
    // Offset: 0x1CB440C
    static uint ovr_DataStore_Contains(System::IntPtr obj, ::Il2CppString* key);
    // static private System.UInt32 ovr_DataStore_Contains_Native(System.IntPtr obj, System.IntPtr key)
    // Offset: 0x1CB44C8
    static uint ovr_DataStore_Contains_Native(System::IntPtr obj, System::IntPtr key);
    // static public System.String ovr_DataStore_GetKey(System.IntPtr obj, System.Int32 index)
    // Offset: 0x1CA43D4
    static ::Il2CppString* ovr_DataStore_GetKey(System::IntPtr obj, int index);
    // static private System.IntPtr ovr_DataStore_GetKey_Native(System.IntPtr obj, System.Int32 index)
    // Offset: 0x1CB4558
    static System::IntPtr ovr_DataStore_GetKey_Native(System::IntPtr obj, int index);
    // static public System.UIntPtr ovr_DataStore_GetNumKeys(System.IntPtr obj)
    // Offset: 0x1CA4354
    static System::UIntPtr ovr_DataStore_GetNumKeys(System::IntPtr obj);
    // static public System.String ovr_DataStore_GetValue(System.IntPtr obj, System.String key)
    // Offset: 0x1CA444C
    static ::Il2CppString* ovr_DataStore_GetValue(System::IntPtr obj, ::Il2CppString* key);
    // static private System.IntPtr ovr_DataStore_GetValue_Native(System.IntPtr obj, System.IntPtr key)
    // Offset: 0x1CB45E8
    static System::IntPtr ovr_DataStore_GetValue_Native(System::IntPtr obj, System::IntPtr key);
    // static public System.String ovr_Destination_GetApiName(System.IntPtr obj)
    // Offset: 0x1CB4678
    static ::Il2CppString* ovr_Destination_GetApiName(System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetApiName_Native(System.IntPtr obj)
    // Offset: 0x1CB46E0
    static System::IntPtr ovr_Destination_GetApiName_Native(System::IntPtr obj);
    // static public System.String ovr_Destination_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x1CB4760
    static ::Il2CppString* ovr_Destination_GetDeeplinkMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x1CB47C8
    static System::IntPtr ovr_Destination_GetDeeplinkMessage_Native(System::IntPtr obj);
    // static public System.String ovr_Destination_GetDisplayName(System.IntPtr obj)
    // Offset: 0x1CB4848
    static ::Il2CppString* ovr_Destination_GetDisplayName(System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetDisplayName_Native(System.IntPtr obj)
    // Offset: 0x1CB48B0
    static System::IntPtr ovr_Destination_GetDisplayName_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_DestinationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB4930
    static System::IntPtr ovr_DestinationArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_DestinationArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CB49C0
    static ::Il2CppString* ovr_DestinationArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_DestinationArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB4A28
    static System::IntPtr ovr_DestinationArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_DestinationArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB4AA8
    static System::UIntPtr ovr_DestinationArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_DestinationArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CB4B28
    static bool ovr_DestinationArray_HasNextPage(System::IntPtr obj);
    // static public System.Int32 ovr_Error_GetCode(System.IntPtr obj)
    // Offset: 0x1CB4BB0
    static int ovr_Error_GetCode(System::IntPtr obj);
    // static public System.String ovr_Error_GetDisplayableMessage(System.IntPtr obj)
    // Offset: 0x1CB4C2C
    static ::Il2CppString* ovr_Error_GetDisplayableMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_Error_GetDisplayableMessage_Native(System.IntPtr obj)
    // Offset: 0x1CB4C94
    static System::IntPtr ovr_Error_GetDisplayableMessage_Native(System::IntPtr obj);
    // static public System.Int32 ovr_Error_GetHttpCode(System.IntPtr obj)
    // Offset: 0x1CB4D14
    static int ovr_Error_GetHttpCode(System::IntPtr obj);
    // static public System.String ovr_Error_GetMessage(System.IntPtr obj)
    // Offset: 0x1CB4D94
    static ::Il2CppString* ovr_Error_GetMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_Error_GetMessage_Native(System.IntPtr obj)
    // Offset: 0x1CB4DFC
    static System::IntPtr ovr_Error_GetMessage_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_HttpTransferUpdate_GetBytes(System.IntPtr obj)
    // Offset: 0x1CB4E7C
    static System::IntPtr ovr_HttpTransferUpdate_GetBytes(System::IntPtr obj);
    // static public System.UInt64 ovr_HttpTransferUpdate_GetID(System.IntPtr obj)
    // Offset: 0x1CB4EFC
    static uint64_t ovr_HttpTransferUpdate_GetID(System::IntPtr obj);
    // static public System.UIntPtr ovr_HttpTransferUpdate_GetSize(System.IntPtr obj)
    // Offset: 0x1CB4F7C
    static System::UIntPtr ovr_HttpTransferUpdate_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_HttpTransferUpdate_IsCompleted(System.IntPtr obj)
    // Offset: 0x1CB4FFC
    static bool ovr_HttpTransferUpdate_IsCompleted(System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetApplicationId(System.IntPtr obj)
    // Offset: 0x1CB5084
    static ::Il2CppString* ovr_InstalledApplication_GetApplicationId(System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetApplicationId_Native(System.IntPtr obj)
    // Offset: 0x1CB50EC
    static System::IntPtr ovr_InstalledApplication_GetApplicationId_Native(System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetPackageName(System.IntPtr obj)
    // Offset: 0x1CB516C
    static ::Il2CppString* ovr_InstalledApplication_GetPackageName(System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetPackageName_Native(System.IntPtr obj)
    // Offset: 0x1CB51D4
    static System::IntPtr ovr_InstalledApplication_GetPackageName_Native(System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetStatus(System.IntPtr obj)
    // Offset: 0x1CB5254
    static ::Il2CppString* ovr_InstalledApplication_GetStatus(System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetStatus_Native(System.IntPtr obj)
    // Offset: 0x1CB52BC
    static System::IntPtr ovr_InstalledApplication_GetStatus_Native(System::IntPtr obj);
    // static public System.Int32 ovr_InstalledApplication_GetVersionCode(System.IntPtr obj)
    // Offset: 0x1CB533C
    static int ovr_InstalledApplication_GetVersionCode(System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetVersionName(System.IntPtr obj)
    // Offset: 0x1CB53BC
    static ::Il2CppString* ovr_InstalledApplication_GetVersionName(System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetVersionName_Native(System.IntPtr obj)
    // Offset: 0x1CB5424
    static System::IntPtr ovr_InstalledApplication_GetVersionName_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_InstalledApplicationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB54A4
    static System::IntPtr ovr_InstalledApplicationArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_InstalledApplicationArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB5534
    static System::UIntPtr ovr_InstalledApplicationArray_GetSize(System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetEnglishName(System.IntPtr obj)
    // Offset: 0x1CB55B4
    static ::Il2CppString* ovr_LanguagePackInfo_GetEnglishName(System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(System.IntPtr obj)
    // Offset: 0x1CB561C
    static System::IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetNativeName(System.IntPtr obj)
    // Offset: 0x1CB569C
    static ::Il2CppString* ovr_LanguagePackInfo_GetNativeName(System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetNativeName_Native(System.IntPtr obj)
    // Offset: 0x1CB5704
    static System::IntPtr ovr_LanguagePackInfo_GetNativeName_Native(System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetTag(System.IntPtr obj)
    // Offset: 0x1CB5784
    static ::Il2CppString* ovr_LanguagePackInfo_GetTag(System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetTag_Native(System.IntPtr obj)
    // Offset: 0x1CB57EC
    static System::IntPtr ovr_LanguagePackInfo_GetTag_Native(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchBlockFlowResult_GetDidBlock(System.IntPtr obj)
    // Offset: 0x1CB586C
    static bool ovr_LaunchBlockFlowResult_GetDidBlock(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchBlockFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1CB58F4
    static bool ovr_LaunchBlockFlowResult_GetDidCancel(System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x1CB597C
    static ::Il2CppString* ovr_LaunchDetails_GetDeeplinkMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x1CB59E4
    static System::IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetDestinationApiName(System.IntPtr obj)
    // Offset: 0x1CB5A64
    static ::Il2CppString* ovr_LaunchDetails_GetDestinationApiName(System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x1CB5ACC
    static System::IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetLaunchSource(System.IntPtr obj)
    // Offset: 0x1CB5B4C
    static ::Il2CppString* ovr_LaunchDetails_GetLaunchSource(System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetLaunchSource_Native(System.IntPtr obj)
    // Offset: 0x1CB5BB4
    static System::IntPtr ovr_LaunchDetails_GetLaunchSource_Native(System::IntPtr obj);
    // static public Oculus.Platform.LaunchType ovr_LaunchDetails_GetLaunchType(System.IntPtr obj)
    // Offset: 0x1CB5C34
    static Oculus::Platform::LaunchType ovr_LaunchDetails_GetLaunchType(System::IntPtr obj);
    // static public System.UInt64 ovr_LaunchDetails_GetRoomID(System.IntPtr obj)
    // Offset: 0x1CB5CB4
    static uint64_t ovr_LaunchDetails_GetRoomID(System::IntPtr obj);
    // static public System.IntPtr ovr_LaunchDetails_GetUsers(System.IntPtr obj)
    // Offset: 0x1CB5D34
    static System::IntPtr ovr_LaunchDetails_GetUsers(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1CB5DB4
    static bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(System.IntPtr obj)
    // Offset: 0x1CB5E3C
    static bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchReportFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1CB5EC4
    static bool ovr_LaunchReportFlowResult_GetDidCancel(System::IntPtr obj);
    // static public System.UInt64 ovr_LaunchReportFlowResult_GetUserReportId(System.IntPtr obj)
    // Offset: 0x1CB5F4C
    static uint64_t ovr_LaunchReportFlowResult_GetUserReportId(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchUnblockFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1CB5FCC
    static bool ovr_LaunchUnblockFlowResult_GetDidCancel(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchUnblockFlowResult_GetDidUnblock(System.IntPtr obj)
    // Offset: 0x1CB6054
    static bool ovr_LaunchUnblockFlowResult_GetDidUnblock(System::IntPtr obj);
    // static public System.String ovr_Leaderboard_GetApiName(System.IntPtr obj)
    // Offset: 0x1CB60DC
    static ::Il2CppString* ovr_Leaderboard_GetApiName(System::IntPtr obj);
    // static private System.IntPtr ovr_Leaderboard_GetApiName_Native(System.IntPtr obj)
    // Offset: 0x1CB6144
    static System::IntPtr ovr_Leaderboard_GetApiName_Native(System::IntPtr obj);
    // static public System.Byte[] ovr_LeaderboardEntry_GetExtraData(System.IntPtr obj)
    // Offset: 0x1CB61C4
    static ::Array<uint8_t>* ovr_LeaderboardEntry_GetExtraData(System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntry_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x1CB6240
    static System::IntPtr ovr_LeaderboardEntry_GetExtraData_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_LeaderboardEntry_GetExtraDataLength(System.IntPtr obj)
    // Offset: 0x1CB2B28
    static uint ovr_LeaderboardEntry_GetExtraDataLength(System::IntPtr obj);
    // static public System.Int32 ovr_LeaderboardEntry_GetRank(System.IntPtr obj)
    // Offset: 0x1CB62C0
    static int ovr_LeaderboardEntry_GetRank(System::IntPtr obj);
    // static public System.Int64 ovr_LeaderboardEntry_GetScore(System.IntPtr obj)
    // Offset: 0x1CB6340
    static int64_t ovr_LeaderboardEntry_GetScore(System::IntPtr obj);
    // static public System.DateTime ovr_LeaderboardEntry_GetTimestamp(System.IntPtr obj)
    // Offset: 0x1CB63C0
    static System::DateTime ovr_LeaderboardEntry_GetTimestamp(System::IntPtr obj);
    // static private System.UInt64 ovr_LeaderboardEntry_GetTimestamp_Native(System.IntPtr obj)
    // Offset: 0x1CB6428
    static uint64_t ovr_LeaderboardEntry_GetTimestamp_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntry_GetUser(System.IntPtr obj)
    // Offset: 0x1CB64A8
    static System::IntPtr ovr_LeaderboardEntry_GetUser(System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntryArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB6528
    static System::IntPtr ovr_LeaderboardEntryArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_LeaderboardEntryArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CB65B8
    static ::Il2CppString* ovr_LeaderboardEntryArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB6620
    static System::IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.String ovr_LeaderboardEntryArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x1CB66A0
    static ::Il2CppString* ovr_LeaderboardEntryArray_GetPreviousUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB6708
    static System::IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_LeaderboardEntryArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB6788
    static System::UIntPtr ovr_LeaderboardEntryArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_LeaderboardEntryArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x1CB6808
    static uint64_t ovr_LeaderboardEntryArray_GetTotalCount(System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardEntryArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CB6888
    static bool ovr_LeaderboardEntryArray_HasNextPage(System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardEntryArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x1CB6910
    static bool ovr_LeaderboardEntryArray_HasPreviousPage(System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardUpdateStatus_GetDidUpdate(System.IntPtr obj)
    // Offset: 0x1CB6998
    static bool ovr_LeaderboardUpdateStatus_GetDidUpdate(System::IntPtr obj);
    // static public System.UInt64 ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(System.IntPtr obj, System.UInt32 index)
    // Offset: 0x1CB6A20
    static uint64_t ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(System::IntPtr obj, uint index);
    // static public System.UInt32 ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(System.IntPtr obj)
    // Offset: 0x1CB6AB0
    static uint ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(System::IntPtr obj);
    // static public System.String ovr_LinkedAccount_GetAccessToken(System.IntPtr obj)
    // Offset: 0x1CB6B30
    static ::Il2CppString* ovr_LinkedAccount_GetAccessToken(System::IntPtr obj);
    // static private System.IntPtr ovr_LinkedAccount_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x1CB6B98
    static System::IntPtr ovr_LinkedAccount_GetAccessToken_Native(System::IntPtr obj);
    // static public Oculus.Platform.ServiceProvider ovr_LinkedAccount_GetServiceProvider(System.IntPtr obj)
    // Offset: 0x1CB6C18
    static Oculus::Platform::ServiceProvider ovr_LinkedAccount_GetServiceProvider(System::IntPtr obj);
    // static public System.String ovr_LinkedAccount_GetUserId(System.IntPtr obj)
    // Offset: 0x1CB6C98
    static ::Il2CppString* ovr_LinkedAccount_GetUserId(System::IntPtr obj);
    // static private System.IntPtr ovr_LinkedAccount_GetUserId_Native(System.IntPtr obj)
    // Offset: 0x1CB6D00
    static System::IntPtr ovr_LinkedAccount_GetUserId_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_LinkedAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB6D80
    static System::IntPtr ovr_LinkedAccountArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_LinkedAccountArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB6E10
    static System::UIntPtr ovr_LinkedAccountArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingApplicationStatus_GetStreamingEnabled(System.IntPtr obj)
    // Offset: 0x1CB6E90
    static bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(System::IntPtr obj);
    // static public Oculus.Platform.LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(System.IntPtr obj)
    // Offset: 0x1CB6F18
    static Oculus::Platform::LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetCommentsVisible(System.IntPtr obj)
    // Offset: 0x1CB6F98
    static bool ovr_LivestreamingStatus_GetCommentsVisible(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetIsPaused(System.IntPtr obj)
    // Offset: 0x1CB7020
    static bool ovr_LivestreamingStatus_GetIsPaused(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetLivestreamingEnabled(System.IntPtr obj)
    // Offset: 0x1CB70A8
    static bool ovr_LivestreamingStatus_GetLivestreamingEnabled(System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingStatus_GetLivestreamingType(System.IntPtr obj)
    // Offset: 0x1CB7130
    static int ovr_LivestreamingStatus_GetLivestreamingType(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetMicEnabled(System.IntPtr obj)
    // Offset: 0x1CB71B0
    static bool ovr_LivestreamingStatus_GetMicEnabled(System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingVideoStats_GetCommentCount(System.IntPtr obj)
    // Offset: 0x1CB7238
    static int ovr_LivestreamingVideoStats_GetCommentCount(System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingVideoStats_GetReactionCount(System.IntPtr obj)
    // Offset: 0x1CB72B8
    static int ovr_LivestreamingVideoStats_GetReactionCount(System::IntPtr obj);
    // static public System.String ovr_LivestreamingVideoStats_GetTotalViews(System.IntPtr obj)
    // Offset: 0x1CB7338
    static ::Il2CppString* ovr_LivestreamingVideoStats_GetTotalViews(System::IntPtr obj);
    // static private System.IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(System.IntPtr obj)
    // Offset: 0x1CB73A0
    static System::IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(System.IntPtr obj)
    // Offset: 0x1CB7420
    static System::IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(System.IntPtr obj)
    // Offset: 0x1CB74A0
    static double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(System::IntPtr obj);
    // static public System.Boolean ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(System.IntPtr obj)
    // Offset: 0x1CB7520
    static bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(System.IntPtr obj)
    // Offset: 0x1CB75A8
    static double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(System.IntPtr obj)
    // Offset: 0x1CB7628
    static double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(System.IntPtr obj)
    // Offset: 0x1CB76A8
    static double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(System::IntPtr obj);
    // static public System.String ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(System.IntPtr obj)
    // Offset: 0x1CB7728
    static ::Il2CppString* ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(System.IntPtr obj)
    // Offset: 0x1CB7790
    static System::IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB7810
    static System::IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB78A0
    static System::UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(System.IntPtr obj)
    // Offset: 0x1CB7920
    static System::IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingBrowseResult_GetRooms(System.IntPtr obj)
    // Offset: 0x1CB79A0
    static System::IntPtr ovr_MatchmakingBrowseResult_GetRooms(System::IntPtr obj);
    // static public System.String ovr_MatchmakingCandidate_GetEntryHash(System.IntPtr obj)
    // Offset: 0x1CB7A20
    static ::Il2CppString* ovr_MatchmakingCandidate_GetEntryHash(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(System.IntPtr obj)
    // Offset: 0x1CB7A88
    static System::IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_MatchmakingCandidate_GetUserId(System.IntPtr obj)
    // Offset: 0x1CB7B08
    static uint64_t ovr_MatchmakingCandidate_GetUserId(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingCandidateArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB7B88
    static System::IntPtr ovr_MatchmakingCandidateArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_MatchmakingCandidateArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CB7C18
    static ::Il2CppString* ovr_MatchmakingCandidateArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CB7C80
    static System::IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_MatchmakingCandidateArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB7D00
    static System::UIntPtr ovr_MatchmakingCandidateArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_MatchmakingCandidateArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CB7D80
    static bool ovr_MatchmakingCandidateArray_HasNextPage(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(System.IntPtr obj)
    // Offset: 0x1CB7E08
    static System::IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetAverageWait(System.IntPtr obj)
    // Offset: 0x1CB7E88
    static uint ovr_MatchmakingEnqueueResult_GetAverageWait(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(System.IntPtr obj)
    // Offset: 0x1CB7F08
    static uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(System.IntPtr obj)
    // Offset: 0x1CB7F88
    static uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(System::IntPtr obj);
    // static public System.String ovr_MatchmakingEnqueueResult_GetPool(System.IntPtr obj)
    // Offset: 0x1CB8008
    static ::Il2CppString* ovr_MatchmakingEnqueueResult_GetPool(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(System.IntPtr obj)
    // Offset: 0x1CB8070
    static System::IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(System.IntPtr obj)
    // Offset: 0x1CB80F0
    static uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(System::IntPtr obj);
    // static public System.String ovr_MatchmakingEnqueueResult_GetRequestHash(System.IntPtr obj)
    // Offset: 0x1CB8170
    static ::Il2CppString* ovr_MatchmakingEnqueueResult_GetRequestHash(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(System.IntPtr obj)
    // Offset: 0x1CB81D8
    static System::IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(System.IntPtr obj)
    // Offset: 0x1CB8258
    static System::IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(System.IntPtr obj)
    // Offset: 0x1CB82D8
    static System::IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(System::IntPtr obj);
    // static public System.UInt64 ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(System.IntPtr obj, System.UInt32 index)
    // Offset: 0x1CB8358
    static uint64_t ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(System::IntPtr obj, uint index);
    // static public System.UInt32 ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(System.IntPtr obj)
    // Offset: 0x1CB83E8
    static uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(System.IntPtr obj)
    // Offset: 0x1CB8468
    static System::IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueuedUser_GetUser(System.IntPtr obj)
    // Offset: 0x1CB84E8
    static System::IntPtr ovr_MatchmakingEnqueuedUser_GetUser(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB8568
    static System::IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB85F8
    static System::UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_MatchmakingNotification_GetAddedByUserId(System.IntPtr obj)
    // Offset: 0x1CB8678
    static uint64_t ovr_MatchmakingNotification_GetAddedByUserId(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingNotification_GetRoom(System.IntPtr obj)
    // Offset: 0x1CB86F8
    static System::IntPtr ovr_MatchmakingNotification_GetRoom(System::IntPtr obj);
    // static public System.String ovr_MatchmakingNotification_GetTraceId(System.IntPtr obj)
    // Offset: 0x1CB8778
    static ::Il2CppString* ovr_MatchmakingNotification_GetTraceId(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingNotification_GetTraceId_Native(System.IntPtr obj)
    // Offset: 0x1CB87E0
    static System::IntPtr ovr_MatchmakingNotification_GetTraceId_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingRoom_GetPingTime(System.IntPtr obj)
    // Offset: 0x1CB8860
    static uint ovr_MatchmakingRoom_GetPingTime(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingRoom_GetRoom(System.IntPtr obj)
    // Offset: 0x1CB88E0
    static System::IntPtr ovr_MatchmakingRoom_GetRoom(System::IntPtr obj);
    // static public System.Boolean ovr_MatchmakingRoom_HasPingTime(System.IntPtr obj)
    // Offset: 0x1CB8960
    static bool ovr_MatchmakingRoom_HasPingTime(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingRoomArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CB89E8
    static System::IntPtr ovr_MatchmakingRoomArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_MatchmakingRoomArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CB8A78
    static System::UIntPtr ovr_MatchmakingRoomArray_GetSize(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetDrawCount(System.IntPtr obj)
    // Offset: 0x1CB8AF8
    static uint ovr_MatchmakingStats_GetDrawCount(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetLossCount(System.IntPtr obj)
    // Offset: 0x1CB8B78
    static uint ovr_MatchmakingStats_GetLossCount(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetSkillLevel(System.IntPtr obj)
    // Offset: 0x1CB8BF8
    static uint ovr_MatchmakingStats_GetSkillLevel(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingStats_GetSkillMean(System.IntPtr obj)
    // Offset: 0x1CB8C78
    static double ovr_MatchmakingStats_GetSkillMean(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingStats_GetSkillStandardDeviation(System.IntPtr obj)
    // Offset: 0x1CB8CF8
    static double ovr_MatchmakingStats_GetSkillStandardDeviation(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetWinCount(System.IntPtr obj)
    // Offset: 0x1CB8D78
    static uint ovr_MatchmakingStats_GetWinCount(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAbuseReportRecording(System.IntPtr obj)
    // Offset: 0x1CB8DF8
    static System::IntPtr ovr_Message_GetAbuseReportRecording(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementDefinitionArray(System.IntPtr obj)
    // Offset: 0x1CB8E78
    static System::IntPtr ovr_Message_GetAchievementDefinitionArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementProgressArray(System.IntPtr obj)
    // Offset: 0x1CB8EF8
    static System::IntPtr ovr_Message_GetAchievementProgressArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementUpdate(System.IntPtr obj)
    // Offset: 0x1CB8F78
    static System::IntPtr ovr_Message_GetAchievementUpdate(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetApplicationVersion(System.IntPtr obj)
    // Offset: 0x1CB8FF8
    static System::IntPtr ovr_Message_GetApplicationVersion(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetDetails(System.IntPtr obj)
    // Offset: 0x1CB9078
    static System::IntPtr ovr_Message_GetAssetDetails(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetDetailsArray(System.IntPtr obj)
    // Offset: 0x1CB90F8
    static System::IntPtr ovr_Message_GetAssetDetailsArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDeleteResult(System.IntPtr obj)
    // Offset: 0x1CB9178
    static System::IntPtr ovr_Message_GetAssetFileDeleteResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadCancelResult(System.IntPtr obj)
    // Offset: 0x1CB91F8
    static System::IntPtr ovr_Message_GetAssetFileDownloadCancelResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadResult(System.IntPtr obj)
    // Offset: 0x1CB9278
    static System::IntPtr ovr_Message_GetAssetFileDownloadResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadUpdate(System.IntPtr obj)
    // Offset: 0x1CB92F8
    static System::IntPtr ovr_Message_GetAssetFileDownloadUpdate(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCalApplicationFinalized(System.IntPtr obj)
    // Offset: 0x1CB9378
    static System::IntPtr ovr_Message_GetCalApplicationFinalized(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCalApplicationProposed(System.IntPtr obj)
    // Offset: 0x1CB93F8
    static System::IntPtr ovr_Message_GetCalApplicationProposed(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCalApplicationSuggestionArray(System.IntPtr obj)
    // Offset: 0x1CB9478
    static System::IntPtr ovr_Message_GetCalApplicationSuggestionArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetChallenge(System.IntPtr obj)
    // Offset: 0x1CB94F8
    static System::IntPtr ovr_Message_GetChallenge(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetChallengeArray(System.IntPtr obj)
    // Offset: 0x1CB9578
    static System::IntPtr ovr_Message_GetChallengeArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetChallengeEntryArray(System.IntPtr obj)
    // Offset: 0x1CB95F8
    static System::IntPtr ovr_Message_GetChallengeEntryArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageConflictMetadata(System.IntPtr obj)
    // Offset: 0x1CB9678
    static System::IntPtr ovr_Message_GetCloudStorageConflictMetadata(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageData(System.IntPtr obj)
    // Offset: 0x1CB96F8
    static System::IntPtr ovr_Message_GetCloudStorageData(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageMetadata(System.IntPtr obj)
    // Offset: 0x1CB9778
    static System::IntPtr ovr_Message_GetCloudStorageMetadata(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageMetadataArray(System.IntPtr obj)
    // Offset: 0x1CB97F8
    static System::IntPtr ovr_Message_GetCloudStorageMetadataArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageUpdateResponse(System.IntPtr obj)
    // Offset: 0x1CB9878
    static System::IntPtr ovr_Message_GetCloudStorageUpdateResponse(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetDestinationArray(System.IntPtr obj)
    // Offset: 0x1CB98F8
    static System::IntPtr ovr_Message_GetDestinationArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetError(System.IntPtr obj)
    // Offset: 0x1CB9978
    static System::IntPtr ovr_Message_GetError(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetHttpTransferUpdate(System.IntPtr obj)
    // Offset: 0x1CB99F8
    static System::IntPtr ovr_Message_GetHttpTransferUpdate(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetInstalledApplicationArray(System.IntPtr obj)
    // Offset: 0x1CB9A78
    static System::IntPtr ovr_Message_GetInstalledApplicationArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchBlockFlowResult(System.IntPtr obj)
    // Offset: 0x1CB9AF8
    static System::IntPtr ovr_Message_GetLaunchBlockFlowResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(System.IntPtr obj)
    // Offset: 0x1CB9B78
    static System::IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchReportFlowResult(System.IntPtr obj)
    // Offset: 0x1CB9BF8
    static System::IntPtr ovr_Message_GetLaunchReportFlowResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchUnblockFlowResult(System.IntPtr obj)
    // Offset: 0x1CB9C78
    static System::IntPtr ovr_Message_GetLaunchUnblockFlowResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardEntryArray(System.IntPtr obj)
    // Offset: 0x1CB9CF8
    static System::IntPtr ovr_Message_GetLeaderboardEntryArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardUpdateStatus(System.IntPtr obj)
    // Offset: 0x1CB9D78
    static System::IntPtr ovr_Message_GetLeaderboardUpdateStatus(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLinkedAccountArray(System.IntPtr obj)
    // Offset: 0x1CB9DF8
    static System::IntPtr ovr_Message_GetLinkedAccountArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingApplicationStatus(System.IntPtr obj)
    // Offset: 0x1CB9E78
    static System::IntPtr ovr_Message_GetLivestreamingApplicationStatus(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingStartResult(System.IntPtr obj)
    // Offset: 0x1CB9EF8
    static System::IntPtr ovr_Message_GetLivestreamingStartResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingStatus(System.IntPtr obj)
    // Offset: 0x1CB9F78
    static System::IntPtr ovr_Message_GetLivestreamingStatus(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingVideoStats(System.IntPtr obj)
    // Offset: 0x1CB9FF8
    static System::IntPtr ovr_Message_GetLivestreamingVideoStats(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingAdminSnapshot(System.IntPtr obj)
    // Offset: 0x1CBA078
    static System::IntPtr ovr_Message_GetMatchmakingAdminSnapshot(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingBrowseResult(System.IntPtr obj)
    // Offset: 0x1CBA0F8
    static System::IntPtr ovr_Message_GetMatchmakingBrowseResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingEnqueueResult(System.IntPtr obj)
    // Offset: 0x1CBA178
    static System::IntPtr ovr_Message_GetMatchmakingEnqueueResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(System.IntPtr obj)
    // Offset: 0x1CBA1F8
    static System::IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingRoomArray(System.IntPtr obj)
    // Offset: 0x1CBA278
    static System::IntPtr ovr_Message_GetMatchmakingRoomArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingStats(System.IntPtr obj)
    // Offset: 0x1CBA2F8
    static System::IntPtr ovr_Message_GetMatchmakingStats(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNativeMessage(System.IntPtr obj)
    // Offset: 0x1CBA378
    static System::IntPtr ovr_Message_GetNativeMessage(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncConnection(System.IntPtr obj)
    // Offset: 0x1CBA3F8
    static System::IntPtr ovr_Message_GetNetSyncConnection(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSessionArray(System.IntPtr obj)
    // Offset: 0x1CBA478
    static System::IntPtr ovr_Message_GetNetSyncSessionArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(System.IntPtr obj)
    // Offset: 0x1CBA4F8
    static System::IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(System.IntPtr obj)
    // Offset: 0x1CBA578
    static System::IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncVoipAttenuationValueArray(System.IntPtr obj)
    // Offset: 0x1CBA5F8
    static System::IntPtr ovr_Message_GetNetSyncVoipAttenuationValueArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetworkingPeer(System.IntPtr obj)
    // Offset: 0x1CBA678
    static System::IntPtr ovr_Message_GetNetworkingPeer(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetOrgScopedID(System.IntPtr obj)
    // Offset: 0x1CBA6F8
    static System::IntPtr ovr_Message_GetOrgScopedID(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetParty(System.IntPtr obj)
    // Offset: 0x1CBA778
    static System::IntPtr ovr_Message_GetParty(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPartyID(System.IntPtr obj)
    // Offset: 0x1CBA7F8
    static System::IntPtr ovr_Message_GetPartyID(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPartyUpdateNotification(System.IntPtr obj)
    // Offset: 0x1CBA878
    static System::IntPtr ovr_Message_GetPartyUpdateNotification(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPidArray(System.IntPtr obj)
    // Offset: 0x1CBA8F8
    static System::IntPtr ovr_Message_GetPidArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPingResult(System.IntPtr obj)
    // Offset: 0x1CBA978
    static System::IntPtr ovr_Message_GetPingResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPlatformInitialize(System.IntPtr obj)
    // Offset: 0x1CBA9F8
    static System::IntPtr ovr_Message_GetPlatformInitialize(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetProductArray(System.IntPtr obj)
    // Offset: 0x1CBAA78
    static System::IntPtr ovr_Message_GetProductArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPurchase(System.IntPtr obj)
    // Offset: 0x1CBAAF8
    static System::IntPtr ovr_Message_GetPurchase(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPurchaseArray(System.IntPtr obj)
    // Offset: 0x1CBAB78
    static System::IntPtr ovr_Message_GetPurchaseArray(System::IntPtr obj);
    // static public System.UInt64 ovr_Message_GetRequestID(System.IntPtr obj)
    // Offset: 0x1CBABF8
    static uint64_t ovr_Message_GetRequestID(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoom(System.IntPtr obj)
    // Offset: 0x1CBAC78
    static System::IntPtr ovr_Message_GetRoom(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoomArray(System.IntPtr obj)
    // Offset: 0x1CBACF8
    static System::IntPtr ovr_Message_GetRoomArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoomInviteNotification(System.IntPtr obj)
    // Offset: 0x1CBAD78
    static System::IntPtr ovr_Message_GetRoomInviteNotification(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoomInviteNotificationArray(System.IntPtr obj)
    // Offset: 0x1CBADF8
    static System::IntPtr ovr_Message_GetRoomInviteNotificationArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSdkAccountArray(System.IntPtr obj)
    // Offset: 0x1CBAE78
    static System::IntPtr ovr_Message_GetSdkAccountArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetShareMediaResult(System.IntPtr obj)
    // Offset: 0x1CBAEF8
    static System::IntPtr ovr_Message_GetShareMediaResult(System::IntPtr obj);
    // static public System.String ovr_Message_GetString(System.IntPtr obj)
    // Offset: 0x1CBAF78
    static ::Il2CppString* ovr_Message_GetString(System::IntPtr obj);
    // static private System.IntPtr ovr_Message_GetString_Native(System.IntPtr obj)
    // Offset: 0x1CBAFE0
    static System::IntPtr ovr_Message_GetString_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSystemPermission(System.IntPtr obj)
    // Offset: 0x1CBB060
    static System::IntPtr ovr_Message_GetSystemPermission(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSystemVoipState(System.IntPtr obj)
    // Offset: 0x1CBB0E0
    static System::IntPtr ovr_Message_GetSystemVoipState(System::IntPtr obj);
    // static public Oculus.Platform.Message/MessageType ovr_Message_GetType(System.IntPtr obj)
    // Offset: 0x1CBB160
    static Oculus::Platform::Message::MessageType ovr_Message_GetType(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUser(System.IntPtr obj)
    // Offset: 0x1CBB1E0
    static System::IntPtr ovr_Message_GetUser(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserAndRoomArray(System.IntPtr obj)
    // Offset: 0x1CBB260
    static System::IntPtr ovr_Message_GetUserAndRoomArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserArray(System.IntPtr obj)
    // Offset: 0x1CBB2E0
    static System::IntPtr ovr_Message_GetUserArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserProof(System.IntPtr obj)
    // Offset: 0x1CBB360
    static System::IntPtr ovr_Message_GetUserProof(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserReportID(System.IntPtr obj)
    // Offset: 0x1CBB3E0
    static System::IntPtr ovr_Message_GetUserReportID(System::IntPtr obj);
    // static public System.Boolean ovr_Message_IsError(System.IntPtr obj)
    // Offset: 0x1CBB460
    static bool ovr_Message_IsError(System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetNumSamplesAvailable(System.IntPtr obj)
    // Offset: 0x1CBB4E8
    static System::UIntPtr ovr_Microphone_GetNumSamplesAvailable(System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetOutputBufferMaxSize(System.IntPtr obj)
    // Offset: 0x1CBB568
    static System::UIntPtr ovr_Microphone_GetOutputBufferMaxSize(System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetPCM(System.IntPtr obj, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CBB5E8
    static System::UIntPtr ovr_Microphone_GetPCM(System::IntPtr obj, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Microphone_GetPCMFloat(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1CBB688
    static System::UIntPtr ovr_Microphone_GetPCMFloat(System::IntPtr obj, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Microphone_ReadData(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)
    // Offset: 0x1CBB728
    static System::UIntPtr ovr_Microphone_ReadData(System::IntPtr obj, ::Array<float>* outputBuffer, System::UIntPtr outputBufferSize);
    // static public System.Void ovr_Microphone_SetAcceptableRecordingDelayHint(System.IntPtr obj, System.UIntPtr delayMs)
    // Offset: 0x1CBB7C8
    static void ovr_Microphone_SetAcceptableRecordingDelayHint(System::IntPtr obj, System::UIntPtr delayMs);
    // static public System.Void ovr_Microphone_Start(System.IntPtr obj)
    // Offset: 0x1CBB858
    static void ovr_Microphone_Start(System::IntPtr obj);
    // static public System.Void ovr_Microphone_Stop(System.IntPtr obj)
    // Offset: 0x1CBB8D8
    static void ovr_Microphone_Stop(System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncConnection_GetConnectionId(System.IntPtr obj)
    // Offset: 0x1CBB958
    static int64_t ovr_NetSyncConnection_GetConnectionId(System::IntPtr obj);
    // static public Oculus.Platform.NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(System.IntPtr obj)
    // Offset: 0x1CBB9D8
    static Oculus::Platform::NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncConnection_GetSessionId(System.IntPtr obj)
    // Offset: 0x1CBBA58
    static uint64_t ovr_NetSyncConnection_GetSessionId(System::IntPtr obj);
    // static public Oculus.Platform.NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(System.IntPtr obj)
    // Offset: 0x1CBBAD8
    static Oculus::Platform::NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(System::IntPtr obj);
    // static public System.String ovr_NetSyncConnection_GetZoneId(System.IntPtr obj)
    // Offset: 0x1CBBB58
    static ::Il2CppString* ovr_NetSyncConnection_GetZoneId(System::IntPtr obj);
    // static private System.IntPtr ovr_NetSyncConnection_GetZoneId_Native(System.IntPtr obj)
    // Offset: 0x1CBBBC0
    static System::IntPtr ovr_NetSyncConnection_GetZoneId_Native(System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncSession_GetConnectionId(System.IntPtr obj)
    // Offset: 0x1CBBC40
    static int64_t ovr_NetSyncSession_GetConnectionId(System::IntPtr obj);
    // static public System.Boolean ovr_NetSyncSession_GetMuted(System.IntPtr obj)
    // Offset: 0x1CBBCC0
    static bool ovr_NetSyncSession_GetMuted(System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncSession_GetSessionId(System.IntPtr obj)
    // Offset: 0x1CBBD48
    static uint64_t ovr_NetSyncSession_GetSessionId(System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncSession_GetUserId(System.IntPtr obj)
    // Offset: 0x1CBBDC8
    static uint64_t ovr_NetSyncSession_GetUserId(System::IntPtr obj);
    // static public System.String ovr_NetSyncSession_GetVoipGroup(System.IntPtr obj)
    // Offset: 0x1CBBE48
    static ::Il2CppString* ovr_NetSyncSession_GetVoipGroup(System::IntPtr obj);
    // static private System.IntPtr ovr_NetSyncSession_GetVoipGroup_Native(System.IntPtr obj)
    // Offset: 0x1CBBEB0
    static System::IntPtr ovr_NetSyncSession_GetVoipGroup_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSessionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CBBF30
    static System::IntPtr ovr_NetSyncSessionArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_NetSyncSessionArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CBBFC0
    static System::UIntPtr ovr_NetSyncSessionArray_GetSize(System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncSessionsChangedNotification_GetConnectionId(System.IntPtr obj)
    // Offset: 0x1CBC040
    static int64_t ovr_NetSyncSessionsChangedNotification_GetConnectionId(System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(System.IntPtr obj)
    // Offset: 0x1CBC0C0
    static System::IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(System.IntPtr obj)
    // Offset: 0x1CBC140
    static System::IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(System::IntPtr obj);
    // static public System.Single ovr_NetSyncVoipAttenuationValue_GetDecibels(System.IntPtr obj)
    // Offset: 0x1CBC1C0
    static float ovr_NetSyncVoipAttenuationValue_GetDecibels(System::IntPtr obj);
    // static public System.Single ovr_NetSyncVoipAttenuationValue_GetDistance(System.IntPtr obj)
    // Offset: 0x1CBC240
    static float ovr_NetSyncVoipAttenuationValue_GetDistance(System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncVoipAttenuationValueArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CBC2C0
    static System::IntPtr ovr_NetSyncVoipAttenuationValueArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_NetSyncVoipAttenuationValueArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CBC350
    static System::UIntPtr ovr_NetSyncVoipAttenuationValueArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_NetworkingPeer_GetID(System.IntPtr obj)
    // Offset: 0x1CBC3D0
    static uint64_t ovr_NetworkingPeer_GetID(System::IntPtr obj);
    // static public Oculus.Platform.PeerConnectionState ovr_NetworkingPeer_GetState(System.IntPtr obj)
    // Offset: 0x1CBC450
    static Oculus::Platform::PeerConnectionState ovr_NetworkingPeer_GetState(System::IntPtr obj);
    // static public System.UInt64 ovr_OrgScopedID_GetID(System.IntPtr obj)
    // Offset: 0x1CBC4D0
    static uint64_t ovr_OrgScopedID_GetID(System::IntPtr obj);
    // static public System.Void ovr_Packet_Free(System.IntPtr obj)
    // Offset: 0x1CBC550
    static void ovr_Packet_Free(System::IntPtr obj);
    // static public System.IntPtr ovr_Packet_GetBytes(System.IntPtr obj)
    // Offset: 0x1CBC5D0
    static System::IntPtr ovr_Packet_GetBytes(System::IntPtr obj);
    // static public Oculus.Platform.SendPolicy ovr_Packet_GetSendPolicy(System.IntPtr obj)
    // Offset: 0x1CBC650
    static Oculus::Platform::SendPolicy ovr_Packet_GetSendPolicy(System::IntPtr obj);
    // static public System.UInt64 ovr_Packet_GetSenderID(System.IntPtr obj)
    // Offset: 0x1CBC6D0
    static uint64_t ovr_Packet_GetSenderID(System::IntPtr obj);
    // static public System.UIntPtr ovr_Packet_GetSize(System.IntPtr obj)
    // Offset: 0x1CBC750
    static System::UIntPtr ovr_Packet_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_Party_GetID(System.IntPtr obj)
    // Offset: 0x1CBC7D0
    static uint64_t ovr_Party_GetID(System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x1CBC850
    static System::IntPtr ovr_Party_GetInvitedUsers(System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetLeader(System.IntPtr obj)
    // Offset: 0x1CBC8D0
    static System::IntPtr ovr_Party_GetLeader(System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetRoom(System.IntPtr obj)
    // Offset: 0x1CBC950
    static System::IntPtr ovr_Party_GetRoom(System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetUsers(System.IntPtr obj)
    // Offset: 0x1CBC9CC
    static System::IntPtr ovr_Party_GetUsers(System::IntPtr obj);
    // static public System.UInt64 ovr_PartyID_GetID(System.IntPtr obj)
    // Offset: 0x1CBCA4C
    static uint64_t ovr_PartyID_GetID(System::IntPtr obj);
    // static public Oculus.Platform.PartyUpdateAction ovr_PartyUpdateNotification_GetAction(System.IntPtr obj)
    // Offset: 0x1CBCAC8
    static Oculus::Platform::PartyUpdateAction ovr_PartyUpdateNotification_GetAction(System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetPartyId(System.IntPtr obj)
    // Offset: 0x1CBCB48
    static uint64_t ovr_PartyUpdateNotification_GetPartyId(System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetSenderId(System.IntPtr obj)
    // Offset: 0x1CBCBC8
    static uint64_t ovr_PartyUpdateNotification_GetSenderId(System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUpdateTimestamp(System.IntPtr obj)
    // Offset: 0x1CBCC48
    static ::Il2CppString* ovr_PartyUpdateNotification_GetUpdateTimestamp(System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(System.IntPtr obj)
    // Offset: 0x1CBCCB0
    static System::IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUserAlias(System.IntPtr obj)
    // Offset: 0x1CBCD30
    static ::Il2CppString* ovr_PartyUpdateNotification_GetUserAlias(System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(System.IntPtr obj)
    // Offset: 0x1CBCD98
    static System::IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetUserId(System.IntPtr obj)
    // Offset: 0x1CBCE18
    static uint64_t ovr_PartyUpdateNotification_GetUserId(System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUserName(System.IntPtr obj)
    // Offset: 0x1CBCE98
    static ::Il2CppString* ovr_PartyUpdateNotification_GetUserName(System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUserName_Native(System.IntPtr obj)
    // Offset: 0x1CBCF00
    static System::IntPtr ovr_PartyUpdateNotification_GetUserName_Native(System::IntPtr obj);
    // static public System.String ovr_Pid_GetId(System.IntPtr obj)
    // Offset: 0x1CBCF80
    static ::Il2CppString* ovr_Pid_GetId(System::IntPtr obj);
    // static private System.IntPtr ovr_Pid_GetId_Native(System.IntPtr obj)
    // Offset: 0x1CBCFE8
    static System::IntPtr ovr_Pid_GetId_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_PidArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CBD068
    static System::IntPtr ovr_PidArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_PidArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CBD0F8
    static System::UIntPtr ovr_PidArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_PingResult_GetID(System.IntPtr obj)
    // Offset: 0x1CBD178
    static uint64_t ovr_PingResult_GetID(System::IntPtr obj);
    // static public System.UInt64 ovr_PingResult_GetPingTimeUsec(System.IntPtr obj)
    // Offset: 0x1CBD1F8
    static uint64_t ovr_PingResult_GetPingTimeUsec(System::IntPtr obj);
    // static public System.Boolean ovr_PingResult_IsTimeout(System.IntPtr obj)
    // Offset: 0x1CBD278
    static bool ovr_PingResult_IsTimeout(System::IntPtr obj);
    // static public Oculus.Platform.PlatformInitializeResult ovr_PlatformInitialize_GetResult(System.IntPtr obj)
    // Offset: 0x1CBD300
    static Oculus::Platform::PlatformInitializeResult ovr_PlatformInitialize_GetResult(System::IntPtr obj);
    // static public System.UInt32 ovr_Price_GetAmountInHundredths(System.IntPtr obj)
    // Offset: 0x1CBD380
    static uint ovr_Price_GetAmountInHundredths(System::IntPtr obj);
    // static public System.String ovr_Price_GetCurrency(System.IntPtr obj)
    // Offset: 0x1CBD400
    static ::Il2CppString* ovr_Price_GetCurrency(System::IntPtr obj);
    // static private System.IntPtr ovr_Price_GetCurrency_Native(System.IntPtr obj)
    // Offset: 0x1CBD468
    static System::IntPtr ovr_Price_GetCurrency_Native(System::IntPtr obj);
    // static public System.String ovr_Price_GetFormatted(System.IntPtr obj)
    // Offset: 0x1CBD4E8
    static ::Il2CppString* ovr_Price_GetFormatted(System::IntPtr obj);
    // static private System.IntPtr ovr_Price_GetFormatted_Native(System.IntPtr obj)
    // Offset: 0x1CBD550
    static System::IntPtr ovr_Price_GetFormatted_Native(System::IntPtr obj);
    // static public System.String ovr_Product_GetDescription(System.IntPtr obj)
    // Offset: 0x1CBD5D0
    static ::Il2CppString* ovr_Product_GetDescription(System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x1CBD638
    static System::IntPtr ovr_Product_GetDescription_Native(System::IntPtr obj);
    // static public System.String ovr_Product_GetFormattedPrice(System.IntPtr obj)
    // Offset: 0x1CBD6B8
    static ::Il2CppString* ovr_Product_GetFormattedPrice(System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetFormattedPrice_Native(System.IntPtr obj)
    // Offset: 0x1CBD720
    static System::IntPtr ovr_Product_GetFormattedPrice_Native(System::IntPtr obj);
    // static public System.String ovr_Product_GetName(System.IntPtr obj)
    // Offset: 0x1CBD7A0
    static ::Il2CppString* ovr_Product_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetName_Native(System.IntPtr obj)
    // Offset: 0x1CBD808
    static System::IntPtr ovr_Product_GetName_Native(System::IntPtr obj);
    // static public System.String ovr_Product_GetSKU(System.IntPtr obj)
    // Offset: 0x1CBD888
    static ::Il2CppString* ovr_Product_GetSKU(System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetSKU_Native(System.IntPtr obj)
    // Offset: 0x1CBD8F0
    static System::IntPtr ovr_Product_GetSKU_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_ProductArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CBD970
    static System::IntPtr ovr_ProductArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_ProductArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CBDA00
    static ::Il2CppString* ovr_ProductArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_ProductArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CBDA68
    static System::IntPtr ovr_ProductArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_ProductArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CBDAE8
    static System::UIntPtr ovr_ProductArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_ProductArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CBDB68
    static bool ovr_ProductArray_HasNextPage(System::IntPtr obj);
    // static public System.DateTime ovr_Purchase_GetExpirationTime(System.IntPtr obj)
    // Offset: 0x1CBDBF0
    static System::DateTime ovr_Purchase_GetExpirationTime(System::IntPtr obj);
    // static private System.UInt64 ovr_Purchase_GetExpirationTime_Native(System.IntPtr obj)
    // Offset: 0x1CBDC58
    static uint64_t ovr_Purchase_GetExpirationTime_Native(System::IntPtr obj);
    // static public System.DateTime ovr_Purchase_GetGrantTime(System.IntPtr obj)
    // Offset: 0x1CBDCD8
    static System::DateTime ovr_Purchase_GetGrantTime(System::IntPtr obj);
    // static private System.UInt64 ovr_Purchase_GetGrantTime_Native(System.IntPtr obj)
    // Offset: 0x1CBDD40
    static uint64_t ovr_Purchase_GetGrantTime_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_Purchase_GetPurchaseID(System.IntPtr obj)
    // Offset: 0x1CBDDC0
    static uint64_t ovr_Purchase_GetPurchaseID(System::IntPtr obj);
    // static public System.String ovr_Purchase_GetSKU(System.IntPtr obj)
    // Offset: 0x1CBDE40
    static ::Il2CppString* ovr_Purchase_GetSKU(System::IntPtr obj);
    // static private System.IntPtr ovr_Purchase_GetSKU_Native(System.IntPtr obj)
    // Offset: 0x1CBDEA8
    static System::IntPtr ovr_Purchase_GetSKU_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_PurchaseArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CBDF28
    static System::IntPtr ovr_PurchaseArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_PurchaseArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CBDFB8
    static ::Il2CppString* ovr_PurchaseArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_PurchaseArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CBE020
    static System::IntPtr ovr_PurchaseArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_PurchaseArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CBE0A0
    static System::UIntPtr ovr_PurchaseArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_PurchaseArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CBE120
    static bool ovr_PurchaseArray_HasNextPage(System::IntPtr obj);
    // static public System.UInt64 ovr_Room_GetApplicationID(System.IntPtr obj)
    // Offset: 0x1CBE1A8
    static uint64_t ovr_Room_GetApplicationID(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetDataStore(System.IntPtr obj)
    // Offset: 0x1CBE228
    static System::IntPtr ovr_Room_GetDataStore(System::IntPtr obj);
    // static public System.String ovr_Room_GetDescription(System.IntPtr obj)
    // Offset: 0x1CBE2A8
    static ::Il2CppString* ovr_Room_GetDescription(System::IntPtr obj);
    // static private System.IntPtr ovr_Room_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x1CBE310
    static System::IntPtr ovr_Room_GetDescription_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_Room_GetID(System.IntPtr obj)
    // Offset: 0x1CBE390
    static uint64_t ovr_Room_GetID(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x1CBE410
    static System::IntPtr ovr_Room_GetInvitedUsers(System::IntPtr obj);
    // static public System.Boolean ovr_Room_GetIsMembershipLocked(System.IntPtr obj)
    // Offset: 0x1CBE490
    static bool ovr_Room_GetIsMembershipLocked(System::IntPtr obj);
    // static public Oculus.Platform.RoomJoinPolicy ovr_Room_GetJoinPolicy(System.IntPtr obj)
    // Offset: 0x1CBE518
    static Oculus::Platform::RoomJoinPolicy ovr_Room_GetJoinPolicy(System::IntPtr obj);
    // static public Oculus.Platform.RoomJoinability ovr_Room_GetJoinability(System.IntPtr obj)
    // Offset: 0x1CBE598
    static Oculus::Platform::RoomJoinability ovr_Room_GetJoinability(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetMatchedUsers(System.IntPtr obj)
    // Offset: 0x1CBE618
    static System::IntPtr ovr_Room_GetMatchedUsers(System::IntPtr obj);
    // static public System.UInt32 ovr_Room_GetMaxUsers(System.IntPtr obj)
    // Offset: 0x1CBE698
    static uint ovr_Room_GetMaxUsers(System::IntPtr obj);
    // static public System.String ovr_Room_GetName(System.IntPtr obj)
    // Offset: 0x1CBE718
    static ::Il2CppString* ovr_Room_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_Room_GetName_Native(System.IntPtr obj)
    // Offset: 0x1CBE780
    static System::IntPtr ovr_Room_GetName_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetOwner(System.IntPtr obj)
    // Offset: 0x1CBE800
    static System::IntPtr ovr_Room_GetOwner(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetTeams(System.IntPtr obj)
    // Offset: 0x1CBE87C
    static System::IntPtr ovr_Room_GetTeams(System::IntPtr obj);
    // static public Oculus.Platform.RoomType ovr_Room_GetType(System.IntPtr obj)
    // Offset: 0x1CBE8F8
    static Oculus::Platform::RoomType ovr_Room_GetType(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetUsers(System.IntPtr obj)
    // Offset: 0x1CBE978
    static System::IntPtr ovr_Room_GetUsers(System::IntPtr obj);
    // static public System.UInt32 ovr_Room_GetVersion(System.IntPtr obj)
    // Offset: 0x1CBE9F4
    static uint ovr_Room_GetVersion(System::IntPtr obj);
    // static public System.IntPtr ovr_RoomArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CBEA74
    static System::IntPtr ovr_RoomArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_RoomArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CBEB04
    static ::Il2CppString* ovr_RoomArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_RoomArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CBEB6C
    static System::IntPtr ovr_RoomArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_RoomArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CBEBEC
    static System::UIntPtr ovr_RoomArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_RoomArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CBEC6C
    static bool ovr_RoomArray_HasNextPage(System::IntPtr obj);
    // static public System.UInt64 ovr_RoomInviteNotification_GetID(System.IntPtr obj)
    // Offset: 0x1CBECF4
    static uint64_t ovr_RoomInviteNotification_GetID(System::IntPtr obj);
    // static public System.UInt64 ovr_RoomInviteNotification_GetRoomID(System.IntPtr obj)
    // Offset: 0x1CBED74
    static uint64_t ovr_RoomInviteNotification_GetRoomID(System::IntPtr obj);
    // static public System.UInt64 ovr_RoomInviteNotification_GetSenderID(System.IntPtr obj)
    // Offset: 0x1CBEDF4
    static uint64_t ovr_RoomInviteNotification_GetSenderID(System::IntPtr obj);
    // static public System.DateTime ovr_RoomInviteNotification_GetSentTime(System.IntPtr obj)
    // Offset: 0x1CBEE74
    static System::DateTime ovr_RoomInviteNotification_GetSentTime(System::IntPtr obj);
    // static private System.UInt64 ovr_RoomInviteNotification_GetSentTime_Native(System.IntPtr obj)
    // Offset: 0x1CBEEDC
    static uint64_t ovr_RoomInviteNotification_GetSentTime_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_RoomInviteNotificationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CBEF5C
    static System::IntPtr ovr_RoomInviteNotificationArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_RoomInviteNotificationArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CBEFEC
    static ::Il2CppString* ovr_RoomInviteNotificationArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CBF054
    static System::IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_RoomInviteNotificationArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CBF0D4
    static System::UIntPtr ovr_RoomInviteNotificationArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_RoomInviteNotificationArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CBF154
    static bool ovr_RoomInviteNotificationArray_HasNextPage(System::IntPtr obj);
    // static public Oculus.Platform.SdkAccountType ovr_SdkAccount_GetAccountType(System.IntPtr obj)
    // Offset: 0x1CBF1DC
    static Oculus::Platform::SdkAccountType ovr_SdkAccount_GetAccountType(System::IntPtr obj);
    // static public System.UInt64 ovr_SdkAccount_GetUserId(System.IntPtr obj)
    // Offset: 0x1CBF25C
    static uint64_t ovr_SdkAccount_GetUserId(System::IntPtr obj);
    // static public System.IntPtr ovr_SdkAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CBF2DC
    static System::IntPtr ovr_SdkAccountArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_SdkAccountArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CBF36C
    static System::UIntPtr ovr_SdkAccountArray_GetSize(System::IntPtr obj);
    // static public Oculus.Platform.ShareMediaStatus ovr_ShareMediaResult_GetStatus(System.IntPtr obj)
    // Offset: 0x1CBF3EC
    static Oculus::Platform::ShareMediaStatus ovr_ShareMediaResult_GetStatus(System::IntPtr obj);
    // static public System.Boolean ovr_SystemPermission_GetHasPermission(System.IntPtr obj)
    // Offset: 0x1CBF46C
    static bool ovr_SystemPermission_GetHasPermission(System::IntPtr obj);
    // static public Oculus.Platform.PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(System.IntPtr obj)
    // Offset: 0x1CBF4F4
    static Oculus::Platform::PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(System::IntPtr obj);
    // static public Oculus.Platform.VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(System.IntPtr obj)
    // Offset: 0x1CBF574
    static Oculus::Platform::VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(System::IntPtr obj);
    // static public Oculus.Platform.SystemVoipStatus ovr_SystemVoipState_GetStatus(System.IntPtr obj)
    // Offset: 0x1CBF5F4
    static Oculus::Platform::SystemVoipStatus ovr_SystemVoipState_GetStatus(System::IntPtr obj);
    // static public System.IntPtr ovr_Team_GetAssignedUsers(System.IntPtr obj)
    // Offset: 0x1CBF674
    static System::IntPtr ovr_Team_GetAssignedUsers(System::IntPtr obj);
    // static public System.Int32 ovr_Team_GetMaxUsers(System.IntPtr obj)
    // Offset: 0x1CBF6F4
    static int ovr_Team_GetMaxUsers(System::IntPtr obj);
    // static public System.Int32 ovr_Team_GetMinUsers(System.IntPtr obj)
    // Offset: 0x1CBF774
    static int ovr_Team_GetMinUsers(System::IntPtr obj);
    // static public System.String ovr_Team_GetName(System.IntPtr obj)
    // Offset: 0x1CBF7F4
    static ::Il2CppString* ovr_Team_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_Team_GetName_Native(System.IntPtr obj)
    // Offset: 0x1CBF85C
    static System::IntPtr ovr_Team_GetName_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_TeamArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CBF8DC
    static System::IntPtr ovr_TeamArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_TeamArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CBF96C
    static System::UIntPtr ovr_TeamArray_GetSize(System::IntPtr obj);
    // static public System.String ovr_TestUser_GetAccessToken(System.IntPtr obj)
    // Offset: 0x1CBF9EC
    static ::Il2CppString* ovr_TestUser_GetAccessToken(System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x1CBFA54
    static System::IntPtr ovr_TestUser_GetAccessToken_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetAppAccessArray(System.IntPtr obj)
    // Offset: 0x1CBFAD4
    static System::IntPtr ovr_TestUser_GetAppAccessArray(System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetFbAppAccessArray(System.IntPtr obj)
    // Offset: 0x1CBFB54
    static System::IntPtr ovr_TestUser_GetFbAppAccessArray(System::IntPtr obj);
    // static public System.String ovr_TestUser_GetFriendAccessToken(System.IntPtr obj)
    // Offset: 0x1CBFBD4
    static ::Il2CppString* ovr_TestUser_GetFriendAccessToken(System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetFriendAccessToken_Native(System.IntPtr obj)
    // Offset: 0x1CBFC3C
    static System::IntPtr ovr_TestUser_GetFriendAccessToken_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetFriendAppAccessArray(System.IntPtr obj)
    // Offset: 0x1CBFCBC
    static System::IntPtr ovr_TestUser_GetFriendAppAccessArray(System::IntPtr obj);
    // static public System.String ovr_TestUser_GetUserAlias(System.IntPtr obj)
    // Offset: 0x1CBFD3C
    static ::Il2CppString* ovr_TestUser_GetUserAlias(System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetUserAlias_Native(System.IntPtr obj)
    // Offset: 0x1CBFDA4
    static System::IntPtr ovr_TestUser_GetUserAlias_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_TestUser_GetUserFbid(System.IntPtr obj)
    // Offset: 0x1CBFE24
    static uint64_t ovr_TestUser_GetUserFbid(System::IntPtr obj);
    // static public System.UInt64 ovr_TestUser_GetUserId(System.IntPtr obj)
    // Offset: 0x1CBFEA4
    static uint64_t ovr_TestUser_GetUserId(System::IntPtr obj);
    // static public System.String ovr_TestUserAppAccess_GetAccessToken(System.IntPtr obj)
    // Offset: 0x1CBFF24
    static ::Il2CppString* ovr_TestUserAppAccess_GetAccessToken(System::IntPtr obj);
    // static private System.IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x1CBFF8C
    static System::IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_TestUserAppAccess_GetAppId(System.IntPtr obj)
    // Offset: 0x1CC000C
    static uint64_t ovr_TestUserAppAccess_GetAppId(System::IntPtr obj);
    // static public System.UInt64 ovr_TestUserAppAccess_GetUserId(System.IntPtr obj)
    // Offset: 0x1CC008C
    static uint64_t ovr_TestUserAppAccess_GetUserId(System::IntPtr obj);
    // static public System.IntPtr ovr_TestUserAppAccessArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CC010C
    static System::IntPtr ovr_TestUserAppAccessArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_TestUserAppAccessArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CC019C
    static System::UIntPtr ovr_TestUserAppAccessArray_GetSize(System::IntPtr obj);
    // static public System.String ovr_User_GetDisplayName(System.IntPtr obj)
    // Offset: 0x1CC021C
    static ::Il2CppString* ovr_User_GetDisplayName(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetDisplayName_Native(System.IntPtr obj)
    // Offset: 0x1CC0284
    static System::IntPtr ovr_User_GetDisplayName_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_User_GetID(System.IntPtr obj)
    // Offset: 0x1CC0304
    static uint64_t ovr_User_GetID(System::IntPtr obj);
    // static public System.String ovr_User_GetImageUrl(System.IntPtr obj)
    // Offset: 0x1CC0384
    static ::Il2CppString* ovr_User_GetImageUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetImageUrl_Native(System.IntPtr obj)
    // Offset: 0x1CC03EC
    static System::IntPtr ovr_User_GetImageUrl_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetInviteToken(System.IntPtr obj)
    // Offset: 0x1CC046C
    static ::Il2CppString* ovr_User_GetInviteToken(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetInviteToken_Native(System.IntPtr obj)
    // Offset: 0x1CC04D4
    static System::IntPtr ovr_User_GetInviteToken_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetOculusID(System.IntPtr obj)
    // Offset: 0x1CC0554
    static ::Il2CppString* ovr_User_GetOculusID(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetOculusID_Native(System.IntPtr obj)
    // Offset: 0x1CC05BC
    static System::IntPtr ovr_User_GetOculusID_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetPresence(System.IntPtr obj)
    // Offset: 0x1CC063C
    static ::Il2CppString* ovr_User_GetPresence(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresence_Native(System.IntPtr obj)
    // Offset: 0x1CC06A4
    static System::IntPtr ovr_User_GetPresence_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x1CC0724
    static ::Il2CppString* ovr_User_GetPresenceDeeplinkMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x1CC078C
    static System::IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceDestinationApiName(System.IntPtr obj)
    // Offset: 0x1CC080C
    static ::Il2CppString* ovr_User_GetPresenceDestinationApiName(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x1CC0874
    static System::IntPtr ovr_User_GetPresenceDestinationApiName_Native(System::IntPtr obj);
    // static public Oculus.Platform.UserPresenceStatus ovr_User_GetPresenceStatus(System.IntPtr obj)
    // Offset: 0x1CC08F4
    static Oculus::Platform::UserPresenceStatus ovr_User_GetPresenceStatus(System::IntPtr obj);
    // static public System.String ovr_User_GetSmallImageUrl(System.IntPtr obj)
    // Offset: 0x1CC0974
    static ::Il2CppString* ovr_User_GetSmallImageUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetSmallImageUrl_Native(System.IntPtr obj)
    // Offset: 0x1CC09DC
    static System::IntPtr ovr_User_GetSmallImageUrl_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_UserAndRoom_GetRoom(System.IntPtr obj)
    // Offset: 0x1CC0A5C
    static System::IntPtr ovr_UserAndRoom_GetRoom(System::IntPtr obj);
    // static public System.IntPtr ovr_UserAndRoom_GetUser(System.IntPtr obj)
    // Offset: 0x1CC0ADC
    static System::IntPtr ovr_UserAndRoom_GetUser(System::IntPtr obj);
    // static public System.IntPtr ovr_UserAndRoomArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CC0B5C
    static System::IntPtr ovr_UserAndRoomArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_UserAndRoomArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CC0BEC
    static ::Il2CppString* ovr_UserAndRoomArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CC0C54
    static System::IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_UserAndRoomArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CC0CD4
    static System::UIntPtr ovr_UserAndRoomArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_UserAndRoomArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CC0D54
    static bool ovr_UserAndRoomArray_HasNextPage(System::IntPtr obj);
    // static public System.IntPtr ovr_UserArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1CC0DDC
    static System::IntPtr ovr_UserArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_UserArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1CC0E6C
    static ::Il2CppString* ovr_UserArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_UserArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1CC0ED4
    static System::IntPtr ovr_UserArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_UserArray_GetSize(System.IntPtr obj)
    // Offset: 0x1CC0F54
    static System::UIntPtr ovr_UserArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_UserArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1CC0FD4
    static bool ovr_UserArray_HasNextPage(System::IntPtr obj);
    // static public System.String ovr_UserProof_GetNonce(System.IntPtr obj)
    // Offset: 0x1CC105C
    static ::Il2CppString* ovr_UserProof_GetNonce(System::IntPtr obj);
    // static private System.IntPtr ovr_UserProof_GetNonce_Native(System.IntPtr obj)
    // Offset: 0x1CC10C4
    static System::IntPtr ovr_UserProof_GetNonce_Native(System::IntPtr obj);
    // static public System.Boolean ovr_UserReportID_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1CC1144
    static bool ovr_UserReportID_GetDidCancel(System::IntPtr obj);
    // static public System.UInt64 ovr_UserReportID_GetID(System.IntPtr obj)
    // Offset: 0x1CC11CC
    static uint64_t ovr_UserReportID_GetID(System::IntPtr obj);
    // static public System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UIntPtr compressedSize)
    // Offset: 0x1CC124C
    static void ovr_VoipDecoder_Decode(System::IntPtr obj, ::Array<uint8_t>* compressedData, System::UIntPtr compressedSize);
    // static public System.UIntPtr ovr_VoipDecoder_GetDecodedPCM(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)
    // Offset: 0x1CC12EC
    static System::UIntPtr ovr_VoipDecoder_GetDecodedPCM(System::IntPtr obj, ::Array<float>* outputBuffer, System::UIntPtr outputBufferSize);
    // static public System.Void ovr_VoipEncoder_AddPCM(System.IntPtr obj, System.Single[] inputData, System.UInt32 inputSize)
    // Offset: 0x1CC138C
    static void ovr_VoipEncoder_AddPCM(System::IntPtr obj, ::Array<float>* inputData, uint inputSize);
    // static public System.UIntPtr ovr_VoipEncoder_GetCompressedData(System.IntPtr obj, System.Byte[] outputBuffer, System.UIntPtr intputSize)
    // Offset: 0x1CC142C
    static System::UIntPtr ovr_VoipEncoder_GetCompressedData(System::IntPtr obj, ::Array<uint8_t>* outputBuffer, System::UIntPtr intputSize);
    // static public System.UIntPtr ovr_VoipEncoder_GetCompressedDataSize(System.IntPtr obj)
    // Offset: 0x1CC14CC
    static System::UIntPtr ovr_VoipEncoder_GetCompressedDataSize(System::IntPtr obj);
    // static public System.IntPtr ovr_AbuseReportOptions_Create()
    // Offset: 0x1CA04D0
    static System::IntPtr ovr_AbuseReportOptions_Create();
    // static public System.Void ovr_AbuseReportOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1CA0858
    static void ovr_AbuseReportOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_AbuseReportOptions_SetPreventPeopleChooser(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1CA05BC
    static void ovr_AbuseReportOptions_SetPreventPeopleChooser(System::IntPtr handle, bool value);
    // static public System.Void ovr_AbuseReportOptions_SetReportType(System.IntPtr handle, Oculus.Platform.AbuseReportType value)
    // Offset: 0x1CA06C4
    static void ovr_AbuseReportOptions_SetReportType(System::IntPtr handle, Oculus::Platform::AbuseReportType value);
    // static public System.IntPtr ovr_ApplicationOptions_Create()
    // Offset: 0x1CA225C
    static System::IntPtr ovr_ApplicationOptions_Create();
    // static public System.Void ovr_ApplicationOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1CA24A8
    static void ovr_ApplicationOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_ApplicationOptions_SetDeeplinkMessage(System.IntPtr handle, System.String value)
    // Offset: 0x1CA2348
    static void ovr_ApplicationOptions_SetDeeplinkMessage(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_ApplicationOptions_SetDeeplinkMessage_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC154C
    static void ovr_ApplicationOptions_SetDeeplinkMessage_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.IntPtr ovr_ChallengeOptions_Create()
    // Offset: 0x1CC15DC
    static System::IntPtr ovr_ChallengeOptions_Create();
    // static public System.Void ovr_ChallengeOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1CC1650
    static void ovr_ChallengeOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_ChallengeOptions_SetDescription(System.IntPtr handle, System.String value)
    // Offset: 0x1CC16D0
    static void ovr_ChallengeOptions_SetDescription(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_ChallengeOptions_SetDescription_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC177C
    static void ovr_ChallengeOptions_SetDescription_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_ChallengeOptions_SetEndDate(System.IntPtr handle, System.DateTime value)
    // Offset: 0x1CC180C
    static void ovr_ChallengeOptions_SetEndDate(System::IntPtr handle, System::DateTime value);
    // static private System.Void ovr_ChallengeOptions_SetEndDate_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1CC1888
    static void ovr_ChallengeOptions_SetEndDate_Native(System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_ChallengeOptions_SetIncludeActiveChallenges(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1CC1918
    static void ovr_ChallengeOptions_SetIncludeActiveChallenges(System::IntPtr handle, bool value);
    // static public System.Void ovr_ChallengeOptions_SetIncludeFutureChallenges(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1CC19A8
    static void ovr_ChallengeOptions_SetIncludeFutureChallenges(System::IntPtr handle, bool value);
    // static public System.Void ovr_ChallengeOptions_SetIncludePastChallenges(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1CC1A38
    static void ovr_ChallengeOptions_SetIncludePastChallenges(System::IntPtr handle, bool value);
    // static public System.Void ovr_ChallengeOptions_SetLeaderboardName(System.IntPtr handle, System.String value)
    // Offset: 0x1CC1AC8
    static void ovr_ChallengeOptions_SetLeaderboardName(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_ChallengeOptions_SetLeaderboardName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC1B74
    static void ovr_ChallengeOptions_SetLeaderboardName_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_ChallengeOptions_SetStartDate(System.IntPtr handle, System.DateTime value)
    // Offset: 0x1CC1C04
    static void ovr_ChallengeOptions_SetStartDate(System::IntPtr handle, System::DateTime value);
    // static private System.Void ovr_ChallengeOptions_SetStartDate_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1CC1C80
    static void ovr_ChallengeOptions_SetStartDate_Native(System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_ChallengeOptions_SetTitle(System.IntPtr handle, System.String value)
    // Offset: 0x1CC1D10
    static void ovr_ChallengeOptions_SetTitle(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_ChallengeOptions_SetTitle_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC1DBC
    static void ovr_ChallengeOptions_SetTitle_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_ChallengeOptions_SetViewerFilter(System.IntPtr handle, Oculus.Platform.ChallengeViewerFilter value)
    // Offset: 0x1CC1E4C
    static void ovr_ChallengeOptions_SetViewerFilter(System::IntPtr handle, Oculus::Platform::ChallengeViewerFilter value);
    // static public System.Void ovr_ChallengeOptions_SetVisibility(System.IntPtr handle, Oculus.Platform.ChallengeVisibility value)
    // Offset: 0x1CC1EDC
    static void ovr_ChallengeOptions_SetVisibility(System::IntPtr handle, Oculus::Platform::ChallengeVisibility value);
    // static public System.IntPtr ovr_MatchmakingOptions_Create()
    // Offset: 0x1CC1F6C
    static System::IntPtr ovr_MatchmakingOptions_Create();
    // static public System.Void ovr_MatchmakingOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1CC1FE0
    static void ovr_MatchmakingOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x1CC2060
    static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value);
    // static private System.Void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x1CC212C
    static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value);
    // static public System.Void ovr_MatchmakingOptions_ClearCreateRoomDataStore(System.IntPtr handle)
    // Offset: 0x1CC21C4
    static void ovr_MatchmakingOptions_ClearCreateRoomDataStore(System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(System.IntPtr handle, Oculus.Platform.RoomJoinPolicy value)
    // Offset: 0x1CC2244
    static void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(System::IntPtr handle, Oculus::Platform::RoomJoinPolicy value);
    // static public System.Void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1CC22D4
    static void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(System::IntPtr handle, uint value);
    // static public System.Void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1CC2364
    static void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(System.IntPtr handle)
    // Offset: 0x1CC23F4
    static void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(System.IntPtr handle, System.String key, System.Int32 value)
    // Offset: 0x1CC2474
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(System::IntPtr handle, ::Il2CppString* key, int value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(System.IntPtr handle, System.IntPtr key, System.Int32 value)
    // Offset: 0x1CC2528
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(System::IntPtr handle, System::IntPtr key, int value);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(System.IntPtr handle, System.String key, System.Double value)
    // Offset: 0x1CC25C0
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(System::IntPtr handle, ::Il2CppString* key, double value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(System.IntPtr handle, System.IntPtr key, System.Double value)
    // Offset: 0x1CC267C
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(System::IntPtr handle, System::IntPtr key, double value);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x1CC271C
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x1CC27E8
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value);
    // static public System.Void ovr_MatchmakingOptions_ClearEnqueueDataSettings(System.IntPtr handle)
    // Offset: 0x1CC2880
    static void ovr_MatchmakingOptions_ClearEnqueueDataSettings(System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueIsDebug(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1CC2900
    static void ovr_MatchmakingOptions_SetEnqueueIsDebug(System::IntPtr handle, bool value);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueQueryKey(System.IntPtr handle, System.String value)
    // Offset: 0x1CC2990
    static void ovr_MatchmakingOptions_SetEnqueueQueryKey(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC2A3C
    static void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.IntPtr ovr_NetSyncOptions_Create()
    // Offset: 0x1CC2ACC
    static System::IntPtr ovr_NetSyncOptions_Create();
    // static public System.Void ovr_NetSyncOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1CC2B40
    static void ovr_NetSyncOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_NetSyncOptions_SetVoipGroup(System.IntPtr handle, System.String value)
    // Offset: 0x1CC2BC0
    static void ovr_NetSyncOptions_SetVoipGroup(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_NetSyncOptions_SetVoipGroup_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC2C6C
    static void ovr_NetSyncOptions_SetVoipGroup_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_NetSyncOptions_SetVoipStreamDefault(System.IntPtr handle, Oculus.Platform.NetSyncVoipStreamMode value)
    // Offset: 0x1CC2CFC
    static void ovr_NetSyncOptions_SetVoipStreamDefault(System::IntPtr handle, Oculus::Platform::NetSyncVoipStreamMode value);
    // static public System.Void ovr_NetSyncOptions_SetZoneId(System.IntPtr handle, System.String value)
    // Offset: 0x1CC2D8C
    static void ovr_NetSyncOptions_SetZoneId(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_NetSyncOptions_SetZoneId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC2E38
    static void ovr_NetSyncOptions_SetZoneId_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.IntPtr ovr_RichPresenceOptions_Create()
    // Offset: 0x1CC2EC8
    static System::IntPtr ovr_RichPresenceOptions_Create();
    // static public System.Void ovr_RichPresenceOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1CC2F3C
    static void ovr_RichPresenceOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_RichPresenceOptions_SetApiName(System.IntPtr handle, System.String value)
    // Offset: 0x1CC2FBC
    static void ovr_RichPresenceOptions_SetApiName(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_RichPresenceOptions_SetApiName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC3068
    static void ovr_RichPresenceOptions_SetApiName_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetArgsString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x1CC30F8
    static void ovr_RichPresenceOptions_SetArgsString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value);
    // static private System.Void ovr_RichPresenceOptions_SetArgsString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x1CC31C4
    static void ovr_RichPresenceOptions_SetArgsString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_ClearArgs(System.IntPtr handle)
    // Offset: 0x1CC325C
    static void ovr_RichPresenceOptions_ClearArgs(System::IntPtr handle);
    // static public System.Void ovr_RichPresenceOptions_SetCurrentCapacity(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1CC32DC
    static void ovr_RichPresenceOptions_SetCurrentCapacity(System::IntPtr handle, uint value);
    // static public System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(System.IntPtr handle, System.String value)
    // Offset: 0x1CC336C
    static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC3418
    static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetEndTime(System.IntPtr handle, System.DateTime value)
    // Offset: 0x1CC34A8
    static void ovr_RichPresenceOptions_SetEndTime(System::IntPtr handle, System::DateTime value);
    // static private System.Void ovr_RichPresenceOptions_SetEndTime_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1CC3524
    static void ovr_RichPresenceOptions_SetEndTime_Native(System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_RichPresenceOptions_SetExtraContext(System.IntPtr handle, Oculus.Platform.RichPresenceExtraContext value)
    // Offset: 0x1CC35B4
    static void ovr_RichPresenceOptions_SetExtraContext(System::IntPtr handle, Oculus::Platform::RichPresenceExtraContext value);
    // static public System.Void ovr_RichPresenceOptions_SetIsIdle(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1CC3644
    static void ovr_RichPresenceOptions_SetIsIdle(System::IntPtr handle, bool value);
    // static public System.Void ovr_RichPresenceOptions_SetIsJoinable(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1CC36D4
    static void ovr_RichPresenceOptions_SetIsJoinable(System::IntPtr handle, bool value);
    // static public System.Void ovr_RichPresenceOptions_SetJoinableId(System.IntPtr handle, System.String value)
    // Offset: 0x1CC3764
    static void ovr_RichPresenceOptions_SetJoinableId(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_RichPresenceOptions_SetJoinableId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1CC3810
    static void ovr_RichPresenceOptions_SetJoinableId_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetMaxCapacity(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1CC38A0
    static void ovr_RichPresenceOptions_SetMaxCapacity(System::IntPtr handle, uint value);
    // static public System.Void ovr_RichPresenceOptions_SetStartTime(System.IntPtr handle, System.DateTime value)
    // Offset: 0x1CC3930
    static void ovr_RichPresenceOptions_SetStartTime(System::IntPtr handle, System::DateTime value);
    // static private System.Void ovr_RichPresenceOptions_SetStartTime_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1CC39AC
    static void ovr_RichPresenceOptions_SetStartTime_Native(System::IntPtr handle, uint64_t value);
    // static public System.IntPtr ovr_RoomOptions_Create()
    // Offset: 0x1CC3A3C
    static System::IntPtr ovr_RoomOptions_Create();
    // static public System.Void ovr_RoomOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1CC3AB0
    static void ovr_RoomOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_RoomOptions_SetDataStoreString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x1CC3B30
    static void ovr_RoomOptions_SetDataStoreString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value);
    // static private System.Void ovr_RoomOptions_SetDataStoreString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x1CC3BFC
    static void ovr_RoomOptions_SetDataStoreString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value);
    // static public System.Void ovr_RoomOptions_ClearDataStore(System.IntPtr handle)
    // Offset: 0x1CC3C94
    static void ovr_RoomOptions_ClearDataStore(System::IntPtr handle);
    // static public System.Void ovr_RoomOptions_SetExcludeRecentlyMet(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1CC3D14
    static void ovr_RoomOptions_SetExcludeRecentlyMet(System::IntPtr handle, bool value);
    // static public System.Void ovr_RoomOptions_SetMaxUserResults(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1CC3DA4
    static void ovr_RoomOptions_SetMaxUserResults(System::IntPtr handle, uint value);
    // static public System.Void ovr_RoomOptions_SetOrdering(System.IntPtr handle, Oculus.Platform.UserOrdering value)
    // Offset: 0x1CC3E34
    static void ovr_RoomOptions_SetOrdering(System::IntPtr handle, Oculus::Platform::UserOrdering value);
    // static public System.Void ovr_RoomOptions_SetRecentlyMetTimeWindow(System.IntPtr handle, Oculus.Platform.TimeWindow value)
    // Offset: 0x1CC3EC4
    static void ovr_RoomOptions_SetRecentlyMetTimeWindow(System::IntPtr handle, Oculus::Platform::TimeWindow value);
    // static public System.Void ovr_RoomOptions_SetRoomId(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1CC3F54
    static void ovr_RoomOptions_SetRoomId(System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_RoomOptions_SetTurnOffUpdates(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1CC3FE4
    static void ovr_RoomOptions_SetTurnOffUpdates(System::IntPtr handle, bool value);
    // static public System.IntPtr ovr_UserOptions_Create()
    // Offset: 0x1CC4074
    static System::IntPtr ovr_UserOptions_Create();
    // static public System.Void ovr_UserOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1CC40E8
    static void ovr_UserOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_UserOptions_SetMaxUsers(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1CC4168
    static void ovr_UserOptions_SetMaxUsers(System::IntPtr handle, uint value);
    // static public System.Void ovr_UserOptions_AddServiceProvider(System.IntPtr handle, Oculus.Platform.ServiceProvider value)
    // Offset: 0x1CC41F8
    static void ovr_UserOptions_AddServiceProvider(System::IntPtr handle, Oculus::Platform::ServiceProvider value);
    // static public System.Void ovr_UserOptions_ClearServiceProviders(System.IntPtr handle)
    // Offset: 0x1CC4288
    static void ovr_UserOptions_ClearServiceProviders(System::IntPtr handle);
    // static public System.Void ovr_UserOptions_SetTimeWindow(System.IntPtr handle, Oculus.Platform.TimeWindow value)
    // Offset: 0x1CC4308
    static void ovr_UserOptions_SetTimeWindow(System::IntPtr handle, Oculus::Platform::TimeWindow value);
    // static public System.IntPtr ovr_VoipOptions_Create()
    // Offset: 0x1CC4398
    static System::IntPtr ovr_VoipOptions_Create();
    // static public System.Void ovr_VoipOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1CC440C
    static void ovr_VoipOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_VoipOptions_SetBitrateForNewConnections(System.IntPtr handle, Oculus.Platform.VoipBitrate value)
    // Offset: 0x1CC448C
    static void ovr_VoipOptions_SetBitrateForNewConnections(System::IntPtr handle, Oculus::Platform::VoipBitrate value);
    // static public System.Void ovr_VoipOptions_SetCreateNewConnectionUseDtx(System.IntPtr handle, Oculus.Platform.VoipDtxState value)
    // Offset: 0x1CC451C
    static void ovr_VoipOptions_SetCreateNewConnectionUseDtx(System::IntPtr handle, Oculus::Platform::VoipDtxState value);
    // static private System.Void .cctor()
    // Offset: 0x1CC45B4
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x1CC45AC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CAPI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CAPI*, creationType>()));
    }
  }; // Oculus.Platform.CAPI
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::CAPI*, "Oculus.Platform", "CAPI");
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::CAPI::ovrKeyValuePair, "Oculus.Platform", "CAPI/ovrKeyValuePair");
