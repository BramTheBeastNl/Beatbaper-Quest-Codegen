// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: VoipMuteState
  struct VoipMuteState;
  // Forward declaring type: SendPolicy
  struct SendPolicy;
  // Forward declaring type: SystemVoipStatus
  struct SystemVoipStatus;
  // Forward declaring type: VoipDtxState
  struct VoipDtxState;
  // Forward declaring type: VoipBitrate
  struct VoipBitrate;
  // Forward declaring type: VoipSampleRate
  struct VoipSampleRate;
  // Forward declaring type: LeaderboardFilterType
  struct LeaderboardFilterType;
  // Forward declaring type: LeaderboardStartAt
  struct LeaderboardStartAt;
  // Forward declaring type: LivestreamingAudience
  struct LivestreamingAudience;
  // Forward declaring type: LivestreamingMicrophoneStatus
  struct LivestreamingMicrophoneStatus;
  // Forward declaring type: MatchmakingStatApproach
  struct MatchmakingStatApproach;
  // Forward declaring type: MediaContentType
  struct MediaContentType;
  // Forward declaring type: NetSyncVoipMicSource
  struct NetSyncVoipMicSource;
  // Forward declaring type: NetSyncVoipStreamMode
  struct NetSyncVoipStreamMode;
  // Forward declaring type: RoomJoinPolicy
  struct RoomJoinPolicy;
  // Forward declaring type: RoomMembershipLockStatus
  struct RoomMembershipLockStatus;
  // Forward declaring type: PermissionType
  struct PermissionType;
  // Forward declaring type: AchievementType
  struct AchievementType;
  // Forward declaring type: CloudStorageDataStatus
  struct CloudStorageDataStatus;
  // Forward declaring type: CloudStorageUpdateStatus
  struct CloudStorageUpdateStatus;
  // Forward declaring type: LaunchType
  struct LaunchType;
  // Forward declaring type: ServiceProvider
  struct ServiceProvider;
  // Forward declaring type: LivestreamingStartStatus
  struct LivestreamingStartStatus;
  // Forward declaring type: NetSyncDisconnectReason
  struct NetSyncDisconnectReason;
  // Forward declaring type: NetSyncConnectionStatus
  struct NetSyncConnectionStatus;
  // Forward declaring type: PeerConnectionState
  struct PeerConnectionState;
  // Forward declaring type: PartyUpdateAction
  struct PartyUpdateAction;
  // Forward declaring type: PlatformInitializeResult
  struct PlatformInitializeResult;
  // Forward declaring type: RoomJoinability
  struct RoomJoinability;
  // Forward declaring type: RoomType
  struct RoomType;
  // Forward declaring type: SdkAccountType
  struct SdkAccountType;
  // Forward declaring type: ShareMediaStatus
  struct ShareMediaStatus;
  // Forward declaring type: PermissionGrantStatus
  struct PermissionGrantStatus;
  // Forward declaring type: UserPresenceStatus
  struct UserPresenceStatus;
  // Forward declaring type: AbuseReportType
  struct AbuseReportType;
  // Forward declaring type: RichPresenceExtraContext
  struct RichPresenceExtraContext;
  // Forward declaring type: UserOrdering
  struct UserOrdering;
  // Forward declaring type: TimeWindow
  struct TimeWindow;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: IntPtr
  struct IntPtr;
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: UIntPtr
  struct UIntPtr;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: UTF8Encoding
  class UTF8Encoding;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Autogenerated type: Oculus.Platform.CAPI
  class CAPI : public ::Il2CppObject {
    public:
    // Nested type: Oculus::Platform::CAPI::ovrKeyValuePair
    struct ovrKeyValuePair;
    // Nested type: Oculus::Platform::CAPI::ovrNetSyncVec3
    struct ovrNetSyncVec3;
    // Nested type: Oculus::Platform::CAPI::ovrMatchmakingCriterion
    struct ovrMatchmakingCriterion;
    // Nested type: Oculus::Platform::CAPI::ovrMatchmakingCustomQueryData
    struct ovrMatchmakingCustomQueryData;
    // Nested type: Oculus::Platform::CAPI::OculusInitParams
    struct OculusInitParams;
    // Nested type: Oculus::Platform::CAPI::FilterCallback
    class FilterCallback;
    // static field const value: static public System.String DLL_NAME
    static constexpr const char* DLL_NAME = "ovrplatformloader";
    // Get static field: static public System.String DLL_NAME
    static ::Il2CppString* _get_DLL_NAME();
    // Set static field: static public System.String DLL_NAME
    static void _set_DLL_NAME(::Il2CppString* value);
    // Get static field: static private System.Text.UTF8Encoding nativeStringEncoding
    static System::Text::UTF8Encoding* _get_nativeStringEncoding();
    // Set static field: static private System.Text.UTF8Encoding nativeStringEncoding
    static void _set_nativeStringEncoding(System::Text::UTF8Encoding* value);
    // static field const value: static public System.Int32 VoipFilterBufferSize
    static constexpr const int VoipFilterBufferSize = 480;
    // Get static field: static public System.Int32 VoipFilterBufferSize
    static int _get_VoipFilterBufferSize();
    // Set static field: static public System.Int32 VoipFilterBufferSize
    static void _set_VoipFilterBufferSize(int value);
    // static public System.IntPtr ArrayOfStructsToIntPtr(System.Array ar)
    // Offset: 0x1B16AE0
    static System::IntPtr ArrayOfStructsToIntPtr(System::Array* ar);
    // static public Oculus.Platform.CAPI/ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(System.Collections.Generic.Dictionary`2<System.String,System.Object> dict)
    // Offset: 0x1B16CA0
    static ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* DictionaryToOVRKeyValuePairs(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* dict);
    // static public System.Byte[] IntPtrToByteArray(System.IntPtr data, System.UInt64 size)
    // Offset: 0x1B17190
    static ::Array<uint8_t>* IntPtrToByteArray(System::IntPtr data, uint64_t size);
    // static public System.Collections.Generic.Dictionary`2<System.String,System.String> DataStoreFromNative(System.IntPtr pointer)
    // Offset: 0x1B1724C
    static System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* DataStoreFromNative(System::IntPtr pointer);
    // static public System.String StringFromNative(System.IntPtr pointer)
    // Offset: 0x1B17554
    static ::Il2CppString* StringFromNative(System::IntPtr pointer);
    // static public System.Int32 GetNativeStringLengthNotIncludingNullTerminator(System.IntPtr pointer)
    // Offset: 0x1B1766C
    static int GetNativeStringLengthNotIncludingNullTerminator(System::IntPtr pointer);
    // static public System.DateTime DateTimeFromNative(System.UInt64 seconds_since_the_one_true_epoch)
    // Offset: 0x1B176F8
    static System::DateTime DateTimeFromNative(uint64_t seconds_since_the_one_true_epoch);
    // static public System.UInt64 DateTimeToNative(System.DateTime dt)
    // Offset: 0x1B17768
    static uint64_t DateTimeToNative(System::DateTime dt);
    // static public System.Byte[] BlobFromNative(System.UInt32 size, System.IntPtr pointer)
    // Offset: 0x1B17864
    static ::Array<uint8_t>* BlobFromNative(uint size, System::IntPtr pointer);
    // static public System.Byte[] FiledataFromNative(System.UInt32 size, System.IntPtr pointer)
    // Offset: 0x1B17948
    static ::Array<uint8_t>* FiledataFromNative(uint size, System::IntPtr pointer);
    // static public System.IntPtr StringToNative(System.String s)
    // Offset: 0x1B179EC
    static System::IntPtr StringToNative(::Il2CppString* s);
    // static public System.Boolean ovr_UnityInitWrapper(System.String appId)
    // Offset: 0x1B14AA8
    static bool ovr_UnityInitWrapper(::Il2CppString* appId);
    // static public System.Void ovr_UnityInitGlobals(System.IntPtr loggingCB)
    // Offset: 0x1B17B5C
    static void ovr_UnityInitGlobals(System::IntPtr loggingCB);
    // static public System.UInt64 ovr_UnityInitWrapperAsynchronous(System.String appId)
    // Offset: 0x1B14C2C
    static uint64_t ovr_UnityInitWrapperAsynchronous(::Il2CppString* appId);
    // static public System.Boolean ovr_UnityInitWrapperStandalone(System.String accessToken, System.IntPtr loggingCB)
    // Offset: 0x1B17BDC
    static bool ovr_UnityInitWrapperStandalone(::Il2CppString* accessToken, System::IntPtr loggingCB);
    // static public System.UInt64 ovr_Platform_InitializeStandaloneOculus(ref Oculus.Platform.CAPI/OculusInitParams init)
    // Offset: 0x1B17C88
    static uint64_t ovr_Platform_InitializeStandaloneOculus(Oculus::Platform::CAPI::OculusInitParams& init);
    // static public System.UInt64 ovr_PlatformInitializeWithAccessToken(System.UInt64 appId, System.String accessToken)
    // Offset: 0x1B17D6C
    static uint64_t ovr_PlatformInitializeWithAccessToken(uint64_t appId, ::Il2CppString* accessToken);
    // static public System.Boolean ovr_UnityInitWrapperWindows(System.String appId, System.IntPtr loggingCB)
    // Offset: 0x1B17E18
    static bool ovr_UnityInitWrapperWindows(::Il2CppString* appId, System::IntPtr loggingCB);
    // static public System.UInt64 ovr_UnityInitWrapperWindowsAsynchronous(System.String appId, System.IntPtr loggingCB)
    // Offset: 0x1B17EC4
    static uint64_t ovr_UnityInitWrapperWindowsAsynchronous(::Il2CppString* appId, System::IntPtr loggingCB);
    // static public System.Boolean ovr_SetDeveloperAccessToken(System.String accessToken)
    // Offset: 0x1B17F6C
    static bool ovr_SetDeveloperAccessToken(::Il2CppString* accessToken);
    // static public System.String ovr_GetLoggedInUserLocale()
    // Offset: 0x1B18008
    static ::Il2CppString* ovr_GetLoggedInUserLocale();
    // static private System.IntPtr ovr_GetLoggedInUserLocale_Native()
    // Offset: 0x1B18068
    static System::IntPtr ovr_GetLoggedInUserLocale_Native();
    // static public System.IntPtr ovr_PopMessage()
    // Offset: 0x1B180DC
    static System::IntPtr ovr_PopMessage();
    // static public System.Void ovr_FreeMessage(System.IntPtr message)
    // Offset: 0x1B18150
    static void ovr_FreeMessage(System::IntPtr message);
    // static public System.IntPtr ovr_Voip_CreateEncoder()
    // Offset: 0x1B181D0
    static System::IntPtr ovr_Voip_CreateEncoder();
    // static public System.Void ovr_Voip_DestroyEncoder(System.IntPtr encoder)
    // Offset: 0x1B18244
    static void ovr_Voip_DestroyEncoder(System::IntPtr encoder);
    // static public System.IntPtr ovr_Voip_CreateDecoder()
    // Offset: 0x1B182C4
    static System::IntPtr ovr_Voip_CreateDecoder();
    // static public System.Void ovr_Voip_DestroyDecoder(System.IntPtr decoder)
    // Offset: 0x1B18338
    static void ovr_Voip_DestroyDecoder(System::IntPtr decoder);
    // static public System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UInt64 compressedSize)
    // Offset: 0x1B183B8
    static void ovr_VoipDecoder_Decode(System::IntPtr obj, ::Array<uint8_t>* compressedData, uint64_t compressedSize);
    // static public System.IntPtr ovr_Microphone_Create()
    // Offset: 0x1B18458
    static System::IntPtr ovr_Microphone_Create();
    // static public System.Void ovr_Microphone_Destroy(System.IntPtr obj)
    // Offset: 0x1B184CC
    static void ovr_Microphone_Destroy(System::IntPtr obj);
    // static public System.Void ovr_Voip_SetSystemVoipPassthrough(System.Boolean passthrough)
    // Offset: 0x1B1854C
    static void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);
    // static public System.Void ovr_Voip_SetSystemVoipMicrophoneMuted(Oculus.Platform.VoipMuteState muted)
    // Offset: 0x1B185CC
    static void ovr_Voip_SetSystemVoipMicrophoneMuted(Oculus::Platform::VoipMuteState muted);
    // static public System.Void ovr_UnityResetTestPlatform()
    // Offset: 0x1B1864C
    static void ovr_UnityResetTestPlatform();
    // static public System.UInt64 ovr_HTTP_GetWithMessageType(System.String url, System.Int32 messageType)
    // Offset: 0x1B147D8
    static uint64_t ovr_HTTP_GetWithMessageType(::Il2CppString* url, int messageType);
    // static public System.Void ovr_CrashApplication()
    // Offset: 0x1B186BC
    static void ovr_CrashApplication();
    // static public System.Void ovr_Voip_SetMicrophoneFilterCallback(Oculus.Platform.CAPI/FilterCallback cb)
    // Offset: 0x1B1872C
    static void ovr_Voip_SetMicrophoneFilterCallback(Oculus::Platform::CAPI::FilterCallback* cb);
    // static public System.Void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(Oculus.Platform.CAPI/FilterCallback cb, System.UIntPtr bufferSizeElements)
    // Offset: 0x1B187B0
    static void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(Oculus::Platform::CAPI::FilterCallback* cb, System::UIntPtr bufferSizeElements);
    // static public System.Void LogNewEvent(System.String eventName, System.Collections.Generic.Dictionary`2<System.String,System.String> values)
    // Offset: 0x1B18844
    static void LogNewEvent(::Il2CppString* eventName, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* values);
    // static public System.Void ovr_Log_NewEvent(System.IntPtr eventName, System.IntPtr[] values, System.UIntPtr length)
    // Offset: 0x1B18B48
    static void ovr_Log_NewEvent(System::IntPtr eventName, ::Array<System::IntPtr>* values, System::UIntPtr length);
    // static public System.IntPtr ovr_ApplicationLifecycle_GetLaunchDetails()
    // Offset: 0x1B15100
    static System::IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();
    // static public System.UInt64 ovr_HTTP_StartTransfer(System.String url, Oculus.Platform.CAPI/ovrKeyValuePair[] headers)
    // Offset: 0x1B18BE8
    static uint64_t ovr_HTTP_StartTransfer(::Il2CppString* url, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* headers);
    // static private System.UInt64 ovr_HTTP_StartTransfer_Native(System.IntPtr url, Oculus.Platform.CAPI/ovrKeyValuePair[] headers, System.UIntPtr numItems)
    // Offset: 0x1B18CDC
    static uint64_t ovr_HTTP_StartTransfer_Native(System::IntPtr url, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* headers, System::UIntPtr numItems);
    // static public System.Boolean ovr_HTTP_Write(System.UInt64 transferId, System.Byte[] bytes, System.UIntPtr length)
    // Offset: 0x1B18E38
    static bool ovr_HTTP_Write(uint64_t transferId, ::Array<uint8_t>* bytes, System::UIntPtr length);
    // static public System.Void ovr_HTTP_WriteEOM(System.UInt64 transferId)
    // Offset: 0x1B18EE0
    static void ovr_HTTP_WriteEOM(uint64_t transferId);
    // static public System.String ovr_Message_GetStringForJavascript(System.IntPtr message)
    // Offset: 0x1B18F5C
    static ::Il2CppString* ovr_Message_GetStringForJavascript(System::IntPtr message);
    // static private System.IntPtr ovr_Message_GetStringForJavascript_Native(System.IntPtr message)
    // Offset: 0x1B18FC4
    static System::IntPtr ovr_Message_GetStringForJavascript_Native(System::IntPtr message);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B19044
    static System::UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(int64_t connection_id, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B190E4
    static System::UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(int64_t connection_id, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B19184
    static System::UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(int64_t connection_id, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B19224
    static System::UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(int64_t connection_id, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.Boolean ovr_NetSync_GetListenerPosition(System.Int64 connection_id, System.UInt64 sessionId, ref Oculus.Platform.CAPI/ovrNetSyncVec3 position)
    // Offset: 0x1B192C4
    static bool ovr_NetSync_GetListenerPosition(int64_t connection_id, uint64_t sessionId, Oculus::Platform::CAPI::ovrNetSyncVec3& position);
    // static public System.UIntPtr ovr_NetSync_GetMonostreamFloatPCM(System.Int64 connection_id, System.UInt64 sessionId, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B19364
    static System::UIntPtr ovr_NetSync_GetMonostreamFloatPCM(int64_t connection_id, uint64_t sessionId, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetMonostreamInt16PCM(System.Int64 connection_id, System.UInt64 session_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B19414
    static System::UIntPtr ovr_NetSync_GetMonostreamInt16PCM(int64_t connection_id, uint64_t session_id, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetPcmBufferMaxSamples()
    // Offset: 0x1B194C4
    static System::UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();
    // static public System.Void ovr_NetSync_SetListenerPosition(System.Int64 connection_id, ref Oculus.Platform.CAPI/ovrNetSyncVec3 position)
    // Offset: 0x1B19538
    static void ovr_NetSync_SetListenerPosition(int64_t connection_id, Oculus::Platform::CAPI::ovrNetSyncVec3& position);
    // static public System.Void ovr_Net_Accept(System.UInt64 peerID)
    // Offset: 0x1B195C8
    static void ovr_Net_Accept(uint64_t peerID);
    // static public System.Boolean ovr_Net_AcceptForCurrentRoom()
    // Offset: 0x1B19648
    static bool ovr_Net_AcceptForCurrentRoom();
    // static public System.Void ovr_Net_Close(System.UInt64 peerID)
    // Offset: 0x1B196C4
    static void ovr_Net_Close(uint64_t peerID);
    // static public System.Void ovr_Net_CloseForCurrentRoom()
    // Offset: 0x1B19744
    static void ovr_Net_CloseForCurrentRoom();
    // static public System.Void ovr_Net_Connect(System.UInt64 peerID)
    // Offset: 0x1B197B4
    static void ovr_Net_Connect(uint64_t peerID);
    // static public System.Boolean ovr_Net_IsConnected(System.UInt64 peerID)
    // Offset: 0x1B19834
    static bool ovr_Net_IsConnected(uint64_t peerID);
    // static public System.UInt64 ovr_Net_Ping(System.UInt64 peerID)
    // Offset: 0x1B198BC
    static uint64_t ovr_Net_Ping(uint64_t peerID);
    // static public System.IntPtr ovr_Net_ReadPacket()
    // Offset: 0x1B1993C
    static System::IntPtr ovr_Net_ReadPacket();
    // static public System.Boolean ovr_Net_SendPacket(System.UInt64 userID, System.UIntPtr length, System.Byte[] bytes, Oculus.Platform.SendPolicy policy)
    // Offset: 0x1B199B0
    static bool ovr_Net_SendPacket(uint64_t userID, System::UIntPtr length, ::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy);
    // static public System.Boolean ovr_Net_SendPacketToCurrentRoom(System.UIntPtr length, System.Byte[] bytes, Oculus.Platform.SendPolicy policy)
    // Offset: 0x1B19A68
    static bool ovr_Net_SendPacketToCurrentRoom(System::UIntPtr length, ::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy);
    // static public System.Int32 ovr_Party_PluginGetSharedMemHandle()
    // Offset: 0x1B19B10
    static int ovr_Party_PluginGetSharedMemHandle();
    // static public Oculus.Platform.VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted()
    // Offset: 0x1B19B84
    static Oculus::Platform::VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();
    // static public System.Boolean ovr_Party_PluginGetVoipPassthrough()
    // Offset: 0x1B19BF8
    static bool ovr_Party_PluginGetVoipPassthrough();
    // static public Oculus.Platform.SystemVoipStatus ovr_Party_PluginGetVoipStatus()
    // Offset: 0x1B19C74
    static Oculus::Platform::SystemVoipStatus ovr_Party_PluginGetVoipStatus();
    // static public System.Void ovr_Voip_Accept(System.UInt64 userID)
    // Offset: 0x1B19CE8
    static void ovr_Voip_Accept(uint64_t userID);
    // static public Oculus.Platform.VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(System.UInt64 peerID)
    // Offset: 0x1B19D68
    static Oculus::Platform::VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(uint64_t peerID);
    // static public Oculus.Platform.VoipBitrate ovr_Voip_GetLocalBitrate(System.UInt64 peerID)
    // Offset: 0x1B19DE8
    static Oculus::Platform::VoipBitrate ovr_Voip_GetLocalBitrate(uint64_t peerID);
    // static public System.UIntPtr ovr_Voip_GetOutputBufferMaxSize()
    // Offset: 0x1B19E68
    static System::UIntPtr ovr_Voip_GetOutputBufferMaxSize();
    // static public System.UIntPtr ovr_Voip_GetPCM(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B19EDC
    static System::UIntPtr ovr_Voip_GetPCM(uint64_t senderID, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Voip_GetPCMFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B19F7C
    static System::UIntPtr ovr_Voip_GetPCMFloat(uint64_t senderID, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Voip_GetPCMSize(System.UInt64 senderID)
    // Offset: 0x1B1A01C
    static System::UIntPtr ovr_Voip_GetPCMSize(uint64_t senderID);
    // static public System.UIntPtr ovr_Voip_GetPCMWithTimestamp(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)
    // Offset: 0x1B1A09C
    static System::UIntPtr ovr_Voip_GetPCMWithTimestamp(uint64_t senderID, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements, ::Array<uint>* timestamp);
    // static public System.UIntPtr ovr_Voip_GetPCMWithTimestampFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)
    // Offset: 0x1B1A154
    static System::UIntPtr ovr_Voip_GetPCMWithTimestampFloat(uint64_t senderID, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements, ::Array<uint>* timestamp);
    // static public Oculus.Platform.VoipBitrate ovr_Voip_GetRemoteBitrate(System.UInt64 peerID)
    // Offset: 0x1B1A20C
    static Oculus::Platform::VoipBitrate ovr_Voip_GetRemoteBitrate(uint64_t peerID);
    // static public System.UInt32 ovr_Voip_GetSyncTimestamp(System.UInt64 userID)
    // Offset: 0x1B1A28C
    static uint ovr_Voip_GetSyncTimestamp(uint64_t userID);
    // static public System.Int64 ovr_Voip_GetSyncTimestampDifference(System.UInt32 lhs, System.UInt32 rhs)
    // Offset: 0x1B1A30C
    static int64_t ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);
    // static public Oculus.Platform.VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted()
    // Offset: 0x1B1A39C
    static Oculus::Platform::VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();
    // static public Oculus.Platform.SystemVoipStatus ovr_Voip_GetSystemVoipStatus()
    // Offset: 0x1B1A410
    static Oculus::Platform::SystemVoipStatus ovr_Voip_GetSystemVoipStatus();
    // static public System.Void ovr_Voip_SetMicrophoneMuted(Oculus.Platform.VoipMuteState state)
    // Offset: 0x1B1A484
    static void ovr_Voip_SetMicrophoneMuted(Oculus::Platform::VoipMuteState state);
    // static public System.Void ovr_Voip_SetNewConnectionOptions(System.IntPtr voipOptions)
    // Offset: 0x1B1A504
    static void ovr_Voip_SetNewConnectionOptions(System::IntPtr voipOptions);
    // static public System.Void ovr_Voip_SetOutputSampleRate(Oculus.Platform.VoipSampleRate rate)
    // Offset: 0x1B1A584
    static void ovr_Voip_SetOutputSampleRate(Oculus::Platform::VoipSampleRate rate);
    // static public System.Void ovr_Voip_Start(System.UInt64 userID)
    // Offset: 0x1B1A604
    static void ovr_Voip_Start(uint64_t userID);
    // static public System.Void ovr_Voip_Stop(System.UInt64 userID)
    // Offset: 0x1B1A684
    static void ovr_Voip_Stop(uint64_t userID);
    // static public System.UInt64 ovr_Achievements_AddCount(System.String name, System.UInt64 count)
    // Offset: 0x1B139FC
    static uint64_t ovr_Achievements_AddCount(::Il2CppString* name, uint64_t count);
    // static private System.UInt64 ovr_Achievements_AddCount_Native(System.IntPtr name, System.UInt64 count)
    // Offset: 0x1B1A704
    static uint64_t ovr_Achievements_AddCount_Native(System::IntPtr name, uint64_t count);
    // static public System.UInt64 ovr_Achievements_AddFields(System.String name, System.String fields)
    // Offset: 0x1B13BD4
    static uint64_t ovr_Achievements_AddFields(::Il2CppString* name, ::Il2CppString* fields);
    // static private System.UInt64 ovr_Achievements_AddFields_Native(System.IntPtr name, System.IntPtr fields)
    // Offset: 0x1B1A794
    static uint64_t ovr_Achievements_AddFields_Native(System::IntPtr name, System::IntPtr fields);
    // static public System.UInt64 ovr_Achievements_GetAllDefinitions()
    // Offset: 0x1B13DB0
    static uint64_t ovr_Achievements_GetAllDefinitions();
    // static public System.UInt64 ovr_Achievements_GetAllProgress()
    // Offset: 0x1B13F2C
    static uint64_t ovr_Achievements_GetAllProgress();
    // static public System.UInt64 ovr_Achievements_GetDefinitionsByName(System.String[] names, System.Int32 count)
    // Offset: 0x1B140CC
    static uint64_t ovr_Achievements_GetDefinitionsByName(::Array<::Il2CppString*>* names, int count);
    // static public System.UInt64 ovr_Achievements_GetProgressByName(System.String[] names, System.Int32 count)
    // Offset: 0x1B1434C
    static uint64_t ovr_Achievements_GetProgressByName(::Array<::Il2CppString*>* names, int count);
    // static public System.UInt64 ovr_Achievements_Unlock(System.String name)
    // Offset: 0x1B145B8
    static uint64_t ovr_Achievements_Unlock(::Il2CppString* name);
    // static private System.UInt64 ovr_Achievements_Unlock_Native(System.IntPtr name)
    // Offset: 0x1B1A824
    static uint64_t ovr_Achievements_Unlock_Native(System::IntPtr name);
    // static public System.UInt64 ovr_Application_ExecuteCoordinatedLaunch(System.UInt64 appID, System.UInt64 roomID)
    // Offset: 0x1B1A8A4
    static uint64_t ovr_Application_ExecuteCoordinatedLaunch(uint64_t appID, uint64_t roomID);
    // static public System.UInt64 ovr_Application_GetInstalledApplications()
    // Offset: 0x1B1A934
    static uint64_t ovr_Application_GetInstalledApplications();
    // static public System.UInt64 ovr_Application_GetVersion()
    // Offset: 0x1B14DD4
    static uint64_t ovr_Application_GetVersion();
    // static public System.UInt64 ovr_Application_LaunchOtherApp(System.UInt64 appID, System.IntPtr deeplink_options)
    // Offset: 0x1B14FE4
    static uint64_t ovr_Application_LaunchOtherApp(uint64_t appID, System::IntPtr deeplink_options);
    // static public System.UInt64 ovr_ApplicationLifecycle_GetRegisteredPIDs()
    // Offset: 0x1B1A9A8
    static uint64_t ovr_ApplicationLifecycle_GetRegisteredPIDs();
    // static public System.UInt64 ovr_ApplicationLifecycle_GetSessionKey()
    // Offset: 0x1B1AA1C
    static uint64_t ovr_ApplicationLifecycle_GetSessionKey();
    // static public System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey(System.String sessionKey)
    // Offset: 0x1B1AA90
    static uint64_t ovr_ApplicationLifecycle_RegisterSessionKey(::Il2CppString* sessionKey);
    // static private System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey_Native(System.IntPtr sessionKey)
    // Offset: 0x1B1AB38
    static uint64_t ovr_ApplicationLifecycle_RegisterSessionKey_Native(System::IntPtr sessionKey);
    // static public System.UInt64 ovr_AssetFile_Delete(System.UInt64 assetFileID)
    // Offset: 0x1B15644
    static uint64_t ovr_AssetFile_Delete(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DeleteById(System.UInt64 assetFileID)
    // Offset: 0x1B157DC
    static uint64_t ovr_AssetFile_DeleteById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DeleteByName(System.String assetFileName)
    // Offset: 0x1B15974
    static uint64_t ovr_AssetFile_DeleteByName(::Il2CppString* assetFileName);
    // static private System.UInt64 ovr_AssetFile_DeleteByName_Native(System.IntPtr assetFileName)
    // Offset: 0x1B1ABB8
    static uint64_t ovr_AssetFile_DeleteByName_Native(System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_Download(System.UInt64 assetFileID)
    // Offset: 0x1B15B34
    static uint64_t ovr_AssetFile_Download(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadById(System.UInt64 assetFileID)
    // Offset: 0x1B15CCC
    static uint64_t ovr_AssetFile_DownloadById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadByName(System.String assetFileName)
    // Offset: 0x1B15E64
    static uint64_t ovr_AssetFile_DownloadByName(::Il2CppString* assetFileName);
    // static private System.UInt64 ovr_AssetFile_DownloadByName_Native(System.IntPtr assetFileName)
    // Offset: 0x1B1AC38
    static uint64_t ovr_AssetFile_DownloadByName_Native(System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_DownloadCancel(System.UInt64 assetFileID)
    // Offset: 0x1B16024
    static uint64_t ovr_AssetFile_DownloadCancel(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadCancelById(System.UInt64 assetFileID)
    // Offset: 0x1B161BC
    static uint64_t ovr_AssetFile_DownloadCancelById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadCancelByName(System.String assetFileName)
    // Offset: 0x1B16354
    static uint64_t ovr_AssetFile_DownloadCancelByName(::Il2CppString* assetFileName);
    // static private System.UInt64 ovr_AssetFile_DownloadCancelByName_Native(System.IntPtr assetFileName)
    // Offset: 0x1B1ACB8
    static uint64_t ovr_AssetFile_DownloadCancelByName_Native(System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_GetList()
    // Offset: 0x1B16504
    static uint64_t ovr_AssetFile_GetList();
    // static public System.UInt64 ovr_AssetFile_Status(System.UInt64 assetFileID)
    // Offset: 0x1B16690
    static uint64_t ovr_AssetFile_Status(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_StatusById(System.UInt64 assetFileID)
    // Offset: 0x1B16828
    static uint64_t ovr_AssetFile_StatusById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_StatusByName(System.String assetFileName)
    // Offset: 0x1B169C0
    static uint64_t ovr_AssetFile_StatusByName(::Il2CppString* assetFileName);
    // static private System.UInt64 ovr_AssetFile_StatusByName_Native(System.IntPtr assetFileName)
    // Offset: 0x1B1AD38
    static uint64_t ovr_AssetFile_StatusByName_Native(System::IntPtr assetFileName);
    // static public System.UInt64 ovr_Avatar_UpdateMetaData(System.String avatarMetaData, System.String imageFilePath)
    // Offset: 0x1B1ADB8
    static uint64_t ovr_Avatar_UpdateMetaData(::Il2CppString* avatarMetaData, ::Il2CppString* imageFilePath);
    // static private System.UInt64 ovr_Avatar_UpdateMetaData_Native(System.IntPtr avatarMetaData, System.IntPtr imageFilePath)
    // Offset: 0x1B1AE8C
    static uint64_t ovr_Avatar_UpdateMetaData_Native(System::IntPtr avatarMetaData, System::IntPtr imageFilePath);
    // static public System.UInt64 ovr_Cal_FinalizeApplication(System.UInt64 groupingObject, System.UInt64[] userIDs, System.Int32 numUserIDs, System.UInt64 finalized_application_ID)
    // Offset: 0x1B1AF1C
    static uint64_t ovr_Cal_FinalizeApplication(uint64_t groupingObject, ::Array<uint64_t>* userIDs, int numUserIDs, uint64_t finalized_application_ID);
    // static public System.UInt64 ovr_Cal_GetSuggestedApplications(System.UInt64 groupingObject, System.UInt64[] userIDs, System.Int32 numUserIDs)
    // Offset: 0x1B1AFCC
    static uint64_t ovr_Cal_GetSuggestedApplications(uint64_t groupingObject, ::Array<uint64_t>* userIDs, int numUserIDs);
    // static public System.UInt64 ovr_Cal_ProposeApplication(System.UInt64 groupingObject, System.UInt64[] userIDs, System.Int32 numUserIDs, System.UInt64 proposed_application_ID)
    // Offset: 0x1B1B06C
    static uint64_t ovr_Cal_ProposeApplication(uint64_t groupingObject, ::Array<uint64_t>* userIDs, int numUserIDs, uint64_t proposed_application_ID);
    // static public System.UInt64 ovr_CloudStorage_Delete(System.String bucket, System.String key)
    // Offset: 0x1B1B11C
    static uint64_t ovr_CloudStorage_Delete(::Il2CppString* bucket, ::Il2CppString* key);
    // static private System.UInt64 ovr_CloudStorage_Delete_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x1B1B1F0
    static uint64_t ovr_CloudStorage_Delete_Native(System::IntPtr bucket, System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_Load(System.String bucket, System.String key)
    // Offset: 0x1B1B280
    static uint64_t ovr_CloudStorage_Load(::Il2CppString* bucket, ::Il2CppString* key);
    // static private System.UInt64 ovr_CloudStorage_Load_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x1B1B354
    static uint64_t ovr_CloudStorage_Load_Native(System::IntPtr bucket, System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_LoadBucketMetadata(System.String bucket)
    // Offset: 0x1B1B3E4
    static uint64_t ovr_CloudStorage_LoadBucketMetadata(::Il2CppString* bucket);
    // static private System.UInt64 ovr_CloudStorage_LoadBucketMetadata_Native(System.IntPtr bucket)
    // Offset: 0x1B1B48C
    static uint64_t ovr_CloudStorage_LoadBucketMetadata_Native(System::IntPtr bucket);
    // static public System.UInt64 ovr_CloudStorage_LoadConflictMetadata(System.String bucket, System.String key)
    // Offset: 0x1B1B50C
    static uint64_t ovr_CloudStorage_LoadConflictMetadata(::Il2CppString* bucket, ::Il2CppString* key);
    // static private System.UInt64 ovr_CloudStorage_LoadConflictMetadata_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x1B1B5E0
    static uint64_t ovr_CloudStorage_LoadConflictMetadata_Native(System::IntPtr bucket, System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_LoadHandle(System.String handle)
    // Offset: 0x1B1B670
    static uint64_t ovr_CloudStorage_LoadHandle(::Il2CppString* handle);
    // static private System.UInt64 ovr_CloudStorage_LoadHandle_Native(System.IntPtr handle)
    // Offset: 0x1B1B718
    static uint64_t ovr_CloudStorage_LoadHandle_Native(System::IntPtr handle);
    // static public System.UInt64 ovr_CloudStorage_LoadMetadata(System.String bucket, System.String key)
    // Offset: 0x1B1B798
    static uint64_t ovr_CloudStorage_LoadMetadata(::Il2CppString* bucket, ::Il2CppString* key);
    // static private System.UInt64 ovr_CloudStorage_LoadMetadata_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x1B1B86C
    static uint64_t ovr_CloudStorage_LoadMetadata_Native(System::IntPtr bucket, System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_ResolveKeepLocal(System.String bucket, System.String key, System.String remoteHandle)
    // Offset: 0x1B1B8FC
    static uint64_t ovr_CloudStorage_ResolveKeepLocal(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle);
    // static private System.UInt64 ovr_CloudStorage_ResolveKeepLocal_Native(System.IntPtr bucket, System.IntPtr key, System.IntPtr remoteHandle)
    // Offset: 0x1B1B9F0
    static uint64_t ovr_CloudStorage_ResolveKeepLocal_Native(System::IntPtr bucket, System::IntPtr key, System::IntPtr remoteHandle);
    // static public System.UInt64 ovr_CloudStorage_ResolveKeepRemote(System.String bucket, System.String key, System.String remoteHandle)
    // Offset: 0x1B1BA88
    static uint64_t ovr_CloudStorage_ResolveKeepRemote(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle);
    // static private System.UInt64 ovr_CloudStorage_ResolveKeepRemote_Native(System.IntPtr bucket, System.IntPtr key, System.IntPtr remoteHandle)
    // Offset: 0x1B1BB7C
    static uint64_t ovr_CloudStorage_ResolveKeepRemote_Native(System::IntPtr bucket, System::IntPtr key, System::IntPtr remoteHandle);
    // static public System.UInt64 ovr_CloudStorage_Save(System.String bucket, System.String key, System.Byte[] data, System.UInt32 dataSize, System.Int64 counter, System.String extraData)
    // Offset: 0x1B1BC14
    static uint64_t ovr_CloudStorage_Save(::Il2CppString* bucket, ::Il2CppString* key, ::Array<uint8_t>* data, uint dataSize, int64_t counter, ::Il2CppString* extraData);
    // static private System.UInt64 ovr_CloudStorage_Save_Native(System.IntPtr bucket, System.IntPtr key, System.Byte[] data, System.UInt32 dataSize, System.Int64 counter, System.IntPtr extraData)
    // Offset: 0x1B1BD30
    static uint64_t ovr_CloudStorage_Save_Native(System::IntPtr bucket, System::IntPtr key, ::Array<uint8_t>* data, uint dataSize, int64_t counter, System::IntPtr extraData);
    // static public System.UInt64 ovr_CloudStorage2_GetUserDirectoryPath()
    // Offset: 0x1B1BDF8
    static uint64_t ovr_CloudStorage2_GetUserDirectoryPath();
    // static public System.UInt64 ovr_Colocation_GetCurrentMapUuid()
    // Offset: 0x1B1BE6C
    static uint64_t ovr_Colocation_GetCurrentMapUuid();
    // static public System.UInt64 ovr_Colocation_RequestMap(System.String uuid)
    // Offset: 0x1B1BEE0
    static uint64_t ovr_Colocation_RequestMap(::Il2CppString* uuid);
    // static private System.UInt64 ovr_Colocation_RequestMap_Native(System.IntPtr uuid)
    // Offset: 0x1B1BF88
    static uint64_t ovr_Colocation_RequestMap_Native(System::IntPtr uuid);
    // static public System.UInt64 ovr_Colocation_ShareMap(System.String uuid)
    // Offset: 0x1B1C008
    static uint64_t ovr_Colocation_ShareMap(::Il2CppString* uuid);
    // static private System.UInt64 ovr_Colocation_ShareMap_Native(System.IntPtr uuid)
    // Offset: 0x1B1C0B0
    static uint64_t ovr_Colocation_ShareMap_Native(System::IntPtr uuid);
    // static public System.UInt64 ovr_Entitlement_GetIsViewerEntitled()
    // Offset: 0x1B1C130
    static uint64_t ovr_Entitlement_GetIsViewerEntitled();
    // static public System.UInt64 ovr_GraphAPI_Get(System.String url)
    // Offset: 0x1B1C1A4
    static uint64_t ovr_GraphAPI_Get(::Il2CppString* url);
    // static private System.UInt64 ovr_GraphAPI_Get_Native(System.IntPtr url)
    // Offset: 0x1B1C24C
    static uint64_t ovr_GraphAPI_Get_Native(System::IntPtr url);
    // static public System.UInt64 ovr_GraphAPI_Post(System.String url)
    // Offset: 0x1B1C2CC
    static uint64_t ovr_GraphAPI_Post(::Il2CppString* url);
    // static private System.UInt64 ovr_GraphAPI_Post_Native(System.IntPtr url)
    // Offset: 0x1B1C374
    static uint64_t ovr_GraphAPI_Post_Native(System::IntPtr url);
    // static public System.UInt64 ovr_HTTP_Get(System.String url)
    // Offset: 0x1B1C3F0
    static uint64_t ovr_HTTP_Get(::Il2CppString* url);
    // static private System.UInt64 ovr_HTTP_Get_Native(System.IntPtr url)
    // Offset: 0x1B1C498
    static uint64_t ovr_HTTP_Get_Native(System::IntPtr url);
    // static public System.UInt64 ovr_HTTP_GetToFile(System.String url, System.String diskFile)
    // Offset: 0x1B1C518
    static uint64_t ovr_HTTP_GetToFile(::Il2CppString* url, ::Il2CppString* diskFile);
    // static private System.UInt64 ovr_HTTP_GetToFile_Native(System.IntPtr url, System.IntPtr diskFile)
    // Offset: 0x1B1C5EC
    static uint64_t ovr_HTTP_GetToFile_Native(System::IntPtr url, System::IntPtr diskFile);
    // static public System.UInt64 ovr_HTTP_MultiPartPost(System.String url, System.String filepath_param_name, System.String filepath, System.String access_token, Oculus.Platform.CAPI/ovrKeyValuePair[] post_params)
    // Offset: 0x1B1C67C
    static uint64_t ovr_HTTP_MultiPartPost(::Il2CppString* url, ::Il2CppString* filepath_param_name, ::Il2CppString* filepath, ::Il2CppString* access_token, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* post_params);
    // static private System.UInt64 ovr_HTTP_MultiPartPost_Native(System.IntPtr url, System.IntPtr filepath_param_name, System.IntPtr filepath, System.IntPtr access_token, Oculus.Platform.CAPI/ovrKeyValuePair[] post_params, System.UIntPtr numItems)
    // Offset: 0x1B1C7D8
    static uint64_t ovr_HTTP_MultiPartPost_Native(System::IntPtr url, System::IntPtr filepath_param_name, System::IntPtr filepath, System::IntPtr access_token, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* post_params, System::UIntPtr numItems);
    // static public System.UInt64 ovr_HTTP_Post(System.String url)
    // Offset: 0x1B1C964
    static uint64_t ovr_HTTP_Post(::Il2CppString* url);
    // static private System.UInt64 ovr_HTTP_Post_Native(System.IntPtr url)
    // Offset: 0x1B1CA0C
    static uint64_t ovr_HTTP_Post_Native(System::IntPtr url);
    // static public System.UInt64 ovr_IAP_ConsumePurchase(System.String sku)
    // Offset: 0x1B1CA8C
    static uint64_t ovr_IAP_ConsumePurchase(::Il2CppString* sku);
    // static private System.UInt64 ovr_IAP_ConsumePurchase_Native(System.IntPtr sku)
    // Offset: 0x1B1CB34
    static uint64_t ovr_IAP_ConsumePurchase_Native(System::IntPtr sku);
    // static public System.UInt64 ovr_IAP_GetProductsBySKU(System.String[] skus, System.Int32 count)
    // Offset: 0x1B1CBB4
    static uint64_t ovr_IAP_GetProductsBySKU(::Array<::Il2CppString*>* skus, int count);
    // static public System.UInt64 ovr_IAP_GetViewerPurchases()
    // Offset: 0x1B1CD08
    static uint64_t ovr_IAP_GetViewerPurchases();
    // static public System.UInt64 ovr_IAP_GetViewerPurchasesDurableCache()
    // Offset: 0x1B1CD7C
    static uint64_t ovr_IAP_GetViewerPurchasesDurableCache();
    // static public System.UInt64 ovr_IAP_LaunchCheckoutFlow(System.String sku)
    // Offset: 0x1B1CDF0
    static uint64_t ovr_IAP_LaunchCheckoutFlow(::Il2CppString* sku);
    // static private System.UInt64 ovr_IAP_LaunchCheckoutFlow_Native(System.IntPtr sku)
    // Offset: 0x1B1CE98
    static uint64_t ovr_IAP_LaunchCheckoutFlow_Native(System::IntPtr sku);
    // static public System.UInt64 ovr_LanguagePack_GetCurrent()
    // Offset: 0x1B1CF18
    static uint64_t ovr_LanguagePack_GetCurrent();
    // static public System.UInt64 ovr_LanguagePack_SetCurrent(System.String tag)
    // Offset: 0x1B1CF8C
    static uint64_t ovr_LanguagePack_SetCurrent(::Il2CppString* tag);
    // static private System.UInt64 ovr_LanguagePack_SetCurrent_Native(System.IntPtr tag)
    // Offset: 0x1B1D034
    static uint64_t ovr_LanguagePack_SetCurrent_Native(System::IntPtr tag);
    // static public System.UInt64 ovr_Leaderboard_GetEntries(System.String leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x1B1D0B4
    static uint64_t ovr_Leaderboard_GetEntries(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt);
    // static private System.UInt64 ovr_Leaderboard_GetEntries_Native(System.IntPtr leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x1B1D184
    static uint64_t ovr_Leaderboard_GetEntries_Native(System::IntPtr leaderboardName, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt);
    // static public System.UInt64 ovr_Leaderboard_GetEntriesAfterRank(System.String leaderboardName, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x1B1D22C
    static uint64_t ovr_Leaderboard_GetEntriesAfterRank(::Il2CppString* leaderboardName, int limit, uint64_t afterRank);
    // static private System.UInt64 ovr_Leaderboard_GetEntriesAfterRank_Native(System.IntPtr leaderboardName, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x1B1D2EC
    static uint64_t ovr_Leaderboard_GetEntriesAfterRank_Native(System::IntPtr leaderboardName, int limit, uint64_t afterRank);
    // static public System.UInt64 ovr_Leaderboard_GetNextEntries(System.IntPtr handle)
    // Offset: 0x1B1D384
    static uint64_t ovr_Leaderboard_GetNextEntries(System::IntPtr handle);
    // static public System.UInt64 ovr_Leaderboard_GetPreviousEntries(System.IntPtr handle)
    // Offset: 0x1B1D404
    static uint64_t ovr_Leaderboard_GetPreviousEntries(System::IntPtr handle);
    // static public System.UInt64 ovr_Leaderboard_WriteEntry(System.String leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x1B1D484
    static uint64_t ovr_Leaderboard_WriteEntry(::Il2CppString* leaderboardName, int64_t score, ::Array<uint8_t>* extraData, uint extraDataLength, bool forceUpdate);
    // static private System.UInt64 ovr_Leaderboard_WriteEntry_Native(System.IntPtr leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x1B1D55C
    static uint64_t ovr_Leaderboard_WriteEntry_Native(System::IntPtr leaderboardName, int64_t score, ::Array<uint8_t>* extraData, uint extraDataLength, bool forceUpdate);
    // static public System.UInt64 ovr_Livestreaming_GetStatus()
    // Offset: 0x1B1D614
    static uint64_t ovr_Livestreaming_GetStatus();
    // static public System.UInt64 ovr_Livestreaming_IsAllowedForApplication(System.String packageName)
    // Offset: 0x1B1D688
    static uint64_t ovr_Livestreaming_IsAllowedForApplication(::Il2CppString* packageName);
    // static private System.UInt64 ovr_Livestreaming_IsAllowedForApplication_Native(System.IntPtr packageName)
    // Offset: 0x1B1D730
    static uint64_t ovr_Livestreaming_IsAllowedForApplication_Native(System::IntPtr packageName);
    // static public System.UInt64 ovr_Livestreaming_PauseStream()
    // Offset: 0x1B1D7B0
    static uint64_t ovr_Livestreaming_PauseStream();
    // static public System.UInt64 ovr_Livestreaming_ResumeStream()
    // Offset: 0x1B1D824
    static uint64_t ovr_Livestreaming_ResumeStream();
    // static public System.UInt64 ovr_Livestreaming_StartPartyStream()
    // Offset: 0x1B1D898
    static uint64_t ovr_Livestreaming_StartPartyStream();
    // static public System.UInt64 ovr_Livestreaming_StartStream(Oculus.Platform.LivestreamingAudience audience, Oculus.Platform.LivestreamingMicrophoneStatus micStatus)
    // Offset: 0x1B1D90C
    static uint64_t ovr_Livestreaming_StartStream(Oculus::Platform::LivestreamingAudience audience, Oculus::Platform::LivestreamingMicrophoneStatus micStatus);
    // static public System.UInt64 ovr_Livestreaming_StopPartyStream()
    // Offset: 0x1B1D99C
    static uint64_t ovr_Livestreaming_StopPartyStream();
    // static public System.UInt64 ovr_Livestreaming_StopStream()
    // Offset: 0x1B1DA10
    static uint64_t ovr_Livestreaming_StopStream();
    // static public System.UInt64 ovr_Livestreaming_UpdateCommentsOverlayVisibility(System.Boolean isVisible)
    // Offset: 0x1B1DA84
    static uint64_t ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);
    // static public System.UInt64 ovr_Livestreaming_UpdateMicStatus(Oculus.Platform.LivestreamingMicrophoneStatus micStatus)
    // Offset: 0x1B1DB04
    static uint64_t ovr_Livestreaming_UpdateMicStatus(Oculus::Platform::LivestreamingMicrophoneStatus micStatus);
    // static public System.UInt64 ovr_Matchmaking_Browse(System.String pool, System.IntPtr customQueryData)
    // Offset: 0x1B1DB84
    static uint64_t ovr_Matchmaking_Browse(::Il2CppString* pool, System::IntPtr customQueryData);
    // static private System.UInt64 ovr_Matchmaking_Browse_Native(System.IntPtr pool, System.IntPtr customQueryData)
    // Offset: 0x1B1DC3C
    static uint64_t ovr_Matchmaking_Browse_Native(System::IntPtr pool, System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_Browse2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1B1DCCC
    static uint64_t ovr_Matchmaking_Browse2(::Il2CppString* pool, System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_Browse2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1B1DD84
    static uint64_t ovr_Matchmaking_Browse2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_Cancel(System.String pool, System.String requestHash)
    // Offset: 0x1B1DE14
    static uint64_t ovr_Matchmaking_Cancel(::Il2CppString* pool, ::Il2CppString* requestHash);
    // static private System.UInt64 ovr_Matchmaking_Cancel_Native(System.IntPtr pool, System.IntPtr requestHash)
    // Offset: 0x1B1DEE8
    static uint64_t ovr_Matchmaking_Cancel_Native(System::IntPtr pool, System::IntPtr requestHash);
    // static public System.UInt64 ovr_Matchmaking_Cancel2()
    // Offset: 0x1B1DF78
    static uint64_t ovr_Matchmaking_Cancel2();
    // static public System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom(System.String pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates, System.IntPtr customQueryData)
    // Offset: 0x1B1DFEC
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates, System::IntPtr customQueryData);
    // static private System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom_Native(System.IntPtr pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates, System.IntPtr customQueryData)
    // Offset: 0x1B1E0BC
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom_Native(System::IntPtr pool, uint maxUsers, bool subscribeToUpdates, System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1B1E164
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom2(::Il2CppString* pool, System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1B1E21C
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_CreateRoom(System.String pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates)
    // Offset: 0x1B1E2AC
    static uint64_t ovr_Matchmaking_CreateRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates);
    // static private System.UInt64 ovr_Matchmaking_CreateRoom_Native(System.IntPtr pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates)
    // Offset: 0x1B1E36C
    static uint64_t ovr_Matchmaking_CreateRoom_Native(System::IntPtr pool, uint maxUsers, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Matchmaking_CreateRoom2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1B1E404
    static uint64_t ovr_Matchmaking_CreateRoom2(::Il2CppString* pool, System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_CreateRoom2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1B1E4BC
    static uint64_t ovr_Matchmaking_CreateRoom2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_Enqueue(System.String pool, System.IntPtr customQueryData)
    // Offset: 0x1B1E54C
    static uint64_t ovr_Matchmaking_Enqueue(::Il2CppString* pool, System::IntPtr customQueryData);
    // static private System.UInt64 ovr_Matchmaking_Enqueue_Native(System.IntPtr pool, System.IntPtr customQueryData)
    // Offset: 0x1B1E604
    static uint64_t ovr_Matchmaking_Enqueue_Native(System::IntPtr pool, System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_Enqueue2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1B1E694
    static uint64_t ovr_Matchmaking_Enqueue2(::Il2CppString* pool, System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_Enqueue2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x1B1E74C
    static uint64_t ovr_Matchmaking_Enqueue2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_EnqueueRoom(System.UInt64 roomID, System.IntPtr customQueryData)
    // Offset: 0x1B1E7DC
    static uint64_t ovr_Matchmaking_EnqueueRoom(uint64_t roomID, System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_EnqueueRoom2(System.UInt64 roomID, System.IntPtr matchmakingOptions)
    // Offset: 0x1B1E86C
    static uint64_t ovr_Matchmaking_EnqueueRoom2(uint64_t roomID, System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_GetAdminSnapshot()
    // Offset: 0x1B1E8FC
    static uint64_t ovr_Matchmaking_GetAdminSnapshot();
    // static public System.UInt64 ovr_Matchmaking_GetStats(System.String pool, System.UInt32 maxLevel, Oculus.Platform.MatchmakingStatApproach approach)
    // Offset: 0x1B1E970
    static uint64_t ovr_Matchmaking_GetStats(::Il2CppString* pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach);
    // static private System.UInt64 ovr_Matchmaking_GetStats_Native(System.IntPtr pool, System.UInt32 maxLevel, Oculus.Platform.MatchmakingStatApproach approach)
    // Offset: 0x1B1EA30
    static uint64_t ovr_Matchmaking_GetStats_Native(System::IntPtr pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach);
    // static public System.UInt64 ovr_Matchmaking_JoinRoom(System.UInt64 roomID, System.Boolean subscribeToUpdates)
    // Offset: 0x1B1EAC8
    static uint64_t ovr_Matchmaking_JoinRoom(uint64_t roomID, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Matchmaking_ReportResultInsecure(System.UInt64 roomID, Oculus.Platform.CAPI/ovrKeyValuePair[] data)
    // Offset: 0x1B1EB58
    static uint64_t ovr_Matchmaking_ReportResultInsecure(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data);
    // static private System.UInt64 ovr_Matchmaking_ReportResultInsecure_Native(System.UInt64 roomID, Oculus.Platform.CAPI/ovrKeyValuePair[] data, System.UIntPtr numItems)
    // Offset: 0x1B1EC0C
    static uint64_t ovr_Matchmaking_ReportResultInsecure_Native(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data, System::UIntPtr numItems);
    // static public System.UInt64 ovr_Matchmaking_StartMatch(System.UInt64 roomID)
    // Offset: 0x1B1ED68
    static uint64_t ovr_Matchmaking_StartMatch(uint64_t roomID);
    // static public System.UInt64 ovr_Media_ShareToFacebook(System.String postTextSuggestion, System.String filePath, Oculus.Platform.MediaContentType contentType)
    // Offset: 0x1B1EDE8
    static uint64_t ovr_Media_ShareToFacebook(::Il2CppString* postTextSuggestion, ::Il2CppString* filePath, Oculus::Platform::MediaContentType contentType);
    // static private System.UInt64 ovr_Media_ShareToFacebook_Native(System.IntPtr postTextSuggestion, System.IntPtr filePath, Oculus.Platform.MediaContentType contentType)
    // Offset: 0x1B1EEC4
    static uint64_t ovr_Media_ShareToFacebook_Native(System::IntPtr postTextSuggestion, System::IntPtr filePath, Oculus::Platform::MediaContentType contentType);
    // static public System.UInt64 ovr_NetSync_Connect(System.IntPtr connect_options)
    // Offset: 0x1B1EF5C
    static uint64_t ovr_NetSync_Connect(System::IntPtr connect_options);
    // static public System.UInt64 ovr_NetSync_Disconnect(System.Int64 connection_id)
    // Offset: 0x1B1EFDC
    static uint64_t ovr_NetSync_Disconnect(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetSessions(System.Int64 connection_id)
    // Offset: 0x1B1F05C
    static uint64_t ovr_NetSync_GetSessions(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_SetVoipGroup(System.Int64 connection_id, System.String group_id)
    // Offset: 0x1B1F0DC
    static uint64_t ovr_NetSync_SetVoipGroup(int64_t connection_id, ::Il2CppString* group_id);
    // static private System.UInt64 ovr_NetSync_SetVoipGroup_Native(System.Int64 connection_id, System.IntPtr group_id)
    // Offset: 0x1B1F198
    static uint64_t ovr_NetSync_SetVoipGroup_Native(int64_t connection_id, System::IntPtr group_id);
    // static public System.UInt64 ovr_NetSync_SetVoipMicSource(System.Int64 connection_id, Oculus.Platform.NetSyncVoipMicSource mic_source)
    // Offset: 0x1B1F228
    static uint64_t ovr_NetSync_SetVoipMicSource(int64_t connection_id, Oculus::Platform::NetSyncVoipMicSource mic_source);
    // static public System.UInt64 ovr_NetSync_SetVoipSessionMuted(System.Int64 connection_id, System.UInt64 session_id, System.Boolean muted)
    // Offset: 0x1B1F2B8
    static uint64_t ovr_NetSync_SetVoipSessionMuted(int64_t connection_id, uint64_t session_id, bool muted);
    // static public System.UInt64 ovr_NetSync_SetVoipStreamMode(System.Int64 connection_id, System.UInt64 sessionId, Oculus.Platform.NetSyncVoipStreamMode streamMode)
    // Offset: 0x1B1F350
    static uint64_t ovr_NetSync_SetVoipStreamMode(int64_t connection_id, uint64_t sessionId, Oculus::Platform::NetSyncVoipStreamMode streamMode);
    // static public System.UInt64 ovr_Notification_GetRoomInvites()
    // Offset: 0x1B1F3E8
    static uint64_t ovr_Notification_GetRoomInvites();
    // static public System.UInt64 ovr_Notification_MarkAsRead(System.UInt64 notificationID)
    // Offset: 0x1B1F45C
    static uint64_t ovr_Notification_MarkAsRead(uint64_t notificationID);
    // static public System.UInt64 ovr_Party_Create()
    // Offset: 0x1B1F4DC
    static uint64_t ovr_Party_Create();
    // static public System.UInt64 ovr_Party_GatherInApplication(System.UInt64 partyID, System.UInt64 appID)
    // Offset: 0x1B1F550
    static uint64_t ovr_Party_GatherInApplication(uint64_t partyID, uint64_t appID);
    // static public System.UInt64 ovr_Party_Get(System.UInt64 partyID)
    // Offset: 0x1B1F5E0
    static uint64_t ovr_Party_Get(uint64_t partyID);
    // static public System.UInt64 ovr_Party_GetCurrent()
    // Offset: 0x1B1F660
    static uint64_t ovr_Party_GetCurrent();
    // static public System.UInt64 ovr_Party_GetCurrentForUser(System.UInt64 userID)
    // Offset: 0x1B1F6D4
    static uint64_t ovr_Party_GetCurrentForUser(uint64_t userID);
    // static public System.UInt64 ovr_Party_Invite(System.UInt64 partyID, System.UInt64 userID)
    // Offset: 0x1B1F754
    static uint64_t ovr_Party_Invite(uint64_t partyID, uint64_t userID);
    // static public System.UInt64 ovr_Party_Join(System.UInt64 partyID)
    // Offset: 0x1B1F7E0
    static uint64_t ovr_Party_Join(uint64_t partyID);
    // static public System.UInt64 ovr_Party_Leave(System.UInt64 partyID)
    // Offset: 0x1B1F860
    static uint64_t ovr_Party_Leave(uint64_t partyID);
    // static public System.UInt64 ovr_RichPresence_Clear()
    // Offset: 0x1B1F8E0
    static uint64_t ovr_RichPresence_Clear();
    // static public System.UInt64 ovr_RichPresence_GetDestinations()
    // Offset: 0x1B1F954
    static uint64_t ovr_RichPresence_GetDestinations();
    // static public System.UInt64 ovr_RichPresence_Set(System.IntPtr richPresenceOptions)
    // Offset: 0x1B1F9C8
    static uint64_t ovr_RichPresence_Set(System::IntPtr richPresenceOptions);
    // static public System.UInt64 ovr_Room_CreateAndJoinPrivate(Oculus.Platform.RoomJoinPolicy joinPolicy, System.UInt32 maxUsers, System.Boolean subscribeToUpdates)
    // Offset: 0x1B1FA48
    static uint64_t ovr_Room_CreateAndJoinPrivate(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Room_CreateAndJoinPrivate2(Oculus.Platform.RoomJoinPolicy joinPolicy, System.UInt32 maxUsers, System.IntPtr roomOptions)
    // Offset: 0x1B1FAE0
    static uint64_t ovr_Room_CreateAndJoinPrivate2(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, System::IntPtr roomOptions);
    // static public System.UInt64 ovr_Room_Get(System.UInt64 roomID)
    // Offset: 0x1B1FB78
    static uint64_t ovr_Room_Get(uint64_t roomID);
    // static public System.UInt64 ovr_Room_GetCurrent()
    // Offset: 0x1B1FBF8
    static uint64_t ovr_Room_GetCurrent();
    // static public System.UInt64 ovr_Room_GetCurrentForUser(System.UInt64 userID)
    // Offset: 0x1B1FC6C
    static uint64_t ovr_Room_GetCurrentForUser(uint64_t userID);
    // static public System.UInt64 ovr_Room_GetInvitableUsers()
    // Offset: 0x1B1FCEC
    static uint64_t ovr_Room_GetInvitableUsers();
    // static public System.UInt64 ovr_Room_GetInvitableUsers2(System.IntPtr roomOptions)
    // Offset: 0x1B1FD60
    static uint64_t ovr_Room_GetInvitableUsers2(System::IntPtr roomOptions);
    // static public System.UInt64 ovr_Room_GetModeratedRooms()
    // Offset: 0x1B1FDE0
    static uint64_t ovr_Room_GetModeratedRooms();
    // static public System.UInt64 ovr_Room_GetSocialRooms(System.UInt64 appID)
    // Offset: 0x1B1FE54
    static uint64_t ovr_Room_GetSocialRooms(uint64_t appID);
    // static public System.UInt64 ovr_Room_InviteUser(System.UInt64 roomID, System.String inviteToken)
    // Offset: 0x1B1FED4
    static uint64_t ovr_Room_InviteUser(uint64_t roomID, ::Il2CppString* inviteToken);
    // static private System.UInt64 ovr_Room_InviteUser_Native(System.UInt64 roomID, System.IntPtr inviteToken)
    // Offset: 0x1B1FF90
    static uint64_t ovr_Room_InviteUser_Native(uint64_t roomID, System::IntPtr inviteToken);
    // static public System.UInt64 ovr_Room_Join(System.UInt64 roomID, System.Boolean subscribeToUpdates)
    // Offset: 0x1B20020
    static uint64_t ovr_Room_Join(uint64_t roomID, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Room_Join2(System.UInt64 roomID, System.IntPtr roomOptions)
    // Offset: 0x1B200B0
    static uint64_t ovr_Room_Join2(uint64_t roomID, System::IntPtr roomOptions);
    // static public System.UInt64 ovr_Room_KickUser(System.UInt64 roomID, System.UInt64 userID, System.Int32 kickDurationSeconds)
    // Offset: 0x1B20140
    static uint64_t ovr_Room_KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds);
    // static public System.UInt64 ovr_Room_LaunchInvitableUserFlow(System.UInt64 roomID)
    // Offset: 0x1B201D4
    static uint64_t ovr_Room_LaunchInvitableUserFlow(uint64_t roomID);
    // static public System.UInt64 ovr_Room_Leave(System.UInt64 roomID)
    // Offset: 0x1B20254
    static uint64_t ovr_Room_Leave(uint64_t roomID);
    // static public System.UInt64 ovr_Room_SetDescription(System.UInt64 roomID, System.String description)
    // Offset: 0x1B202D4
    static uint64_t ovr_Room_SetDescription(uint64_t roomID, ::Il2CppString* description);
    // static private System.UInt64 ovr_Room_SetDescription_Native(System.UInt64 roomID, System.IntPtr description)
    // Offset: 0x1B20390
    static uint64_t ovr_Room_SetDescription_Native(uint64_t roomID, System::IntPtr description);
    // static public System.UInt64 ovr_Room_UpdateDataStore(System.UInt64 roomID, Oculus.Platform.CAPI/ovrKeyValuePair[] data)
    // Offset: 0x1B20420
    static uint64_t ovr_Room_UpdateDataStore(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data);
    // static private System.UInt64 ovr_Room_UpdateDataStore_Native(System.UInt64 roomID, Oculus.Platform.CAPI/ovrKeyValuePair[] data, System.UIntPtr numItems)
    // Offset: 0x1B204D4
    static uint64_t ovr_Room_UpdateDataStore_Native(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data, System::UIntPtr numItems);
    // static public System.UInt64 ovr_Room_UpdateMembershipLockStatus(System.UInt64 roomID, Oculus.Platform.RoomMembershipLockStatus membershipLockStatus)
    // Offset: 0x1B2062C
    static uint64_t ovr_Room_UpdateMembershipLockStatus(uint64_t roomID, Oculus::Platform::RoomMembershipLockStatus membershipLockStatus);
    // static public System.UInt64 ovr_Room_UpdateOwner(System.UInt64 roomID, System.UInt64 userID)
    // Offset: 0x1B206BC
    static uint64_t ovr_Room_UpdateOwner(uint64_t roomID, uint64_t userID);
    // static public System.UInt64 ovr_Room_UpdatePrivateRoomJoinPolicy(System.UInt64 roomID, Oculus.Platform.RoomJoinPolicy newJoinPolicy)
    // Offset: 0x1B2074C
    static uint64_t ovr_Room_UpdatePrivateRoomJoinPolicy(uint64_t roomID, Oculus::Platform::RoomJoinPolicy newJoinPolicy);
    // static public System.UInt64 ovr_SystemPermissions_GetStatus(Oculus.Platform.PermissionType permType)
    // Offset: 0x1B207DC
    static uint64_t ovr_SystemPermissions_GetStatus(Oculus::Platform::PermissionType permType);
    // static public System.UInt64 ovr_SystemPermissions_LaunchDeeplink(Oculus.Platform.PermissionType permType)
    // Offset: 0x1B2085C
    static uint64_t ovr_SystemPermissions_LaunchDeeplink(Oculus::Platform::PermissionType permType);
    // static public System.UInt64 ovr_User_CancelRecordingForReportFlow(System.String recordingUUID)
    // Offset: 0x1B208DC
    static uint64_t ovr_User_CancelRecordingForReportFlow(::Il2CppString* recordingUUID);
    // static private System.UInt64 ovr_User_CancelRecordingForReportFlow_Native(System.IntPtr recordingUUID)
    // Offset: 0x1B20984
    static uint64_t ovr_User_CancelRecordingForReportFlow_Native(System::IntPtr recordingUUID);
    // static public System.UInt64 ovr_User_Get(System.UInt64 userID)
    // Offset: 0x1B20A04
    static uint64_t ovr_User_Get(uint64_t userID);
    // static public System.UInt64 ovr_User_GetAccessToken()
    // Offset: 0x1B20A84
    static uint64_t ovr_User_GetAccessToken();
    // static public System.UInt64 ovr_User_GetLinkedAccounts(System.IntPtr userOptions)
    // Offset: 0x1B20AF8
    static uint64_t ovr_User_GetLinkedAccounts(System::IntPtr userOptions);
    // static public System.UInt64 ovr_User_GetLoggedInUser()
    // Offset: 0x1B20B78
    static uint64_t ovr_User_GetLoggedInUser();
    // static public System.UInt64 ovr_User_GetLoggedInUserFriends()
    // Offset: 0x1B20BEC
    static uint64_t ovr_User_GetLoggedInUserFriends();
    // static public System.UInt64 ovr_User_GetLoggedInUserFriendsAndRooms()
    // Offset: 0x1B20C60
    static uint64_t ovr_User_GetLoggedInUserFriendsAndRooms();
    // static public System.UInt64 ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(System.IntPtr userOptions)
    // Offset: 0x1B20CD4
    static uint64_t ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(System::IntPtr userOptions);
    // static public System.UInt64 ovr_User_GetOrgScopedID(System.UInt64 userID)
    // Offset: 0x1B20D54
    static uint64_t ovr_User_GetOrgScopedID(uint64_t userID);
    // static public System.UInt64 ovr_User_GetSdkAccounts()
    // Offset: 0x1B20DD4
    static uint64_t ovr_User_GetSdkAccounts();
    // static public System.UInt64 ovr_User_GetUserProof()
    // Offset: 0x1B20E48
    static uint64_t ovr_User_GetUserProof();
    // static public System.UInt64 ovr_User_LaunchBlockFlow(System.UInt64 userID)
    // Offset: 0x1B20EBC
    static uint64_t ovr_User_LaunchBlockFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchFriendRequestFlow(System.UInt64 userID)
    // Offset: 0x1B20F3C
    static uint64_t ovr_User_LaunchFriendRequestFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchProfile(System.UInt64 userID)
    // Offset: 0x1B20FBC
    static uint64_t ovr_User_LaunchProfile(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchReportFlow(System.UInt64 userID)
    // Offset: 0x1B2103C
    static uint64_t ovr_User_LaunchReportFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchReportFlow2(System.UInt64 optionalUserID, System.IntPtr abuseReportOptions)
    // Offset: 0x1B210BC
    static uint64_t ovr_User_LaunchReportFlow2(uint64_t optionalUserID, System::IntPtr abuseReportOptions);
    // static public System.UInt64 ovr_User_LaunchUnblockFlow(System.UInt64 userID)
    // Offset: 0x1B2114C
    static uint64_t ovr_User_LaunchUnblockFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_NewEntitledTestUser()
    // Offset: 0x1B211CC
    static uint64_t ovr_User_NewEntitledTestUser();
    // static public System.UInt64 ovr_User_NewTestUser()
    // Offset: 0x1B21240
    static uint64_t ovr_User_NewTestUser();
    // static public System.UInt64 ovr_User_NewTestUserFriends()
    // Offset: 0x1B212B4
    static uint64_t ovr_User_NewTestUserFriends();
    // static public System.UInt64 ovr_User_StartRecordingForReportFlow()
    // Offset: 0x1B21328
    static uint64_t ovr_User_StartRecordingForReportFlow();
    // static public System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow(System.UInt64 optionalUserID, System.String optionalRecordingUUID)
    // Offset: 0x1B2139C
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow(uint64_t optionalUserID, ::Il2CppString* optionalRecordingUUID);
    // static private System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID)
    // Offset: 0x1B21458
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow_Native(uint64_t optionalUserID, System::IntPtr optionalRecordingUUID);
    // static public System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2(System.UInt64 optionalUserID, System.String optionalRecordingUUID, System.IntPtr abuseReportOptions)
    // Offset: 0x1B214E8
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow2(uint64_t optionalUserID, ::Il2CppString* optionalRecordingUUID, System::IntPtr abuseReportOptions);
    // static private System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID, System.IntPtr abuseReportOptions)
    // Offset: 0x1B215AC
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow2_Native(uint64_t optionalUserID, System::IntPtr optionalRecordingUUID, System::IntPtr abuseReportOptions);
    // static public System.UInt64 ovr_User_TestUserCreateDeviceManifest(System.String deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)
    // Offset: 0x1B21644
    static uint64_t ovr_User_TestUserCreateDeviceManifest(::Il2CppString* deviceID, ::Array<uint64_t>* appIDs, int numAppIDs);
    // static private System.UInt64 ovr_User_TestUserCreateDeviceManifest_Native(System.IntPtr deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)
    // Offset: 0x1B21704
    static uint64_t ovr_User_TestUserCreateDeviceManifest_Native(System::IntPtr deviceID, ::Array<uint64_t>* appIDs, int numAppIDs);
    // static public System.UInt64 ovr_Voip_SetSystemVoipSuppressed(System.Boolean suppressed)
    // Offset: 0x1B217A4
    static uint64_t ovr_Voip_SetSystemVoipSuppressed(bool suppressed);
    // static public System.String ovr_AbuseReportRecording_GetRecordingUuid(System.IntPtr obj)
    // Offset: 0x1B21824
    static ::Il2CppString* ovr_AbuseReportRecording_GetRecordingUuid(System::IntPtr obj);
    // static private System.IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(System.IntPtr obj)
    // Offset: 0x1B2188C
    static System::IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_AchievementDefinition_GetBitfieldLength(System.IntPtr obj)
    // Offset: 0x1B2190C
    static uint ovr_AchievementDefinition_GetBitfieldLength(System::IntPtr obj);
    // static public System.String ovr_AchievementDefinition_GetName(System.IntPtr obj)
    // Offset: 0x1B2198C
    static ::Il2CppString* ovr_AchievementDefinition_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementDefinition_GetName_Native(System.IntPtr obj)
    // Offset: 0x1B219F4
    static System::IntPtr ovr_AchievementDefinition_GetName_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_AchievementDefinition_GetTarget(System.IntPtr obj)
    // Offset: 0x1B21A74
    static uint64_t ovr_AchievementDefinition_GetTarget(System::IntPtr obj);
    // static public Oculus.Platform.AchievementType ovr_AchievementDefinition_GetType(System.IntPtr obj)
    // Offset: 0x1B21AF4
    static Oculus::Platform::AchievementType ovr_AchievementDefinition_GetType(System::IntPtr obj);
    // static public System.IntPtr ovr_AchievementDefinitionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B21B74
    static System::IntPtr ovr_AchievementDefinitionArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_AchievementDefinitionArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B21C04
    static ::Il2CppString* ovr_AchievementDefinitionArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B21C6C
    static System::IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_AchievementDefinitionArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B21CEC
    static System::UIntPtr ovr_AchievementDefinitionArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_AchievementDefinitionArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B21D6C
    static bool ovr_AchievementDefinitionArray_HasNextPage(System::IntPtr obj);
    // static public System.String ovr_AchievementProgress_GetBitfield(System.IntPtr obj)
    // Offset: 0x1B21DF4
    static ::Il2CppString* ovr_AchievementProgress_GetBitfield(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgress_GetBitfield_Native(System.IntPtr obj)
    // Offset: 0x1B21E5C
    static System::IntPtr ovr_AchievementProgress_GetBitfield_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_AchievementProgress_GetCount(System.IntPtr obj)
    // Offset: 0x1B21EDC
    static uint64_t ovr_AchievementProgress_GetCount(System::IntPtr obj);
    // static public System.Boolean ovr_AchievementProgress_GetIsUnlocked(System.IntPtr obj)
    // Offset: 0x1B21F5C
    static bool ovr_AchievementProgress_GetIsUnlocked(System::IntPtr obj);
    // static public System.String ovr_AchievementProgress_GetName(System.IntPtr obj)
    // Offset: 0x1B21FE4
    static ::Il2CppString* ovr_AchievementProgress_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgress_GetName_Native(System.IntPtr obj)
    // Offset: 0x1B2204C
    static System::IntPtr ovr_AchievementProgress_GetName_Native(System::IntPtr obj);
    // static public System.DateTime ovr_AchievementProgress_GetUnlockTime(System.IntPtr obj)
    // Offset: 0x1B220CC
    static System::DateTime ovr_AchievementProgress_GetUnlockTime(System::IntPtr obj);
    // static private System.UInt64 ovr_AchievementProgress_GetUnlockTime_Native(System.IntPtr obj)
    // Offset: 0x1B22134
    static uint64_t ovr_AchievementProgress_GetUnlockTime_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_AchievementProgressArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B221B4
    static System::IntPtr ovr_AchievementProgressArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_AchievementProgressArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B22244
    static ::Il2CppString* ovr_AchievementProgressArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B222AC
    static System::IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_AchievementProgressArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B2232C
    static System::UIntPtr ovr_AchievementProgressArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_AchievementProgressArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B223AC
    static bool ovr_AchievementProgressArray_HasNextPage(System::IntPtr obj);
    // static public System.Boolean ovr_AchievementUpdate_GetJustUnlocked(System.IntPtr obj)
    // Offset: 0x1B22434
    static bool ovr_AchievementUpdate_GetJustUnlocked(System::IntPtr obj);
    // static public System.String ovr_AchievementUpdate_GetName(System.IntPtr obj)
    // Offset: 0x1B224BC
    static ::Il2CppString* ovr_AchievementUpdate_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementUpdate_GetName_Native(System.IntPtr obj)
    // Offset: 0x1B22524
    static System::IntPtr ovr_AchievementUpdate_GetName_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_Application_GetID(System.IntPtr obj)
    // Offset: 0x1B225A4
    static uint64_t ovr_Application_GetID(System::IntPtr obj);
    // static public System.Int32 ovr_ApplicationVersion_GetCurrentCode(System.IntPtr obj)
    // Offset: 0x1B22624
    static int ovr_ApplicationVersion_GetCurrentCode(System::IntPtr obj);
    // static public System.String ovr_ApplicationVersion_GetCurrentName(System.IntPtr obj)
    // Offset: 0x1B226A4
    static ::Il2CppString* ovr_ApplicationVersion_GetCurrentName(System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationVersion_GetCurrentName_Native(System.IntPtr obj)
    // Offset: 0x1B2270C
    static System::IntPtr ovr_ApplicationVersion_GetCurrentName_Native(System::IntPtr obj);
    // static public System.Int32 ovr_ApplicationVersion_GetLatestCode(System.IntPtr obj)
    // Offset: 0x1B2278C
    static int ovr_ApplicationVersion_GetLatestCode(System::IntPtr obj);
    // static public System.String ovr_ApplicationVersion_GetLatestName(System.IntPtr obj)
    // Offset: 0x1B2280C
    static ::Il2CppString* ovr_ApplicationVersion_GetLatestName(System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationVersion_GetLatestName_Native(System.IntPtr obj)
    // Offset: 0x1B22874
    static System::IntPtr ovr_ApplicationVersion_GetLatestName_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetDetails_GetAssetId(System.IntPtr obj)
    // Offset: 0x1B228F4
    static uint64_t ovr_AssetDetails_GetAssetId(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetAssetType(System.IntPtr obj)
    // Offset: 0x1B22974
    static ::Il2CppString* ovr_AssetDetails_GetAssetType(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetAssetType_Native(System.IntPtr obj)
    // Offset: 0x1B229DC
    static System::IntPtr ovr_AssetDetails_GetAssetType_Native(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetDownloadStatus(System.IntPtr obj)
    // Offset: 0x1B22A5C
    static ::Il2CppString* ovr_AssetDetails_GetDownloadStatus(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetDownloadStatus_Native(System.IntPtr obj)
    // Offset: 0x1B22AC4
    static System::IntPtr ovr_AssetDetails_GetDownloadStatus_Native(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetFilepath(System.IntPtr obj)
    // Offset: 0x1B22B44
    static ::Il2CppString* ovr_AssetDetails_GetFilepath(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x1B22BAC
    static System::IntPtr ovr_AssetDetails_GetFilepath_Native(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetIapStatus(System.IntPtr obj)
    // Offset: 0x1B22C2C
    static ::Il2CppString* ovr_AssetDetails_GetIapStatus(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetIapStatus_Native(System.IntPtr obj)
    // Offset: 0x1B22C94
    static System::IntPtr ovr_AssetDetails_GetIapStatus_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_AssetDetails_GetLanguage(System.IntPtr obj)
    // Offset: 0x1B22D14
    static System::IntPtr ovr_AssetDetails_GetLanguage(System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetMetadata(System.IntPtr obj)
    // Offset: 0x1B22D94
    static ::Il2CppString* ovr_AssetDetails_GetMetadata(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetMetadata_Native(System.IntPtr obj)
    // Offset: 0x1B22DFC
    static System::IntPtr ovr_AssetDetails_GetMetadata_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_AssetDetailsArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B22E7C
    static System::IntPtr ovr_AssetDetailsArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_AssetDetailsArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B22F0C
    static System::UIntPtr ovr_AssetDetailsArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDeleteResult_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x1B22F8C
    static uint64_t ovr_AssetFileDeleteResult_GetAssetFileId(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDeleteResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x1B2300C
    static uint64_t ovr_AssetFileDeleteResult_GetAssetId(System::IntPtr obj);
    // static public System.String ovr_AssetFileDeleteResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x1B2308C
    static ::Il2CppString* ovr_AssetFileDeleteResult_GetFilepath(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x1B230F4
    static System::IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDeleteResult_GetSuccess(System.IntPtr obj)
    // Offset: 0x1B23174
    static bool ovr_AssetFileDeleteResult_GetSuccess(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x1B231FC
    static uint64_t ovr_AssetFileDownloadCancelResult_GetAssetFileId(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x1B2327C
    static uint64_t ovr_AssetFileDownloadCancelResult_GetAssetId(System::IntPtr obj);
    // static public System.String ovr_AssetFileDownloadCancelResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x1B232FC
    static ::Il2CppString* ovr_AssetFileDownloadCancelResult_GetFilepath(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x1B23364
    static System::IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDownloadCancelResult_GetSuccess(System.IntPtr obj)
    // Offset: 0x1B233E4
    static bool ovr_AssetFileDownloadCancelResult_GetSuccess(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x1B2346C
    static uint64_t ovr_AssetFileDownloadResult_GetAssetId(System::IntPtr obj);
    // static public System.String ovr_AssetFileDownloadResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x1B234EC
    static ::Il2CppString* ovr_AssetFileDownloadResult_GetFilepath(System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x1B23554
    static System::IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x1B235D4
    static uint64_t ovr_AssetFileDownloadUpdate_GetAssetFileId(System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetId(System.IntPtr obj)
    // Offset: 0x1B23654
    static uint64_t ovr_AssetFileDownloadUpdate_GetAssetId(System::IntPtr obj);
    // static public System.UInt32 ovr_AssetFileDownloadUpdate_GetBytesTotal(System.IntPtr obj)
    // Offset: 0x1B236D4
    static uint ovr_AssetFileDownloadUpdate_GetBytesTotal(System::IntPtr obj);
    // static public System.Int32 ovr_AssetFileDownloadUpdate_GetBytesTransferred(System.IntPtr obj)
    // Offset: 0x1B23754
    static int ovr_AssetFileDownloadUpdate_GetBytesTransferred(System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDownloadUpdate_GetCompleted(System.IntPtr obj)
    // Offset: 0x1B237D4
    static bool ovr_AssetFileDownloadUpdate_GetCompleted(System::IntPtr obj);
    // static public System.Int32 ovr_CalApplicationFinalized_GetCountdownMS(System.IntPtr obj)
    // Offset: 0x1B2385C
    static int ovr_CalApplicationFinalized_GetCountdownMS(System::IntPtr obj);
    // static public System.UInt64 ovr_CalApplicationFinalized_GetID(System.IntPtr obj)
    // Offset: 0x1B238DC
    static uint64_t ovr_CalApplicationFinalized_GetID(System::IntPtr obj);
    // static public System.String ovr_CalApplicationFinalized_GetLaunchDetails(System.IntPtr obj)
    // Offset: 0x1B2395C
    static ::Il2CppString* ovr_CalApplicationFinalized_GetLaunchDetails(System::IntPtr obj);
    // static private System.IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(System.IntPtr obj)
    // Offset: 0x1B239C4
    static System::IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_CalApplicationProposed_GetID(System.IntPtr obj)
    // Offset: 0x1B23A44
    static uint64_t ovr_CalApplicationProposed_GetID(System::IntPtr obj);
    // static public System.UInt64 ovr_CalApplicationSuggestion_GetID(System.IntPtr obj)
    // Offset: 0x1B23AC4
    static uint64_t ovr_CalApplicationSuggestion_GetID(System::IntPtr obj);
    // static public System.String ovr_CalApplicationSuggestion_GetSocialContext(System.IntPtr obj)
    // Offset: 0x1B23B44
    static ::Il2CppString* ovr_CalApplicationSuggestion_GetSocialContext(System::IntPtr obj);
    // static private System.IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(System.IntPtr obj)
    // Offset: 0x1B23BAC
    static System::IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_CalApplicationSuggestionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B23C2C
    static System::IntPtr ovr_CalApplicationSuggestionArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_CalApplicationSuggestionArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B23CBC
    static System::UIntPtr ovr_CalApplicationSuggestionArray_GetSize(System::IntPtr obj);
    // static public System.String ovr_CloudStorage2UserDirectoryPathResponse_GetPath(System.IntPtr obj)
    // Offset: 0x1B23D3C
    static ::Il2CppString* ovr_CloudStorage2UserDirectoryPathResponse_GetPath(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(System.IntPtr obj)
    // Offset: 0x1B23DA4
    static System::IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_CloudStorageConflictMetadata_GetLocal(System.IntPtr obj)
    // Offset: 0x1B23E24
    static System::IntPtr ovr_CloudStorageConflictMetadata_GetLocal(System::IntPtr obj);
    // static public System.IntPtr ovr_CloudStorageConflictMetadata_GetRemote(System.IntPtr obj)
    // Offset: 0x1B23EA4
    static System::IntPtr ovr_CloudStorageConflictMetadata_GetRemote(System::IntPtr obj);
    // static public System.String ovr_CloudStorageData_GetBucket(System.IntPtr obj)
    // Offset: 0x1B23F24
    static ::Il2CppString* ovr_CloudStorageData_GetBucket(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageData_GetBucket_Native(System.IntPtr obj)
    // Offset: 0x1B23F8C
    static System::IntPtr ovr_CloudStorageData_GetBucket_Native(System::IntPtr obj);
    // static public System.Byte[] ovr_CloudStorageData_GetData(System.IntPtr obj)
    // Offset: 0x1B2400C
    static ::Array<uint8_t>* ovr_CloudStorageData_GetData(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageData_GetData_Native(System.IntPtr obj)
    // Offset: 0x1B24108
    static System::IntPtr ovr_CloudStorageData_GetData_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_CloudStorageData_GetDataSize(System.IntPtr obj)
    // Offset: 0x1B24088
    static uint ovr_CloudStorageData_GetDataSize(System::IntPtr obj);
    // static public System.String ovr_CloudStorageData_GetKey(System.IntPtr obj)
    // Offset: 0x1B24188
    static ::Il2CppString* ovr_CloudStorageData_GetKey(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageData_GetKey_Native(System.IntPtr obj)
    // Offset: 0x1B241F0
    static System::IntPtr ovr_CloudStorageData_GetKey_Native(System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetBucket(System.IntPtr obj)
    // Offset: 0x1B24270
    static ::Il2CppString* ovr_CloudStorageMetadata_GetBucket(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetBucket_Native(System.IntPtr obj)
    // Offset: 0x1B242D8
    static System::IntPtr ovr_CloudStorageMetadata_GetBucket_Native(System::IntPtr obj);
    // static public System.Int64 ovr_CloudStorageMetadata_GetCounter(System.IntPtr obj)
    // Offset: 0x1B24358
    static int64_t ovr_CloudStorageMetadata_GetCounter(System::IntPtr obj);
    // static public System.UInt32 ovr_CloudStorageMetadata_GetDataSize(System.IntPtr obj)
    // Offset: 0x1B243D8
    static uint ovr_CloudStorageMetadata_GetDataSize(System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetExtraData(System.IntPtr obj)
    // Offset: 0x1B24458
    static ::Il2CppString* ovr_CloudStorageMetadata_GetExtraData(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x1B244C0
    static System::IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetKey(System.IntPtr obj)
    // Offset: 0x1B24540
    static ::Il2CppString* ovr_CloudStorageMetadata_GetKey(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetKey_Native(System.IntPtr obj)
    // Offset: 0x1B245A8
    static System::IntPtr ovr_CloudStorageMetadata_GetKey_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_CloudStorageMetadata_GetSaveTime(System.IntPtr obj)
    // Offset: 0x1B24628
    static uint64_t ovr_CloudStorageMetadata_GetSaveTime(System::IntPtr obj);
    // static public Oculus.Platform.CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(System.IntPtr obj)
    // Offset: 0x1B246A8
    static Oculus::Platform::CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetVersionHandle(System.IntPtr obj)
    // Offset: 0x1B24728
    static ::Il2CppString* ovr_CloudStorageMetadata_GetVersionHandle(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(System.IntPtr obj)
    // Offset: 0x1B24790
    static System::IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_CloudStorageMetadataArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B24810
    static System::IntPtr ovr_CloudStorageMetadataArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_CloudStorageMetadataArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B248A0
    static ::Il2CppString* ovr_CloudStorageMetadataArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B24908
    static System::IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_CloudStorageMetadataArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B24988
    static System::UIntPtr ovr_CloudStorageMetadataArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_CloudStorageMetadataArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B24A08
    static bool ovr_CloudStorageMetadataArray_HasNextPage(System::IntPtr obj);
    // static public System.String ovr_CloudStorageUpdateResponse_GetBucket(System.IntPtr obj)
    // Offset: 0x1B24A90
    static ::Il2CppString* ovr_CloudStorageUpdateResponse_GetBucket(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(System.IntPtr obj)
    // Offset: 0x1B24AF8
    static System::IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(System::IntPtr obj);
    // static public System.String ovr_CloudStorageUpdateResponse_GetKey(System.IntPtr obj)
    // Offset: 0x1B24B78
    static ::Il2CppString* ovr_CloudStorageUpdateResponse_GetKey(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(System.IntPtr obj)
    // Offset: 0x1B24BE0
    static System::IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(System::IntPtr obj);
    // static public Oculus.Platform.CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(System.IntPtr obj)
    // Offset: 0x1B24C60
    static Oculus::Platform::CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(System::IntPtr obj);
    // static public System.String ovr_CloudStorageUpdateResponse_GetVersionHandle(System.IntPtr obj)
    // Offset: 0x1B24CE0
    static ::Il2CppString* ovr_CloudStorageUpdateResponse_GetVersionHandle(System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(System.IntPtr obj)
    // Offset: 0x1B24D48
    static System::IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_DataStore_Contains(System.IntPtr obj, System.String key)
    // Offset: 0x1B24DC8
    static uint ovr_DataStore_Contains(System::IntPtr obj, ::Il2CppString* key);
    // static private System.UInt32 ovr_DataStore_Contains_Native(System.IntPtr obj, System.IntPtr key)
    // Offset: 0x1B24E84
    static uint ovr_DataStore_Contains_Native(System::IntPtr obj, System::IntPtr key);
    // static public System.String ovr_DataStore_GetKey(System.IntPtr obj, System.Int32 index)
    // Offset: 0x1B1741C
    static ::Il2CppString* ovr_DataStore_GetKey(System::IntPtr obj, int index);
    // static private System.IntPtr ovr_DataStore_GetKey_Native(System.IntPtr obj, System.Int32 index)
    // Offset: 0x1B24F14
    static System::IntPtr ovr_DataStore_GetKey_Native(System::IntPtr obj, int index);
    // static public System.UIntPtr ovr_DataStore_GetNumKeys(System.IntPtr obj)
    // Offset: 0x1B1739C
    static System::UIntPtr ovr_DataStore_GetNumKeys(System::IntPtr obj);
    // static public System.String ovr_DataStore_GetValue(System.IntPtr obj, System.String key)
    // Offset: 0x1B17494
    static ::Il2CppString* ovr_DataStore_GetValue(System::IntPtr obj, ::Il2CppString* key);
    // static private System.IntPtr ovr_DataStore_GetValue_Native(System.IntPtr obj, System.IntPtr key)
    // Offset: 0x1B24FA4
    static System::IntPtr ovr_DataStore_GetValue_Native(System::IntPtr obj, System::IntPtr key);
    // static public System.String ovr_Destination_GetApiName(System.IntPtr obj)
    // Offset: 0x1B25034
    static ::Il2CppString* ovr_Destination_GetApiName(System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetApiName_Native(System.IntPtr obj)
    // Offset: 0x1B2509C
    static System::IntPtr ovr_Destination_GetApiName_Native(System::IntPtr obj);
    // static public System.String ovr_Destination_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x1B2511C
    static ::Il2CppString* ovr_Destination_GetDeeplinkMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x1B25184
    static System::IntPtr ovr_Destination_GetDeeplinkMessage_Native(System::IntPtr obj);
    // static public System.String ovr_Destination_GetDisplayName(System.IntPtr obj)
    // Offset: 0x1B25204
    static ::Il2CppString* ovr_Destination_GetDisplayName(System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetDisplayName_Native(System.IntPtr obj)
    // Offset: 0x1B2526C
    static System::IntPtr ovr_Destination_GetDisplayName_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_DestinationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B252EC
    static System::IntPtr ovr_DestinationArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_DestinationArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B2537C
    static ::Il2CppString* ovr_DestinationArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_DestinationArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B253E4
    static System::IntPtr ovr_DestinationArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_DestinationArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B25464
    static System::UIntPtr ovr_DestinationArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_DestinationArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B254E4
    static bool ovr_DestinationArray_HasNextPage(System::IntPtr obj);
    // static public System.Int32 ovr_Error_GetCode(System.IntPtr obj)
    // Offset: 0x1B2556C
    static int ovr_Error_GetCode(System::IntPtr obj);
    // static public System.String ovr_Error_GetDisplayableMessage(System.IntPtr obj)
    // Offset: 0x1B255E8
    static ::Il2CppString* ovr_Error_GetDisplayableMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_Error_GetDisplayableMessage_Native(System.IntPtr obj)
    // Offset: 0x1B25650
    static System::IntPtr ovr_Error_GetDisplayableMessage_Native(System::IntPtr obj);
    // static public System.Int32 ovr_Error_GetHttpCode(System.IntPtr obj)
    // Offset: 0x1B256D0
    static int ovr_Error_GetHttpCode(System::IntPtr obj);
    // static public System.String ovr_Error_GetMessage(System.IntPtr obj)
    // Offset: 0x1B25750
    static ::Il2CppString* ovr_Error_GetMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_Error_GetMessage_Native(System.IntPtr obj)
    // Offset: 0x1B257B8
    static System::IntPtr ovr_Error_GetMessage_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_HttpTransferUpdate_GetBytes(System.IntPtr obj)
    // Offset: 0x1B25838
    static System::IntPtr ovr_HttpTransferUpdate_GetBytes(System::IntPtr obj);
    // static public System.UInt64 ovr_HttpTransferUpdate_GetID(System.IntPtr obj)
    // Offset: 0x1B258B8
    static uint64_t ovr_HttpTransferUpdate_GetID(System::IntPtr obj);
    // static public System.UIntPtr ovr_HttpTransferUpdate_GetSize(System.IntPtr obj)
    // Offset: 0x1B25938
    static System::UIntPtr ovr_HttpTransferUpdate_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_HttpTransferUpdate_IsCompleted(System.IntPtr obj)
    // Offset: 0x1B259B8
    static bool ovr_HttpTransferUpdate_IsCompleted(System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetApplicationId(System.IntPtr obj)
    // Offset: 0x1B25A40
    static ::Il2CppString* ovr_InstalledApplication_GetApplicationId(System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetApplicationId_Native(System.IntPtr obj)
    // Offset: 0x1B25AA8
    static System::IntPtr ovr_InstalledApplication_GetApplicationId_Native(System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetPackageName(System.IntPtr obj)
    // Offset: 0x1B25B28
    static ::Il2CppString* ovr_InstalledApplication_GetPackageName(System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetPackageName_Native(System.IntPtr obj)
    // Offset: 0x1B25B90
    static System::IntPtr ovr_InstalledApplication_GetPackageName_Native(System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetStatus(System.IntPtr obj)
    // Offset: 0x1B25C10
    static ::Il2CppString* ovr_InstalledApplication_GetStatus(System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetStatus_Native(System.IntPtr obj)
    // Offset: 0x1B25C78
    static System::IntPtr ovr_InstalledApplication_GetStatus_Native(System::IntPtr obj);
    // static public System.Int32 ovr_InstalledApplication_GetVersionCode(System.IntPtr obj)
    // Offset: 0x1B25CF8
    static int ovr_InstalledApplication_GetVersionCode(System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetVersionName(System.IntPtr obj)
    // Offset: 0x1B25D78
    static ::Il2CppString* ovr_InstalledApplication_GetVersionName(System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetVersionName_Native(System.IntPtr obj)
    // Offset: 0x1B25DE0
    static System::IntPtr ovr_InstalledApplication_GetVersionName_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_InstalledApplicationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B25E60
    static System::IntPtr ovr_InstalledApplicationArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_InstalledApplicationArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B25EF0
    static System::UIntPtr ovr_InstalledApplicationArray_GetSize(System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetEnglishName(System.IntPtr obj)
    // Offset: 0x1B25F70
    static ::Il2CppString* ovr_LanguagePackInfo_GetEnglishName(System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(System.IntPtr obj)
    // Offset: 0x1B25FD8
    static System::IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetNativeName(System.IntPtr obj)
    // Offset: 0x1B26058
    static ::Il2CppString* ovr_LanguagePackInfo_GetNativeName(System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetNativeName_Native(System.IntPtr obj)
    // Offset: 0x1B260C0
    static System::IntPtr ovr_LanguagePackInfo_GetNativeName_Native(System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetTag(System.IntPtr obj)
    // Offset: 0x1B26140
    static ::Il2CppString* ovr_LanguagePackInfo_GetTag(System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetTag_Native(System.IntPtr obj)
    // Offset: 0x1B261A8
    static System::IntPtr ovr_LanguagePackInfo_GetTag_Native(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchBlockFlowResult_GetDidBlock(System.IntPtr obj)
    // Offset: 0x1B26228
    static bool ovr_LaunchBlockFlowResult_GetDidBlock(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchBlockFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1B262B0
    static bool ovr_LaunchBlockFlowResult_GetDidCancel(System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x1B26338
    static ::Il2CppString* ovr_LaunchDetails_GetDeeplinkMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x1B263A0
    static System::IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetDestinationApiName(System.IntPtr obj)
    // Offset: 0x1B26420
    static ::Il2CppString* ovr_LaunchDetails_GetDestinationApiName(System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x1B26488
    static System::IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetLaunchSource(System.IntPtr obj)
    // Offset: 0x1B26508
    static ::Il2CppString* ovr_LaunchDetails_GetLaunchSource(System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetLaunchSource_Native(System.IntPtr obj)
    // Offset: 0x1B26570
    static System::IntPtr ovr_LaunchDetails_GetLaunchSource_Native(System::IntPtr obj);
    // static public Oculus.Platform.LaunchType ovr_LaunchDetails_GetLaunchType(System.IntPtr obj)
    // Offset: 0x1B265F0
    static Oculus::Platform::LaunchType ovr_LaunchDetails_GetLaunchType(System::IntPtr obj);
    // static public System.UInt64 ovr_LaunchDetails_GetRoomID(System.IntPtr obj)
    // Offset: 0x1B26670
    static uint64_t ovr_LaunchDetails_GetRoomID(System::IntPtr obj);
    // static public System.IntPtr ovr_LaunchDetails_GetUsers(System.IntPtr obj)
    // Offset: 0x1B266F0
    static System::IntPtr ovr_LaunchDetails_GetUsers(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1B26770
    static bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(System.IntPtr obj)
    // Offset: 0x1B267F8
    static bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchReportFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1B26880
    static bool ovr_LaunchReportFlowResult_GetDidCancel(System::IntPtr obj);
    // static public System.UInt64 ovr_LaunchReportFlowResult_GetUserReportId(System.IntPtr obj)
    // Offset: 0x1B26908
    static uint64_t ovr_LaunchReportFlowResult_GetUserReportId(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchUnblockFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1B26988
    static bool ovr_LaunchUnblockFlowResult_GetDidCancel(System::IntPtr obj);
    // static public System.Boolean ovr_LaunchUnblockFlowResult_GetDidUnblock(System.IntPtr obj)
    // Offset: 0x1B26A10
    static bool ovr_LaunchUnblockFlowResult_GetDidUnblock(System::IntPtr obj);
    // static public System.Byte[] ovr_LeaderboardEntry_GetExtraData(System.IntPtr obj)
    // Offset: 0x1B26A98
    static ::Array<uint8_t>* ovr_LeaderboardEntry_GetExtraData(System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntry_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x1B26B94
    static System::IntPtr ovr_LeaderboardEntry_GetExtraData_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_LeaderboardEntry_GetExtraDataLength(System.IntPtr obj)
    // Offset: 0x1B26B14
    static uint ovr_LeaderboardEntry_GetExtraDataLength(System::IntPtr obj);
    // static public System.Int32 ovr_LeaderboardEntry_GetRank(System.IntPtr obj)
    // Offset: 0x1B26C14
    static int ovr_LeaderboardEntry_GetRank(System::IntPtr obj);
    // static public System.Int64 ovr_LeaderboardEntry_GetScore(System.IntPtr obj)
    // Offset: 0x1B26C94
    static int64_t ovr_LeaderboardEntry_GetScore(System::IntPtr obj);
    // static public System.DateTime ovr_LeaderboardEntry_GetTimestamp(System.IntPtr obj)
    // Offset: 0x1B26D14
    static System::DateTime ovr_LeaderboardEntry_GetTimestamp(System::IntPtr obj);
    // static private System.UInt64 ovr_LeaderboardEntry_GetTimestamp_Native(System.IntPtr obj)
    // Offset: 0x1B26D7C
    static uint64_t ovr_LeaderboardEntry_GetTimestamp_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntry_GetUser(System.IntPtr obj)
    // Offset: 0x1B26DFC
    static System::IntPtr ovr_LeaderboardEntry_GetUser(System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntryArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B26E7C
    static System::IntPtr ovr_LeaderboardEntryArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_LeaderboardEntryArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B26F0C
    static ::Il2CppString* ovr_LeaderboardEntryArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B26F74
    static System::IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.String ovr_LeaderboardEntryArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x1B26FF4
    static ::Il2CppString* ovr_LeaderboardEntryArray_GetPreviousUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x1B2705C
    static System::IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_LeaderboardEntryArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B270DC
    static System::UIntPtr ovr_LeaderboardEntryArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_LeaderboardEntryArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x1B2715C
    static uint64_t ovr_LeaderboardEntryArray_GetTotalCount(System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardEntryArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B271DC
    static bool ovr_LeaderboardEntryArray_HasNextPage(System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardEntryArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x1B27264
    static bool ovr_LeaderboardEntryArray_HasPreviousPage(System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardUpdateStatus_GetDidUpdate(System.IntPtr obj)
    // Offset: 0x1B272EC
    static bool ovr_LeaderboardUpdateStatus_GetDidUpdate(System::IntPtr obj);
    // static public System.String ovr_LinkedAccount_GetAccessToken(System.IntPtr obj)
    // Offset: 0x1B27374
    static ::Il2CppString* ovr_LinkedAccount_GetAccessToken(System::IntPtr obj);
    // static private System.IntPtr ovr_LinkedAccount_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x1B273DC
    static System::IntPtr ovr_LinkedAccount_GetAccessToken_Native(System::IntPtr obj);
    // static public Oculus.Platform.ServiceProvider ovr_LinkedAccount_GetServiceProvider(System.IntPtr obj)
    // Offset: 0x1B2745C
    static Oculus::Platform::ServiceProvider ovr_LinkedAccount_GetServiceProvider(System::IntPtr obj);
    // static public System.String ovr_LinkedAccount_GetUserId(System.IntPtr obj)
    // Offset: 0x1B274DC
    static ::Il2CppString* ovr_LinkedAccount_GetUserId(System::IntPtr obj);
    // static private System.IntPtr ovr_LinkedAccount_GetUserId_Native(System.IntPtr obj)
    // Offset: 0x1B27544
    static System::IntPtr ovr_LinkedAccount_GetUserId_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_LinkedAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B275C4
    static System::IntPtr ovr_LinkedAccountArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_LinkedAccountArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B27654
    static System::UIntPtr ovr_LinkedAccountArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingApplicationStatus_GetStreamingEnabled(System.IntPtr obj)
    // Offset: 0x1B276D4
    static bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(System::IntPtr obj);
    // static public Oculus.Platform.LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(System.IntPtr obj)
    // Offset: 0x1B2775C
    static Oculus::Platform::LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetCommentsVisible(System.IntPtr obj)
    // Offset: 0x1B277DC
    static bool ovr_LivestreamingStatus_GetCommentsVisible(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetIsPaused(System.IntPtr obj)
    // Offset: 0x1B27864
    static bool ovr_LivestreamingStatus_GetIsPaused(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetLivestreamingEnabled(System.IntPtr obj)
    // Offset: 0x1B278EC
    static bool ovr_LivestreamingStatus_GetLivestreamingEnabled(System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingStatus_GetLivestreamingType(System.IntPtr obj)
    // Offset: 0x1B27974
    static int ovr_LivestreamingStatus_GetLivestreamingType(System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetMicEnabled(System.IntPtr obj)
    // Offset: 0x1B279F4
    static bool ovr_LivestreamingStatus_GetMicEnabled(System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingVideoStats_GetCommentCount(System.IntPtr obj)
    // Offset: 0x1B27A7C
    static int ovr_LivestreamingVideoStats_GetCommentCount(System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingVideoStats_GetReactionCount(System.IntPtr obj)
    // Offset: 0x1B27AFC
    static int ovr_LivestreamingVideoStats_GetReactionCount(System::IntPtr obj);
    // static public System.String ovr_LivestreamingVideoStats_GetTotalViews(System.IntPtr obj)
    // Offset: 0x1B27B7C
    static ::Il2CppString* ovr_LivestreamingVideoStats_GetTotalViews(System::IntPtr obj);
    // static private System.IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(System.IntPtr obj)
    // Offset: 0x1B27BE4
    static System::IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(System.IntPtr obj)
    // Offset: 0x1B27C64
    static System::IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(System.IntPtr obj)
    // Offset: 0x1B27CE4
    static double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(System::IntPtr obj);
    // static public System.Boolean ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(System.IntPtr obj)
    // Offset: 0x1B27D64
    static bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(System.IntPtr obj)
    // Offset: 0x1B27DEC
    static double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(System.IntPtr obj)
    // Offset: 0x1B27E6C
    static double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(System.IntPtr obj)
    // Offset: 0x1B27EEC
    static double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(System::IntPtr obj);
    // static public System.String ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(System.IntPtr obj)
    // Offset: 0x1B27F6C
    static ::Il2CppString* ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(System.IntPtr obj)
    // Offset: 0x1B27FD4
    static System::IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B28054
    static System::IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B280E4
    static System::UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(System.IntPtr obj)
    // Offset: 0x1B28164
    static System::IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingBrowseResult_GetRooms(System.IntPtr obj)
    // Offset: 0x1B281E4
    static System::IntPtr ovr_MatchmakingBrowseResult_GetRooms(System::IntPtr obj);
    // static public System.String ovr_MatchmakingCandidate_GetEntryHash(System.IntPtr obj)
    // Offset: 0x1B28264
    static ::Il2CppString* ovr_MatchmakingCandidate_GetEntryHash(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(System.IntPtr obj)
    // Offset: 0x1B282CC
    static System::IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_MatchmakingCandidate_GetUserId(System.IntPtr obj)
    // Offset: 0x1B2834C
    static uint64_t ovr_MatchmakingCandidate_GetUserId(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingCandidateArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B283CC
    static System::IntPtr ovr_MatchmakingCandidateArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_MatchmakingCandidateArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B2845C
    static ::Il2CppString* ovr_MatchmakingCandidateArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B284C4
    static System::IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_MatchmakingCandidateArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B28544
    static System::UIntPtr ovr_MatchmakingCandidateArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_MatchmakingCandidateArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B285C4
    static bool ovr_MatchmakingCandidateArray_HasNextPage(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(System.IntPtr obj)
    // Offset: 0x1B2864C
    static System::IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetAverageWait(System.IntPtr obj)
    // Offset: 0x1B286CC
    static uint ovr_MatchmakingEnqueueResult_GetAverageWait(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(System.IntPtr obj)
    // Offset: 0x1B2874C
    static uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(System.IntPtr obj)
    // Offset: 0x1B287CC
    static uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(System::IntPtr obj);
    // static public System.String ovr_MatchmakingEnqueueResult_GetPool(System.IntPtr obj)
    // Offset: 0x1B2884C
    static ::Il2CppString* ovr_MatchmakingEnqueueResult_GetPool(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(System.IntPtr obj)
    // Offset: 0x1B288B4
    static System::IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(System.IntPtr obj)
    // Offset: 0x1B28934
    static uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(System::IntPtr obj);
    // static public System.String ovr_MatchmakingEnqueueResult_GetRequestHash(System.IntPtr obj)
    // Offset: 0x1B289B4
    static ::Il2CppString* ovr_MatchmakingEnqueueResult_GetRequestHash(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(System.IntPtr obj)
    // Offset: 0x1B28A1C
    static System::IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(System.IntPtr obj)
    // Offset: 0x1B28A9C
    static System::IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(System.IntPtr obj)
    // Offset: 0x1B28B1C
    static System::IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(System::IntPtr obj);
    // static public System.UInt64 ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(System.IntPtr obj, System.UInt32 index)
    // Offset: 0x1B28B9C
    static uint64_t ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(System::IntPtr obj, uint index);
    // static public System.UInt32 ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(System.IntPtr obj)
    // Offset: 0x1B28C2C
    static uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(System.IntPtr obj)
    // Offset: 0x1B28CAC
    static System::IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueuedUser_GetUser(System.IntPtr obj)
    // Offset: 0x1B28D2C
    static System::IntPtr ovr_MatchmakingEnqueuedUser_GetUser(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B28DAC
    static System::IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B28E3C
    static System::UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_MatchmakingNotification_GetAddedByUserId(System.IntPtr obj)
    // Offset: 0x1B28EBC
    static uint64_t ovr_MatchmakingNotification_GetAddedByUserId(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingNotification_GetRoom(System.IntPtr obj)
    // Offset: 0x1B28F3C
    static System::IntPtr ovr_MatchmakingNotification_GetRoom(System::IntPtr obj);
    // static public System.String ovr_MatchmakingNotification_GetTraceId(System.IntPtr obj)
    // Offset: 0x1B28FBC
    static ::Il2CppString* ovr_MatchmakingNotification_GetTraceId(System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingNotification_GetTraceId_Native(System.IntPtr obj)
    // Offset: 0x1B29024
    static System::IntPtr ovr_MatchmakingNotification_GetTraceId_Native(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingRoom_GetPingTime(System.IntPtr obj)
    // Offset: 0x1B290A4
    static uint ovr_MatchmakingRoom_GetPingTime(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingRoom_GetRoom(System.IntPtr obj)
    // Offset: 0x1B29124
    static System::IntPtr ovr_MatchmakingRoom_GetRoom(System::IntPtr obj);
    // static public System.Boolean ovr_MatchmakingRoom_HasPingTime(System.IntPtr obj)
    // Offset: 0x1B291A4
    static bool ovr_MatchmakingRoom_HasPingTime(System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingRoomArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B2922C
    static System::IntPtr ovr_MatchmakingRoomArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_MatchmakingRoomArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B292BC
    static System::UIntPtr ovr_MatchmakingRoomArray_GetSize(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetDrawCount(System.IntPtr obj)
    // Offset: 0x1B2933C
    static uint ovr_MatchmakingStats_GetDrawCount(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetLossCount(System.IntPtr obj)
    // Offset: 0x1B293BC
    static uint ovr_MatchmakingStats_GetLossCount(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetSkillLevel(System.IntPtr obj)
    // Offset: 0x1B2943C
    static uint ovr_MatchmakingStats_GetSkillLevel(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingStats_GetSkillMean(System.IntPtr obj)
    // Offset: 0x1B294BC
    static double ovr_MatchmakingStats_GetSkillMean(System::IntPtr obj);
    // static public System.Double ovr_MatchmakingStats_GetSkillStandardDeviation(System.IntPtr obj)
    // Offset: 0x1B2953C
    static double ovr_MatchmakingStats_GetSkillStandardDeviation(System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetWinCount(System.IntPtr obj)
    // Offset: 0x1B295BC
    static uint ovr_MatchmakingStats_GetWinCount(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAbuseReportRecording(System.IntPtr obj)
    // Offset: 0x1B2963C
    static System::IntPtr ovr_Message_GetAbuseReportRecording(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementDefinitionArray(System.IntPtr obj)
    // Offset: 0x1B296BC
    static System::IntPtr ovr_Message_GetAchievementDefinitionArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementProgressArray(System.IntPtr obj)
    // Offset: 0x1B2973C
    static System::IntPtr ovr_Message_GetAchievementProgressArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementUpdate(System.IntPtr obj)
    // Offset: 0x1B297BC
    static System::IntPtr ovr_Message_GetAchievementUpdate(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetApplicationVersion(System.IntPtr obj)
    // Offset: 0x1B2983C
    static System::IntPtr ovr_Message_GetApplicationVersion(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetDetails(System.IntPtr obj)
    // Offset: 0x1B298BC
    static System::IntPtr ovr_Message_GetAssetDetails(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetDetailsArray(System.IntPtr obj)
    // Offset: 0x1B2993C
    static System::IntPtr ovr_Message_GetAssetDetailsArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDeleteResult(System.IntPtr obj)
    // Offset: 0x1B299BC
    static System::IntPtr ovr_Message_GetAssetFileDeleteResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadCancelResult(System.IntPtr obj)
    // Offset: 0x1B29A3C
    static System::IntPtr ovr_Message_GetAssetFileDownloadCancelResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadResult(System.IntPtr obj)
    // Offset: 0x1B29ABC
    static System::IntPtr ovr_Message_GetAssetFileDownloadResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadUpdate(System.IntPtr obj)
    // Offset: 0x1B29B3C
    static System::IntPtr ovr_Message_GetAssetFileDownloadUpdate(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCalApplicationFinalized(System.IntPtr obj)
    // Offset: 0x1B29BBC
    static System::IntPtr ovr_Message_GetCalApplicationFinalized(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCalApplicationProposed(System.IntPtr obj)
    // Offset: 0x1B29C3C
    static System::IntPtr ovr_Message_GetCalApplicationProposed(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCalApplicationSuggestionArray(System.IntPtr obj)
    // Offset: 0x1B29CBC
    static System::IntPtr ovr_Message_GetCalApplicationSuggestionArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageConflictMetadata(System.IntPtr obj)
    // Offset: 0x1B29D3C
    static System::IntPtr ovr_Message_GetCloudStorageConflictMetadata(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageData(System.IntPtr obj)
    // Offset: 0x1B29DBC
    static System::IntPtr ovr_Message_GetCloudStorageData(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageMetadata(System.IntPtr obj)
    // Offset: 0x1B29E3C
    static System::IntPtr ovr_Message_GetCloudStorageMetadata(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageMetadataArray(System.IntPtr obj)
    // Offset: 0x1B29EBC
    static System::IntPtr ovr_Message_GetCloudStorageMetadataArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageUpdateResponse(System.IntPtr obj)
    // Offset: 0x1B29F3C
    static System::IntPtr ovr_Message_GetCloudStorageUpdateResponse(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetDestinationArray(System.IntPtr obj)
    // Offset: 0x1B29FBC
    static System::IntPtr ovr_Message_GetDestinationArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetError(System.IntPtr obj)
    // Offset: 0x1B2A03C
    static System::IntPtr ovr_Message_GetError(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetHttpTransferUpdate(System.IntPtr obj)
    // Offset: 0x1B2A0BC
    static System::IntPtr ovr_Message_GetHttpTransferUpdate(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetInstalledApplicationArray(System.IntPtr obj)
    // Offset: 0x1B2A13C
    static System::IntPtr ovr_Message_GetInstalledApplicationArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchBlockFlowResult(System.IntPtr obj)
    // Offset: 0x1B2A1BC
    static System::IntPtr ovr_Message_GetLaunchBlockFlowResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(System.IntPtr obj)
    // Offset: 0x1B2A23C
    static System::IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchReportFlowResult(System.IntPtr obj)
    // Offset: 0x1B2A2BC
    static System::IntPtr ovr_Message_GetLaunchReportFlowResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchUnblockFlowResult(System.IntPtr obj)
    // Offset: 0x1B2A33C
    static System::IntPtr ovr_Message_GetLaunchUnblockFlowResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardEntryArray(System.IntPtr obj)
    // Offset: 0x1B2A3BC
    static System::IntPtr ovr_Message_GetLeaderboardEntryArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardUpdateStatus(System.IntPtr obj)
    // Offset: 0x1B2A43C
    static System::IntPtr ovr_Message_GetLeaderboardUpdateStatus(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLinkedAccountArray(System.IntPtr obj)
    // Offset: 0x1B2A4BC
    static System::IntPtr ovr_Message_GetLinkedAccountArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingApplicationStatus(System.IntPtr obj)
    // Offset: 0x1B2A53C
    static System::IntPtr ovr_Message_GetLivestreamingApplicationStatus(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingStartResult(System.IntPtr obj)
    // Offset: 0x1B2A5BC
    static System::IntPtr ovr_Message_GetLivestreamingStartResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingStatus(System.IntPtr obj)
    // Offset: 0x1B2A63C
    static System::IntPtr ovr_Message_GetLivestreamingStatus(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingVideoStats(System.IntPtr obj)
    // Offset: 0x1B2A6BC
    static System::IntPtr ovr_Message_GetLivestreamingVideoStats(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingAdminSnapshot(System.IntPtr obj)
    // Offset: 0x1B2A73C
    static System::IntPtr ovr_Message_GetMatchmakingAdminSnapshot(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingBrowseResult(System.IntPtr obj)
    // Offset: 0x1B2A7BC
    static System::IntPtr ovr_Message_GetMatchmakingBrowseResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingEnqueueResult(System.IntPtr obj)
    // Offset: 0x1B2A83C
    static System::IntPtr ovr_Message_GetMatchmakingEnqueueResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(System.IntPtr obj)
    // Offset: 0x1B2A8BC
    static System::IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingRoomArray(System.IntPtr obj)
    // Offset: 0x1B2A93C
    static System::IntPtr ovr_Message_GetMatchmakingRoomArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingStats(System.IntPtr obj)
    // Offset: 0x1B2A9BC
    static System::IntPtr ovr_Message_GetMatchmakingStats(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNativeMessage(System.IntPtr obj)
    // Offset: 0x1B2AA3C
    static System::IntPtr ovr_Message_GetNativeMessage(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncConnection(System.IntPtr obj)
    // Offset: 0x1B2AABC
    static System::IntPtr ovr_Message_GetNetSyncConnection(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSessionArray(System.IntPtr obj)
    // Offset: 0x1B2AB3C
    static System::IntPtr ovr_Message_GetNetSyncSessionArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(System.IntPtr obj)
    // Offset: 0x1B2ABBC
    static System::IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(System.IntPtr obj)
    // Offset: 0x1B2AC3C
    static System::IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetworkingPeer(System.IntPtr obj)
    // Offset: 0x1B2ACBC
    static System::IntPtr ovr_Message_GetNetworkingPeer(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetOrgScopedID(System.IntPtr obj)
    // Offset: 0x1B2AD3C
    static System::IntPtr ovr_Message_GetOrgScopedID(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetParty(System.IntPtr obj)
    // Offset: 0x1B2ADBC
    static System::IntPtr ovr_Message_GetParty(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPartyID(System.IntPtr obj)
    // Offset: 0x1B2AE3C
    static System::IntPtr ovr_Message_GetPartyID(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPartyUpdateNotification(System.IntPtr obj)
    // Offset: 0x1B2AEBC
    static System::IntPtr ovr_Message_GetPartyUpdateNotification(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPidArray(System.IntPtr obj)
    // Offset: 0x1B2AF3C
    static System::IntPtr ovr_Message_GetPidArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPingResult(System.IntPtr obj)
    // Offset: 0x1B2AFBC
    static System::IntPtr ovr_Message_GetPingResult(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPlatformInitialize(System.IntPtr obj)
    // Offset: 0x1B2B03C
    static System::IntPtr ovr_Message_GetPlatformInitialize(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetProductArray(System.IntPtr obj)
    // Offset: 0x1B2B0BC
    static System::IntPtr ovr_Message_GetProductArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPurchase(System.IntPtr obj)
    // Offset: 0x1B2B13C
    static System::IntPtr ovr_Message_GetPurchase(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPurchaseArray(System.IntPtr obj)
    // Offset: 0x1B2B1BC
    static System::IntPtr ovr_Message_GetPurchaseArray(System::IntPtr obj);
    // static public System.UInt64 ovr_Message_GetRequestID(System.IntPtr obj)
    // Offset: 0x1B2B23C
    static uint64_t ovr_Message_GetRequestID(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoom(System.IntPtr obj)
    // Offset: 0x1B2B2BC
    static System::IntPtr ovr_Message_GetRoom(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoomArray(System.IntPtr obj)
    // Offset: 0x1B2B33C
    static System::IntPtr ovr_Message_GetRoomArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoomInviteNotification(System.IntPtr obj)
    // Offset: 0x1B2B3BC
    static System::IntPtr ovr_Message_GetRoomInviteNotification(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoomInviteNotificationArray(System.IntPtr obj)
    // Offset: 0x1B2B43C
    static System::IntPtr ovr_Message_GetRoomInviteNotificationArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSdkAccountArray(System.IntPtr obj)
    // Offset: 0x1B2B4BC
    static System::IntPtr ovr_Message_GetSdkAccountArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetShareMediaResult(System.IntPtr obj)
    // Offset: 0x1B2B53C
    static System::IntPtr ovr_Message_GetShareMediaResult(System::IntPtr obj);
    // static public System.String ovr_Message_GetString(System.IntPtr obj)
    // Offset: 0x1B2B5BC
    static ::Il2CppString* ovr_Message_GetString(System::IntPtr obj);
    // static private System.IntPtr ovr_Message_GetString_Native(System.IntPtr obj)
    // Offset: 0x1B2B624
    static System::IntPtr ovr_Message_GetString_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSystemPermission(System.IntPtr obj)
    // Offset: 0x1B2B6A4
    static System::IntPtr ovr_Message_GetSystemPermission(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSystemVoipState(System.IntPtr obj)
    // Offset: 0x1B2B724
    static System::IntPtr ovr_Message_GetSystemVoipState(System::IntPtr obj);
    // static public Oculus.Platform.Message/MessageType ovr_Message_GetType(System.IntPtr obj)
    // Offset: 0x1B2B7A4
    static Oculus::Platform::Message::MessageType ovr_Message_GetType(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUser(System.IntPtr obj)
    // Offset: 0x1B2B824
    static System::IntPtr ovr_Message_GetUser(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserAndRoomArray(System.IntPtr obj)
    // Offset: 0x1B2B8A4
    static System::IntPtr ovr_Message_GetUserAndRoomArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserArray(System.IntPtr obj)
    // Offset: 0x1B2B924
    static System::IntPtr ovr_Message_GetUserArray(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserProof(System.IntPtr obj)
    // Offset: 0x1B2B9A4
    static System::IntPtr ovr_Message_GetUserProof(System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserReportID(System.IntPtr obj)
    // Offset: 0x1B2BA24
    static System::IntPtr ovr_Message_GetUserReportID(System::IntPtr obj);
    // static public System.Boolean ovr_Message_IsError(System.IntPtr obj)
    // Offset: 0x1B2BAA4
    static bool ovr_Message_IsError(System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetNumSamplesAvailable(System.IntPtr obj)
    // Offset: 0x1B2BB2C
    static System::UIntPtr ovr_Microphone_GetNumSamplesAvailable(System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetOutputBufferMaxSize(System.IntPtr obj)
    // Offset: 0x1B2BBAC
    static System::UIntPtr ovr_Microphone_GetOutputBufferMaxSize(System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetPCM(System.IntPtr obj, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B2BC2C
    static System::UIntPtr ovr_Microphone_GetPCM(System::IntPtr obj, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Microphone_GetPCMFloat(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x1B2BCCC
    static System::UIntPtr ovr_Microphone_GetPCMFloat(System::IntPtr obj, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Microphone_ReadData(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)
    // Offset: 0x1B2BD6C
    static System::UIntPtr ovr_Microphone_ReadData(System::IntPtr obj, ::Array<float>* outputBuffer, System::UIntPtr outputBufferSize);
    // static public System.Void ovr_Microphone_SetAcceptableRecordingDelayHint(System.IntPtr obj, System.UIntPtr delayMs)
    // Offset: 0x1B2BE0C
    static void ovr_Microphone_SetAcceptableRecordingDelayHint(System::IntPtr obj, System::UIntPtr delayMs);
    // static public System.Void ovr_Microphone_Start(System.IntPtr obj)
    // Offset: 0x1B2BE9C
    static void ovr_Microphone_Start(System::IntPtr obj);
    // static public System.Void ovr_Microphone_Stop(System.IntPtr obj)
    // Offset: 0x1B2BF1C
    static void ovr_Microphone_Stop(System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncConnection_GetConnectionId(System.IntPtr obj)
    // Offset: 0x1B2BF9C
    static int64_t ovr_NetSyncConnection_GetConnectionId(System::IntPtr obj);
    // static public Oculus.Platform.NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(System.IntPtr obj)
    // Offset: 0x1B2C01C
    static Oculus::Platform::NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncConnection_GetSessionId(System.IntPtr obj)
    // Offset: 0x1B2C09C
    static uint64_t ovr_NetSyncConnection_GetSessionId(System::IntPtr obj);
    // static public Oculus.Platform.NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(System.IntPtr obj)
    // Offset: 0x1B2C11C
    static Oculus::Platform::NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(System::IntPtr obj);
    // static public System.String ovr_NetSyncConnection_GetZoneId(System.IntPtr obj)
    // Offset: 0x1B2C19C
    static ::Il2CppString* ovr_NetSyncConnection_GetZoneId(System::IntPtr obj);
    // static private System.IntPtr ovr_NetSyncConnection_GetZoneId_Native(System.IntPtr obj)
    // Offset: 0x1B2C204
    static System::IntPtr ovr_NetSyncConnection_GetZoneId_Native(System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncSession_GetConnectionId(System.IntPtr obj)
    // Offset: 0x1B2C284
    static int64_t ovr_NetSyncSession_GetConnectionId(System::IntPtr obj);
    // static public System.Boolean ovr_NetSyncSession_GetMuted(System.IntPtr obj)
    // Offset: 0x1B2C304
    static bool ovr_NetSyncSession_GetMuted(System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncSession_GetSessionId(System.IntPtr obj)
    // Offset: 0x1B2C38C
    static uint64_t ovr_NetSyncSession_GetSessionId(System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncSession_GetUserId(System.IntPtr obj)
    // Offset: 0x1B2C40C
    static uint64_t ovr_NetSyncSession_GetUserId(System::IntPtr obj);
    // static public System.String ovr_NetSyncSession_GetVoipGroup(System.IntPtr obj)
    // Offset: 0x1B2C48C
    static ::Il2CppString* ovr_NetSyncSession_GetVoipGroup(System::IntPtr obj);
    // static private System.IntPtr ovr_NetSyncSession_GetVoipGroup_Native(System.IntPtr obj)
    // Offset: 0x1B2C4F4
    static System::IntPtr ovr_NetSyncSession_GetVoipGroup_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSessionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B2C574
    static System::IntPtr ovr_NetSyncSessionArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_NetSyncSessionArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B2C604
    static System::UIntPtr ovr_NetSyncSessionArray_GetSize(System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncSessionsChangedNotification_GetConnectionId(System.IntPtr obj)
    // Offset: 0x1B2C684
    static int64_t ovr_NetSyncSessionsChangedNotification_GetConnectionId(System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(System.IntPtr obj)
    // Offset: 0x1B2C704
    static System::IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(System.IntPtr obj)
    // Offset: 0x1B2C784
    static System::IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(System::IntPtr obj);
    // static public System.UInt64 ovr_NetworkingPeer_GetID(System.IntPtr obj)
    // Offset: 0x1B2C804
    static uint64_t ovr_NetworkingPeer_GetID(System::IntPtr obj);
    // static public Oculus.Platform.PeerConnectionState ovr_NetworkingPeer_GetState(System.IntPtr obj)
    // Offset: 0x1B2C884
    static Oculus::Platform::PeerConnectionState ovr_NetworkingPeer_GetState(System::IntPtr obj);
    // static public System.UInt64 ovr_OrgScopedID_GetID(System.IntPtr obj)
    // Offset: 0x1B2C904
    static uint64_t ovr_OrgScopedID_GetID(System::IntPtr obj);
    // static public System.Void ovr_Packet_Free(System.IntPtr obj)
    // Offset: 0x1B2C984
    static void ovr_Packet_Free(System::IntPtr obj);
    // static public System.IntPtr ovr_Packet_GetBytes(System.IntPtr obj)
    // Offset: 0x1B2CA04
    static System::IntPtr ovr_Packet_GetBytes(System::IntPtr obj);
    // static public Oculus.Platform.SendPolicy ovr_Packet_GetSendPolicy(System.IntPtr obj)
    // Offset: 0x1B2CA84
    static Oculus::Platform::SendPolicy ovr_Packet_GetSendPolicy(System::IntPtr obj);
    // static public System.UInt64 ovr_Packet_GetSenderID(System.IntPtr obj)
    // Offset: 0x1B2CB04
    static uint64_t ovr_Packet_GetSenderID(System::IntPtr obj);
    // static public System.UIntPtr ovr_Packet_GetSize(System.IntPtr obj)
    // Offset: 0x1B2CB84
    static System::UIntPtr ovr_Packet_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_Party_GetID(System.IntPtr obj)
    // Offset: 0x1B2CC04
    static uint64_t ovr_Party_GetID(System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x1B2CC84
    static System::IntPtr ovr_Party_GetInvitedUsers(System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetLeader(System.IntPtr obj)
    // Offset: 0x1B2CD04
    static System::IntPtr ovr_Party_GetLeader(System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetRoom(System.IntPtr obj)
    // Offset: 0x1B2CD84
    static System::IntPtr ovr_Party_GetRoom(System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetUsers(System.IntPtr obj)
    // Offset: 0x1B2CE00
    static System::IntPtr ovr_Party_GetUsers(System::IntPtr obj);
    // static public System.UInt64 ovr_PartyID_GetID(System.IntPtr obj)
    // Offset: 0x1B2CE80
    static uint64_t ovr_PartyID_GetID(System::IntPtr obj);
    // static public Oculus.Platform.PartyUpdateAction ovr_PartyUpdateNotification_GetAction(System.IntPtr obj)
    // Offset: 0x1B2CEFC
    static Oculus::Platform::PartyUpdateAction ovr_PartyUpdateNotification_GetAction(System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetPartyId(System.IntPtr obj)
    // Offset: 0x1B2CF7C
    static uint64_t ovr_PartyUpdateNotification_GetPartyId(System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetSenderId(System.IntPtr obj)
    // Offset: 0x1B2CFFC
    static uint64_t ovr_PartyUpdateNotification_GetSenderId(System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUpdateTimestamp(System.IntPtr obj)
    // Offset: 0x1B2D07C
    static ::Il2CppString* ovr_PartyUpdateNotification_GetUpdateTimestamp(System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(System.IntPtr obj)
    // Offset: 0x1B2D0E4
    static System::IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUserAlias(System.IntPtr obj)
    // Offset: 0x1B2D164
    static ::Il2CppString* ovr_PartyUpdateNotification_GetUserAlias(System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(System.IntPtr obj)
    // Offset: 0x1B2D1CC
    static System::IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetUserId(System.IntPtr obj)
    // Offset: 0x1B2D24C
    static uint64_t ovr_PartyUpdateNotification_GetUserId(System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUserName(System.IntPtr obj)
    // Offset: 0x1B2D2CC
    static ::Il2CppString* ovr_PartyUpdateNotification_GetUserName(System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUserName_Native(System.IntPtr obj)
    // Offset: 0x1B2D334
    static System::IntPtr ovr_PartyUpdateNotification_GetUserName_Native(System::IntPtr obj);
    // static public System.String ovr_Pid_GetId(System.IntPtr obj)
    // Offset: 0x1B2D3B4
    static ::Il2CppString* ovr_Pid_GetId(System::IntPtr obj);
    // static private System.IntPtr ovr_Pid_GetId_Native(System.IntPtr obj)
    // Offset: 0x1B2D41C
    static System::IntPtr ovr_Pid_GetId_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_PidArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B2D49C
    static System::IntPtr ovr_PidArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_PidArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B2D52C
    static System::UIntPtr ovr_PidArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_PingResult_GetID(System.IntPtr obj)
    // Offset: 0x1B2D5AC
    static uint64_t ovr_PingResult_GetID(System::IntPtr obj);
    // static public System.UInt64 ovr_PingResult_GetPingTimeUsec(System.IntPtr obj)
    // Offset: 0x1B2D62C
    static uint64_t ovr_PingResult_GetPingTimeUsec(System::IntPtr obj);
    // static public System.Boolean ovr_PingResult_IsTimeout(System.IntPtr obj)
    // Offset: 0x1B2D6AC
    static bool ovr_PingResult_IsTimeout(System::IntPtr obj);
    // static public Oculus.Platform.PlatformInitializeResult ovr_PlatformInitialize_GetResult(System.IntPtr obj)
    // Offset: 0x1B2D734
    static Oculus::Platform::PlatformInitializeResult ovr_PlatformInitialize_GetResult(System::IntPtr obj);
    // static public System.UInt32 ovr_Price_GetAmountInHundredths(System.IntPtr obj)
    // Offset: 0x1B2D7B4
    static uint ovr_Price_GetAmountInHundredths(System::IntPtr obj);
    // static public System.String ovr_Price_GetCurrency(System.IntPtr obj)
    // Offset: 0x1B2D834
    static ::Il2CppString* ovr_Price_GetCurrency(System::IntPtr obj);
    // static private System.IntPtr ovr_Price_GetCurrency_Native(System.IntPtr obj)
    // Offset: 0x1B2D89C
    static System::IntPtr ovr_Price_GetCurrency_Native(System::IntPtr obj);
    // static public System.String ovr_Price_GetFormatted(System.IntPtr obj)
    // Offset: 0x1B2D91C
    static ::Il2CppString* ovr_Price_GetFormatted(System::IntPtr obj);
    // static private System.IntPtr ovr_Price_GetFormatted_Native(System.IntPtr obj)
    // Offset: 0x1B2D984
    static System::IntPtr ovr_Price_GetFormatted_Native(System::IntPtr obj);
    // static public System.String ovr_Product_GetDescription(System.IntPtr obj)
    // Offset: 0x1B2DA04
    static ::Il2CppString* ovr_Product_GetDescription(System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x1B2DA6C
    static System::IntPtr ovr_Product_GetDescription_Native(System::IntPtr obj);
    // static public System.String ovr_Product_GetFormattedPrice(System.IntPtr obj)
    // Offset: 0x1B2DAEC
    static ::Il2CppString* ovr_Product_GetFormattedPrice(System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetFormattedPrice_Native(System.IntPtr obj)
    // Offset: 0x1B2DB54
    static System::IntPtr ovr_Product_GetFormattedPrice_Native(System::IntPtr obj);
    // static public System.String ovr_Product_GetName(System.IntPtr obj)
    // Offset: 0x1B2DBD4
    static ::Il2CppString* ovr_Product_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetName_Native(System.IntPtr obj)
    // Offset: 0x1B2DC3C
    static System::IntPtr ovr_Product_GetName_Native(System::IntPtr obj);
    // static public System.String ovr_Product_GetSKU(System.IntPtr obj)
    // Offset: 0x1B2DCBC
    static ::Il2CppString* ovr_Product_GetSKU(System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetSKU_Native(System.IntPtr obj)
    // Offset: 0x1B2DD24
    static System::IntPtr ovr_Product_GetSKU_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_ProductArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B2DDA4
    static System::IntPtr ovr_ProductArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_ProductArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B2DE34
    static ::Il2CppString* ovr_ProductArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_ProductArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B2DE9C
    static System::IntPtr ovr_ProductArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_ProductArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B2DF1C
    static System::UIntPtr ovr_ProductArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_ProductArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B2DF9C
    static bool ovr_ProductArray_HasNextPage(System::IntPtr obj);
    // static public System.DateTime ovr_Purchase_GetExpirationTime(System.IntPtr obj)
    // Offset: 0x1B2E024
    static System::DateTime ovr_Purchase_GetExpirationTime(System::IntPtr obj);
    // static private System.UInt64 ovr_Purchase_GetExpirationTime_Native(System.IntPtr obj)
    // Offset: 0x1B2E08C
    static uint64_t ovr_Purchase_GetExpirationTime_Native(System::IntPtr obj);
    // static public System.DateTime ovr_Purchase_GetGrantTime(System.IntPtr obj)
    // Offset: 0x1B2E10C
    static System::DateTime ovr_Purchase_GetGrantTime(System::IntPtr obj);
    // static private System.UInt64 ovr_Purchase_GetGrantTime_Native(System.IntPtr obj)
    // Offset: 0x1B2E174
    static uint64_t ovr_Purchase_GetGrantTime_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_Purchase_GetPurchaseID(System.IntPtr obj)
    // Offset: 0x1B2E1F4
    static uint64_t ovr_Purchase_GetPurchaseID(System::IntPtr obj);
    // static public System.String ovr_Purchase_GetSKU(System.IntPtr obj)
    // Offset: 0x1B2E274
    static ::Il2CppString* ovr_Purchase_GetSKU(System::IntPtr obj);
    // static private System.IntPtr ovr_Purchase_GetSKU_Native(System.IntPtr obj)
    // Offset: 0x1B2E2DC
    static System::IntPtr ovr_Purchase_GetSKU_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_PurchaseArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B2E35C
    static System::IntPtr ovr_PurchaseArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_PurchaseArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B2E3EC
    static ::Il2CppString* ovr_PurchaseArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_PurchaseArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B2E454
    static System::IntPtr ovr_PurchaseArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_PurchaseArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B2E4D4
    static System::UIntPtr ovr_PurchaseArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_PurchaseArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B2E554
    static bool ovr_PurchaseArray_HasNextPage(System::IntPtr obj);
    // static public System.UInt64 ovr_Room_GetApplicationID(System.IntPtr obj)
    // Offset: 0x1B2E5DC
    static uint64_t ovr_Room_GetApplicationID(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetDataStore(System.IntPtr obj)
    // Offset: 0x1B2E65C
    static System::IntPtr ovr_Room_GetDataStore(System::IntPtr obj);
    // static public System.String ovr_Room_GetDescription(System.IntPtr obj)
    // Offset: 0x1B2E6DC
    static ::Il2CppString* ovr_Room_GetDescription(System::IntPtr obj);
    // static private System.IntPtr ovr_Room_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x1B2E744
    static System::IntPtr ovr_Room_GetDescription_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_Room_GetID(System.IntPtr obj)
    // Offset: 0x1B2E7C4
    static uint64_t ovr_Room_GetID(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x1B2E844
    static System::IntPtr ovr_Room_GetInvitedUsers(System::IntPtr obj);
    // static public System.Boolean ovr_Room_GetIsMembershipLocked(System.IntPtr obj)
    // Offset: 0x1B2E8C4
    static bool ovr_Room_GetIsMembershipLocked(System::IntPtr obj);
    // static public Oculus.Platform.RoomJoinPolicy ovr_Room_GetJoinPolicy(System.IntPtr obj)
    // Offset: 0x1B2E94C
    static Oculus::Platform::RoomJoinPolicy ovr_Room_GetJoinPolicy(System::IntPtr obj);
    // static public Oculus.Platform.RoomJoinability ovr_Room_GetJoinability(System.IntPtr obj)
    // Offset: 0x1B2E9CC
    static Oculus::Platform::RoomJoinability ovr_Room_GetJoinability(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetMatchedUsers(System.IntPtr obj)
    // Offset: 0x1B2EA4C
    static System::IntPtr ovr_Room_GetMatchedUsers(System::IntPtr obj);
    // static public System.UInt32 ovr_Room_GetMaxUsers(System.IntPtr obj)
    // Offset: 0x1B2EACC
    static uint ovr_Room_GetMaxUsers(System::IntPtr obj);
    // static public System.String ovr_Room_GetName(System.IntPtr obj)
    // Offset: 0x1B2EB4C
    static ::Il2CppString* ovr_Room_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_Room_GetName_Native(System.IntPtr obj)
    // Offset: 0x1B2EBB4
    static System::IntPtr ovr_Room_GetName_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetOwner(System.IntPtr obj)
    // Offset: 0x1B2EC34
    static System::IntPtr ovr_Room_GetOwner(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetTeams(System.IntPtr obj)
    // Offset: 0x1B2ECB0
    static System::IntPtr ovr_Room_GetTeams(System::IntPtr obj);
    // static public Oculus.Platform.RoomType ovr_Room_GetType(System.IntPtr obj)
    // Offset: 0x1B2ED2C
    static Oculus::Platform::RoomType ovr_Room_GetType(System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetUsers(System.IntPtr obj)
    // Offset: 0x1B2EDAC
    static System::IntPtr ovr_Room_GetUsers(System::IntPtr obj);
    // static public System.UInt32 ovr_Room_GetVersion(System.IntPtr obj)
    // Offset: 0x1B2EE28
    static uint ovr_Room_GetVersion(System::IntPtr obj);
    // static public System.IntPtr ovr_RoomArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B2EEA8
    static System::IntPtr ovr_RoomArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_RoomArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B2EF38
    static ::Il2CppString* ovr_RoomArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_RoomArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B2EFA0
    static System::IntPtr ovr_RoomArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_RoomArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B2F020
    static System::UIntPtr ovr_RoomArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_RoomArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B2F0A0
    static bool ovr_RoomArray_HasNextPage(System::IntPtr obj);
    // static public System.UInt64 ovr_RoomInviteNotification_GetID(System.IntPtr obj)
    // Offset: 0x1B2F128
    static uint64_t ovr_RoomInviteNotification_GetID(System::IntPtr obj);
    // static public System.UInt64 ovr_RoomInviteNotification_GetRoomID(System.IntPtr obj)
    // Offset: 0x1B2F1A8
    static uint64_t ovr_RoomInviteNotification_GetRoomID(System::IntPtr obj);
    // static public System.UInt64 ovr_RoomInviteNotification_GetSenderID(System.IntPtr obj)
    // Offset: 0x1B2F228
    static uint64_t ovr_RoomInviteNotification_GetSenderID(System::IntPtr obj);
    // static public System.DateTime ovr_RoomInviteNotification_GetSentTime(System.IntPtr obj)
    // Offset: 0x1B2F2A8
    static System::DateTime ovr_RoomInviteNotification_GetSentTime(System::IntPtr obj);
    // static private System.UInt64 ovr_RoomInviteNotification_GetSentTime_Native(System.IntPtr obj)
    // Offset: 0x1B2F310
    static uint64_t ovr_RoomInviteNotification_GetSentTime_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_RoomInviteNotificationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B2F390
    static System::IntPtr ovr_RoomInviteNotificationArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_RoomInviteNotificationArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B2F420
    static ::Il2CppString* ovr_RoomInviteNotificationArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B2F488
    static System::IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_RoomInviteNotificationArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B2F508
    static System::UIntPtr ovr_RoomInviteNotificationArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_RoomInviteNotificationArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B2F588
    static bool ovr_RoomInviteNotificationArray_HasNextPage(System::IntPtr obj);
    // static public Oculus.Platform.SdkAccountType ovr_SdkAccount_GetAccountType(System.IntPtr obj)
    // Offset: 0x1B2F610
    static Oculus::Platform::SdkAccountType ovr_SdkAccount_GetAccountType(System::IntPtr obj);
    // static public System.UInt64 ovr_SdkAccount_GetUserId(System.IntPtr obj)
    // Offset: 0x1B2F690
    static uint64_t ovr_SdkAccount_GetUserId(System::IntPtr obj);
    // static public System.IntPtr ovr_SdkAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B2F710
    static System::IntPtr ovr_SdkAccountArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_SdkAccountArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B2F7A0
    static System::UIntPtr ovr_SdkAccountArray_GetSize(System::IntPtr obj);
    // static public Oculus.Platform.ShareMediaStatus ovr_ShareMediaResult_GetStatus(System.IntPtr obj)
    // Offset: 0x1B2F820
    static Oculus::Platform::ShareMediaStatus ovr_ShareMediaResult_GetStatus(System::IntPtr obj);
    // static public System.Boolean ovr_SystemPermission_GetHasPermission(System.IntPtr obj)
    // Offset: 0x1B2F8A0
    static bool ovr_SystemPermission_GetHasPermission(System::IntPtr obj);
    // static public Oculus.Platform.PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(System.IntPtr obj)
    // Offset: 0x1B2F928
    static Oculus::Platform::PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(System::IntPtr obj);
    // static public Oculus.Platform.VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(System.IntPtr obj)
    // Offset: 0x1B2F9A8
    static Oculus::Platform::VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(System::IntPtr obj);
    // static public Oculus.Platform.SystemVoipStatus ovr_SystemVoipState_GetStatus(System.IntPtr obj)
    // Offset: 0x1B2FA28
    static Oculus::Platform::SystemVoipStatus ovr_SystemVoipState_GetStatus(System::IntPtr obj);
    // static public System.IntPtr ovr_Team_GetAssignedUsers(System.IntPtr obj)
    // Offset: 0x1B2FAA8
    static System::IntPtr ovr_Team_GetAssignedUsers(System::IntPtr obj);
    // static public System.Int32 ovr_Team_GetMaxUsers(System.IntPtr obj)
    // Offset: 0x1B2FB28
    static int ovr_Team_GetMaxUsers(System::IntPtr obj);
    // static public System.Int32 ovr_Team_GetMinUsers(System.IntPtr obj)
    // Offset: 0x1B2FBA8
    static int ovr_Team_GetMinUsers(System::IntPtr obj);
    // static public System.String ovr_Team_GetName(System.IntPtr obj)
    // Offset: 0x1B2FC28
    static ::Il2CppString* ovr_Team_GetName(System::IntPtr obj);
    // static private System.IntPtr ovr_Team_GetName_Native(System.IntPtr obj)
    // Offset: 0x1B2FC90
    static System::IntPtr ovr_Team_GetName_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_TeamArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B2FD10
    static System::IntPtr ovr_TeamArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_TeamArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B2FDA0
    static System::UIntPtr ovr_TeamArray_GetSize(System::IntPtr obj);
    // static public System.String ovr_TestUser_GetAccessToken(System.IntPtr obj)
    // Offset: 0x1B2FE20
    static ::Il2CppString* ovr_TestUser_GetAccessToken(System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x1B2FE88
    static System::IntPtr ovr_TestUser_GetAccessToken_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetAppAccessArray(System.IntPtr obj)
    // Offset: 0x1B2FF08
    static System::IntPtr ovr_TestUser_GetAppAccessArray(System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetFbAppAccessArray(System.IntPtr obj)
    // Offset: 0x1B2FF88
    static System::IntPtr ovr_TestUser_GetFbAppAccessArray(System::IntPtr obj);
    // static public System.String ovr_TestUser_GetFriendAccessToken(System.IntPtr obj)
    // Offset: 0x1B30008
    static ::Il2CppString* ovr_TestUser_GetFriendAccessToken(System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetFriendAccessToken_Native(System.IntPtr obj)
    // Offset: 0x1B30070
    static System::IntPtr ovr_TestUser_GetFriendAccessToken_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetFriendAppAccessArray(System.IntPtr obj)
    // Offset: 0x1B300F0
    static System::IntPtr ovr_TestUser_GetFriendAppAccessArray(System::IntPtr obj);
    // static public System.String ovr_TestUser_GetUserAlias(System.IntPtr obj)
    // Offset: 0x1B30170
    static ::Il2CppString* ovr_TestUser_GetUserAlias(System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetUserAlias_Native(System.IntPtr obj)
    // Offset: 0x1B301D8
    static System::IntPtr ovr_TestUser_GetUserAlias_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_TestUser_GetUserFbid(System.IntPtr obj)
    // Offset: 0x1B30258
    static uint64_t ovr_TestUser_GetUserFbid(System::IntPtr obj);
    // static public System.UInt64 ovr_TestUser_GetUserId(System.IntPtr obj)
    // Offset: 0x1B302D8
    static uint64_t ovr_TestUser_GetUserId(System::IntPtr obj);
    // static public System.String ovr_TestUserAppAccess_GetAccessToken(System.IntPtr obj)
    // Offset: 0x1B30358
    static ::Il2CppString* ovr_TestUserAppAccess_GetAccessToken(System::IntPtr obj);
    // static private System.IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x1B303C0
    static System::IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(System::IntPtr obj);
    // static public System.UInt64 ovr_TestUserAppAccess_GetAppId(System.IntPtr obj)
    // Offset: 0x1B30440
    static uint64_t ovr_TestUserAppAccess_GetAppId(System::IntPtr obj);
    // static public System.UInt64 ovr_TestUserAppAccess_GetUserId(System.IntPtr obj)
    // Offset: 0x1B304C0
    static uint64_t ovr_TestUserAppAccess_GetUserId(System::IntPtr obj);
    // static public System.IntPtr ovr_TestUserAppAccessArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B30540
    static System::IntPtr ovr_TestUserAppAccessArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.UIntPtr ovr_TestUserAppAccessArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B305D0
    static System::UIntPtr ovr_TestUserAppAccessArray_GetSize(System::IntPtr obj);
    // static public System.UInt64 ovr_User_GetID(System.IntPtr obj)
    // Offset: 0x1B30650
    static uint64_t ovr_User_GetID(System::IntPtr obj);
    // static public System.String ovr_User_GetImageUrl(System.IntPtr obj)
    // Offset: 0x1B306D0
    static ::Il2CppString* ovr_User_GetImageUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetImageUrl_Native(System.IntPtr obj)
    // Offset: 0x1B30738
    static System::IntPtr ovr_User_GetImageUrl_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetInviteToken(System.IntPtr obj)
    // Offset: 0x1B307B8
    static ::Il2CppString* ovr_User_GetInviteToken(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetInviteToken_Native(System.IntPtr obj)
    // Offset: 0x1B30820
    static System::IntPtr ovr_User_GetInviteToken_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetOculusID(System.IntPtr obj)
    // Offset: 0x1B308A0
    static ::Il2CppString* ovr_User_GetOculusID(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetOculusID_Native(System.IntPtr obj)
    // Offset: 0x1B30908
    static System::IntPtr ovr_User_GetOculusID_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetPresence(System.IntPtr obj)
    // Offset: 0x1B30988
    static ::Il2CppString* ovr_User_GetPresence(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresence_Native(System.IntPtr obj)
    // Offset: 0x1B309F0
    static System::IntPtr ovr_User_GetPresence_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x1B30A70
    static ::Il2CppString* ovr_User_GetPresenceDeeplinkMessage(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x1B30AD8
    static System::IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceDestinationApiName(System.IntPtr obj)
    // Offset: 0x1B30B58
    static ::Il2CppString* ovr_User_GetPresenceDestinationApiName(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x1B30BC0
    static System::IntPtr ovr_User_GetPresenceDestinationApiName_Native(System::IntPtr obj);
    // static public Oculus.Platform.UserPresenceStatus ovr_User_GetPresenceStatus(System.IntPtr obj)
    // Offset: 0x1B30C40
    static Oculus::Platform::UserPresenceStatus ovr_User_GetPresenceStatus(System::IntPtr obj);
    // static public System.String ovr_User_GetSmallImageUrl(System.IntPtr obj)
    // Offset: 0x1B30CC0
    static ::Il2CppString* ovr_User_GetSmallImageUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetSmallImageUrl_Native(System.IntPtr obj)
    // Offset: 0x1B30D28
    static System::IntPtr ovr_User_GetSmallImageUrl_Native(System::IntPtr obj);
    // static public System.IntPtr ovr_UserAndRoom_GetRoom(System.IntPtr obj)
    // Offset: 0x1B30DA8
    static System::IntPtr ovr_UserAndRoom_GetRoom(System::IntPtr obj);
    // static public System.IntPtr ovr_UserAndRoom_GetUser(System.IntPtr obj)
    // Offset: 0x1B30E28
    static System::IntPtr ovr_UserAndRoom_GetUser(System::IntPtr obj);
    // static public System.IntPtr ovr_UserAndRoomArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B30EA8
    static System::IntPtr ovr_UserAndRoomArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_UserAndRoomArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B30F38
    static ::Il2CppString* ovr_UserAndRoomArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B30FA0
    static System::IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_UserAndRoomArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B31020
    static System::UIntPtr ovr_UserAndRoomArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_UserAndRoomArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B310A0
    static bool ovr_UserAndRoomArray_HasNextPage(System::IntPtr obj);
    // static public System.IntPtr ovr_UserArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x1B31128
    static System::IntPtr ovr_UserArray_GetElement(System::IntPtr obj, System::UIntPtr index);
    // static public System.String ovr_UserArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x1B311B8
    static ::Il2CppString* ovr_UserArray_GetNextUrl(System::IntPtr obj);
    // static private System.IntPtr ovr_UserArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x1B31220
    static System::IntPtr ovr_UserArray_GetNextUrl_Native(System::IntPtr obj);
    // static public System.UIntPtr ovr_UserArray_GetSize(System.IntPtr obj)
    // Offset: 0x1B312A0
    static System::UIntPtr ovr_UserArray_GetSize(System::IntPtr obj);
    // static public System.Boolean ovr_UserArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x1B31320
    static bool ovr_UserArray_HasNextPage(System::IntPtr obj);
    // static public System.String ovr_UserProof_GetNonce(System.IntPtr obj)
    // Offset: 0x1B313A8
    static ::Il2CppString* ovr_UserProof_GetNonce(System::IntPtr obj);
    // static private System.IntPtr ovr_UserProof_GetNonce_Native(System.IntPtr obj)
    // Offset: 0x1B31410
    static System::IntPtr ovr_UserProof_GetNonce_Native(System::IntPtr obj);
    // static public System.Boolean ovr_UserReportID_GetDidCancel(System.IntPtr obj)
    // Offset: 0x1B31490
    static bool ovr_UserReportID_GetDidCancel(System::IntPtr obj);
    // static public System.UInt64 ovr_UserReportID_GetID(System.IntPtr obj)
    // Offset: 0x1B31518
    static uint64_t ovr_UserReportID_GetID(System::IntPtr obj);
    // static public System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UIntPtr compressedSize)
    // Offset: 0x1B31598
    static void ovr_VoipDecoder_Decode(System::IntPtr obj, ::Array<uint8_t>* compressedData, System::UIntPtr compressedSize);
    // static public System.UIntPtr ovr_VoipDecoder_GetDecodedPCM(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)
    // Offset: 0x1B31638
    static System::UIntPtr ovr_VoipDecoder_GetDecodedPCM(System::IntPtr obj, ::Array<float>* outputBuffer, System::UIntPtr outputBufferSize);
    // static public System.Void ovr_VoipEncoder_AddPCM(System.IntPtr obj, System.Single[] inputData, System.UInt32 inputSize)
    // Offset: 0x1B316D8
    static void ovr_VoipEncoder_AddPCM(System::IntPtr obj, ::Array<float>* inputData, uint inputSize);
    // static public System.UIntPtr ovr_VoipEncoder_GetCompressedData(System.IntPtr obj, System.Byte[] outputBuffer, System.UIntPtr intputSize)
    // Offset: 0x1B31778
    static System::UIntPtr ovr_VoipEncoder_GetCompressedData(System::IntPtr obj, ::Array<uint8_t>* outputBuffer, System::UIntPtr intputSize);
    // static public System.UIntPtr ovr_VoipEncoder_GetCompressedDataSize(System.IntPtr obj)
    // Offset: 0x1B31818
    static System::UIntPtr ovr_VoipEncoder_GetCompressedDataSize(System::IntPtr obj);
    // static public System.IntPtr ovr_AbuseReportOptions_Create()
    // Offset: 0x1B134D4
    static System::IntPtr ovr_AbuseReportOptions_Create();
    // static public System.Void ovr_AbuseReportOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1B1385C
    static void ovr_AbuseReportOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_AbuseReportOptions_SetPreventPeopleChooser(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1B135C0
    static void ovr_AbuseReportOptions_SetPreventPeopleChooser(System::IntPtr handle, bool value);
    // static public System.Void ovr_AbuseReportOptions_SetReportType(System.IntPtr handle, Oculus.Platform.AbuseReportType value)
    // Offset: 0x1B136C8
    static void ovr_AbuseReportOptions_SetReportType(System::IntPtr handle, Oculus::Platform::AbuseReportType value);
    // static public System.IntPtr ovr_ApplicationOptions_Create()
    // Offset: 0x1B15260
    static System::IntPtr ovr_ApplicationOptions_Create();
    // static public System.Void ovr_ApplicationOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1B154AC
    static void ovr_ApplicationOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_ApplicationOptions_SetDeeplinkMessage(System.IntPtr handle, System.String value)
    // Offset: 0x1B1534C
    static void ovr_ApplicationOptions_SetDeeplinkMessage(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_ApplicationOptions_SetDeeplinkMessage_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1B31898
    static void ovr_ApplicationOptions_SetDeeplinkMessage_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.IntPtr ovr_MatchmakingOptions_Create()
    // Offset: 0x1B31928
    static System::IntPtr ovr_MatchmakingOptions_Create();
    // static public System.Void ovr_MatchmakingOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1B3199C
    static void ovr_MatchmakingOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x1B31A1C
    static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value);
    // static private System.Void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x1B31AE8
    static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value);
    // static public System.Void ovr_MatchmakingOptions_ClearCreateRoomDataStore(System.IntPtr handle)
    // Offset: 0x1B31B80
    static void ovr_MatchmakingOptions_ClearCreateRoomDataStore(System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(System.IntPtr handle, Oculus.Platform.RoomJoinPolicy value)
    // Offset: 0x1B31C00
    static void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(System::IntPtr handle, Oculus::Platform::RoomJoinPolicy value);
    // static public System.Void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1B31C90
    static void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(System::IntPtr handle, uint value);
    // static public System.Void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1B31D20
    static void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(System.IntPtr handle)
    // Offset: 0x1B31DB0
    static void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(System.IntPtr handle, System.String key, System.Int32 value)
    // Offset: 0x1B31E30
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(System::IntPtr handle, ::Il2CppString* key, int value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(System.IntPtr handle, System.IntPtr key, System.Int32 value)
    // Offset: 0x1B31EE4
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(System::IntPtr handle, System::IntPtr key, int value);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(System.IntPtr handle, System.String key, System.Double value)
    // Offset: 0x1B31F7C
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(System::IntPtr handle, ::Il2CppString* key, double value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(System.IntPtr handle, System.IntPtr key, System.Double value)
    // Offset: 0x1B32038
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(System::IntPtr handle, System::IntPtr key, double value);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x1B320D8
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x1B321A4
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value);
    // static public System.Void ovr_MatchmakingOptions_ClearEnqueueDataSettings(System.IntPtr handle)
    // Offset: 0x1B3223C
    static void ovr_MatchmakingOptions_ClearEnqueueDataSettings(System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueIsDebug(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1B322BC
    static void ovr_MatchmakingOptions_SetEnqueueIsDebug(System::IntPtr handle, bool value);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueQueryKey(System.IntPtr handle, System.String value)
    // Offset: 0x1B3234C
    static void ovr_MatchmakingOptions_SetEnqueueQueryKey(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1B323F8
    static void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.IntPtr ovr_NetSyncOptions_Create()
    // Offset: 0x1B32488
    static System::IntPtr ovr_NetSyncOptions_Create();
    // static public System.Void ovr_NetSyncOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1B324FC
    static void ovr_NetSyncOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_NetSyncOptions_SetVoipGroup(System.IntPtr handle, System.String value)
    // Offset: 0x1B3257C
    static void ovr_NetSyncOptions_SetVoipGroup(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_NetSyncOptions_SetVoipGroup_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1B32628
    static void ovr_NetSyncOptions_SetVoipGroup_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_NetSyncOptions_SetVoipStreamDefault(System.IntPtr handle, Oculus.Platform.NetSyncVoipStreamMode value)
    // Offset: 0x1B326B8
    static void ovr_NetSyncOptions_SetVoipStreamDefault(System::IntPtr handle, Oculus::Platform::NetSyncVoipStreamMode value);
    // static public System.Void ovr_NetSyncOptions_SetZoneId(System.IntPtr handle, System.String value)
    // Offset: 0x1B32748
    static void ovr_NetSyncOptions_SetZoneId(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_NetSyncOptions_SetZoneId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1B327F4
    static void ovr_NetSyncOptions_SetZoneId_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.IntPtr ovr_RichPresenceOptions_Create()
    // Offset: 0x1B32884
    static System::IntPtr ovr_RichPresenceOptions_Create();
    // static public System.Void ovr_RichPresenceOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1B328F8
    static void ovr_RichPresenceOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_RichPresenceOptions_SetApiName(System.IntPtr handle, System.String value)
    // Offset: 0x1B32978
    static void ovr_RichPresenceOptions_SetApiName(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_RichPresenceOptions_SetApiName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1B32A24
    static void ovr_RichPresenceOptions_SetApiName_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetArgsString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x1B32AB4
    static void ovr_RichPresenceOptions_SetArgsString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value);
    // static private System.Void ovr_RichPresenceOptions_SetArgsString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x1B32B80
    static void ovr_RichPresenceOptions_SetArgsString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_ClearArgs(System.IntPtr handle)
    // Offset: 0x1B32C18
    static void ovr_RichPresenceOptions_ClearArgs(System::IntPtr handle);
    // static public System.Void ovr_RichPresenceOptions_SetCurrentCapacity(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1B32C98
    static void ovr_RichPresenceOptions_SetCurrentCapacity(System::IntPtr handle, uint value);
    // static public System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(System.IntPtr handle, System.String value)
    // Offset: 0x1B32D28
    static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1B32DD4
    static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetEndTime(System.IntPtr handle, System.DateTime value)
    // Offset: 0x1B32E64
    static void ovr_RichPresenceOptions_SetEndTime(System::IntPtr handle, System::DateTime value);
    // static private System.Void ovr_RichPresenceOptions_SetEndTime_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1B32EE0
    static void ovr_RichPresenceOptions_SetEndTime_Native(System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_RichPresenceOptions_SetExtraContext(System.IntPtr handle, Oculus.Platform.RichPresenceExtraContext value)
    // Offset: 0x1B32F70
    static void ovr_RichPresenceOptions_SetExtraContext(System::IntPtr handle, Oculus::Platform::RichPresenceExtraContext value);
    // static public System.Void ovr_RichPresenceOptions_SetIsIdle(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1B33000
    static void ovr_RichPresenceOptions_SetIsIdle(System::IntPtr handle, bool value);
    // static public System.Void ovr_RichPresenceOptions_SetIsJoinable(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1B33090
    static void ovr_RichPresenceOptions_SetIsJoinable(System::IntPtr handle, bool value);
    // static public System.Void ovr_RichPresenceOptions_SetJoinableId(System.IntPtr handle, System.String value)
    // Offset: 0x1B33120
    static void ovr_RichPresenceOptions_SetJoinableId(System::IntPtr handle, ::Il2CppString* value);
    // static private System.Void ovr_RichPresenceOptions_SetJoinableId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x1B331CC
    static void ovr_RichPresenceOptions_SetJoinableId_Native(System::IntPtr handle, System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetMaxCapacity(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1B3325C
    static void ovr_RichPresenceOptions_SetMaxCapacity(System::IntPtr handle, uint value);
    // static public System.Void ovr_RichPresenceOptions_SetStartTime(System.IntPtr handle, System.DateTime value)
    // Offset: 0x1B332EC
    static void ovr_RichPresenceOptions_SetStartTime(System::IntPtr handle, System::DateTime value);
    // static private System.Void ovr_RichPresenceOptions_SetStartTime_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1B33368
    static void ovr_RichPresenceOptions_SetStartTime_Native(System::IntPtr handle, uint64_t value);
    // static public System.IntPtr ovr_RoomOptions_Create()
    // Offset: 0x1B333F8
    static System::IntPtr ovr_RoomOptions_Create();
    // static public System.Void ovr_RoomOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1B3346C
    static void ovr_RoomOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_RoomOptions_SetDataStoreString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x1B334EC
    static void ovr_RoomOptions_SetDataStoreString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value);
    // static private System.Void ovr_RoomOptions_SetDataStoreString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x1B335B8
    static void ovr_RoomOptions_SetDataStoreString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value);
    // static public System.Void ovr_RoomOptions_ClearDataStore(System.IntPtr handle)
    // Offset: 0x1B33650
    static void ovr_RoomOptions_ClearDataStore(System::IntPtr handle);
    // static public System.Void ovr_RoomOptions_SetExcludeRecentlyMet(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1B336D0
    static void ovr_RoomOptions_SetExcludeRecentlyMet(System::IntPtr handle, bool value);
    // static public System.Void ovr_RoomOptions_SetMaxUserResults(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1B33760
    static void ovr_RoomOptions_SetMaxUserResults(System::IntPtr handle, uint value);
    // static public System.Void ovr_RoomOptions_SetOrdering(System.IntPtr handle, Oculus.Platform.UserOrdering value)
    // Offset: 0x1B337F0
    static void ovr_RoomOptions_SetOrdering(System::IntPtr handle, Oculus::Platform::UserOrdering value);
    // static public System.Void ovr_RoomOptions_SetRecentlyMetTimeWindow(System.IntPtr handle, Oculus.Platform.TimeWindow value)
    // Offset: 0x1B33880
    static void ovr_RoomOptions_SetRecentlyMetTimeWindow(System::IntPtr handle, Oculus::Platform::TimeWindow value);
    // static public System.Void ovr_RoomOptions_SetRoomId(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x1B33910
    static void ovr_RoomOptions_SetRoomId(System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_RoomOptions_SetTurnOffUpdates(System.IntPtr handle, System.Boolean value)
    // Offset: 0x1B339A0
    static void ovr_RoomOptions_SetTurnOffUpdates(System::IntPtr handle, bool value);
    // static public System.IntPtr ovr_UserOptions_Create()
    // Offset: 0x1B33A30
    static System::IntPtr ovr_UserOptions_Create();
    // static public System.Void ovr_UserOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1B33AA4
    static void ovr_UserOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_UserOptions_SetMaxUsers(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x1B33B24
    static void ovr_UserOptions_SetMaxUsers(System::IntPtr handle, uint value);
    // static public System.Void ovr_UserOptions_AddServiceProvider(System.IntPtr handle, Oculus.Platform.ServiceProvider value)
    // Offset: 0x1B33BB4
    static void ovr_UserOptions_AddServiceProvider(System::IntPtr handle, Oculus::Platform::ServiceProvider value);
    // static public System.Void ovr_UserOptions_ClearServiceProviders(System.IntPtr handle)
    // Offset: 0x1B33C44
    static void ovr_UserOptions_ClearServiceProviders(System::IntPtr handle);
    // static public System.Void ovr_UserOptions_SetTimeWindow(System.IntPtr handle, Oculus.Platform.TimeWindow value)
    // Offset: 0x1B33CC4
    static void ovr_UserOptions_SetTimeWindow(System::IntPtr handle, Oculus::Platform::TimeWindow value);
    // static public System.IntPtr ovr_VoipOptions_Create()
    // Offset: 0x1B33D54
    static System::IntPtr ovr_VoipOptions_Create();
    // static public System.Void ovr_VoipOptions_Destroy(System.IntPtr handle)
    // Offset: 0x1B33DC8
    static void ovr_VoipOptions_Destroy(System::IntPtr handle);
    // static public System.Void ovr_VoipOptions_SetBitrateForNewConnections(System.IntPtr handle, Oculus.Platform.VoipBitrate value)
    // Offset: 0x1B33E48
    static void ovr_VoipOptions_SetBitrateForNewConnections(System::IntPtr handle, Oculus::Platform::VoipBitrate value);
    // static public System.Void ovr_VoipOptions_SetCreateNewConnectionUseDtx(System.IntPtr handle, Oculus.Platform.VoipDtxState value)
    // Offset: 0x1B33ED8
    static void ovr_VoipOptions_SetCreateNewConnectionUseDtx(System::IntPtr handle, Oculus::Platform::VoipDtxState value);
    // static private System.Void .cctor()
    // Offset: 0x1B33F70
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x1B33F68
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static CAPI* New_ctor();
  }; // Oculus.Platform.CAPI
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::CAPI*, "Oculus.Platform", "CAPI");
#pragma pack(pop)
