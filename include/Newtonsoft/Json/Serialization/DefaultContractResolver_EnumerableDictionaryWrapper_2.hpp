// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver
#include "Newtonsoft/Json/Serialization/DefaultContractResolver.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Serialization
namespace Newtonsoft::Json::Serialization {
  // Skipping declaration: <GetEnumerator>d__2 because it is already included!
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2, "Newtonsoft.Json.Serialization", "DefaultContractResolver/EnumerableDictionaryWrapper`2");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // WARNING Size may be invalid!
  // Autogenerated type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TEnumeratorKey, typename TEnumeratorValue>
  class DefaultContractResolver::EnumerableDictionaryWrapper_2 : public ::Il2CppObject {
    public:
    // Nested type: ::Newtonsoft::Json::Serialization::DefaultContractResolver::EnumerableDictionaryWrapper_2::$GetEnumerator$d__2<TEnumeratorKey, TEnumeratorValue>
    class $GetEnumerator$d__2;
    // WARNING Size may be invalid!
    // Autogenerated type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2/Newtonsoft.Json.Serialization.<GetEnumerator>d__2
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $GetEnumerator$d__2 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = DefaultContractResolver::EnumerableDictionaryWrapper_2<TEnumeratorKey, TEnumeratorValue>*;
      static constexpr std::string_view NESTED_NAME = "<GetEnumerator>d__2";
      static constexpr bool IS_VALUE_TYPE = false;
    }; // Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2/Newtonsoft.Json.Serialization.<GetEnumerator>d__2
    // Could not write size check! Type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2/Newtonsoft.Json.Serialization.<GetEnumerator>d__2 is generic, or has no fields that are valid for size checks!
  }; // Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2
  // Could not write size check! Type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
