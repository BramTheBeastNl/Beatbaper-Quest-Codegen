// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Object
#include "System/Object.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct CsObject;
struct CsString;
// Completed il2cpp-utils forward declares
// Type namespace: NUnit.Framework.Interfaces
namespace NUnit::Framework::Interfaces {
  // Autogenerated type: NUnit.Framework.Interfaces.TestOutput
  class TestOutput : public ::CsObject {
    public:
    // private System.String <Text>k__BackingField
    // Offset: 0x10
    ::CsString* Text;
    // private System.String <Stream>k__BackingField
    // Offset: 0x18
    ::CsString* Stream;
    // private System.String <TestName>k__BackingField
    // Offset: 0x20
    ::CsString* TestName;
    // public System.Void .ctor(System.String text, System.String stream, System.String testName)
    // Offset: 0x106BE8C
    static TestOutput* New_ctor(::CsString* text, ::CsString* stream, ::CsString* testName);
    // public System.String get_Text()
    // Offset: 0x106BF4C
    ::CsString* get_Text();
    // private System.Void set_Text(System.String value)
    // Offset: 0x106BF54
    void set_Text(::CsString* value);
    // public System.String get_Stream()
    // Offset: 0x106BF44
    ::CsString* get_Stream();
    // private System.Void set_Stream(System.String value)
    // Offset: 0x106BF5C
    void set_Stream(::CsString* value);
    // private System.Void set_TestName(System.String value)
    // Offset: 0x106BF64
    void set_TestName(::CsString* value);
    // public override System.String ToString()
    // Offset: 0x106BEF0
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::CsString* ToString();
  }; // NUnit.Framework.Interfaces.TestOutput
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
DEFINE_IL2CPP_ARG_TYPE(NUnit::Framework::Interfaces::TestOutput*, "NUnit.Framework.Interfaces", "TestOutput");
#pragma pack(pop)
