// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: NUnit::Framework::Internal
namespace NUnit::Framework::Internal {
  // Forward declaring type: ITestExecutionContext
  class ITestExecutionContext;
}
// Completed forward declares
// Type namespace: NUnit.Framework.Interfaces
namespace NUnit::Framework::Interfaces {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: NUnit.Framework.Interfaces.IApplyToContext
  class IApplyToContext {
    public:
    // Creating value type constructor for type: IApplyToContext
    IApplyToContext() noexcept {}
    // public System.Void ApplyToContext(NUnit.Framework.Internal.ITestExecutionContext context)
    // Offset: 0xFFFFFFFF
    void ApplyToContext(NUnit::Framework::Internal::ITestExecutionContext* context);
  }; // NUnit.Framework.Interfaces.IApplyToContext
  #pragma pack(pop)
  // Writing MetadataGetter for method: IApplyToContext::ApplyToContext
  // Il2CppName: ApplyToContext
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IApplyToContext::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&IApplyToContext::ApplyToContext)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IApplyToContext*), "ApplyToContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(NUnit::Framework::Interfaces::IApplyToContext*, "NUnit.Framework.Interfaces", "IApplyToContext");
