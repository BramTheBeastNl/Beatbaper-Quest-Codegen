// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Interfaces.IPropertyBag
#include "NUnit/Framework/Interfaces/IPropertyBag.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: ICollection`1<T>
  template<typename T>
  class ICollection_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
}
// Forward declaring namespace: NUnit::Framework::Interfaces
namespace NUnit::Framework::Interfaces {
  // Forward declaring type: TNode
  class TNode;
}
// Completed forward declares
// Type namespace: NUnit.Framework.Internal
namespace NUnit::Framework::Internal {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: NUnit.Framework.Internal.PropertyBag
  // [DefaultMemberAttribute] Offset: E04E2C
  class PropertyBag : public ::Il2CppObject/*, public NUnit::Framework::Interfaces::IPropertyBag*/ {
    public:
    // private System.Collections.Generic.Dictionary`2<System.String,System.Collections.IList> inner
    // Size: 0x8
    // Offset: 0x10
    System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::IList*>* inner;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::IList*>*) == 0x8);
    // Creating value type constructor for type: PropertyBag
    PropertyBag(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::IList*>* inner_ = {}) noexcept : inner{inner_} {}
    // Creating interface conversion operator: operator NUnit::Framework::Interfaces::IPropertyBag
    operator NUnit::Framework::Interfaces::IPropertyBag() noexcept {
      return *reinterpret_cast<NUnit::Framework::Interfaces::IPropertyBag*>(this);
    }
    // Creating conversion operator: operator System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::IList*>*
    constexpr operator System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::IList*>*() const noexcept {
      return inner;
    }
    // public System.Void Add(System.String key, System.Object value)
    // Offset: 0x22AC410
    void Add(::Il2CppString* key, ::Il2CppObject* value);
    // public System.Void Set(System.String key, System.Object value)
    // Offset: 0x22AC554
    void Set(::Il2CppString* key, ::Il2CppObject* value);
    // public System.Object Get(System.String key)
    // Offset: 0x22AC68C
    ::Il2CppObject* Get(::Il2CppString* key);
    // public System.Boolean ContainsKey(System.String key)
    // Offset: 0x22AC7FC
    bool ContainsKey(::Il2CppString* key);
    // public System.Collections.Generic.ICollection`1<System.String> get_Keys()
    // Offset: 0x22AC864
    System::Collections::Generic::ICollection_1<::Il2CppString*>* get_Keys();
    // public System.Collections.IList get_Item(System.String key)
    // Offset: 0x22AC8BC
    System::Collections::IList* get_Item(::Il2CppString* key);
    // public NUnit.Framework.Interfaces.TNode ToXml(System.Boolean recursive)
    // Offset: 0x22AC980
    NUnit::Framework::Interfaces::TNode* ToXml(bool recursive);
    // public NUnit.Framework.Interfaces.TNode AddToXml(NUnit.Framework.Interfaces.TNode parentNode, System.Boolean recursive)
    // Offset: 0x22AC9F4
    NUnit::Framework::Interfaces::TNode* AddToXml(NUnit::Framework::Interfaces::TNode* parentNode, bool recursive);
    // public System.Void .ctor()
    // Offset: 0x22AD010
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PropertyBag* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Internal::PropertyBag::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PropertyBag*, creationType>()));
    }
  }; // NUnit.Framework.Internal.PropertyBag
  #pragma pack(pop)
  static check_size<sizeof(PropertyBag), 16 + sizeof(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Collections::IList*>*)> __NUnit_Framework_Internal_PropertyBagSizeCheck;
  static_assert(sizeof(PropertyBag) == 0x18);
  // Writing MetadataGetter for method: PropertyBag::Add
  // Il2CppName: Add
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PropertyBag::*)(::Il2CppString*, ::Il2CppObject*)>(&PropertyBag::Add)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: PropertyBag::Set
  // Il2CppName: Set
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PropertyBag::*)(::Il2CppString*, ::Il2CppObject*)>(&PropertyBag::Set)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: PropertyBag::Get
  // Il2CppName: Get
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PropertyBag::*)(::Il2CppString*)>(&PropertyBag::Get)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: PropertyBag::ContainsKey
  // Il2CppName: ContainsKey
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PropertyBag::*)(::Il2CppString*)>(&PropertyBag::ContainsKey)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), "ContainsKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: PropertyBag::get_Keys
  // Il2CppName: get_Keys
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::ICollection_1<::Il2CppString*>* (PropertyBag::*)()>(&PropertyBag::get_Keys)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), "get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PropertyBag::get_Item
  // Il2CppName: get_Item
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IList* (PropertyBag::*)(::Il2CppString*)>(&PropertyBag::get_Item)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: PropertyBag::ToXml
  // Il2CppName: ToXml
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::TNode* (PropertyBag::*)(bool)>(&PropertyBag::ToXml)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), "ToXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: PropertyBag::AddToXml
  // Il2CppName: AddToXml
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::TNode* (PropertyBag::*)(NUnit::Framework::Interfaces::TNode*, bool)>(&PropertyBag::AddToXml)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), "AddToXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::TNode*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: PropertyBag::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PropertyBag::*)()>(&PropertyBag::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PropertyBag::*)()>(&PropertyBag::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PropertyBag*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(NUnit::Framework::Internal::PropertyBag*, "NUnit.Framework.Internal", "PropertyBag");
