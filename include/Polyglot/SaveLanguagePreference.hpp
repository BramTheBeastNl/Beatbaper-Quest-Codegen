// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Polyglot.ILocalize
#include "Polyglot/ILocalize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Polyglot
namespace Polyglot {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Polyglot.SaveLanguagePreference
  class SaveLanguagePreference : public UnityEngine::MonoBehaviour/*, public Polyglot::ILocalize*/ {
    public:
    // private System.String preferenceKey
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* preferenceKey;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: SaveLanguagePreference
    SaveLanguagePreference(::Il2CppString* preferenceKey_ = {}) noexcept : preferenceKey{preferenceKey_} {}
    // Creating interface conversion operator: operator Polyglot::ILocalize
    operator Polyglot::ILocalize() noexcept {
      return *reinterpret_cast<Polyglot::ILocalize*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void Start()
    // Offset: 0x235102C
    void Start();
    // public System.Void OnLocalize()
    // Offset: 0x2351080
    void OnLocalize();
    // public System.Void .ctor()
    // Offset: 0x23510B4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SaveLanguagePreference* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::SaveLanguagePreference::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SaveLanguagePreference*, creationType>()));
    }
  }; // Polyglot.SaveLanguagePreference
  #pragma pack(pop)
  static check_size<sizeof(SaveLanguagePreference), 24 + sizeof(::Il2CppString*)> __Polyglot_SaveLanguagePreferenceSizeCheck;
  static_assert(sizeof(SaveLanguagePreference) == 0x20);
  // Writing MetadataGetter for method: SaveLanguagePreference::Start
  // Il2CppName: Start
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaveLanguagePreference::*)()>(&SaveLanguagePreference::Start)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SaveLanguagePreference*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: SaveLanguagePreference::OnLocalize
  // Il2CppName: OnLocalize
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaveLanguagePreference::*)()>(&SaveLanguagePreference::OnLocalize)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SaveLanguagePreference*), "OnLocalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: SaveLanguagePreference::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaveLanguagePreference::*)()>(&SaveLanguagePreference::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SaveLanguagePreference*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SaveLanguagePreference::*)()>(&SaveLanguagePreference::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SaveLanguagePreference*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(Polyglot::SaveLanguagePreference*, "Polyglot", "SaveLanguagePreference");
