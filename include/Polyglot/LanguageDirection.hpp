// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Polyglot
namespace Polyglot {
  // Autogenerated type: Polyglot.LanguageDirection
  struct LanguageDirection : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public Polyglot.LanguageDirection LeftToRight
    static constexpr const int LeftToRight = 0;
    // Get static field: static public Polyglot.LanguageDirection LeftToRight
    static Polyglot::LanguageDirection _get_LeftToRight();
    // Set static field: static public Polyglot.LanguageDirection LeftToRight
    static void _set_LeftToRight(Polyglot::LanguageDirection value);
    // static field const value: static public Polyglot.LanguageDirection RightToLeft
    static constexpr const int RightToLeft = 1;
    // Get static field: static public Polyglot.LanguageDirection RightToLeft
    static Polyglot::LanguageDirection _get_RightToLeft();
    // Set static field: static public Polyglot.LanguageDirection RightToLeft
    static void _set_RightToLeft(Polyglot::LanguageDirection value);
    // Creating value type constructor for type: LanguageDirection
    LanguageDirection(int value_ = {}) : value{value_} {}
  }; // Polyglot.LanguageDirection
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
DEFINE_IL2CPP_ARG_TYPE(Polyglot::LanguageDirection, "Polyglot", "LanguageDirection");
#pragma pack(pop)
