// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: NamedIntListController
#include "GlobalNamespace/NamedIntListController.hpp"
// Including type: NamedColorListController
#include "GlobalNamespace/NamedColorListController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: AvatarEditHistory
  class AvatarEditHistory;
  // Forward declaring type: SkinColorSO
  class SkinColorSO;
  // Forward declaring type: AvatarPartCollection`1<T>
  template<typename T>
  class AvatarPartCollection_1;
  // Forward declaring type: ColorPickerButtonController
  class ColorPickerButtonController;
  // Forward declaring type: AvatarPartsModel
  class AvatarPartsModel;
  // Forward declaring type: AvatarDataModel
  class AvatarDataModel;
  // Forward declaring type: PlayerDataModel
  class PlayerDataModel;
  // Forward declaring type: IAvatarPart
  class IAvatarPart;
  // Skipping declaration: AvatarEditPart because it is already included!
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: CurvedTextMeshPro
  class CurvedTextMeshPro;
  // Forward declaring type: ValueChangedBinder`1<T>
  template<typename T>
  class ValueChangedBinder_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: String
  class String;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x144
  #pragma pack(push, 1)
  // Autogenerated type: EditAvatarViewController
  class EditAvatarViewController : public HMUI::ViewController {
    public:
    // Nested type: GlobalNamespace::EditAvatarViewController::AvatarEditPart
    struct AvatarEditPart;
    // Nested type: GlobalNamespace::EditAvatarViewController::$$c__DisplayClass56_0
    class $$c__DisplayClass56_0;
    // Nested type: GlobalNamespace::EditAvatarViewController::$$c__DisplayClass57_0_1<T>
    template<typename T>
    class $$c__DisplayClass57_0_1;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: EditAvatarViewController/AvatarEditPart
    struct AvatarEditPart/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: AvatarEditPart
      constexpr AvatarEditPart(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public EditAvatarViewController/AvatarEditPart Unknown
      static constexpr const int Unknown = 0;
      // Get static field: static public EditAvatarViewController/AvatarEditPart Unknown
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_Unknown();
      // Set static field: static public EditAvatarViewController/AvatarEditPart Unknown
      static void _set_Unknown(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart All
      static constexpr const int All = 1;
      // Get static field: static public EditAvatarViewController/AvatarEditPart All
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_All();
      // Set static field: static public EditAvatarViewController/AvatarEditPart All
      static void _set_All(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart SkinColor
      static constexpr const int SkinColor = 2;
      // Get static field: static public EditAvatarViewController/AvatarEditPart SkinColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_SkinColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart SkinColor
      static void _set_SkinColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HeadTopModel
      static constexpr const int HeadTopModel = 3;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HeadTopModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
      static void _set_HeadTopModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
      static constexpr const int HeadTopPrimaryColor = 4;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HeadTopPrimaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
      static void _set_HeadTopPrimaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
      static constexpr const int HeadTopSecondaryColor = 5;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HeadTopSecondaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
      static void _set_HeadTopSecondaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart GlassesModel
      static constexpr const int GlassesModel = 6;
      // Get static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_GlassesModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
      static void _set_GlassesModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart GlassesColor
      static constexpr const int GlassesColor = 7;
      // Get static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_GlassesColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
      static void _set_GlassesColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart FacialHairModel
      static constexpr const int FacialHairModel = 8;
      // Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_FacialHairModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
      static void _set_FacialHairModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart FacialHairColor
      static constexpr const int FacialHairColor = 9;
      // Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_FacialHairColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
      static void _set_FacialHairColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HandsModel
      static constexpr const int HandsModel = 10;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HandsModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HandsModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HandsModel
      static void _set_HandsModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HandsColor
      static constexpr const int HandsColor = 11;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HandsColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HandsColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HandsColor
      static void _set_HandsColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModel
      static constexpr const int ClothesModel = 12;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
      static void _set_ClothesModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
      static constexpr const int ClothesModelPrimaryColor = 13;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModelPrimaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
      static void _set_ClothesModelPrimaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
      static constexpr const int ClothesModelSecondaryColor = 14;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModelSecondaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
      static void _set_ClothesModelSecondaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
      static constexpr const int ClothesModelDetailColor = 15;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModelDetailColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
      static void _set_ClothesModelDetailColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
    }; // EditAvatarViewController/AvatarEditPart
    #pragma pack(pop)
    static check_size<sizeof(EditAvatarViewController::AvatarEditPart), 0 + sizeof(int)> __GlobalNamespace_EditAvatarViewController_AvatarEditPartSizeCheck;
    static_assert(sizeof(EditAvatarViewController::AvatarEditPart) == 0x4);
    // private NamedColorListController _skinColorValuePicker
    // Size: 0x8
    // Offset: 0x70
    GlobalNamespace::NamedColorListController* skinColorValuePicker;
    // Field size check
    static_assert(sizeof(GlobalNamespace::NamedColorListController*) == 0x8);
    // private NamedIntListController _headTopValuePicker
    // Size: 0x8
    // Offset: 0x78
    GlobalNamespace::NamedIntListController* headTopValuePicker;
    // Field size check
    static_assert(sizeof(GlobalNamespace::NamedIntListController*) == 0x8);
    // private NamedIntListController _eyesValuePicker
    // Size: 0x8
    // Offset: 0x80
    GlobalNamespace::NamedIntListController* eyesValuePicker;
    // Field size check
    static_assert(sizeof(GlobalNamespace::NamedIntListController*) == 0x8);
    // private NamedIntListController _handsValuePicker
    // Size: 0x8
    // Offset: 0x88
    GlobalNamespace::NamedIntListController* handsValuePicker;
    // Field size check
    static_assert(sizeof(GlobalNamespace::NamedIntListController*) == 0x8);
    // private NamedIntListController _clothesValuePicker
    // Size: 0x8
    // Offset: 0x90
    GlobalNamespace::NamedIntListController* clothesValuePicker;
    // Field size check
    static_assert(sizeof(GlobalNamespace::NamedIntListController*) == 0x8);
    // [SpaceAttribute] Offset: 0xE2469C
    // private ColorPickerButtonController _headTopPrimaryColorButtonController
    // Size: 0x8
    // Offset: 0x98
    GlobalNamespace::ColorPickerButtonController* headTopPrimaryColorButtonController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _headTopSecondaryColorButtonController
    // Size: 0x8
    // Offset: 0xA0
    GlobalNamespace::ColorPickerButtonController* headTopSecondaryColorButtonController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _handsColorButtonController
    // Size: 0x8
    // Offset: 0xA8
    GlobalNamespace::ColorPickerButtonController* handsColorButtonController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _clothesColorButtonControllerPrimary
    // Size: 0x8
    // Offset: 0xB0
    GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerPrimary;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _clothesColorButtonControllerSecondary
    // Size: 0x8
    // Offset: 0xB8
    GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerSecondary;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _clothesColorButtonControllerDetail
    // Size: 0x8
    // Offset: 0xC0
    GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerDetail;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // [SpaceAttribute] Offset: 0xE24724
    // private UnityEngine.UI.Button _randomizeAllButton
    // Size: 0x8
    // Offset: 0xC8
    UnityEngine::UI::Button* randomizeAllButton;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _undoButton
    // Size: 0x8
    // Offset: 0xD0
    UnityEngine::UI::Button* undoButton;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _redoButton
    // Size: 0x8
    // Offset: 0xD8
    UnityEngine::UI::Button* redoButton;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _applyButton
    // Size: 0x8
    // Offset: 0xE0
    UnityEngine::UI::Button* applyButton;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _cancelButton
    // Size: 0x8
    // Offset: 0xE8
    UnityEngine::UI::Button* cancelButton;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // [SpaceAttribute] Offset: 0xE2479C
    // private HMUI.CurvedTextMeshPro _applyButtonText
    // Size: 0x8
    // Offset: 0xF0
    HMUI::CurvedTextMeshPro* applyButtonText;
    // Field size check
    static_assert(sizeof(HMUI::CurvedTextMeshPro*) == 0x8);
    // private UnityEngine.UI.Image _eyesPreviewImage
    // Size: 0x8
    // Offset: 0xF8
    UnityEngine::UI::Image* eyesPreviewImage;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Image*) == 0x8);
    // [InjectAttribute] Offset: 0xE247E4
    // private readonly AvatarPartsModel _avatarPartsModel
    // Size: 0x8
    // Offset: 0x100
    GlobalNamespace::AvatarPartsModel* avatarPartsModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::AvatarPartsModel*) == 0x8);
    // [InjectAttribute] Offset: 0xE247F4
    // private readonly AvatarDataModel _avatarDataModel
    // Size: 0x8
    // Offset: 0x108
    GlobalNamespace::AvatarDataModel* avatarDataModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::AvatarDataModel*) == 0x8);
    // [InjectAttribute] Offset: 0xE24804
    // private readonly PlayerDataModel _playerDataModel
    // Size: 0x8
    // Offset: 0x110
    GlobalNamespace::PlayerDataModel* playerDataModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::PlayerDataModel*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE24834
    // private System.Action didFinishEvent
    // Size: 0x8
    // Offset: 0x118
    System::Action* didFinishEvent;
    // Field size check
    static_assert(sizeof(System::Action*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE24844
    // private System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> didRequestColorChangeEvent
    // Size: 0x8
    // Offset: 0x120
    System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* didRequestColorChangeEvent;
    // Field size check
    static_assert(sizeof(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE24854
    // private System.Action`1<EditAvatarViewController/AvatarEditPart> didChangedAvatarPartEvent
    // Size: 0x8
    // Offset: 0x128
    System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>* didChangedAvatarPartEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>*) == 0x8);
    // private readonly AvatarEditHistory _avatarEditHistory
    // Size: 0x8
    // Offset: 0x130
    GlobalNamespace::AvatarEditHistory* avatarEditHistory;
    // Field size check
    static_assert(sizeof(GlobalNamespace::AvatarEditHistory*) == 0x8);
    // private HMUI.ValueChangedBinder`1<System.Int32> _intPickerBinder
    // Size: 0x8
    // Offset: 0x138
    HMUI::ValueChangedBinder_1<int>* intPickerBinder;
    // Field size check
    static_assert(sizeof(HMUI::ValueChangedBinder_1<int>*) == 0x8);
    // private EditAvatarViewController/AvatarEditPart _lastEditedPart
    // Size: 0x4
    // Offset: 0x140
    GlobalNamespace::EditAvatarViewController::AvatarEditPart lastEditedPart;
    // Field size check
    static_assert(sizeof(GlobalNamespace::EditAvatarViewController::AvatarEditPart) == 0x4);
    // Creating value type constructor for type: EditAvatarViewController
    EditAvatarViewController(GlobalNamespace::NamedColorListController* skinColorValuePicker_ = {}, GlobalNamespace::NamedIntListController* headTopValuePicker_ = {}, GlobalNamespace::NamedIntListController* eyesValuePicker_ = {}, GlobalNamespace::NamedIntListController* handsValuePicker_ = {}, GlobalNamespace::NamedIntListController* clothesValuePicker_ = {}, GlobalNamespace::ColorPickerButtonController* headTopPrimaryColorButtonController_ = {}, GlobalNamespace::ColorPickerButtonController* headTopSecondaryColorButtonController_ = {}, GlobalNamespace::ColorPickerButtonController* handsColorButtonController_ = {}, GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerPrimary_ = {}, GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerSecondary_ = {}, GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerDetail_ = {}, UnityEngine::UI::Button* randomizeAllButton_ = {}, UnityEngine::UI::Button* undoButton_ = {}, UnityEngine::UI::Button* redoButton_ = {}, UnityEngine::UI::Button* applyButton_ = {}, UnityEngine::UI::Button* cancelButton_ = {}, HMUI::CurvedTextMeshPro* applyButtonText_ = {}, UnityEngine::UI::Image* eyesPreviewImage_ = {}, GlobalNamespace::AvatarPartsModel* avatarPartsModel_ = {}, GlobalNamespace::AvatarDataModel* avatarDataModel_ = {}, GlobalNamespace::PlayerDataModel* playerDataModel_ = {}, System::Action* didFinishEvent_ = {}, System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* didRequestColorChangeEvent_ = {}, System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>* didChangedAvatarPartEvent_ = {}, GlobalNamespace::AvatarEditHistory* avatarEditHistory_ = {}, HMUI::ValueChangedBinder_1<int>* intPickerBinder_ = {}, GlobalNamespace::EditAvatarViewController::AvatarEditPart lastEditedPart_ = {}) noexcept : skinColorValuePicker{skinColorValuePicker_}, headTopValuePicker{headTopValuePicker_}, eyesValuePicker{eyesValuePicker_}, handsValuePicker{handsValuePicker_}, clothesValuePicker{clothesValuePicker_}, headTopPrimaryColorButtonController{headTopPrimaryColorButtonController_}, headTopSecondaryColorButtonController{headTopSecondaryColorButtonController_}, handsColorButtonController{handsColorButtonController_}, clothesColorButtonControllerPrimary{clothesColorButtonControllerPrimary_}, clothesColorButtonControllerSecondary{clothesColorButtonControllerSecondary_}, clothesColorButtonControllerDetail{clothesColorButtonControllerDetail_}, randomizeAllButton{randomizeAllButton_}, undoButton{undoButton_}, redoButton{redoButton_}, applyButton{applyButton_}, cancelButton{cancelButton_}, applyButtonText{applyButtonText_}, eyesPreviewImage{eyesPreviewImage_}, avatarPartsModel{avatarPartsModel_}, avatarDataModel{avatarDataModel_}, playerDataModel{playerDataModel_}, didFinishEvent{didFinishEvent_}, didRequestColorChangeEvent{didRequestColorChangeEvent_}, didChangedAvatarPartEvent{didChangedAvatarPartEvent_}, avatarEditHistory{avatarEditHistory_}, intPickerBinder{intPickerBinder_}, lastEditedPart{lastEditedPart_} {}
    // [LocalizationKeyAttribute] Offset: 0xE24814
    // static field const value: static private System.String kEditApplyButtonLocalizationKey
    static constexpr const char* kEditApplyButtonLocalizationKey = "BUTTON_APPLY";
    // Get static field: static private System.String kEditApplyButtonLocalizationKey
    static ::Il2CppString* _get_kEditApplyButtonLocalizationKey();
    // Set static field: static private System.String kEditApplyButtonLocalizationKey
    static void _set_kEditApplyButtonLocalizationKey(::Il2CppString* value);
    // [LocalizationKeyAttribute] Offset: 0xE24824
    // static field const value: static private System.String kCreateApplyButtonLocalizationKey
    static constexpr const char* kCreateApplyButtonLocalizationKey = "BUTTON_CREATE_AVATAR";
    // Get static field: static private System.String kCreateApplyButtonLocalizationKey
    static ::Il2CppString* _get_kCreateApplyButtonLocalizationKey();
    // Set static field: static private System.String kCreateApplyButtonLocalizationKey
    static void _set_kCreateApplyButtonLocalizationKey(::Il2CppString* value);
    // public System.Void add_didFinishEvent(System.Action value)
    // Offset: 0x1038C44
    void add_didFinishEvent(System::Action* value);
    // public System.Void remove_didFinishEvent(System.Action value)
    // Offset: 0x1039190
    void remove_didFinishEvent(System::Action* value);
    // public System.Void add_didRequestColorChangeEvent(System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> value)
    // Offset: 0x1038AF4
    void add_didRequestColorChangeEvent(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value);
    // public System.Void remove_didRequestColorChangeEvent(System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> value)
    // Offset: 0x1039040
    void remove_didRequestColorChangeEvent(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value);
    // public System.Void add_didChangedAvatarPartEvent(System.Action`1<EditAvatarViewController/AvatarEditPart> value)
    // Offset: 0x1038B9C
    void add_didChangedAvatarPartEvent(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value);
    // public System.Void remove_didChangedAvatarPartEvent(System.Action`1<EditAvatarViewController/AvatarEditPart> value)
    // Offset: 0x10390E8
    void remove_didChangedAvatarPartEvent(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value);
    // public System.Void Setup(System.Boolean showAsCreateView)
    // Offset: 0x10386B8
    void Setup(bool showAsCreateView);
    // public System.Void InitHistory()
    // Offset: 0x1038E34
    void InitHistory();
    // public System.Void DiscardLastEdit()
    // Offset: 0x1039618
    void DiscardLastEdit();
    // protected System.Void Update()
    // Offset: 0x10396A8
    void Update();
    // private System.Void RefreshUi()
    // Offset: 0x103A138
    void RefreshUi();
    // private System.Void UpdateButtons()
    // Offset: 0x103963C
    void UpdateButtons();
    // private System.Void HandleSkinColorDidChanged(System.Int32 value)
    // Offset: 0x103A450
    void HandleSkinColorDidChanged(int value);
    // private System.Void EyesValuePickerHasChanged(System.String eyesId)
    // Offset: 0x103A52C
    void EyesValuePickerHasChanged(::Il2CppString* eyesId);
    // private System.Void HandleUndoButtonWasPressed()
    // Offset: 0x103978C
    void HandleUndoButtonWasPressed();
    // private System.Void HandleRedoButtonWasPressed()
    // Offset: 0x103A5D4
    void HandleRedoButtonWasPressed();
    // private System.Void HandleRandomizeAllButtonWasPressed()
    // Offset: 0x10396FC
    void HandleRandomizeAllButtonWasPressed();
    // private System.Void HandleRandomizeModelsButtonWasPressed()
    // Offset: 0x103A740
    void HandleRandomizeModelsButtonWasPressed();
    // private System.Void HandleRandomizeColorsButtonWasPressed()
    // Offset: 0x103A7D0
    void HandleRandomizeColorsButtonWasPressed();
    // private System.Void ReportAllChangedAndUpdate()
    // Offset: 0x103A6AC
    void ReportAllChangedAndUpdate();
    // private System.Void HandleApplyButtonWasPressed()
    // Offset: 0x103A850
    void HandleApplyButtonWasPressed();
    // private System.Void SaveAvatarAndFinish()
    // Offset: 0x103A854
    void SaveAvatarAndFinish();
    // private System.Void HandleCancelButtonWasPressed()
    // Offset: 0x103A8BC
    void HandleCancelButtonWasPressed();
    // static private NamedIntListController/TextValuePair[] CreateTextValuePairsForAvatarPartCollection(AvatarPartCollection`1<T> partCollection)
    // Offset: 0xFFFFFFFF
    template<class T>
    static ::Array<GlobalNamespace::NamedIntListController::TextValuePair*>* CreateTextValuePairsForAvatarPartCollection(GlobalNamespace::AvatarPartCollection_1<T>* partCollection) {
      static_assert(std::is_convertible_v<T, UnityEngine::Object*> && std::is_base_of_v<GlobalNamespace::IAvatarPart, std::remove_pointer_t<T>>);
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::CreateTextValuePairsForAvatarPartCollection");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EditAvatarViewController", "CreateTextValuePairsForAvatarPartCollection", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partCollection)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedIntListController::TextValuePair*>*, false>(static_cast<Il2CppClass*>(nullptr), ___generic__method, partCollection);
    }
    // private NamedColorListController/ColorValuePair[] CreateColorValuePairsForAvatarPartCollection(SkinColorSO[] colors)
    // Offset: 0x103A014
    ::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>* CreateColorValuePairsForAvatarPartCollection(::Array<GlobalNamespace::SkinColorSO*>* colors);
    // private System.Void SetupColorButton(UnityEngine.UI.Button button, System.Action`1<UnityEngine.Color> colorSetter, System.Func`1<UnityEngine.Color> currentColor, EditAvatarViewController/AvatarEditPart avatarEditPart, System.Int32 uvSegment)
    // Offset: 0x1039F30
    void SetupColorButton(UnityEngine::UI::Button* button, System::Action_1<UnityEngine::Color>* colorSetter, System::Func_1<UnityEngine::Color>* currentColor, GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart, int uvSegment);
    // private System.Void SetupValuePicker(AvatarPartCollection`1<T> partCollection, NamedIntListController valuePicker, System.Action`1<System.String> setIdAction, EditAvatarViewController/AvatarEditPart avatarEditPart)
    // Offset: 0xFFFFFFFF
    template<class T>
    void SetupValuePicker(GlobalNamespace::AvatarPartCollection_1<T>* partCollection, GlobalNamespace::NamedIntListController* valuePicker, System::Action_1<::Il2CppString*>* setIdAction, GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart) {
      static_assert(std::is_convertible_v<T, UnityEngine::Object*> && std::is_base_of_v<GlobalNamespace::IAvatarPart, std::remove_pointer_t<T>>);
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::SetupValuePicker");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupValuePicker", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partCollection), ::il2cpp_utils::ExtractType(valuePicker), ::il2cpp_utils::ExtractType(setIdAction), ::il2cpp_utils::ExtractType(avatarEditPart)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___generic__method, partCollection, valuePicker, setIdAction, avatarEditPart);
    }
    // private System.Void <DidActivate>b__40_0(UnityEngine.Color color)
    // Offset: 0x103A974
    void $DidActivate$b__40_0(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_1()
    // Offset: 0x103A9A0
    UnityEngine::Color $DidActivate$b__40_1();
    // private System.Void <DidActivate>b__40_2(UnityEngine.Color color)
    // Offset: 0x103A9CC
    void $DidActivate$b__40_2(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_3()
    // Offset: 0x103A9F8
    UnityEngine::Color $DidActivate$b__40_3();
    // private System.Void <DidActivate>b__40_4(UnityEngine.Color color)
    // Offset: 0x103AA24
    void $DidActivate$b__40_4(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_5()
    // Offset: 0x103AA50
    UnityEngine::Color $DidActivate$b__40_5();
    // private System.Void <DidActivate>b__40_6(UnityEngine.Color color)
    // Offset: 0x103AA7C
    void $DidActivate$b__40_6(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_7()
    // Offset: 0x103AAA8
    UnityEngine::Color $DidActivate$b__40_7();
    // private System.Void <DidActivate>b__40_8(UnityEngine.Color color)
    // Offset: 0x103AAD4
    void $DidActivate$b__40_8(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_9()
    // Offset: 0x103AB00
    UnityEngine::Color $DidActivate$b__40_9();
    // private System.Void <DidActivate>b__40_10(UnityEngine.Color color)
    // Offset: 0x103AB2C
    void $DidActivate$b__40_10(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_11()
    // Offset: 0x103AB58
    UnityEngine::Color $DidActivate$b__40_11();
    // private System.Void <DidActivate>b__40_12(System.String s)
    // Offset: 0x103AB84
    void $DidActivate$b__40_12(::Il2CppString* s);
    // private System.Void <DidActivate>b__40_13(System.String s)
    // Offset: 0x103ABAC
    void $DidActivate$b__40_13(::Il2CppString* s);
    // private System.Void <DidActivate>b__40_14(System.String s)
    // Offset: 0x103ABD4
    void $DidActivate$b__40_14(::Il2CppString* s);
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0x1039874
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // public System.Void .ctor()
    // Offset: 0x103A90C
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EditAvatarViewController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EditAvatarViewController*, creationType>()));
    }
  }; // EditAvatarViewController
  #pragma pack(pop)
  static check_size<sizeof(EditAvatarViewController), 320 + sizeof(GlobalNamespace::EditAvatarViewController::AvatarEditPart)> __GlobalNamespace_EditAvatarViewControllerSizeCheck;
  static_assert(sizeof(EditAvatarViewController) == 0x144);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EditAvatarViewController*, "", "EditAvatarViewController");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EditAvatarViewController::AvatarEditPart, "", "EditAvatarViewController/AvatarEditPart");
// Writing MetadataGetter for method: EditAvatarViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action*)>(&EditAvatarViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action*)>(&EditAvatarViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::add_didRequestColorChangeEvent
// Il2CppName: add_didRequestColorChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*)>(&EditAvatarViewController::add_didRequestColorChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "add_didRequestColorChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::remove_didRequestColorChangeEvent
// Il2CppName: remove_didRequestColorChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*)>(&EditAvatarViewController::remove_didRequestColorChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "remove_didRequestColorChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::add_didChangedAvatarPartEvent
// Il2CppName: add_didChangedAvatarPartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>*)>(&EditAvatarViewController::add_didChangedAvatarPartEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "add_didChangedAvatarPartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::remove_didChangedAvatarPartEvent
// Il2CppName: remove_didChangedAvatarPartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>*)>(&EditAvatarViewController::remove_didChangedAvatarPartEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "remove_didChangedAvatarPartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(bool)>(&EditAvatarViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::InitHistory
// Il2CppName: InitHistory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::InitHistory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "InitHistory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::DiscardLastEdit
// Il2CppName: DiscardLastEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::DiscardLastEdit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "DiscardLastEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::RefreshUi
// Il2CppName: RefreshUi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::RefreshUi)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "RefreshUi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::UpdateButtons
// Il2CppName: UpdateButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::UpdateButtons)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "UpdateButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleSkinColorDidChanged
// Il2CppName: HandleSkinColorDidChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(int)>(&EditAvatarViewController::HandleSkinColorDidChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleSkinColorDidChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::EyesValuePickerHasChanged
// Il2CppName: EyesValuePickerHasChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(::Il2CppString*)>(&EditAvatarViewController::EyesValuePickerHasChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "EyesValuePickerHasChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleUndoButtonWasPressed
// Il2CppName: HandleUndoButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleUndoButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleUndoButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleRedoButtonWasPressed
// Il2CppName: HandleRedoButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleRedoButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleRedoButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleRandomizeAllButtonWasPressed
// Il2CppName: HandleRandomizeAllButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleRandomizeAllButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleRandomizeAllButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleRandomizeModelsButtonWasPressed
// Il2CppName: HandleRandomizeModelsButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleRandomizeModelsButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleRandomizeModelsButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleRandomizeColorsButtonWasPressed
// Il2CppName: HandleRandomizeColorsButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleRandomizeColorsButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleRandomizeColorsButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::ReportAllChangedAndUpdate
// Il2CppName: ReportAllChangedAndUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::ReportAllChangedAndUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "ReportAllChangedAndUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleApplyButtonWasPressed
// Il2CppName: HandleApplyButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleApplyButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleApplyButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::SaveAvatarAndFinish
// Il2CppName: SaveAvatarAndFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::SaveAvatarAndFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "SaveAvatarAndFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleCancelButtonWasPressed
// Il2CppName: HandleCancelButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleCancelButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleCancelButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::CreateTextValuePairsForAvatarPartCollection
// Il2CppName: CreateTextValuePairsForAvatarPartCollection
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection
// Il2CppName: CreateColorValuePairsForAvatarPartCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>* (EditAvatarViewController::*)(::Array<GlobalNamespace::SkinColorSO*>*)>(&EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "CreateColorValuePairsForAvatarPartCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::SkinColorSO*>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::SetupColorButton
// Il2CppName: SetupColorButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::UI::Button*, System::Action_1<UnityEngine::Color>*, System::Func_1<UnityEngine::Color>*, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int)>(&EditAvatarViewController::SetupColorButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "SetupColorButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Button*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<System::Func_1<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EditAvatarViewController::AvatarEditPart>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::SetupValuePicker
// Il2CppName: SetupValuePicker
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_0
// Il2CppName: <DidActivate>b__40_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_1
// Il2CppName: <DidActivate>b__40_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_2
// Il2CppName: <DidActivate>b__40_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_3
// Il2CppName: <DidActivate>b__40_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_4
// Il2CppName: <DidActivate>b__40_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_5
// Il2CppName: <DidActivate>b__40_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_6
// Il2CppName: <DidActivate>b__40_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_7
// Il2CppName: <DidActivate>b__40_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_8
// Il2CppName: <DidActivate>b__40_8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_8)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_9
// Il2CppName: <DidActivate>b__40_9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_9)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_10
// Il2CppName: <DidActivate>b__40_10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_10)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_11
// Il2CppName: <DidActivate>b__40_11
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_11)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_11", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_12
// Il2CppName: <DidActivate>b__40_12
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(::Il2CppString*)>(&EditAvatarViewController::$DidActivate$b__40_12)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_12", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_13
// Il2CppName: <DidActivate>b__40_13
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(::Il2CppString*)>(&EditAvatarViewController::$DidActivate$b__40_13)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_13", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_14
// Il2CppName: <DidActivate>b__40_14
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(::Il2CppString*)>(&EditAvatarViewController::$DidActivate$b__40_14)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_14", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(bool, bool, bool)>(&EditAvatarViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
