// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: LinkedListNode`1<T>
  template<typename T>
  class LinkedListNode_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ISortedListItemProcessor`1<T>
  template<typename T>
  class ISortedListItemProcessor_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::GlobalNamespace::ISortedListItemProcessor_1, "", "ISortedListItemProcessor`1");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: ISortedListItemProcessor`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ISortedListItemProcessor_1 {
    public:
    // public System.Void ProcessInsertedData(System.Collections.Generic.LinkedListNode`1<T> insertedNode)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ProcessInsertedData(::System::Collections::Generic::LinkedListNode_1<T>* insertedNode) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISortedListItemProcessor_1::ProcessInsertedData");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInsertedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(insertedNode)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, insertedNode);
    }
    // public System.Void ProcessBeforeDeleteData(System.Collections.Generic.LinkedListNode`1<T> nodeToDelete)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ProcessBeforeDeleteData(::System::Collections::Generic::LinkedListNode_1<T>* nodeToDelete) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISortedListItemProcessor_1::ProcessBeforeDeleteData");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBeforeDeleteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeToDelete)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeToDelete);
    }
  }; // ISortedListItemProcessor`1
  // Could not write size check! Type: ISortedListItemProcessor`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
