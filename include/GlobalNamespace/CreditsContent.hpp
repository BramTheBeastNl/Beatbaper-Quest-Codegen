// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: TextAsset
  class TextAsset;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: CreditsContent
  class CreditsContent : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.GameObject _normalTextPrefab
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::GameObject* normalTextPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject _normalLocalizedTextPrefab
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::GameObject* normalLocalizedTextPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject _titleTextPrefab
    // Size: 0x8
    // Offset: 0x28
    UnityEngine::GameObject* titleTextPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject _titleLocalizedTextPrefab
    // Size: 0x8
    // Offset: 0x30
    UnityEngine::GameObject* titleLocalizedTextPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject _headerTextPrefab
    // Size: 0x8
    // Offset: 0x38
    UnityEngine::GameObject* headerTextPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject _headerLocalizedTextPrefab
    // Size: 0x8
    // Offset: 0x40
    UnityEngine::GameObject* headerLocalizedTextPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private System.Int32 _columnCount
    // Size: 0x4
    // Offset: 0x48
    int columnCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single _spaceHeight
    // Size: 0x4
    // Offset: 0x4C
    float spaceHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _titleHeight
    // Size: 0x4
    // Offset: 0x50
    float titleHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: titleHeight and: contentRoot
    char __padding8[0x4] = {};
    // [SpaceAttribute] Offset: 0xE222DC
    // private UnityEngine.Transform _contentRoot
    // Size: 0x8
    // Offset: 0x58
    UnityEngine::Transform* contentRoot;
    // Field size check
    static_assert(sizeof(UnityEngine::Transform*) == 0x8);
    // [SpaceAttribute] Offset: 0xE22314
    // private UnityEngine.RectTransform _rootRectTransform
    // Size: 0x8
    // Offset: 0x60
    UnityEngine::RectTransform* rootRectTransform;
    // Field size check
    static_assert(sizeof(UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.TextAsset _creditsContentTextAsset
    // Size: 0x8
    // Offset: 0x68
    UnityEngine::TextAsset* creditsContentTextAsset;
    // Field size check
    static_assert(sizeof(UnityEngine::TextAsset*) == 0x8);
    // Creating value type constructor for type: CreditsContent
    CreditsContent(UnityEngine::GameObject* normalTextPrefab_ = {}, UnityEngine::GameObject* normalLocalizedTextPrefab_ = {}, UnityEngine::GameObject* titleTextPrefab_ = {}, UnityEngine::GameObject* titleLocalizedTextPrefab_ = {}, UnityEngine::GameObject* headerTextPrefab_ = {}, UnityEngine::GameObject* headerLocalizedTextPrefab_ = {}, int columnCount_ = {}, float spaceHeight_ = {}, float titleHeight_ = {}, UnityEngine::Transform* contentRoot_ = {}, UnityEngine::RectTransform* rootRectTransform_ = {}, UnityEngine::TextAsset* creditsContentTextAsset_ = {}) noexcept : normalTextPrefab{normalTextPrefab_}, normalLocalizedTextPrefab{normalLocalizedTextPrefab_}, titleTextPrefab{titleTextPrefab_}, titleLocalizedTextPrefab{titleLocalizedTextPrefab_}, headerTextPrefab{headerTextPrefab_}, headerLocalizedTextPrefab{headerLocalizedTextPrefab_}, columnCount{columnCount_}, spaceHeight{spaceHeight_}, titleHeight{titleHeight_}, contentRoot{contentRoot_}, rootRectTransform{rootRectTransform_}, creditsContentTextAsset{creditsContentTextAsset_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public UnityEngine.GameObject get_normalTextPrefab()
    // Offset: 0x1099098
    UnityEngine::GameObject* get_normalTextPrefab();
    // public UnityEngine.GameObject get_normalLocalizedTextPrefab()
    // Offset: 0x10990A0
    UnityEngine::GameObject* get_normalLocalizedTextPrefab();
    // public UnityEngine.GameObject get_titleTextPrefab()
    // Offset: 0x10990A8
    UnityEngine::GameObject* get_titleTextPrefab();
    // public UnityEngine.GameObject get_titleLocalizedTextPrefab()
    // Offset: 0x10990B0
    UnityEngine::GameObject* get_titleLocalizedTextPrefab();
    // public UnityEngine.GameObject get_headerTextPrefab()
    // Offset: 0x10990B8
    UnityEngine::GameObject* get_headerTextPrefab();
    // public UnityEngine.GameObject get_headerLocalizedTextPrefab()
    // Offset: 0x10990C0
    UnityEngine::GameObject* get_headerLocalizedTextPrefab();
    // public System.Int32 get_columnCount()
    // Offset: 0x10990C8
    int get_columnCount();
    // public System.Single get_spaceHeight()
    // Offset: 0x10990D0
    float get_spaceHeight();
    // public System.Single get_titleHeight()
    // Offset: 0x10990D8
    float get_titleHeight();
    // public UnityEngine.Transform get_contentRoot()
    // Offset: 0x10990E0
    UnityEngine::Transform* get_contentRoot();
    // public UnityEngine.RectTransform get_rootRectTransform()
    // Offset: 0x10990E8
    UnityEngine::RectTransform* get_rootRectTransform();
    // public UnityEngine.TextAsset get_creditsContentTextAsset()
    // Offset: 0x10990F0
    UnityEngine::TextAsset* get_creditsContentTextAsset();
    // public System.Void .ctor()
    // Offset: 0x10990F8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CreditsContent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CreditsContent*, creationType>()));
    }
  }; // CreditsContent
  #pragma pack(pop)
  static check_size<sizeof(CreditsContent), 104 + sizeof(UnityEngine::TextAsset*)> __GlobalNamespace_CreditsContentSizeCheck;
  static_assert(sizeof(CreditsContent) == 0x70);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::CreditsContent*, "", "CreditsContent");
