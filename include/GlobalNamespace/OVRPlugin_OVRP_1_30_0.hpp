// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OVRPlugin/OVRP_1_30_0
  class OVRPlugin::OVRP_1_30_0 : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: OVRP_1_30_0
    OVRP_1_30_0() noexcept {}
    // Get static field: static public readonly System.Version version
    static System::Version* _get_version();
    // Set static field: static public readonly System.Version version
    static void _set_version(System::Version* value);
    // static public OVRPlugin/Result ovrp_GetCurrentTrackingTransformPose(out OVRPlugin/Posef trackingTransformPose)
    // Offset: 0x16211B0
    static GlobalNamespace::OVRPlugin::Result ovrp_GetCurrentTrackingTransformPose(GlobalNamespace::OVRPlugin::Posef& trackingTransformPose);
    // static public OVRPlugin/Result ovrp_GetTrackingTransformRawPose(out OVRPlugin/Posef trackingTransformRawPose)
    // Offset: 0x1621230
    static GlobalNamespace::OVRPlugin::Result ovrp_GetTrackingTransformRawPose(GlobalNamespace::OVRPlugin::Posef& trackingTransformRawPose);
    // static public OVRPlugin/Result ovrp_SendEvent2(System.String name, System.String param, System.String source)
    // Offset: 0x16212B0
    static GlobalNamespace::OVRPlugin::Result ovrp_SendEvent2(::Il2CppString* name, ::Il2CppString* param, ::Il2CppString* source);
    // static public OVRPlugin/Result ovrp_IsPerfMetricsSupported(OVRPlugin/PerfMetrics perfMetrics, out OVRPlugin/Bool isSupported)
    // Offset: 0x162138C
    static GlobalNamespace::OVRPlugin::Result ovrp_IsPerfMetricsSupported(GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, GlobalNamespace::OVRPlugin::Bool& isSupported);
    // static public OVRPlugin/Result ovrp_GetPerfMetricsFloat(OVRPlugin/PerfMetrics perfMetrics, out System.Single value)
    // Offset: 0x162141C
    static GlobalNamespace::OVRPlugin::Result ovrp_GetPerfMetricsFloat(GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, float& value);
    // static public OVRPlugin/Result ovrp_GetPerfMetricsInt(OVRPlugin/PerfMetrics perfMetrics, out System.Int32 value)
    // Offset: 0x16214AC
    static GlobalNamespace::OVRPlugin::Result ovrp_GetPerfMetricsInt(GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, int& value);
    // static private System.Void .cctor()
    // Offset: 0x162153C
    static void _cctor();
  }; // OVRPlugin/OVRP_1_30_0
  #pragma pack(pop)
  // Writing MetadataGetter for method: OVRPlugin::OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose
  // Il2CppName: ovrp_GetCurrentTrackingTransformPose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OVRPlugin::Result (*)(GlobalNamespace::OVRPlugin::Posef&)>(&OVRPlugin::OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRPlugin::OVRP_1_30_0*), "ovrp_GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Posef&>()});
    }
  };
  // Writing MetadataGetter for method: OVRPlugin::OVRP_1_30_0::ovrp_GetTrackingTransformRawPose
  // Il2CppName: ovrp_GetTrackingTransformRawPose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OVRPlugin::Result (*)(GlobalNamespace::OVRPlugin::Posef&)>(&OVRPlugin::OVRP_1_30_0::ovrp_GetTrackingTransformRawPose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRPlugin::OVRP_1_30_0*), "ovrp_GetTrackingTransformRawPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Posef&>()});
    }
  };
  // Writing MetadataGetter for method: OVRPlugin::OVRP_1_30_0::ovrp_SendEvent2
  // Il2CppName: ovrp_SendEvent2
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OVRPlugin::Result (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&OVRPlugin::OVRP_1_30_0::ovrp_SendEvent2)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRPlugin::OVRP_1_30_0*), "ovrp_SendEvent2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: OVRPlugin::OVRP_1_30_0::ovrp_IsPerfMetricsSupported
  // Il2CppName: ovrp_IsPerfMetricsSupported
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OVRPlugin::Result (*)(GlobalNamespace::OVRPlugin::PerfMetrics, GlobalNamespace::OVRPlugin::Bool&)>(&OVRPlugin::OVRP_1_30_0::ovrp_IsPerfMetricsSupported)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRPlugin::OVRP_1_30_0*), "ovrp_IsPerfMetricsSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::PerfMetrics>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::Bool&>()});
    }
  };
  // Writing MetadataGetter for method: OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsFloat
  // Il2CppName: ovrp_GetPerfMetricsFloat
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OVRPlugin::Result (*)(GlobalNamespace::OVRPlugin::PerfMetrics, float&)>(&OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsFloat)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRPlugin::OVRP_1_30_0*), "ovrp_GetPerfMetricsFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::PerfMetrics>(), ::il2cpp_utils::ExtractIndependentType<float&>()});
    }
  };
  // Writing MetadataGetter for method: OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsInt
  // Il2CppName: ovrp_GetPerfMetricsInt
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OVRPlugin::Result (*)(GlobalNamespace::OVRPlugin::PerfMetrics, int&)>(&OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsInt)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRPlugin::OVRP_1_30_0*), "ovrp_GetPerfMetricsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OVRPlugin::PerfMetrics>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
    }
  };
  // Writing MetadataGetter for method: OVRPlugin::OVRP_1_30_0::_cctor
  // Il2CppName: .cctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&OVRPlugin::OVRP_1_30_0::_cctor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRPlugin::OVRP_1_30_0*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRPlugin::OVRP_1_30_0*, "", "OVRPlugin/OVRP_1_30_0");
