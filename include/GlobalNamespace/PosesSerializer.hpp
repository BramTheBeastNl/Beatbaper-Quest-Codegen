// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PosesRecordingSaveData
  class PosesRecordingSaveData;
  // Forward declaring type: PosesRecordingInfoSaveData
  class PosesRecordingInfoSaveData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PosesSerializer
  class PosesSerializer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PosesSerializer);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PosesSerializer*, "", "PosesSerializer");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PosesSerializer
  // [TokenAttribute] Offset: FFFFFFFF
  class PosesSerializer : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::PosesSerializer::TypeSerializationBinder
    class TypeSerializationBinder;
    // static field const value: static private System.String kInfoFileName
    static constexpr const char* kInfoFileName = "Info.json";
    // Get static field: static private System.String kInfoFileName
    static ::StringW _get_kInfoFileName();
    // Set static field: static private System.String kInfoFileName
    static void _set_kInfoFileName(::StringW value);
    // static field const value: static private System.String kDataFileName
    static constexpr const char* kDataFileName = "Data.rcd";
    // Get static field: static private System.String kDataFileName
    static ::StringW _get_kDataFileName();
    // Set static field: static private System.String kDataFileName
    static void _set_kDataFileName(::StringW value);
    // static private System.Void SaveToBinaryFileByBinaryFormatterLegacy(System.String filePath, PosesRecordingData data)
    // Offset: 0x1375610
    static void SaveToBinaryFileByBinaryFormatterLegacy(::StringW filePath, ::GlobalNamespace::PosesRecordingData* data);
    // static private PosesRecordingSaveData LoadSaveDataFromBinaryFileByBinaryFormatterLegacy(System.String filePath)
    // Offset: 0x1375A70
    static ::GlobalNamespace::PosesRecordingSaveData* LoadSaveDataFromBinaryFileByBinaryFormatterLegacy(::StringW filePath);
    // static private PosesRecordingData LoadFromBinaryFileByBinaryFormatterLegacy(System.String filePath)
    // Offset: 0x1375C58
    static ::GlobalNamespace::PosesRecordingData* LoadFromBinaryFileByBinaryFormatterLegacy(::StringW filePath);
    // static private System.Void SaveInfoFile(System.String filePath, PosesRecordingData data)
    // Offset: 0x1375FD8
    static void SaveInfoFile(::StringW filePath, ::GlobalNamespace::PosesRecordingData* data);
    // static private System.Void SaveDataFile(System.String filePath, PosesRecordingData data)
    // Offset: 0x13760C4
    static void SaveDataFile(::StringW filePath, ::GlobalNamespace::PosesRecordingData* data);
    // static private System.Void SaveRecordingIntoDirectory(System.String path, PosesRecordingData data)
    // Offset: 0x13763D8
    static void SaveRecordingIntoDirectory(::StringW path, ::GlobalNamespace::PosesRecordingData* data);
    // static private PosesRecordingInfoSaveData LoadInfoFile(System.String filePath)
    // Offset: 0x137652C
    static ::GlobalNamespace::PosesRecordingInfoSaveData* LoadInfoFile(::StringW filePath);
    // static private System.Collections.Generic.List`1<PosesRecordingData/TransformsKeyframe> LoadDataFile(System.String filePath)
    // Offset: 0x1376680
    static ::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>* LoadDataFile(::StringW filePath);
    // static private PosesRecordingData LoadRecordingFromDirectory(System.String path)
    // Offset: 0x1376B60
    static ::GlobalNamespace::PosesRecordingData* LoadRecordingFromDirectory(::StringW path);
    // static public System.Void SaveRecording(System.String path, PosesRecordingData data)
    // Offset: 0x1376DB4
    static void SaveRecording(::StringW path, ::GlobalNamespace::PosesRecordingData* data);
    // static public PosesRecordingData LoadRecording(System.String path)
    // Offset: 0x1376DB8
    static ::GlobalNamespace::PosesRecordingData* LoadRecording(::StringW path);
    // public System.Void .ctor()
    // Offset: 0x1376E94
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PosesSerializer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PosesSerializer*, creationType>()));
    }
  }; // PosesSerializer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::SaveToBinaryFileByBinaryFormatterLegacy
// Il2CppName: SaveToBinaryFileByBinaryFormatterLegacy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::GlobalNamespace::PosesRecordingData*)>(&GlobalNamespace::PosesSerializer::SaveToBinaryFileByBinaryFormatterLegacy)> {
  static const MethodInfo* get() {
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("", "PosesRecordingData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "SaveToBinaryFileByBinaryFormatterLegacy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filePath, data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::LoadSaveDataFromBinaryFileByBinaryFormatterLegacy
// Il2CppName: LoadSaveDataFromBinaryFileByBinaryFormatterLegacy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PosesRecordingSaveData* (*)(::StringW)>(&GlobalNamespace::PosesSerializer::LoadSaveDataFromBinaryFileByBinaryFormatterLegacy)> {
  static const MethodInfo* get() {
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "LoadSaveDataFromBinaryFileByBinaryFormatterLegacy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::LoadFromBinaryFileByBinaryFormatterLegacy
// Il2CppName: LoadFromBinaryFileByBinaryFormatterLegacy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PosesRecordingData* (*)(::StringW)>(&GlobalNamespace::PosesSerializer::LoadFromBinaryFileByBinaryFormatterLegacy)> {
  static const MethodInfo* get() {
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "LoadFromBinaryFileByBinaryFormatterLegacy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::SaveInfoFile
// Il2CppName: SaveInfoFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::GlobalNamespace::PosesRecordingData*)>(&GlobalNamespace::PosesSerializer::SaveInfoFile)> {
  static const MethodInfo* get() {
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("", "PosesRecordingData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "SaveInfoFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filePath, data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::SaveDataFile
// Il2CppName: SaveDataFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::GlobalNamespace::PosesRecordingData*)>(&GlobalNamespace::PosesSerializer::SaveDataFile)> {
  static const MethodInfo* get() {
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("", "PosesRecordingData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "SaveDataFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filePath, data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::SaveRecordingIntoDirectory
// Il2CppName: SaveRecordingIntoDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::GlobalNamespace::PosesRecordingData*)>(&GlobalNamespace::PosesSerializer::SaveRecordingIntoDirectory)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("", "PosesRecordingData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "SaveRecordingIntoDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::LoadInfoFile
// Il2CppName: LoadInfoFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PosesRecordingInfoSaveData* (*)(::StringW)>(&GlobalNamespace::PosesSerializer::LoadInfoFile)> {
  static const MethodInfo* get() {
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "LoadInfoFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::LoadDataFile
// Il2CppName: LoadDataFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>* (*)(::StringW)>(&GlobalNamespace::PosesSerializer::LoadDataFile)> {
  static const MethodInfo* get() {
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "LoadDataFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::LoadRecordingFromDirectory
// Il2CppName: LoadRecordingFromDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PosesRecordingData* (*)(::StringW)>(&GlobalNamespace::PosesSerializer::LoadRecordingFromDirectory)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "LoadRecordingFromDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::SaveRecording
// Il2CppName: SaveRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::GlobalNamespace::PosesRecordingData*)>(&GlobalNamespace::PosesSerializer::SaveRecording)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("", "PosesRecordingData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "SaveRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::LoadRecording
// Il2CppName: LoadRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PosesRecordingData* (*)(::StringW)>(&GlobalNamespace::PosesSerializer::LoadRecording)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PosesSerializer*), "LoadRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PosesSerializer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
