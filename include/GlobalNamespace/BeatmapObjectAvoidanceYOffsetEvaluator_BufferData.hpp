// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// WARNING Layout: Sequential may not be correctly taken into account!
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectAvoidanceYOffsetEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidanceYOffsetEvaluator.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x8
  // Autogenerated type: BeatmapObjectAvoidanceYOffsetEvaluator/BufferData
  // [] Offset: FFFFFFFF
  // [IsReadOnlyAttribute] Offset: FFFFFFFF
  struct BeatmapObjectAvoidanceYOffsetEvaluator::BufferData/*, public System::ValueType*/ {
    public:
    // public readonly System.Single songTime
    // Size: 0x4
    // Offset: 0x0
    float songTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public readonly System.Single yOffset
    // Size: 0x4
    // Offset: 0x4
    float yOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: BufferData
    constexpr BufferData(float songTime_ = {}, float yOffset_ = {}) noexcept : songTime{songTime_}, yOffset{yOffset_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // public System.Void .ctor(System.Single songTime, System.Single yOffset)
    // Offset: 0xE7F184
    // template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    // ABORTED: conflicts with another method.  BufferData(float songTime, float yOffset)
  }; // BeatmapObjectAvoidanceYOffsetEvaluator/BufferData
  static check_size<sizeof(BeatmapObjectAvoidanceYOffsetEvaluator::BufferData), 4 + sizeof(float)> __GlobalNamespace_BeatmapObjectAvoidanceYOffsetEvaluator_BufferDataSizeCheck;
  static_assert(sizeof(BeatmapObjectAvoidanceYOffsetEvaluator::BufferData) == 0x8);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData, "", "BeatmapObjectAvoidanceYOffsetEvaluator/BufferData");
#pragma pack(pop)
