// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IReadOnlyList`1<T>
  template<typename T>
  class IReadOnlyList_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MultiplayerBadgeDataSO
  class MultiplayerBadgeDataSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MultiplayerBadgesModelSO
  // [] Offset: FFFFFFFF
  class MultiplayerBadgesModelSO : public UnityEngine::ScriptableObject {
    public:
    // private System.Collections.Generic.List`1<MultiplayerBadgeDataSO> _positiveBadges
    // Size: 0x8
    // Offset: 0x18
    System::Collections::Generic::List_1<GlobalNamespace::MultiplayerBadgeDataSO*>* positiveBadges;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<GlobalNamespace::MultiplayerBadgeDataSO*>*) == 0x8);
    // private System.Collections.Generic.List`1<MultiplayerBadgeDataSO> _negativeBadges
    // Size: 0x8
    // Offset: 0x20
    System::Collections::Generic::List_1<GlobalNamespace::MultiplayerBadgeDataSO*>* negativeBadges;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<GlobalNamespace::MultiplayerBadgeDataSO*>*) == 0x8);
    // Creating value type constructor for type: MultiplayerBadgesModelSO
    MultiplayerBadgesModelSO(System::Collections::Generic::List_1<GlobalNamespace::MultiplayerBadgeDataSO*>* positiveBadges_ = {}, System::Collections::Generic::List_1<GlobalNamespace::MultiplayerBadgeDataSO*>* negativeBadges_ = {}) noexcept : positiveBadges{positiveBadges_}, negativeBadges{negativeBadges_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Collections.Generic.IReadOnlyList`1<MultiplayerBadgeDataSO> get_positiveBadges()
    // Offset: 0x103C0FC
    System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::MultiplayerBadgeDataSO*>* get_positiveBadges();
    // public System.Collections.Generic.IReadOnlyList`1<MultiplayerBadgeDataSO> get_negativeBadges()
    // Offset: 0x103C104
    System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::MultiplayerBadgeDataSO*>* get_negativeBadges();
    // public System.Void .ctor()
    // Offset: 0x103C10C
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerBadgesModelSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerBadgesModelSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerBadgesModelSO*, creationType>()));
    }
  }; // MultiplayerBadgesModelSO
  #pragma pack(pop)
  static check_size<sizeof(MultiplayerBadgesModelSO), 32 + sizeof(System::Collections::Generic::List_1<GlobalNamespace::MultiplayerBadgeDataSO*>*)> __GlobalNamespace_MultiplayerBadgesModelSOSizeCheck;
  static_assert(sizeof(MultiplayerBadgesModelSO) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerBadgesModelSO*, "", "MultiplayerBadgesModelSO");
