// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelFilteringNavigationController
#include "GlobalNamespace/LevelFilteringNavigationController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IBeatmapLevelPack
  class IBeatmapLevelPack;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: LevelFilteringNavigationController/<>c__DisplayClass44_0
  // [CompilerGeneratedAttribute] Offset: E127A8
  class LevelFilteringNavigationController::$$c__DisplayClass44_0 : public ::Il2CppObject {
    public:
    // public IBeatmapLevelPack levelPack
    // Size: 0x8
    // Offset: 0x10
    GlobalNamespace::IBeatmapLevelPack* levelPack;
    // Field size check
    static_assert(sizeof(GlobalNamespace::IBeatmapLevelPack*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass44_0
    $$c__DisplayClass44_0(GlobalNamespace::IBeatmapLevelPack* levelPack_ = {}) noexcept : levelPack{levelPack_} {}
    // Creating conversion operator: operator GlobalNamespace::IBeatmapLevelPack*
    constexpr operator GlobalNamespace::IBeatmapLevelPack*() const noexcept {
      return levelPack;
    }
    // System.Boolean <SelectAnnotatedBeatmapLevelCollection>b__1(System.String packID)
    // Offset: 0x11FB028
    bool $SelectAnnotatedBeatmapLevelCollection$b__1(::Il2CppString* packID);
    // System.Boolean <SelectAnnotatedBeatmapLevelCollection>b__3(System.String packID)
    // Offset: 0x11FB0F4
    bool $SelectAnnotatedBeatmapLevelCollection$b__3(::Il2CppString* packID);
    // public System.Void .ctor()
    // Offset: 0x11FABE8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LevelFilteringNavigationController::$$c__DisplayClass44_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LevelFilteringNavigationController::$$c__DisplayClass44_0*, creationType>()));
    }
  }; // LevelFilteringNavigationController/<>c__DisplayClass44_0
  #pragma pack(pop)
  static check_size<sizeof(LevelFilteringNavigationController::$$c__DisplayClass44_0), 16 + sizeof(GlobalNamespace::IBeatmapLevelPack*)> __GlobalNamespace_LevelFilteringNavigationController_$$c__DisplayClass44_0SizeCheck;
  static_assert(sizeof(LevelFilteringNavigationController::$$c__DisplayClass44_0) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0*, "", "LevelFilteringNavigationController/<>c__DisplayClass44_0");
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__1
// Il2CppName: <SelectAnnotatedBeatmapLevelCollection>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::*)(::Il2CppString*)>(&GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0*), "<SelectAnnotatedBeatmapLevelCollection>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__3
// Il2CppName: <SelectAnnotatedBeatmapLevelCollection>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::*)(::Il2CppString*)>(&GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0*), "<SelectAnnotatedBeatmapLevelCollection>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::*)()>(&GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::*)()>(&GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
