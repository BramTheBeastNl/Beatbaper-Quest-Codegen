// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IHealthCheckService
  class IHealthCheckService/*, public System::IDisposable*/ {
    public:
    // Creating value type constructor for type: IHealthCheckService
    IHealthCheckService() noexcept {}
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // public System.Void PollUpdate()
    // Offset: 0xFFFFFFFF
    void PollUpdate();
  }; // IHealthCheckService
  #pragma pack(pop)
  // Writing MetadataGetter for method: IHealthCheckService::PollUpdate
  // Il2CppName: PollUpdate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IHealthCheckService::*)()>(&IHealthCheckService::PollUpdate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IHealthCheckService*), "PollUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::IHealthCheckService*, "", "IHealthCheckService");
