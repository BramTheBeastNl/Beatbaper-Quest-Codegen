// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelGameplaySetupData
#include "GlobalNamespace/LevelGameplaySetupData.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x2F
  #pragma pack(push, 1)
  // Autogenerated type: LobbyPlayerDataModel
  class LobbyPlayerDataModel : public GlobalNamespace::LevelGameplaySetupData/*, public GlobalNamespace::ILobbyPlayerDataModel*/ {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xD219A0
    // private System.Boolean <isActive>k__BackingField
    // Size: 0x1
    // Offset: 0x2C
    bool isActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xD219B0
    // private System.Boolean <isReady>k__BackingField
    // Size: 0x1
    // Offset: 0x2D
    bool isReady;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xD219C0
    // private System.Boolean <isInLobby>k__BackingField
    // Size: 0x1
    // Offset: 0x2E
    bool isInLobby;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: LobbyPlayerDataModel
    LobbyPlayerDataModel(bool isActive_ = {}, bool isReady_ = {}, bool isInLobby_ = {}) noexcept : isActive{isActive_}, isReady{isReady_}, isInLobby{isInLobby_} {}
    // Creating interface conversion operator: operator GlobalNamespace::ILobbyPlayerDataModel
    operator GlobalNamespace::ILobbyPlayerDataModel() noexcept {
      return *reinterpret_cast<GlobalNamespace::ILobbyPlayerDataModel*>(this);
    }
    // public System.Boolean get_isActive()
    // Offset: 0x10A6F74
    bool get_isActive();
    // public System.Void set_isActive(System.Boolean value)
    // Offset: 0x10A6F7C
    void set_isActive(bool value);
    // public System.Boolean get_isReady()
    // Offset: 0x10A6F88
    bool get_isReady();
    // public System.Void set_isReady(System.Boolean value)
    // Offset: 0x10A6F90
    void set_isReady(bool value);
    // public System.Boolean get_isInLobby()
    // Offset: 0x10A6F9C
    bool get_isInLobby();
    // public System.Void set_isInLobby(System.Boolean value)
    // Offset: 0x10A6FA4
    void set_isInLobby(bool value);
    // public System.Void .ctor()
    // Offset: 0x10A6FB0
    // Implemented from: LevelGameplaySetupData
    // Base method: System.Void LevelGameplaySetupData::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LobbyPlayerDataModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerDataModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LobbyPlayerDataModel*, creationType>()));
    }
  }; // LobbyPlayerDataModel
  #pragma pack(pop)
  static check_size<sizeof(LobbyPlayerDataModel), 46 + sizeof(bool)> __GlobalNamespace_LobbyPlayerDataModelSizeCheck;
  static_assert(sizeof(LobbyPlayerDataModel) == 0x2F);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LobbyPlayerDataModel*, "", "LobbyPlayerDataModel");
