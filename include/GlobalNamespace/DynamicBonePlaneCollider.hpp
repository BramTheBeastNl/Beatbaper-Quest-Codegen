// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DynamicBoneColliderBase
#include "GlobalNamespace/DynamicBoneColliderBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: DynamicBonePlaneCollider
  // [AddComponentMenu] Offset: E06C04
  class DynamicBonePlaneCollider : public GlobalNamespace::DynamicBoneColliderBase {
    public:
    // Creating value type constructor for type: DynamicBonePlaneCollider
    DynamicBonePlaneCollider() noexcept {}
    // private System.Void OnValidate()
    // Offset: 0x23CF5C4
    void OnValidate();
    // private System.Void OnDrawGizmosSelected()
    // Offset: 0x23CF7B4
    void OnDrawGizmosSelected();
    // public override System.Void Collide(ref UnityEngine.Vector3 particlePosition, System.Single particleRadius)
    // Offset: 0x23CF5C8
    // Implemented from: DynamicBoneColliderBase
    // Base method: System.Void DynamicBoneColliderBase::Collide(ref UnityEngine.Vector3 particlePosition, System.Single particleRadius)
    void Collide(UnityEngine::Vector3& particlePosition, float particleRadius);
    // public System.Void .ctor()
    // Offset: 0x23CF978
    // Implemented from: DynamicBoneColliderBase
    // Base method: System.Void DynamicBoneColliderBase::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DynamicBonePlaneCollider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DynamicBonePlaneCollider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DynamicBonePlaneCollider*, creationType>()));
    }
  }; // DynamicBonePlaneCollider
  #pragma pack(pop)
  // Writing MetadataGetter for method: DynamicBonePlaneCollider::OnValidate
  // Il2CppName: OnValidate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DynamicBonePlaneCollider::*)()>(&DynamicBonePlaneCollider::OnValidate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(DynamicBonePlaneCollider*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: DynamicBonePlaneCollider::OnDrawGizmosSelected
  // Il2CppName: OnDrawGizmosSelected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DynamicBonePlaneCollider::*)()>(&DynamicBonePlaneCollider::OnDrawGizmosSelected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(DynamicBonePlaneCollider*), "OnDrawGizmosSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: DynamicBonePlaneCollider::Collide
  // Il2CppName: Collide
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DynamicBonePlaneCollider::*)(UnityEngine::Vector3&, float)>(&DynamicBonePlaneCollider::Collide)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(DynamicBonePlaneCollider*), "Collide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: DynamicBonePlaneCollider::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DynamicBonePlaneCollider::*)()>(&DynamicBonePlaneCollider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(DynamicBonePlaneCollider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DynamicBonePlaneCollider::*)()>(&DynamicBonePlaneCollider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(DynamicBonePlaneCollider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::DynamicBonePlaneCollider*, "", "DynamicBonePlaneCollider");
