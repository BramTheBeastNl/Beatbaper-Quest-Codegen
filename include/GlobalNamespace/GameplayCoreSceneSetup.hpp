// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MonoInstaller
#include "Zenject\MonoInstaller.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapObjectSpawnControllerPlayerHeightSetter
  class BeatmapObjectSpawnControllerPlayerHeightSetter;
  // Forward declaring type: PlayerHeightDetector
  class PlayerHeightDetector;
  // Forward declaring type: CoreGameHUDController
  class CoreGameHUDController;
  // Forward declaring type: BeatLineManager
  class BeatLineManager;
  // Forward declaring type: AudioManagerSO
  class AudioManagerSO;
  // Forward declaring type: BeatmapCharacteristicSO
  class BeatmapCharacteristicSO;
  // Forward declaring type: GameplayCoreSceneSetupData
  class GameplayCoreSceneSetupData;
  // Forward declaring type: PlayerSpecificSettings
  class PlayerSpecificSettings;
  // Forward declaring type: SaberType
  struct SaberType;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: GameplayCoreSceneSetup
  class GameplayCoreSceneSetup : public Zenject::MonoInstaller {
    public:
    // private BeatmapObjectSpawnControllerPlayerHeightSetter _beatmapObjectSpawnControllerPlayerHeightSetterPrefab
    // Offset: 0x20
    GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter* beatmapObjectSpawnControllerPlayerHeightSetterPrefab;
    // private PlayerHeightDetector _playerHeightDetectorPrefab
    // Offset: 0x28
    GlobalNamespace::PlayerHeightDetector* playerHeightDetectorPrefab;
    // private CoreGameHUDController _basicHUDPrefab
    // Offset: 0x30
    GlobalNamespace::CoreGameHUDController* basicHUDPrefab;
    // private CoreGameHUDController _flyingHUDPrefab
    // Offset: 0x38
    GlobalNamespace::CoreGameHUDController* flyingHUDPrefab;
    // private BeatLineManager _beatLineManagerPrefab
    // Offset: 0x40
    GlobalNamespace::BeatLineManager* beatLineManagerPrefab;
    // private AudioManagerSO _audioMixer
    // Offset: 0x48
    GlobalNamespace::AudioManagerSO* audioMixer;
    // private BeatmapCharacteristicSO _oneColorBeatmapCharacteristic
    // Offset: 0x50
    GlobalNamespace::BeatmapCharacteristicSO* oneColorBeatmapCharacteristic;
    // private GameplayCoreSceneSetupData _sceneSetupData
    // Offset: 0x58
    GlobalNamespace::GameplayCoreSceneSetupData* sceneSetupData;
    // private System.Boolean UseOneSaberOnly(BeatmapCharacteristicSO beatmapCharacteristic, PlayerSpecificSettings playerSpecificSettings, SaberType saberType)
    // Offset: 0xB3E1C0
    bool UseOneSaberOnly(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::SaberType& saberType);
    // public override System.Void InstallBindings()
    // Offset: 0xB3D22C
    // Implemented from: Zenject.MonoInstallerBase
    // Base method: System.Void MonoInstallerBase::InstallBindings()
    void InstallBindings();
    // public System.Void .ctor()
    // Offset: 0xB3E278
    // Implemented from: Zenject.MonoInstaller
    // Base method: System.Void MonoInstaller::.ctor()
    // Base method: System.Void MonoInstallerBase::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static GameplayCoreSceneSetup* New_ctor();
  }; // GameplayCoreSceneSetup
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::GameplayCoreSceneSetup*, "", "GameplayCoreSceneSetup");
#pragma pack(pop)
