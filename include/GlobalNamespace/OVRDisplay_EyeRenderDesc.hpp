// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// WARNING Layout: Sequential may not be correctly taken into account!
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: OVRDisplay/EyeFov
#include "GlobalNamespace/OVRDisplay_EyeFov.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  // Autogenerated type: OVRDisplay/EyeRenderDesc
  // [] Offset: FFFFFFFF
  struct OVRDisplay::EyeRenderDesc/*, public System::ValueType*/ {
    public:
    // public UnityEngine.Vector2 resolution
    // Size: 0x8
    // Offset: 0x0
    UnityEngine::Vector2 resolution;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // public UnityEngine.Vector2 fov
    // Size: 0x8
    // Offset: 0x8
    UnityEngine::Vector2 fov;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // public OVRDisplay/EyeFov fullFov
    // Size: 0x10
    // Offset: 0x10
    GlobalNamespace::OVRDisplay::EyeFov fullFov;
    // Field size check
    static_assert(sizeof(GlobalNamespace::OVRDisplay::EyeFov) == 0x10);
    // Creating value type constructor for type: EyeRenderDesc
    constexpr EyeRenderDesc(UnityEngine::Vector2 resolution_ = {}, UnityEngine::Vector2 fov_ = {}, GlobalNamespace::OVRDisplay::EyeFov fullFov_ = {}) noexcept : resolution{resolution_}, fov{fov_}, fullFov{fullFov_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // OVRDisplay/EyeRenderDesc
  static check_size<sizeof(OVRDisplay::EyeRenderDesc), 16 + sizeof(GlobalNamespace::OVRDisplay::EyeFov)> __GlobalNamespace_OVRDisplay_EyeRenderDescSizeCheck;
  static_assert(sizeof(OVRDisplay::EyeRenderDesc) == 0x20);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRDisplay::EyeRenderDesc, "", "OVRDisplay/EyeRenderDesc");
#pragma pack(pop)
