// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: LeaderboardScoreUploader
#include "GlobalNamespace/LeaderboardScoreUploader.hpp"
// Including type: PlatformUserModelSO
#include "GlobalNamespace/PlatformUserModelSO.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IDifficultyBeatmap
  class IDifficultyBeatmap;
  // Forward declaring type: PlatformLeaderboardsHandler
  class PlatformLeaderboardsHandler;
  // Forward declaring type: HMAsyncRequest
  class HMAsyncRequest;
  // Forward declaring type: GameplayModifiers
  class GameplayModifiers;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: PlatformLeaderboardsModel
  class PlatformLeaderboardsModel : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult
    struct GetScoresResult;
    // Nested type: GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult
    struct UploadScoreResult;
    // Nested type: GlobalNamespace::PlatformLeaderboardsModel::ScoresScope
    struct ScoresScope;
    // Nested type: GlobalNamespace::PlatformLeaderboardsModel::GetPlayerIdResult
    struct GetPlayerIdResult;
    // Nested type: GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler
    class GetScoresCompletionHandler;
    // Nested type: GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler
    class UploadScoreCompletionHandler;
    // Nested type: GlobalNamespace::PlatformLeaderboardsModel::GetPlayerIdCompletionHandler
    class GetPlayerIdCompletionHandler;
    // Nested type: GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore
    class LeaderboardScore;
    // private LeaderboardScoreUploader _leaderboardScoreUploader
    // Offset: 0x18
    GlobalNamespace::LeaderboardScoreUploader* leaderboardScoreUploader;
    // private PlatformUserModelSO _platformUserModel
    // Offset: 0x20
    GlobalNamespace::PlatformUserModelSO* platformUserModel;
    // private PlatformLeaderboardsHandler _platformLeaderboardsHandler
    // Offset: 0x28
    GlobalNamespace::PlatformLeaderboardsHandler* platformLeaderboardsHandler;
    // private System.Action allScoresDidUploadEvent
    // Offset: 0x30
    System::Action* allScoresDidUploadEvent;
    // private System.String _playerId
    // Offset: 0x38
    ::Il2CppString* playerId;
    // private HMAsyncRequest _getUserInfoAsyncRequest
    // Offset: 0x40
    GlobalNamespace::HMAsyncRequest* getUserInfoAsyncRequest;
    // public System.Void add_allScoresDidUploadEvent(System.Action value)
    // Offset: 0xBD3914
    void add_allScoresDidUploadEvent(System::Action* value);
    // public System.Void remove_allScoresDidUploadEvent(System.Action value)
    // Offset: 0xBD3ACC
    void remove_allScoresDidUploadEvent(System::Action* value);
    // public System.Boolean get_valid()
    // Offset: 0xBD45DC
    bool get_valid();
    // public System.Void Init()
    // Offset: 0xBD4640
    void Init();
    // private PlatformLeaderboardsHandler get_platformLeaderboardsHandler()
    // Offset: 0xBD4610
    GlobalNamespace::PlatformLeaderboardsHandler* get_platformLeaderboardsHandler();
    // private HMAsyncRequest UploadScore(LeaderboardScoreUploader/ScoreData scoreData, PlatformLeaderboardsModel/UploadScoreCompletionHandler completionHandler)
    // Offset: 0xBD47E0
    GlobalNamespace::HMAsyncRequest* UploadScore(GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler);
    // private HMAsyncRequest GetScores(IDifficultyBeatmap beatmap, System.Int32 count, System.Int32 fromRank, PlatformLeaderboardsModel/ScoresScope scope, PlatformLeaderboardsModel/GetScoresCompletionHandler completionHandler)
    // Offset: 0xBD4AC4
    GlobalNamespace::HMAsyncRequest* GetScores(GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler);
    // private System.Void HandleAllScoresDidUpload()
    // Offset: 0xBD4E18
    void HandleAllScoresDidUpload();
    // public HMAsyncRequest GetScores(IDifficultyBeatmap beatmap, System.Int32 count, System.Int32 fromRank, PlatformLeaderboardsModel/GetScoresCompletionHandler completionHandler)
    // Offset: 0xBD453C
    GlobalNamespace::HMAsyncRequest* GetScores(GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler);
    // public HMAsyncRequest GetScoresAroundPlayer(IDifficultyBeatmap beatmap, System.Int32 count, PlatformLeaderboardsModel/GetScoresCompletionHandler completionHandler)
    // Offset: 0xBD4554
    GlobalNamespace::HMAsyncRequest* GetScoresAroundPlayer(GlobalNamespace::IDifficultyBeatmap* beatmap, int count, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler);
    // public HMAsyncRequest GetFriendsScores(IDifficultyBeatmap beatmap, System.Int32 count, System.Int32 fromRank, PlatformLeaderboardsModel/GetScoresCompletionHandler completionHandler)
    // Offset: 0xBD4548
    GlobalNamespace::HMAsyncRequest* GetFriendsScores(GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler);
    // public System.Void UploadScore(IDifficultyBeatmap beatmap, System.Int32 rawScore, System.Int32 modifiedScore, System.Boolean fullCombo, System.Int32 goodCutsCount, System.Int32 badCutsCount, System.Int32 missedCount, System.Int32 maxCombo, GameplayModifiers gameplayModifiers)
    // Offset: 0xBD4E2C
    void UploadScore(GlobalNamespace::IDifficultyBeatmap* beatmap, int rawScore, int modifiedScore, bool fullCombo, int goodCutsCount, int badCutsCount, int missedCount, int maxCombo, GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // private System.Void <Init>b__16_0(PlatformUserModelSO/GetUserInfoResult result, PlatformUserModelSO/UserInfo userInfo)
    // Offset: 0xBD4F78
    void $Init$b__16_0(GlobalNamespace::PlatformUserModelSO::GetUserInfoResult result, GlobalNamespace::PlatformUserModelSO::UserInfo* userInfo);
    // public System.Void .ctor()
    // Offset: 0xBD4F70
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static PlatformLeaderboardsModel* New_ctor();
  }; // PlatformLeaderboardsModel
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::PlatformLeaderboardsModel*, "", "PlatformLeaderboardsModel");
#pragma pack(pop)
