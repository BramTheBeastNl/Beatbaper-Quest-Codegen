// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IPreviewBeatmapLevel
  class IPreviewBeatmapLevel;
  // Forward declaring type: BeatmapCharacteristicSO
  class BeatmapCharacteristicSO;
  // Forward declaring type: BeatmapDifficulty
  struct BeatmapDifficulty;
  // Forward declaring type: GameplayModifiers
  class GameplayModifiers;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: ILevelGameplaySetupData
  class ILevelGameplaySetupData {
    public:
    // Creating value type constructor for type: ILevelGameplaySetupData
    ILevelGameplaySetupData() noexcept {}
    // public IPreviewBeatmapLevel get_beatmapLevel()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::IPreviewBeatmapLevel* get_beatmapLevel();
    // public System.Void set_beatmapLevel(IPreviewBeatmapLevel value)
    // Offset: 0xFFFFFFFF
    void set_beatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value);
    // public BeatmapCharacteristicSO get_beatmapCharacteristic()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::BeatmapCharacteristicSO* get_beatmapCharacteristic();
    // public System.Void set_beatmapCharacteristic(BeatmapCharacteristicSO value)
    // Offset: 0xFFFFFFFF
    void set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value);
    // public BeatmapDifficulty get_beatmapDifficulty()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::BeatmapDifficulty get_beatmapDifficulty();
    // public System.Void set_beatmapDifficulty(BeatmapDifficulty value)
    // Offset: 0xFFFFFFFF
    void set_beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value);
    // public GameplayModifiers get_gameplayModifiers()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::GameplayModifiers* get_gameplayModifiers();
    // public System.Void set_gameplayModifiers(GameplayModifiers value)
    // Offset: 0xFFFFFFFF
    void set_gameplayModifiers(GlobalNamespace::GameplayModifiers* value);
  }; // ILevelGameplaySetupData
  #pragma pack(pop)
  // Writing MetadataGetter for method: ILevelGameplaySetupData::get_beatmapLevel
  // Il2CppName: get_beatmapLevel
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IPreviewBeatmapLevel* (ILevelGameplaySetupData::*)()>(&ILevelGameplaySetupData::get_beatmapLevel)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ILevelGameplaySetupData*), "get_beatmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ILevelGameplaySetupData::set_beatmapLevel
  // Il2CppName: set_beatmapLevel
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILevelGameplaySetupData::*)(GlobalNamespace::IPreviewBeatmapLevel*)>(&ILevelGameplaySetupData::set_beatmapLevel)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ILevelGameplaySetupData*), "set_beatmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
    }
  };
  // Writing MetadataGetter for method: ILevelGameplaySetupData::get_beatmapCharacteristic
  // Il2CppName: get_beatmapCharacteristic
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapCharacteristicSO* (ILevelGameplaySetupData::*)()>(&ILevelGameplaySetupData::get_beatmapCharacteristic)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ILevelGameplaySetupData*), "get_beatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ILevelGameplaySetupData::set_beatmapCharacteristic
  // Il2CppName: set_beatmapCharacteristic
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILevelGameplaySetupData::*)(GlobalNamespace::BeatmapCharacteristicSO*)>(&ILevelGameplaySetupData::set_beatmapCharacteristic)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ILevelGameplaySetupData*), "set_beatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
    }
  };
  // Writing MetadataGetter for method: ILevelGameplaySetupData::get_beatmapDifficulty
  // Il2CppName: get_beatmapDifficulty
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapDifficulty (ILevelGameplaySetupData::*)()>(&ILevelGameplaySetupData::get_beatmapDifficulty)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ILevelGameplaySetupData*), "get_beatmapDifficulty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ILevelGameplaySetupData::set_beatmapDifficulty
  // Il2CppName: set_beatmapDifficulty
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILevelGameplaySetupData::*)(GlobalNamespace::BeatmapDifficulty)>(&ILevelGameplaySetupData::set_beatmapDifficulty)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ILevelGameplaySetupData*), "set_beatmapDifficulty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
    }
  };
  // Writing MetadataGetter for method: ILevelGameplaySetupData::get_gameplayModifiers
  // Il2CppName: get_gameplayModifiers
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::GameplayModifiers* (ILevelGameplaySetupData::*)()>(&ILevelGameplaySetupData::get_gameplayModifiers)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ILevelGameplaySetupData*), "get_gameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ILevelGameplaySetupData::set_gameplayModifiers
  // Il2CppName: set_gameplayModifiers
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILevelGameplaySetupData::*)(GlobalNamespace::GameplayModifiers*)>(&ILevelGameplaySetupData::set_gameplayModifiers)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ILevelGameplaySetupData*), "set_gameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ILevelGameplaySetupData*, "", "ILevelGameplaySetupData");
