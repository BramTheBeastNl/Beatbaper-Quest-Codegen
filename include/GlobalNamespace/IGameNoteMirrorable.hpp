// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: INoteMirrorable
#include "GlobalNamespace/INoteMirrorable.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NoteMovement
  class NoteMovement;
  // Forward declaring type: NoteVisualModifierType
  struct NoteVisualModifierType;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IGameNoteMirrorable
  class IGameNoteMirrorable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::IGameNoteMirrorable);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::IGameNoteMirrorable*, "", "IGameNoteMirrorable");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: IGameNoteMirrorable
  // [TokenAttribute] Offset: FFFFFFFF
  class IGameNoteMirrorable/*, public ::GlobalNamespace::INoteMirrorable*/ {
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::INoteMirrorable
    operator ::GlobalNamespace::INoteMirrorable() noexcept {
      return *reinterpret_cast<::GlobalNamespace::INoteMirrorable*>(this);
    }
    // public NoteMovement get_noteMovement()
    // Offset: 0xFFFFFFFF
    ::GlobalNamespace::NoteMovement* get_noteMovement();
    // public NoteVisualModifierType get_noteVisualModifierType()
    // Offset: 0xFFFFFFFF
    ::GlobalNamespace::NoteVisualModifierType get_noteVisualModifierType();
    // public NoteData/GameplayType get_gameplayType()
    // Offset: 0xFFFFFFFF
    ::GlobalNamespace::NoteData::GameplayType get_gameplayType();
  }; // IGameNoteMirrorable
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IGameNoteMirrorable::get_noteMovement
// Il2CppName: get_noteMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NoteMovement* (GlobalNamespace::IGameNoteMirrorable::*)()>(&GlobalNamespace::IGameNoteMirrorable::get_noteMovement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IGameNoteMirrorable*), "get_noteMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IGameNoteMirrorable::get_noteVisualModifierType
// Il2CppName: get_noteVisualModifierType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NoteVisualModifierType (GlobalNamespace::IGameNoteMirrorable::*)()>(&GlobalNamespace::IGameNoteMirrorable::get_noteVisualModifierType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IGameNoteMirrorable*), "get_noteVisualModifierType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IGameNoteMirrorable::get_gameplayType
// Il2CppName: get_gameplayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NoteData::GameplayType (GlobalNamespace::IGameNoteMirrorable::*)()>(&GlobalNamespace::IGameNoteMirrorable::get_gameplayType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IGameNoteMirrorable*), "get_gameplayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
