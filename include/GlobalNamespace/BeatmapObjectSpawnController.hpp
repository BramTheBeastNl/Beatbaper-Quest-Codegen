// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: BeatmapObjectCallbackController
#include "GlobalNamespace/BeatmapObjectCallbackController.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapObjectSpawnMovementData
  class BeatmapObjectSpawnMovementData;
  // Forward declaring type: BeatmapCallbackItemDataList
  class BeatmapCallbackItemDataList;
  // Forward declaring type: IBeatmapObjectSpawner
  class IBeatmapObjectSpawner;
  // Forward declaring type: SpawnRotationProcessor
  class SpawnRotationProcessor;
  // Forward declaring type: VariableBpmProcessor
  class VariableBpmProcessor;
  // Forward declaring type: ObstacleData
  class ObstacleData;
  // Forward declaring type: NoteData
  class NoteData;
  // Forward declaring type: BeatmapEventData
  class BeatmapEventData;
  // Forward declaring type: BeatmapObjectData
  class BeatmapObjectData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BeatmapObjectSpawnController
  class BeatmapObjectSpawnController : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::BeatmapObjectSpawnController::InitData
    class InitData;
    // private BeatmapObjectSpawnMovementData _beatmapObjectSpawnMovementData
    // Offset: 0x18
    GlobalNamespace::BeatmapObjectSpawnMovementData* beatmapObjectSpawnMovementData;
    // private readonly BeatmapObjectCallbackController _beatmapObjectCallbackController
    // Offset: 0x20
    GlobalNamespace::BeatmapObjectCallbackController* beatmapObjectCallbackController;
    // private readonly IBeatmapObjectSpawner _beatmapObjectSpawner
    // Offset: 0x28
    GlobalNamespace::IBeatmapObjectSpawner* beatmapObjectSpawner;
    // private readonly BeatmapObjectSpawnController/InitData _initData
    // Offset: 0x30
    GlobalNamespace::BeatmapObjectSpawnController::InitData* initData;
    // private System.Action didInitEvent
    // Offset: 0x38
    System::Action* didInitEvent;
    // private System.Single _jumpOffsetY
    // Offset: 0x40
    float jumpOffsetY;
    // private System.Boolean _disableSpawning
    // Offset: 0x44
    bool disableSpawning;
    // private System.Boolean _isInitialized
    // Offset: 0x45
    bool isInitialized;
    // private BeatmapObjectCallbackController/BeatmapObjectCallbackData _beatmapObjectCallbackData
    // Offset: 0x48
    GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallbackData* beatmapObjectCallbackData;
    // private BeatmapObjectCallbackController/BeatmapEventCallbackData _beatmapEventCallbackData
    // Offset: 0x50
    GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallbackData* beatmapEventCallbackData;
    // private BeatmapCallbackItemDataList _beatmapCallbackItemDataList
    // Offset: 0x58
    GlobalNamespace::BeatmapCallbackItemDataList* beatmapCallbackItemDataList;
    // private readonly SpawnRotationProcessor _spawnRotationProcessor
    // Offset: 0x60
    GlobalNamespace::SpawnRotationProcessor* spawnRotationProcessor;
    // private readonly VariableBpmProcessor _variableBpmProcessor
    // Offset: 0x68
    GlobalNamespace::VariableBpmProcessor* variableBpmProcessor;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Single get_jumpOffsetY()
    // Offset: 0x1FAA42C
    float get_jumpOffsetY();
    // public System.Void set_jumpOffsetY(System.Single value)
    // Offset: 0x1FAA434
    void set_jumpOffsetY(float value);
    // public System.Single get_currentBpm()
    // Offset: 0x1FAA43C
    float get_currentBpm();
    // public System.Single get_moveDuration()
    // Offset: 0x1FAA458
    float get_moveDuration();
    // public System.Single get_jumpDuration()
    // Offset: 0x1FAA474
    float get_jumpDuration();
    // public System.Boolean get_isInitialized()
    // Offset: 0x1FAA490
    bool get_isInitialized();
    // public System.Void add_didInitEvent(System.Action value)
    // Offset: 0x1FAA498
    void add_didInitEvent(System::Action* value);
    // public System.Void remove_didInitEvent(System.Action value)
    // Offset: 0x1FAA53C
    void remove_didInitEvent(System::Action* value);
    // protected System.Void Start()
    // Offset: 0x1FAA5E0
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x1FAAA50
    void OnDestroy();
    // private System.Void SpawnObstacle(ObstacleData obstacleData)
    // Offset: 0x1FAAB48
    void SpawnObstacle(GlobalNamespace::ObstacleData* obstacleData);
    // private System.Void SpawnBasicNote(NoteData noteData, System.Single cutDirectionAngleOffset)
    // Offset: 0x1FAAE48
    void SpawnBasicNote(GlobalNamespace::NoteData* noteData, float cutDirectionAngleOffset);
    // private System.Void SpawnBombNote(NoteData noteData)
    // Offset: 0x1FAB188
    void SpawnBombNote(GlobalNamespace::NoteData* noteData);
    // private System.Void ProcessEarlyBeatmapEventData(BeatmapEventData beatmapEventData)
    // Offset: 0x1FAB2D0
    void ProcessEarlyBeatmapEventData(GlobalNamespace::BeatmapEventData* beatmapEventData);
    // private System.Void EarlyEventsWereProcessed()
    // Offset: 0x1FAB314
    void EarlyEventsWereProcessed();
    // private System.Void ProcessLateBeatmapEventData(BeatmapEventData beatmapEventData)
    // Offset: 0x1FAB580
    void ProcessLateBeatmapEventData(GlobalNamespace::BeatmapEventData* beatmapEventData);
    // private System.Void HandleBeatmapObjectCallback(BeatmapObjectData beatmapObjectData)
    // Offset: 0x1FAB59C
    void HandleBeatmapObjectCallback(GlobalNamespace::BeatmapObjectData* beatmapObjectData);
    // private System.Void HandleBeatmapEventCallback(BeatmapEventData beatmapEventData)
    // Offset: 0x1FAB5B8
    void HandleBeatmapEventCallback(GlobalNamespace::BeatmapEventData* beatmapEventData);
    // private System.Void HandleCallbacksForThisFrameWereProcessed()
    // Offset: 0x1FAB60C
    void HandleCallbacksForThisFrameWereProcessed();
    // public System.Void StopSpawning()
    // Offset: 0x1FAB628
    void StopSpawning();
    // public System.Void .ctor()
    // Offset: 0x1FAB634
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static BeatmapObjectSpawnController* New_ctor();
  }; // BeatmapObjectSpawnController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapObjectSpawnController*, "", "BeatmapObjectSpawnController");
#pragma pack(pop)
