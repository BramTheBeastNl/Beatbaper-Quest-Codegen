// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: ObstacleControllerBase
  class ObstacleControllerBase : public UnityEngine::MonoBehaviour {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xE19980
    // private System.Action`1<ObstacleControllerBase> didInitEvent
    // Size: 0x8
    // Offset: 0x18
    System::Action_1<GlobalNamespace::ObstacleControllerBase*>* didInitEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<GlobalNamespace::ObstacleControllerBase*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE19990
    // private System.Action`2<ObstacleControllerBase,System.Single> didStartDissolvingEvent
    // Size: 0x8
    // Offset: 0x20
    System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>* didStartDissolvingEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>*) == 0x8);
    // Creating value type constructor for type: ObstacleControllerBase
    ObstacleControllerBase(System::Action_1<GlobalNamespace::ObstacleControllerBase*>* didInitEvent_ = {}, System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>* didStartDissolvingEvent_ = {}) noexcept : didInitEvent{didInitEvent_}, didStartDissolvingEvent{didStartDissolvingEvent_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_didInitEvent(System.Action`1<ObstacleControllerBase> value)
    // Offset: 0x11C2C54
    void add_didInitEvent(System::Action_1<GlobalNamespace::ObstacleControllerBase*>* value);
    // public System.Void remove_didInitEvent(System.Action`1<ObstacleControllerBase> value)
    // Offset: 0x11C2CF8
    void remove_didInitEvent(System::Action_1<GlobalNamespace::ObstacleControllerBase*>* value);
    // public System.Void add_didStartDissolvingEvent(System.Action`2<ObstacleControllerBase,System.Single> value)
    // Offset: 0x11C2D9C
    void add_didStartDissolvingEvent(System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>* value);
    // public System.Void remove_didStartDissolvingEvent(System.Action`2<ObstacleControllerBase,System.Single> value)
    // Offset: 0x11C2E40
    void remove_didStartDissolvingEvent(System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>* value);
    // protected System.Void InvokeDidInitEvent(ObstacleControllerBase obstacleController)
    // Offset: 0x11C24F0
    void InvokeDidInitEvent(GlobalNamespace::ObstacleControllerBase* obstacleController);
    // protected System.Void InvokeDidStartDissolvingEvent(ObstacleControllerBase obstacleController, System.Single duration)
    // Offset: 0x11C2B0C
    void InvokeDidStartDissolvingEvent(GlobalNamespace::ObstacleControllerBase* obstacleController, float duration);
    // public System.Void .ctor()
    // Offset: 0x11C2A28
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObstacleControllerBase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleControllerBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObstacleControllerBase*, creationType>()));
    }
  }; // ObstacleControllerBase
  #pragma pack(pop)
  static check_size<sizeof(ObstacleControllerBase), 32 + sizeof(System::Action_2<GlobalNamespace::ObstacleControllerBase*, float>*)> __GlobalNamespace_ObstacleControllerBaseSizeCheck;
  static_assert(sizeof(ObstacleControllerBase) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ObstacleControllerBase*, "", "ObstacleControllerBase");
