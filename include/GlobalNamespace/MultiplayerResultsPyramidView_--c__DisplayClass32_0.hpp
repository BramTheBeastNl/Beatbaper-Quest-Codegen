// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsPyramidView
#include "GlobalNamespace/MultiplayerResultsPyramidView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MultiplayerResultsPyramidView/<>c__DisplayClass32_0
  // [] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: D1C970
  class MultiplayerResultsPyramidView::$$c__DisplayClass32_0 : public ::Il2CppObject {
    public:
    // public System.Int32 x
    // Size: 0x4
    // Offset: 0x10
    int x;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: x and: $$4__this
    char __padding0[0x4] = {};
    // public MultiplayerResultsPyramidView <>4__this
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::MultiplayerResultsPyramidView* $$4__this;
    // Field size check
    static_assert(sizeof(GlobalNamespace::MultiplayerResultsPyramidView*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass32_0
    $$c__DisplayClass32_0(int x_ = {}, GlobalNamespace::MultiplayerResultsPyramidView* $$4__this_ = {}) noexcept : x{x_}, $$4__this{$$4__this_} {}
    // System.Void <AnimateNotes>b__0(UnityEngine.Vector3 val)
    // Offset: 0xF326F8
    void $AnimateNotes$b__0(UnityEngine::Vector3 val);
    // public System.Void .ctor()
    // Offset: 0xF32570
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerResultsPyramidView::$$c__DisplayClass32_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsPyramidView::$$c__DisplayClass32_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerResultsPyramidView::$$c__DisplayClass32_0*, creationType>()));
    }
  }; // MultiplayerResultsPyramidView/<>c__DisplayClass32_0
  #pragma pack(pop)
  static check_size<sizeof(MultiplayerResultsPyramidView::$$c__DisplayClass32_0), 24 + sizeof(GlobalNamespace::MultiplayerResultsPyramidView*)> __GlobalNamespace_MultiplayerResultsPyramidView_$$c__DisplayClass32_0SizeCheck;
  static_assert(sizeof(MultiplayerResultsPyramidView::$$c__DisplayClass32_0) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerResultsPyramidView::$$c__DisplayClass32_0*, "", "MultiplayerResultsPyramidView/<>c__DisplayClass32_0");
