// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: SongPreviewPlayer/AudioSourceParams
  class SongPreviewPlayer::AudioSourceParams : public ::Il2CppObject {
    public:
    // private UnityEngine.Vector3 _position
    // Size: 0xC
    // Offset: 0x10
    UnityEngine::Vector3 position;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector3) == 0xC);
    // [RangeAttribute] Offset: 0xE29BAC
    // private System.Single _reverbZoneMix
    // Size: 0x4
    // Offset: 0x1C
    float reverbZoneMix;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xE29BF0
    // private System.Single _spatialBlend
    // Size: 0x4
    // Offset: 0x20
    float spatialBlend;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xE29C30
    // private System.Single _spread
    // Size: 0x4
    // Offset: 0x24
    float spread;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: AudioSourceParams
    AudioSourceParams(UnityEngine::Vector3 position_ = {}, float reverbZoneMix_ = {}, float spatialBlend_ = {}, float spread_ = {}) noexcept : position{position_}, reverbZoneMix{reverbZoneMix_}, spatialBlend{spatialBlend_}, spread{spread_} {}
    // public UnityEngine.Vector3 get_position()
    // Offset: 0x1173BEC
    UnityEngine::Vector3 get_position();
    // public System.Single get_reverbZoneMix()
    // Offset: 0x1173BF8
    float get_reverbZoneMix();
    // public System.Single get_spatialBlend()
    // Offset: 0x1173C00
    float get_spatialBlend();
    // public System.Single get_spread()
    // Offset: 0x1173C08
    float get_spread();
    // public System.Void .ctor()
    // Offset: 0x1173C10
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SongPreviewPlayer::AudioSourceParams* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SongPreviewPlayer::AudioSourceParams*, creationType>()));
    }
  }; // SongPreviewPlayer/AudioSourceParams
  #pragma pack(pop)
  static check_size<sizeof(SongPreviewPlayer::AudioSourceParams), 36 + sizeof(float)> __GlobalNamespace_SongPreviewPlayer_AudioSourceParamsSizeCheck;
  static_assert(sizeof(SongPreviewPlayer::AudioSourceParams) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SongPreviewPlayer::AudioSourceParams*, "", "SongPreviewPlayer/AudioSourceParams");
