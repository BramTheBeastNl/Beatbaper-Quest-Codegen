// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: AudioSourceParams
  class AudioSourceParams;
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(GlobalNamespace::SongPreviewPlayer::AudioSourceParams);
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SongPreviewPlayer::AudioSourceParams*, "", "SongPreviewPlayer/AudioSourceParams");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: SongPreviewPlayer/AudioSourceParams
  // [TokenAttribute] Offset: FFFFFFFF
  class SongPreviewPlayer::AudioSourceParams : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    protected:
    #endif
    // private UnityEngine.Vector3 _position
    // Size: 0xC
    // Offset: 0x10
    UnityEngine::Vector3 position;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector3) == 0xC);
    // [RangeAttribute] Offset: 0xF153B8
    // private System.Single _reverbZoneMix
    // Size: 0x4
    // Offset: 0x1C
    float reverbZoneMix;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xF153FC
    // private System.Single _spatialBlend
    // Size: 0x4
    // Offset: 0x20
    float spatialBlend;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xF1543C
    // private System.Single _spread
    // Size: 0x4
    // Offset: 0x24
    float spread;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.Vector3 _position
    UnityEngine::Vector3& dyn__position();
    // Get instance field reference: private System.Single _reverbZoneMix
    float& dyn__reverbZoneMix();
    // Get instance field reference: private System.Single _spatialBlend
    float& dyn__spatialBlend();
    // Get instance field reference: private System.Single _spread
    float& dyn__spread();
    // public UnityEngine.Vector3 get_position()
    // Offset: 0x1149AE0
    UnityEngine::Vector3 get_position();
    // public System.Single get_reverbZoneMix()
    // Offset: 0x1149AEC
    float get_reverbZoneMix();
    // public System.Single get_spatialBlend()
    // Offset: 0x1149AF4
    float get_spatialBlend();
    // public System.Single get_spread()
    // Offset: 0x1149AFC
    float get_spread();
    // public System.Void .ctor()
    // Offset: 0x1149B04
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SongPreviewPlayer::AudioSourceParams* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SongPreviewPlayer::AudioSourceParams*, creationType>()));
    }
  }; // SongPreviewPlayer/AudioSourceParams
  #pragma pack(pop)
  static check_size<sizeof(SongPreviewPlayer::AudioSourceParams), 36 + sizeof(float)> __GlobalNamespace_SongPreviewPlayer_AudioSourceParamsSizeCheck;
  static_assert(sizeof(SongPreviewPlayer::AudioSourceParams) == 0x28);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_position
// Il2CppName: get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (GlobalNamespace::SongPreviewPlayer::AudioSourceParams::*)()>(&GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPreviewPlayer::AudioSourceParams*), "get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_reverbZoneMix
// Il2CppName: get_reverbZoneMix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::SongPreviewPlayer::AudioSourceParams::*)()>(&GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_reverbZoneMix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPreviewPlayer::AudioSourceParams*), "get_reverbZoneMix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spatialBlend
// Il2CppName: get_spatialBlend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::SongPreviewPlayer::AudioSourceParams::*)()>(&GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spatialBlend)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPreviewPlayer::AudioSourceParams*), "get_spatialBlend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spread
// Il2CppName: get_spread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::SongPreviewPlayer::AudioSourceParams::*)()>(&GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spread)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPreviewPlayer::AudioSourceParams*), "get_spread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPreviewPlayer::AudioSourceParams::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
