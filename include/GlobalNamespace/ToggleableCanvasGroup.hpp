// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: CanvasGroup
  class CanvasGroup;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Toggle
  class Toggle;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x29
  // Autogenerated type: ToggleableCanvasGroup
  // [] Offset: FFFFFFFF
  // [RequireComponent] Offset: DA5A08
  class ToggleableCanvasGroup : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.CanvasGroup _canvasGroup
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::CanvasGroup* canvasGroup;
    // Field size check
    static_assert(sizeof(UnityEngine::CanvasGroup*) == 0x8);
    // private UnityEngine.UI.Toggle _toggle
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::UI::Toggle* toggle;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Toggle*) == 0x8);
    // [SpaceAttribute] Offset: 0xDA65A0
    // private System.Boolean _invertToggle
    // Size: 0x1
    // Offset: 0x28
    bool invertToggle;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: ToggleableCanvasGroup
    ToggleableCanvasGroup(UnityEngine::CanvasGroup* canvasGroup_ = {}, UnityEngine::UI::Toggle* toggle_ = {}, bool invertToggle_ = {}) noexcept : canvasGroup{canvasGroup_}, toggle{toggle_}, invertToggle{invertToggle_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void OnEnable()
    // Offset: 0x1983B20
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x1983C0C
    void OnDisable();
    // private System.Void HandleToggleValueChanged(System.Boolean isOn)
    // Offset: 0x1983CB0
    void HandleToggleValueChanged(bool isOn);
    // private System.Void SetCanvasGroupData(System.Boolean isOn)
    // Offset: 0x1983BD8
    void SetCanvasGroupData(bool isOn);
    // public System.Void .ctor()
    // Offset: 0x1983CB8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ToggleableCanvasGroup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ToggleableCanvasGroup").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ToggleableCanvasGroup*, creationType>()));
    }
  }; // ToggleableCanvasGroup
  static check_size<sizeof(ToggleableCanvasGroup), 40 + sizeof(bool)> __GlobalNamespace_ToggleableCanvasGroupSizeCheck;
  static_assert(sizeof(ToggleableCanvasGroup) == 0x29);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ToggleableCanvasGroup*, "", "ToggleableCanvasGroup");
#pragma pack(pop)
