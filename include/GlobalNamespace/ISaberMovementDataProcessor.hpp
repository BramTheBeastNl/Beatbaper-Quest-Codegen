// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BladeMovementDataElement
  struct BladeMovementDataElement;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: ISaberMovementDataProcessor
  class ISaberMovementDataProcessor {
    public:
    // Creating value type constructor for type: ISaberMovementDataProcessor
    ISaberMovementDataProcessor() noexcept {}
    // public System.Void ProcessNewData(BladeMovementDataElement newData, BladeMovementDataElement prevData, System.Boolean prevDataAreValid)
    // Offset: 0xFFFFFFFF
    void ProcessNewData(GlobalNamespace::BladeMovementDataElement newData, GlobalNamespace::BladeMovementDataElement prevData, bool prevDataAreValid);
  }; // ISaberMovementDataProcessor
  #pragma pack(pop)
  // Writing MetadataGetter for method: ISaberMovementDataProcessor::ProcessNewData
  // Il2CppName: ProcessNewData
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISaberMovementDataProcessor::*)(GlobalNamespace::BladeMovementDataElement, GlobalNamespace::BladeMovementDataElement, bool)>(&ISaberMovementDataProcessor::ProcessNewData)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ISaberMovementDataProcessor*), "ProcessNewData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BladeMovementDataElement>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BladeMovementDataElement>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ISaberMovementDataProcessor*, "", "ISaberMovementDataProcessor");
