// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FireworkItemController
#include "GlobalNamespace/FireworkItemController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: ParticleSystem
  class ParticleSystem;
  // Forward declaring type: Gradient
  class Gradient;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: FireworkItemController/FireworkItemParticleSystem
  // [TokenAttribute] Offset: FFFFFFFF
  class FireworkItemController::FireworkItemParticleSystem : public ::Il2CppObject {
    public:
    // public UnityEngine.ParticleSystem _particleSystem
    // Size: 0x8
    // Offset: 0x10
    UnityEngine::ParticleSystem* particleSystem;
    // Field size check
    static_assert(sizeof(UnityEngine::ParticleSystem*) == 0x8);
    // public System.Boolean _isSubemitter
    // Size: 0x1
    // Offset: 0x18
    bool isSubemitter;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean _useMainColor
    // Size: 0x1
    // Offset: 0x19
    bool useMainColor;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [DrawIfAttribute] Offset: 0xE1436C
    // public System.Boolean _useOwnGradient
    // Size: 0x1
    // Offset: 0x1A
    bool useOwnGradient;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: useOwnGradient and: particleColorGradient
    char __padding3[0x5] = {};
    // [DrawIfAttribute] Offset: 0xE14400
    // public UnityEngine.Gradient _particleColorGradient
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::Gradient* particleColorGradient;
    // Field size check
    static_assert(sizeof(UnityEngine::Gradient*) == 0x8);
    // public System.Boolean _randomizeSpeed
    // Size: 0x1
    // Offset: 0x28
    bool randomizeSpeed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: FireworkItemParticleSystem
    FireworkItemParticleSystem(UnityEngine::ParticleSystem* particleSystem_ = {}, bool isSubemitter_ = {}, bool useMainColor_ = {}, bool useOwnGradient_ = {}, UnityEngine::Gradient* particleColorGradient_ = {}, bool randomizeSpeed_ = {}) noexcept : particleSystem{particleSystem_}, isSubemitter{isSubemitter_}, useMainColor{useMainColor_}, useOwnGradient{useOwnGradient_}, particleColorGradient{particleColorGradient_}, randomizeSpeed{randomizeSpeed_} {}
    // Get instance field: public UnityEngine.ParticleSystem _particleSystem
    UnityEngine::ParticleSystem* _get__particleSystem();
    // Set instance field: public UnityEngine.ParticleSystem _particleSystem
    void _set__particleSystem(UnityEngine::ParticleSystem* value);
    // Get instance field: public System.Boolean _isSubemitter
    bool _get__isSubemitter();
    // Set instance field: public System.Boolean _isSubemitter
    void _set__isSubemitter(bool value);
    // Get instance field: public System.Boolean _useMainColor
    bool _get__useMainColor();
    // Set instance field: public System.Boolean _useMainColor
    void _set__useMainColor(bool value);
    // Get instance field: public System.Boolean _useOwnGradient
    bool _get__useOwnGradient();
    // Set instance field: public System.Boolean _useOwnGradient
    void _set__useOwnGradient(bool value);
    // Get instance field: public UnityEngine.Gradient _particleColorGradient
    UnityEngine::Gradient* _get__particleColorGradient();
    // Set instance field: public UnityEngine.Gradient _particleColorGradient
    void _set__particleColorGradient(UnityEngine::Gradient* value);
    // Get instance field: public System.Boolean _randomizeSpeed
    bool _get__randomizeSpeed();
    // Set instance field: public System.Boolean _randomizeSpeed
    void _set__randomizeSpeed(bool value);
    // public System.Void .ctor()
    // Offset: 0x1028678
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FireworkItemController::FireworkItemParticleSystem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FireworkItemController::FireworkItemParticleSystem*, creationType>()));
    }
  }; // FireworkItemController/FireworkItemParticleSystem
  #pragma pack(pop)
  static check_size<sizeof(FireworkItemController::FireworkItemParticleSystem), 40 + sizeof(bool)> __GlobalNamespace_FireworkItemController_FireworkItemParticleSystemSizeCheck;
  static_assert(sizeof(FireworkItemController::FireworkItemParticleSystem) == 0x29);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::FireworkItemController::FireworkItemParticleSystem*, "", "FireworkItemController/FireworkItemParticleSystem");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
