// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: LevelCompletionResults
  class LevelCompletionResults;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: PlayerAllOverallStatsData/PlayerOverallStatsData
  class PlayerAllOverallStatsData::PlayerOverallStatsData : public ::Il2CppObject {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xE2A2B0
    // private System.Int32 <goodCutsCount>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int goodCutsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xE2A2C0
    // private System.Int32 <badCutsCount>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    int badCutsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xE2A2D0
    // private System.Int32 <missedCutsCount>k__BackingField
    // Size: 0x4
    // Offset: 0x18
    int missedCutsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: missedCutsCount and: totalScore
    char __padding2[0x4] = {};
    // [CompilerGeneratedAttribute] Offset: 0xE2A2E0
    // private System.Int64 <totalScore>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    int64_t totalScore;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE2A2F0
    // private System.Int32 <playedLevelsCount>k__BackingField
    // Size: 0x4
    // Offset: 0x28
    int playedLevelsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xE2A300
    // private System.Int32 <cleardLevelsCount>k__BackingField
    // Size: 0x4
    // Offset: 0x2C
    int cleardLevelsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xE2A310
    // private System.Int32 <failedLevelsCount>k__BackingField
    // Size: 0x4
    // Offset: 0x30
    int failedLevelsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xE2A320
    // private System.Int32 <fullComboCount>k__BackingField
    // Size: 0x4
    // Offset: 0x34
    int fullComboCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xE2A330
    // private System.Single <timePlayed>k__BackingField
    // Size: 0x4
    // Offset: 0x38
    float timePlayed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xE2A340
    // private System.Int32 <handDistanceTravelled>k__BackingField
    // Size: 0x4
    // Offset: 0x3C
    int handDistanceTravelled;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xE2A350
    // private System.Int64 <cummulativeCutScoreWithoutMultiplier>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    int64_t cummulativeCutScoreWithoutMultiplier;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // Creating value type constructor for type: PlayerOverallStatsData
    PlayerOverallStatsData(int goodCutsCount_ = {}, int badCutsCount_ = {}, int missedCutsCount_ = {}, int64_t totalScore_ = {}, int playedLevelsCount_ = {}, int cleardLevelsCount_ = {}, int failedLevelsCount_ = {}, int fullComboCount_ = {}, float timePlayed_ = {}, int handDistanceTravelled_ = {}, int64_t cummulativeCutScoreWithoutMultiplier_ = {}) noexcept : goodCutsCount{goodCutsCount_}, badCutsCount{badCutsCount_}, missedCutsCount{missedCutsCount_}, totalScore{totalScore_}, playedLevelsCount{playedLevelsCount_}, cleardLevelsCount{cleardLevelsCount_}, failedLevelsCount{failedLevelsCount_}, fullComboCount{fullComboCount_}, timePlayed{timePlayed_}, handDistanceTravelled{handDistanceTravelled_}, cummulativeCutScoreWithoutMultiplier{cummulativeCutScoreWithoutMultiplier_} {}
    // public System.Int32 get_goodCutsCount()
    // Offset: 0x10537FC
    int get_goodCutsCount();
    // private System.Void set_goodCutsCount(System.Int32 value)
    // Offset: 0x1053804
    void set_goodCutsCount(int value);
    // public System.Int32 get_badCutsCount()
    // Offset: 0x105380C
    int get_badCutsCount();
    // private System.Void set_badCutsCount(System.Int32 value)
    // Offset: 0x1053814
    void set_badCutsCount(int value);
    // public System.Int32 get_missedCutsCount()
    // Offset: 0x105381C
    int get_missedCutsCount();
    // private System.Void set_missedCutsCount(System.Int32 value)
    // Offset: 0x1053824
    void set_missedCutsCount(int value);
    // public System.Int64 get_totalScore()
    // Offset: 0x105382C
    int64_t get_totalScore();
    // private System.Void set_totalScore(System.Int64 value)
    // Offset: 0x1053834
    void set_totalScore(int64_t value);
    // public System.Int32 get_playedLevelsCount()
    // Offset: 0x105383C
    int get_playedLevelsCount();
    // private System.Void set_playedLevelsCount(System.Int32 value)
    // Offset: 0x1053844
    void set_playedLevelsCount(int value);
    // public System.Int32 get_cleardLevelsCount()
    // Offset: 0x105384C
    int get_cleardLevelsCount();
    // private System.Void set_cleardLevelsCount(System.Int32 value)
    // Offset: 0x1053854
    void set_cleardLevelsCount(int value);
    // public System.Int32 get_failedLevelsCount()
    // Offset: 0x105385C
    int get_failedLevelsCount();
    // private System.Void set_failedLevelsCount(System.Int32 value)
    // Offset: 0x1053864
    void set_failedLevelsCount(int value);
    // public System.Int32 get_fullComboCount()
    // Offset: 0x105386C
    int get_fullComboCount();
    // private System.Void set_fullComboCount(System.Int32 value)
    // Offset: 0x1053874
    void set_fullComboCount(int value);
    // public System.Single get_timePlayed()
    // Offset: 0x105387C
    float get_timePlayed();
    // private System.Void set_timePlayed(System.Single value)
    // Offset: 0x1053884
    void set_timePlayed(float value);
    // public System.Int32 get_handDistanceTravelled()
    // Offset: 0x105388C
    int get_handDistanceTravelled();
    // private System.Void set_handDistanceTravelled(System.Int32 value)
    // Offset: 0x1053894
    void set_handDistanceTravelled(int value);
    // public System.Int64 get_cummulativeCutScoreWithoutMultiplier()
    // Offset: 0x105389C
    int64_t get_cummulativeCutScoreWithoutMultiplier();
    // private System.Void set_cummulativeCutScoreWithoutMultiplier(System.Int64 value)
    // Offset: 0x10538A4
    void set_cummulativeCutScoreWithoutMultiplier(int64_t value);
    // public System.Int32 get_averageCutScore()
    // Offset: 0x10538AC
    int get_averageCutScore();
    // public System.Void .ctor(System.Int32 goodCutsCount, System.Int32 badCutsCount, System.Int32 missedCutsCount, System.Int64 totalScore, System.Int32 playedLevelsCount, System.Int32 cleardLevelsCount, System.Int32 failedLevelsCount, System.Int32 fullComboCount, System.Single timePlayed, System.Int32 handDistanceTravelled, System.Int64 cummulativeCutScoreWithoutMultiplier)
    // Offset: 0x10538CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerAllOverallStatsData::PlayerOverallStatsData* New_ctor(int goodCutsCount, int badCutsCount, int missedCutsCount, int64_t totalScore, int playedLevelsCount, int cleardLevelsCount, int failedLevelsCount, int fullComboCount, float timePlayed, int handDistanceTravelled, int64_t cummulativeCutScoreWithoutMultiplier) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerAllOverallStatsData::PlayerOverallStatsData*, creationType>(goodCutsCount, badCutsCount, missedCutsCount, totalScore, playedLevelsCount, cleardLevelsCount, failedLevelsCount, fullComboCount, timePlayed, handDistanceTravelled, cummulativeCutScoreWithoutMultiplier)));
    }
    // public System.Void UpdateWithLevelCompletionResults(LevelCompletionResults levelCompletionResults)
    // Offset: 0x1053640
    void UpdateWithLevelCompletionResults(GlobalNamespace::LevelCompletionResults* levelCompletionResults);
    // public System.Void .ctor()
    // Offset: 0x105355C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerAllOverallStatsData::PlayerOverallStatsData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerAllOverallStatsData::PlayerOverallStatsData*, creationType>()));
    }
  }; // PlayerAllOverallStatsData/PlayerOverallStatsData
  #pragma pack(pop)
  static check_size<sizeof(PlayerAllOverallStatsData::PlayerOverallStatsData), 64 + sizeof(int64_t)> __GlobalNamespace_PlayerAllOverallStatsData_PlayerOverallStatsDataSizeCheck;
  static_assert(sizeof(PlayerAllOverallStatsData::PlayerOverallStatsData) == 0x48);
  // static public PlayerAllOverallStatsData/PlayerOverallStatsData op_Addition(PlayerAllOverallStatsData/PlayerOverallStatsData a, PlayerAllOverallStatsData/PlayerOverallStatsData b)
  // Offset: 0x1052F5C
  GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* operator+(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* a, GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData& b);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, "", "PlayerAllOverallStatsData/PlayerOverallStatsData");
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_goodCutsCount
// Il2CppName: get_goodCutsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_goodCutsCount
// Il2CppName: set_goodCutsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_badCutsCount
// Il2CppName: get_badCutsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_badCutsCount
// Il2CppName: set_badCutsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_missedCutsCount
// Il2CppName: get_missedCutsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_missedCutsCount
// Il2CppName: set_missedCutsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_totalScore
// Il2CppName: get_totalScore
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_totalScore
// Il2CppName: set_totalScore
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_playedLevelsCount
// Il2CppName: get_playedLevelsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_playedLevelsCount
// Il2CppName: set_playedLevelsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_cleardLevelsCount
// Il2CppName: get_cleardLevelsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_cleardLevelsCount
// Il2CppName: set_cleardLevelsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_failedLevelsCount
// Il2CppName: get_failedLevelsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_failedLevelsCount
// Il2CppName: set_failedLevelsCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_fullComboCount
// Il2CppName: get_fullComboCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_fullComboCount
// Il2CppName: set_fullComboCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_timePlayed
// Il2CppName: get_timePlayed
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_timePlayed
// Il2CppName: set_timePlayed
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_handDistanceTravelled
// Il2CppName: get_handDistanceTravelled
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_handDistanceTravelled
// Il2CppName: set_handDistanceTravelled
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_cummulativeCutScoreWithoutMultiplier
// Il2CppName: get_cummulativeCutScoreWithoutMultiplier
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_cummulativeCutScoreWithoutMultiplier
// Il2CppName: set_cummulativeCutScoreWithoutMultiplier
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_averageCutScore
// Il2CppName: get_averageCutScore
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::UpdateWithLevelCompletionResults
// Il2CppName: UpdateWithLevelCompletionResults
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::operator+
// Il2CppName: op_Addition
// Cannot perform method pointer template specialization from operators!
