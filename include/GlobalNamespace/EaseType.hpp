// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: EaseType
  struct EaseType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::EaseType, "", "EaseType");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: EaseType
  // [TokenAttribute] Offset: FFFFFFFF
  struct EaseType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: EaseType
    constexpr EaseType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public EaseType None
    static constexpr const int None = 0;
    // Get static field: static public EaseType None
    static ::GlobalNamespace::EaseType _get_None();
    // Set static field: static public EaseType None
    static void _set_None(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType Linear
    static constexpr const int Linear = 1;
    // Get static field: static public EaseType Linear
    static ::GlobalNamespace::EaseType _get_Linear();
    // Set static field: static public EaseType Linear
    static void _set_Linear(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InSine
    static constexpr const int InSine = 2;
    // Get static field: static public EaseType InSine
    static ::GlobalNamespace::EaseType _get_InSine();
    // Set static field: static public EaseType InSine
    static void _set_InSine(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutSine
    static constexpr const int OutSine = 3;
    // Get static field: static public EaseType OutSine
    static ::GlobalNamespace::EaseType _get_OutSine();
    // Set static field: static public EaseType OutSine
    static void _set_OutSine(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutSine
    static constexpr const int InOutSine = 4;
    // Get static field: static public EaseType InOutSine
    static ::GlobalNamespace::EaseType _get_InOutSine();
    // Set static field: static public EaseType InOutSine
    static void _set_InOutSine(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InQuad
    static constexpr const int InQuad = 5;
    // Get static field: static public EaseType InQuad
    static ::GlobalNamespace::EaseType _get_InQuad();
    // Set static field: static public EaseType InQuad
    static void _set_InQuad(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutQuad
    static constexpr const int OutQuad = 6;
    // Get static field: static public EaseType OutQuad
    static ::GlobalNamespace::EaseType _get_OutQuad();
    // Set static field: static public EaseType OutQuad
    static void _set_OutQuad(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutQuad
    static constexpr const int InOutQuad = 7;
    // Get static field: static public EaseType InOutQuad
    static ::GlobalNamespace::EaseType _get_InOutQuad();
    // Set static field: static public EaseType InOutQuad
    static void _set_InOutQuad(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InCubic
    static constexpr const int InCubic = 8;
    // Get static field: static public EaseType InCubic
    static ::GlobalNamespace::EaseType _get_InCubic();
    // Set static field: static public EaseType InCubic
    static void _set_InCubic(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutCubic
    static constexpr const int OutCubic = 9;
    // Get static field: static public EaseType OutCubic
    static ::GlobalNamespace::EaseType _get_OutCubic();
    // Set static field: static public EaseType OutCubic
    static void _set_OutCubic(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutCubic
    static constexpr const int InOutCubic = 10;
    // Get static field: static public EaseType InOutCubic
    static ::GlobalNamespace::EaseType _get_InOutCubic();
    // Set static field: static public EaseType InOutCubic
    static void _set_InOutCubic(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InQuart
    static constexpr const int InQuart = 11;
    // Get static field: static public EaseType InQuart
    static ::GlobalNamespace::EaseType _get_InQuart();
    // Set static field: static public EaseType InQuart
    static void _set_InQuart(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutQuart
    static constexpr const int OutQuart = 12;
    // Get static field: static public EaseType OutQuart
    static ::GlobalNamespace::EaseType _get_OutQuart();
    // Set static field: static public EaseType OutQuart
    static void _set_OutQuart(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutQuart
    static constexpr const int InOutQuart = 13;
    // Get static field: static public EaseType InOutQuart
    static ::GlobalNamespace::EaseType _get_InOutQuart();
    // Set static field: static public EaseType InOutQuart
    static void _set_InOutQuart(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InQuint
    static constexpr const int InQuint = 14;
    // Get static field: static public EaseType InQuint
    static ::GlobalNamespace::EaseType _get_InQuint();
    // Set static field: static public EaseType InQuint
    static void _set_InQuint(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutQuint
    static constexpr const int OutQuint = 15;
    // Get static field: static public EaseType OutQuint
    static ::GlobalNamespace::EaseType _get_OutQuint();
    // Set static field: static public EaseType OutQuint
    static void _set_OutQuint(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutQuint
    static constexpr const int InOutQuint = 16;
    // Get static field: static public EaseType InOutQuint
    static ::GlobalNamespace::EaseType _get_InOutQuint();
    // Set static field: static public EaseType InOutQuint
    static void _set_InOutQuint(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InExpo
    static constexpr const int InExpo = 17;
    // Get static field: static public EaseType InExpo
    static ::GlobalNamespace::EaseType _get_InExpo();
    // Set static field: static public EaseType InExpo
    static void _set_InExpo(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutExpo
    static constexpr const int OutExpo = 18;
    // Get static field: static public EaseType OutExpo
    static ::GlobalNamespace::EaseType _get_OutExpo();
    // Set static field: static public EaseType OutExpo
    static void _set_OutExpo(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutExpo
    static constexpr const int InOutExpo = 19;
    // Get static field: static public EaseType InOutExpo
    static ::GlobalNamespace::EaseType _get_InOutExpo();
    // Set static field: static public EaseType InOutExpo
    static void _set_InOutExpo(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InCirc
    static constexpr const int InCirc = 20;
    // Get static field: static public EaseType InCirc
    static ::GlobalNamespace::EaseType _get_InCirc();
    // Set static field: static public EaseType InCirc
    static void _set_InCirc(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutCirc
    static constexpr const int OutCirc = 21;
    // Get static field: static public EaseType OutCirc
    static ::GlobalNamespace::EaseType _get_OutCirc();
    // Set static field: static public EaseType OutCirc
    static void _set_OutCirc(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutCirc
    static constexpr const int InOutCirc = 22;
    // Get static field: static public EaseType InOutCirc
    static ::GlobalNamespace::EaseType _get_InOutCirc();
    // Set static field: static public EaseType InOutCirc
    static void _set_InOutCirc(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InBack
    static constexpr const int InBack = 23;
    // Get static field: static public EaseType InBack
    static ::GlobalNamespace::EaseType _get_InBack();
    // Set static field: static public EaseType InBack
    static void _set_InBack(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutBack
    static constexpr const int OutBack = 24;
    // Get static field: static public EaseType OutBack
    static ::GlobalNamespace::EaseType _get_OutBack();
    // Set static field: static public EaseType OutBack
    static void _set_OutBack(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutBack
    static constexpr const int InOutBack = 25;
    // Get static field: static public EaseType InOutBack
    static ::GlobalNamespace::EaseType _get_InOutBack();
    // Set static field: static public EaseType InOutBack
    static void _set_InOutBack(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InElastic
    static constexpr const int InElastic = 26;
    // Get static field: static public EaseType InElastic
    static ::GlobalNamespace::EaseType _get_InElastic();
    // Set static field: static public EaseType InElastic
    static void _set_InElastic(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutElastic
    static constexpr const int OutElastic = 27;
    // Get static field: static public EaseType OutElastic
    static ::GlobalNamespace::EaseType _get_OutElastic();
    // Set static field: static public EaseType OutElastic
    static void _set_OutElastic(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutElastic
    static constexpr const int InOutElastic = 28;
    // Get static field: static public EaseType InOutElastic
    static ::GlobalNamespace::EaseType _get_InOutElastic();
    // Set static field: static public EaseType InOutElastic
    static void _set_InOutElastic(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InBounce
    static constexpr const int InBounce = 29;
    // Get static field: static public EaseType InBounce
    static ::GlobalNamespace::EaseType _get_InBounce();
    // Set static field: static public EaseType InBounce
    static void _set_InBounce(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType OutBounce
    static constexpr const int OutBounce = 30;
    // Get static field: static public EaseType OutBounce
    static ::GlobalNamespace::EaseType _get_OutBounce();
    // Set static field: static public EaseType OutBounce
    static void _set_OutBounce(::GlobalNamespace::EaseType value);
    // static field const value: static public EaseType InOutBounce
    static constexpr const int InOutBounce = 31;
    // Get static field: static public EaseType InOutBounce
    static ::GlobalNamespace::EaseType _get_InOutBounce();
    // Set static field: static public EaseType InOutBounce
    static void _set_InOutBounce(::GlobalNamespace::EaseType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // EaseType
  #pragma pack(pop)
  static check_size<sizeof(EaseType), 0 + sizeof(int)> __GlobalNamespace_EaseTypeSizeCheck;
  static_assert(sizeof(EaseType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
