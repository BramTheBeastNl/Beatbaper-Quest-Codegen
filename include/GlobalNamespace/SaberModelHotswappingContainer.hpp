// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Saber
  class Saber;
  // Forward declaring type: SaberModelController
  class SaberModelController;
}
// Forward declaring namespace: SabersHotSwapping
namespace SabersHotSwapping {
  // Forward declaring type: SaberModelControllerProvider
  class SaberModelControllerProvider;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: SaberModelHotswappingContainer
  class SaberModelHotswappingContainer : public UnityEngine::MonoBehaviour {
    public:
    // private Saber _saber
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::Saber* saber;
    // Field size check
    static_assert(sizeof(GlobalNamespace::Saber*) == 0x8);
    // [InjectAttribute] Offset: 0xE14178
    // private readonly SabersHotSwapping.SaberModelControllerProvider _saberModelControllerProvider
    // Size: 0x8
    // Offset: 0x20
    SabersHotSwapping::SaberModelControllerProvider* saberModelControllerProvider;
    // Field size check
    static_assert(sizeof(SabersHotSwapping::SaberModelControllerProvider*) == 0x8);
    // private SaberModelController _saberModelController
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::SaberModelController* saberModelController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::SaberModelController*) == 0x8);
    // Creating value type constructor for type: SaberModelHotswappingContainer
    SaberModelHotswappingContainer(GlobalNamespace::Saber* saber_ = {}, SabersHotSwapping::SaberModelControllerProvider* saberModelControllerProvider_ = {}, GlobalNamespace::SaberModelController* saberModelController_ = {}) noexcept : saber{saber_}, saberModelControllerProvider{saberModelControllerProvider_}, saberModelController{saberModelController_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void Start()
    // Offset: 0x10DDF88
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x10DE1B4
    void OnDestroy();
    // private System.Void HandleControllerChanged()
    // Offset: 0x10DE2E0
    void HandleControllerChanged();
    // private System.Void InitController()
    // Offset: 0x10DE0BC
    void InitController();
    // public System.Void .ctor()
    // Offset: 0x10DE32C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SaberModelHotswappingContainer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelHotswappingContainer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SaberModelHotswappingContainer*, creationType>()));
    }
  }; // SaberModelHotswappingContainer
  #pragma pack(pop)
  static check_size<sizeof(SaberModelHotswappingContainer), 40 + sizeof(GlobalNamespace::SaberModelController*)> __GlobalNamespace_SaberModelHotswappingContainerSizeCheck;
  static_assert(sizeof(SaberModelHotswappingContainer) == 0x30);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SaberModelHotswappingContainer*, "", "SaberModelHotswappingContainer");
