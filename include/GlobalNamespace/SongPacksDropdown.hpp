// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: SimpleTextDropdown
  class SimpleTextDropdown;
  // Forward declaring type: DropdownWithTableView
  class DropdownWithTableView;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SongPackMaskModelSO
  class SongPackMaskModelSO;
  // Forward declaring type: SongPackMask
  struct SongPackMask;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: SongPacksDropdown
  // [] Offset: FFFFFFFF
  class SongPacksDropdown : public UnityEngine::MonoBehaviour {
    public:
    // private HMUI.SimpleTextDropdown _simpleTextDropdown
    // Size: 0x8
    // Offset: 0x18
    HMUI::SimpleTextDropdown* simpleTextDropdown;
    // Field size check
    static_assert(sizeof(HMUI::SimpleTextDropdown*) == 0x8);
    // [SpaceAttribute] Offset: 0xD2D290
    // private SongPackMaskModelSO _songPackMaskModel
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::SongPackMaskModelSO* songPackMaskModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::SongPackMaskModelSO*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD2D2C8
    // private System.Action`1<System.Int32> didSelectCellWithIdxEvent
    // Size: 0x8
    // Offset: 0x28
    System::Action_1<int>* didSelectCellWithIdxEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<int>*) == 0x8);
    // private System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x30
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: initialized and: songPackSerializedNames
    char __padding3[0x7] = {};
    // private System.Collections.Generic.List`1<System.String> _songPackSerializedNames
    // Size: 0x8
    // Offset: 0x38
    System::Collections::Generic::List_1<::Il2CppString*>* songPackSerializedNames;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<::Il2CppString*>*) == 0x8);
    // Creating value type constructor for type: SongPacksDropdown
    SongPacksDropdown(HMUI::SimpleTextDropdown* simpleTextDropdown_ = {}, GlobalNamespace::SongPackMaskModelSO* songPackMaskModel_ = {}, System::Action_1<int>* didSelectCellWithIdxEvent_ = {}, bool initialized_ = {}, System::Collections::Generic::List_1<::Il2CppString*>* songPackSerializedNames_ = {}) noexcept : simpleTextDropdown{simpleTextDropdown_}, songPackMaskModel{songPackMaskModel_}, didSelectCellWithIdxEvent{didSelectCellWithIdxEvent_}, initialized{initialized_}, songPackSerializedNames{songPackSerializedNames_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_didSelectCellWithIdxEvent(System.Action`1<System.Int32> value)
    // Offset: 0xF7A504
    void add_didSelectCellWithIdxEvent(System::Action_1<int>* value);
    // public System.Void remove_didSelectCellWithIdxEvent(System.Action`1<System.Int32> value)
    // Offset: 0xF7A5A8
    void remove_didSelectCellWithIdxEvent(System::Action_1<int>* value);
    // private System.Void LazyInit()
    // Offset: 0xF7A64C
    void LazyInit();
    // protected System.Void Start()
    // Offset: 0xF7A740
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0xF7A7DC
    void OnDestroy();
    // public System.Void SetOverrideSongPacks(System.Collections.Generic.List`1<System.String> songPackSerializedNames)
    // Offset: 0xF7A8B8
    void SetOverrideSongPacks(System::Collections::Generic::List_1<::Il2CppString*>* songPackSerializedNames);
    // public SongPackMask GetSelectedSongPackMask()
    // Offset: 0xF6F880
    GlobalNamespace::SongPackMask GetSelectedSongPackMask();
    // public System.Void SelectCellWithSongPackMask(SongPackMask songPackMask)
    // Offset: 0xF6FA44
    void SelectCellWithSongPackMask(GlobalNamespace::SongPackMask songPackMask);
    // private System.Int32 GetIdxForSongPackMask(SongPackMask songPackMask)
    // Offset: 0xF7A8C0
    int GetIdxForSongPackMask(GlobalNamespace::SongPackMask songPackMask);
    // private System.Void HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI.DropdownWithTableView dropdownWithTableView, System.Int32 idx)
    // Offset: 0xF7A988
    void HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx);
    // private System.String <LazyInit>b__7_0(System.String serializedName)
    // Offset: 0xF7AA04
    ::Il2CppString* $LazyInit$b__7_0(::Il2CppString* serializedName);
    // public System.Void .ctor()
    // Offset: 0xF7A9FC
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SongPacksDropdown* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SongPacksDropdown*, creationType>()));
    }
  }; // SongPacksDropdown
  #pragma pack(pop)
  static check_size<sizeof(SongPacksDropdown), 56 + sizeof(System::Collections::Generic::List_1<::Il2CppString*>*)> __GlobalNamespace_SongPacksDropdownSizeCheck;
  static_assert(sizeof(SongPacksDropdown) == 0x40);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SongPacksDropdown*, "", "SongPacksDropdown");
