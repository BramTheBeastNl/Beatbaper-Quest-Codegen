// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SongPackMaskModelSO
  class SongPackMaskModelSO;
  // Forward declaring type: SongPackMask
  struct SongPackMask;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: SimpleTextDropdown
  class SimpleTextDropdown;
  // Forward declaring type: DropdownWithTableView
  class DropdownWithTableView;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: SongPacksDropdown
  class SongPacksDropdown : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::SongPacksDropdown::$$c
    class $$c;
    // private HMUI.SimpleTextDropdown _simpleTextDropdown
    // Size: 0x8
    // Offset: 0x18
    HMUI::SimpleTextDropdown* simpleTextDropdown;
    // Field size check
    static_assert(sizeof(HMUI::SimpleTextDropdown*) == 0x8);
    // [SpaceAttribute] Offset: 0xE23E0C
    // private SongPackMaskModelSO _songPackMaskModel
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::SongPackMaskModelSO* songPackMaskModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::SongPackMaskModelSO*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE23E44
    // private System.Action`1<System.Int32> didSelectCellWithIdxEvent
    // Size: 0x8
    // Offset: 0x28
    System::Action_1<int>* didSelectCellWithIdxEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<int>*) == 0x8);
    // private System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x30
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: initialized and: songPackSerializedNames
    char __padding3[0x7] = {};
    // private System.Collections.Generic.List`1<System.String> _songPackSerializedNames
    // Size: 0x8
    // Offset: 0x38
    System::Collections::Generic::List_1<::Il2CppString*>* songPackSerializedNames;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<::Il2CppString*>*) == 0x8);
    // Creating value type constructor for type: SongPacksDropdown
    SongPacksDropdown(HMUI::SimpleTextDropdown* simpleTextDropdown_ = {}, GlobalNamespace::SongPackMaskModelSO* songPackMaskModel_ = {}, System::Action_1<int>* didSelectCellWithIdxEvent_ = {}, bool initialized_ = {}, System::Collections::Generic::List_1<::Il2CppString*>* songPackSerializedNames_ = {}) noexcept : simpleTextDropdown{simpleTextDropdown_}, songPackMaskModel{songPackMaskModel_}, didSelectCellWithIdxEvent{didSelectCellWithIdxEvent_}, initialized{initialized_}, songPackSerializedNames{songPackSerializedNames_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_didSelectCellWithIdxEvent(System.Action`1<System.Int32> value)
    // Offset: 0x11567C0
    void add_didSelectCellWithIdxEvent(System::Action_1<int>* value);
    // public System.Void remove_didSelectCellWithIdxEvent(System.Action`1<System.Int32> value)
    // Offset: 0x1156864
    void remove_didSelectCellWithIdxEvent(System::Action_1<int>* value);
    // private System.Void LazyInit()
    // Offset: 0x1156908
    void LazyInit();
    // protected System.Void Start()
    // Offset: 0x1156A64
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x1156B00
    void OnDestroy();
    // public System.Void SetOverrideSongPacks(System.Collections.Generic.List`1<System.String> songPackSerializedNames)
    // Offset: 0x1156BDC
    void SetOverrideSongPacks(System::Collections::Generic::List_1<::Il2CppString*>* songPackSerializedNames);
    // public SongPackMask GetSelectedSongPackMask()
    // Offset: 0x1156BE4
    GlobalNamespace::SongPackMask GetSelectedSongPackMask();
    // public System.Void SelectCellWithSongPackMask(SongPackMask songPackMask)
    // Offset: 0x1156C78
    void SelectCellWithSongPackMask(GlobalNamespace::SongPackMask songPackMask);
    // private System.Int32 GetIdxForSongPackMask(SongPackMask songPackMask)
    // Offset: 0x1156D38
    int GetIdxForSongPackMask(GlobalNamespace::SongPackMask songPackMask);
    // private System.Void HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI.DropdownWithTableView dropdownWithTableView, System.Int32 idx)
    // Offset: 0x1156E00
    void HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx);
    // public System.Void .ctor()
    // Offset: 0x1156E74
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SongPacksDropdown* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SongPacksDropdown*, creationType>()));
    }
  }; // SongPacksDropdown
  #pragma pack(pop)
  static check_size<sizeof(SongPacksDropdown), 56 + sizeof(System::Collections::Generic::List_1<::Il2CppString*>*)> __GlobalNamespace_SongPacksDropdownSizeCheck;
  static_assert(sizeof(SongPacksDropdown) == 0x40);
  // Writing MetadataGetter for method: SongPacksDropdown::add_didSelectCellWithIdxEvent
  // Il2CppName: add_didSelectCellWithIdxEvent
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(System::Action_1<int>*)>(&SongPacksDropdown::add_didSelectCellWithIdxEvent)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::remove_didSelectCellWithIdxEvent
  // Il2CppName: remove_didSelectCellWithIdxEvent
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(System::Action_1<int>*)>(&SongPacksDropdown::remove_didSelectCellWithIdxEvent)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::LazyInit
  // Il2CppName: LazyInit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::LazyInit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "LazyInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::Start
  // Il2CppName: Start
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::Start)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::OnDestroy
  // Il2CppName: OnDestroy
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::OnDestroy)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::SetOverrideSongPacks
  // Il2CppName: SetOverrideSongPacks
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&SongPacksDropdown::SetOverrideSongPacks)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "SetOverrideSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::GetSelectedSongPackMask
  // Il2CppName: GetSelectedSongPackMask
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SongPackMask (SongPacksDropdown::*)()>(&SongPacksDropdown::GetSelectedSongPackMask)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "GetSelectedSongPackMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::SelectCellWithSongPackMask
  // Il2CppName: SelectCellWithSongPackMask
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(GlobalNamespace::SongPackMask)>(&SongPacksDropdown::SelectCellWithSongPackMask)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "SelectCellWithSongPackMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SongPackMask>()});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::GetIdxForSongPackMask
  // Il2CppName: GetIdxForSongPackMask
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SongPacksDropdown::*)(GlobalNamespace::SongPackMask)>(&SongPacksDropdown::GetIdxForSongPackMask)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "GetIdxForSongPackMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SongPackMask>()});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx
  // Il2CppName: HandleSimpleTextDropdownDidSelectCellWithIdx
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(HMUI::DropdownWithTableView*, int)>(&SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::DropdownWithTableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: SongPacksDropdown::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SongPacksDropdown*, "", "SongPacksDropdown");
