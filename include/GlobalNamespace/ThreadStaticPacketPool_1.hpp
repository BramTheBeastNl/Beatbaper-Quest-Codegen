// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IPoolablePacket
  class IPoolablePacket;
  // Forward declaring type: PacketPool`1<T>
  template<typename T>
  class PacketPool_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: ThreadStaticPacketPool`1
  template<typename T>
  class ThreadStaticPacketPool_1 : public ::Il2CppObject {
    public:
    // Autogenerated static field getter
    // Get static field: static private PacketPool`1<T> _pool
    static GlobalNamespace::PacketPool_1<T>* _get__pool() {
      static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ThreadStaticPacketPool_1").WithContext("_get__pool");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PacketPool_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ThreadStaticPacketPool_1<T>*>::get(), "_pool"));
    }
    // Autogenerated static field setter
    // Set static field: static private PacketPool`1<T> _pool
    static void _set__pool(GlobalNamespace::PacketPool_1<T>* value) {
      static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ThreadStaticPacketPool_1").WithContext("_set__pool");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ThreadStaticPacketPool_1<T>*>::get(), "_pool", value));
    }
    // static public PacketPool`1<T> get_pool()
    // Offset: 0xFFFFFFFF
    static GlobalNamespace::PacketPool_1<T>* get_pool() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ThreadStaticPacketPool_1").WithContext("get_pool");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ThreadStaticPacketPool_1<T>*>::get(), il2cpp_utils::NoArgClass<GlobalNamespace::PacketPool_1<T>*>(), "get_pool", {}, ::il2cpp_utils::ExtractTypes())));
      return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<T>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
    }
    // static private System.Void NoDomainReloadInit()
    // Offset: 0xFFFFFFFF
    static void NoDomainReloadInit() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ThreadStaticPacketPool_1").WithContext("NoDomainReloadInit");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ThreadStaticPacketPool_1<T>*>::get(), il2cpp_utils::NoArgClass<void>(), "NoDomainReloadInit", {}, ::il2cpp_utils::ExtractTypes())));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
    }
  }; // ThreadStaticPacketPool`1
  // Could not write size check! Type: ThreadStaticPacketPool`1 is generic!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::ThreadStaticPacketPool_1, "", "ThreadStaticPacketPool`1");
#pragma pack(pop)
