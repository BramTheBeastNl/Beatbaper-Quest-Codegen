// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SkinColorSO
  class SkinColorSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  // Autogenerated type: SkinColorSetSO
  // [] Offset: FFFFFFFF
  class SkinColorSetSO : public GlobalNamespace::PersistentScriptableObject {
    public:
    // private SkinColorSO[] _colors
    // Size: 0x8
    // Offset: 0x18
    ::Array<GlobalNamespace::SkinColorSO*>* colors;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::SkinColorSO*>*) == 0x8);
    // Creating value type constructor for type: SkinColorSetSO
    SkinColorSetSO(::Array<GlobalNamespace::SkinColorSO*>* colors_ = {}) noexcept : colors{colors_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public SkinColorSO[] get_colors()
    // Offset: 0xF38AE0
    ::Array<GlobalNamespace::SkinColorSO*>* get_colors();
    // public System.Void .ctor()
    // Offset: 0xF38AE8
    // Implemented from: PersistentScriptableObject
    // Base method: System.Void PersistentScriptableObject::.ctor()
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SkinColorSetSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkinColorSetSO").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SkinColorSetSO*, creationType>()));
    }
  }; // SkinColorSetSO
  static check_size<sizeof(SkinColorSetSO), 24 + sizeof(::Array<GlobalNamespace::SkinColorSO*>*)> __GlobalNamespace_SkinColorSetSOSizeCheck;
  static_assert(sizeof(SkinColorSetSO) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SkinColorSetSO*, "", "SkinColorSetSO");
#pragma pack(pop)
