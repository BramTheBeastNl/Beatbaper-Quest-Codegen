// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: SelectableStateController
#include "GlobalNamespace/SelectableStateController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: SelectableStateController`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class SelectableStateController_1 : public GlobalNamespace::SelectableStateController {
    public:
    // protected T _component
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    T component;
    // Creating value type constructor for type: SelectableStateController_1
    SelectableStateController_1(T component_ = {}) noexcept : component{component_} {}
    // Autogenerated instance field getter
    // Get instance field: protected T _component
    T _get__component() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController_1::_get__component");
      static auto ___internal__instance = this;
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<T>(___internal__instance, "_component"));
    }
    // Autogenerated instance field setter
    // Set instance field: protected T _component
    void _set__component(T value) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController_1::_set__component");
      static auto ___internal__instance = this;
      THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_component", value));
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: SelectableStateController
    // Base method: System.Void SelectableStateController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SelectableStateController_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SelectableStateController_1<T>*, creationType>()));
    }
  }; // SelectableStateController`1
  // Could not write size check! Type: SelectableStateController`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::SelectableStateController_1, "", "SelectableStateController`1");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
