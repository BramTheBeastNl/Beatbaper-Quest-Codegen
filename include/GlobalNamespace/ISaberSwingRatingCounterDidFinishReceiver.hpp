// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ISaberSwingRatingCounter
  class ISaberSwingRatingCounter;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: ISaberSwingRatingCounterDidFinishReceiver
  class ISaberSwingRatingCounterDidFinishReceiver {
    public:
    // Creating value type constructor for type: ISaberSwingRatingCounterDidFinishReceiver
    ISaberSwingRatingCounterDidFinishReceiver() noexcept {}
    // public System.Void HandleSaberSwingRatingCounterDidFinish(ISaberSwingRatingCounter saberSwingRatingCounter)
    // Offset: 0xFFFFFFFF
    void HandleSaberSwingRatingCounterDidFinish(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter);
  }; // ISaberSwingRatingCounterDidFinishReceiver
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver*, "", "ISaberSwingRatingCounterDidFinishReceiver");
// Writing MetadataGetter for method: ISaberSwingRatingCounterDidFinishReceiver::HandleSaberSwingRatingCounterDidFinish
// Il2CppName: HandleSaberSwingRatingCounterDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISaberSwingRatingCounterDidFinishReceiver::*)(GlobalNamespace::ISaberSwingRatingCounter*)>(&ISaberSwingRatingCounterDidFinishReceiver::HandleSaberSwingRatingCounterDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISaberSwingRatingCounterDidFinishReceiver*), "HandleSaberSwingRatingCounterDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ISaberSwingRatingCounter*>()});
  }
};
