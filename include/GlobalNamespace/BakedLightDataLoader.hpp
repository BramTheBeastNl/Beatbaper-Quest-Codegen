// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: LightmapDataSO
  class LightmapDataSO;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: BakedLightDataLoader
  // [ExecuteAlways] Offset: E11230
  class BakedLightDataLoader : public UnityEngine::MonoBehaviour {
    public:
    // [NullAllowed] Offset: 0xE27C90
    // private LightmapDataSO _lightmapData
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::LightmapDataSO* lightmapData;
    // Field size check
    static_assert(sizeof(GlobalNamespace::LightmapDataSO*) == 0x8);
    // private UnityEngine.Texture2D _blackTexture
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::Texture2D* blackTexture;
    // Field size check
    static_assert(sizeof(UnityEngine::Texture2D*) == 0x8);
    // Creating value type constructor for type: BakedLightDataLoader
    BakedLightDataLoader(GlobalNamespace::LightmapDataSO* lightmapData_ = {}, UnityEngine::Texture2D* blackTexture_ = {}) noexcept : lightmapData{lightmapData_}, blackTexture{blackTexture_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE27CCC
    // Get static field: static private readonly System.Int32 _lightMap1PropertyId
    static int _get__lightMap1PropertyId();
    // Set static field: static private readonly System.Int32 _lightMap1PropertyId
    static void _set__lightMap1PropertyId(int value);
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE27CDC
    // Get static field: static private readonly System.Int32 _lightMap2PropertyId
    static int _get__lightMap2PropertyId();
    // Set static field: static private readonly System.Int32 _lightMap2PropertyId
    static void _set__lightMap2PropertyId(int value);
    // public LightmapDataSO get_lightmapData()
    // Offset: 0x119C810
    GlobalNamespace::LightmapDataSO* get_lightmapData();
    // public System.Void set_lightmapData(LightmapDataSO value)
    // Offset: 0x119C818
    void set_lightmapData(GlobalNamespace::LightmapDataSO* value);
    // protected System.Void Start()
    // Offset: 0x119C820
    void Start();
    // private System.Void SetTextureDataToShaders()
    // Offset: 0x119C8D8
    void SetTextureDataToShaders();
    // public System.Void .ctor()
    // Offset: 0x119CA38
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BakedLightDataLoader* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BakedLightDataLoader*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x119CA40
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // BakedLightDataLoader
  #pragma pack(pop)
  static check_size<sizeof(BakedLightDataLoader), 32 + sizeof(UnityEngine::Texture2D*)> __GlobalNamespace_BakedLightDataLoaderSizeCheck;
  static_assert(sizeof(BakedLightDataLoader) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BakedLightDataLoader*, "", "BakedLightDataLoader");
