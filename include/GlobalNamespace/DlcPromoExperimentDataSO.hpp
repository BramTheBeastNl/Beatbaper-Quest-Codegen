// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ExperimentDefinitionSO
  class ExperimentDefinitionSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: DlcPromoExperimentDataSO
  class DlcPromoExperimentDataSO : public UnityEngine::ScriptableObject {
    public:
    // Nested type: GlobalNamespace::DlcPromoExperimentDataSO::MusicPackPromoInfo
    class MusicPackPromoInfo;
    // private DlcPromoExperimentDataSO/MusicPackPromoInfo[] _musicPackPromoInfos
    // Size: 0x8
    // Offset: 0x18
    ::Array<GlobalNamespace::DlcPromoExperimentDataSO::MusicPackPromoInfo*>* musicPackPromoInfos;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::DlcPromoExperimentDataSO::MusicPackPromoInfo*>*) == 0x8);
    // private ExperimentDefinitionSO _aaTestExperimentDefinition
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::ExperimentDefinitionSO* aaTestExperimentDefinition;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ExperimentDefinitionSO*) == 0x8);
    // private ExperimentDefinitionSO _abTestExperimentDefinition
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::ExperimentDefinitionSO* abTestExperimentDefinition;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ExperimentDefinitionSO*) == 0x8);
    // Creating value type constructor for type: DlcPromoExperimentDataSO
    DlcPromoExperimentDataSO(::Array<GlobalNamespace::DlcPromoExperimentDataSO::MusicPackPromoInfo*>* musicPackPromoInfos_ = {}, GlobalNamespace::ExperimentDefinitionSO* aaTestExperimentDefinition_ = {}, GlobalNamespace::ExperimentDefinitionSO* abTestExperimentDefinition_ = {}) noexcept : musicPackPromoInfos{musicPackPromoInfos_}, aaTestExperimentDefinition{aaTestExperimentDefinition_}, abTestExperimentDefinition{abTestExperimentDefinition_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public DlcPromoExperimentDataSO/MusicPackPromoInfo[] get_musicPackPromoInfos()
    // Offset: 0x1036268
    ::Array<GlobalNamespace::DlcPromoExperimentDataSO::MusicPackPromoInfo*>* get_musicPackPromoInfos();
    // public ExperimentDefinitionSO get_aaTestExperimentDefinition()
    // Offset: 0x1036270
    GlobalNamespace::ExperimentDefinitionSO* get_aaTestExperimentDefinition();
    // public ExperimentDefinitionSO get_abTestExperimentDefinition()
    // Offset: 0x1036278
    GlobalNamespace::ExperimentDefinitionSO* get_abTestExperimentDefinition();
    // public System.Void .ctor()
    // Offset: 0x1036280
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DlcPromoExperimentDataSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentDataSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DlcPromoExperimentDataSO*, creationType>()));
    }
  }; // DlcPromoExperimentDataSO
  #pragma pack(pop)
  static check_size<sizeof(DlcPromoExperimentDataSO), 40 + sizeof(GlobalNamespace::ExperimentDefinitionSO*)> __GlobalNamespace_DlcPromoExperimentDataSOSizeCheck;
  static_assert(sizeof(DlcPromoExperimentDataSO) == 0x30);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::DlcPromoExperimentDataSO*, "", "DlcPromoExperimentDataSO");
// Writing MetadataGetter for method: GlobalNamespace::DlcPromoExperimentDataSO::get_musicPackPromoInfos
// Il2CppName: get_musicPackPromoInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::DlcPromoExperimentDataSO::MusicPackPromoInfo*>* (GlobalNamespace::DlcPromoExperimentDataSO::*)()>(&GlobalNamespace::DlcPromoExperimentDataSO::get_musicPackPromoInfos)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::DlcPromoExperimentDataSO*), "get_musicPackPromoInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::DlcPromoExperimentDataSO::get_aaTestExperimentDefinition
// Il2CppName: get_aaTestExperimentDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ExperimentDefinitionSO* (GlobalNamespace::DlcPromoExperimentDataSO::*)()>(&GlobalNamespace::DlcPromoExperimentDataSO::get_aaTestExperimentDefinition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::DlcPromoExperimentDataSO*), "get_aaTestExperimentDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::DlcPromoExperimentDataSO::get_abTestExperimentDefinition
// Il2CppName: get_abTestExperimentDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ExperimentDefinitionSO* (GlobalNamespace::DlcPromoExperimentDataSO::*)()>(&GlobalNamespace::DlcPromoExperimentDataSO::get_abTestExperimentDefinition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::DlcPromoExperimentDataSO*), "get_abTestExperimentDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::DlcPromoExperimentDataSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
