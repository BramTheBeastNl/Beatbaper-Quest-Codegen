// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapEventType
#include "GlobalNamespace/BeatmapEventType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BeatmapEventTypeExtensions
  // [] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class BeatmapEventTypeExtensions : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: BeatmapEventTypeExtensions
    BeatmapEventTypeExtensions() noexcept {}
    // static field const value: static public BeatmapEventType kEarlyRotationEvent
    static constexpr const int kEarlyRotationEvent = 14;
    // Get static field: static public BeatmapEventType kEarlyRotationEvent
    static GlobalNamespace::BeatmapEventType _get_kEarlyRotationEvent();
    // Set static field: static public BeatmapEventType kEarlyRotationEvent
    static void _set_kEarlyRotationEvent(GlobalNamespace::BeatmapEventType value);
    // static field const value: static public BeatmapEventType kLateRotationEvent
    static constexpr const int kLateRotationEvent = 15;
    // Get static field: static public BeatmapEventType kLateRotationEvent
    static GlobalNamespace::BeatmapEventType _get_kLateRotationEvent();
    // Set static field: static public BeatmapEventType kLateRotationEvent
    static void _set_kLateRotationEvent(GlobalNamespace::BeatmapEventType value);
    // static field const value: static public BeatmapEventType kBPMChangeEvent
    static constexpr const int kBPMChangeEvent = 10;
    // Get static field: static public BeatmapEventType kBPMChangeEvent
    static GlobalNamespace::BeatmapEventType _get_kBPMChangeEvent();
    // Set static field: static public BeatmapEventType kBPMChangeEvent
    static void _set_kBPMChangeEvent(GlobalNamespace::BeatmapEventType value);
    // static field const value: static public BeatmapEventType kLights1
    static constexpr const int kLights1 = 0;
    // Get static field: static public BeatmapEventType kLights1
    static GlobalNamespace::BeatmapEventType _get_kLights1();
    // Set static field: static public BeatmapEventType kLights1
    static void _set_kLights1(GlobalNamespace::BeatmapEventType value);
    // static field const value: static public BeatmapEventType kLights2
    static constexpr const int kLights2 = 1;
    // Get static field: static public BeatmapEventType kLights2
    static GlobalNamespace::BeatmapEventType _get_kLights2();
    // Set static field: static public BeatmapEventType kLights2
    static void _set_kLights2(GlobalNamespace::BeatmapEventType value);
    // static field const value: static public BeatmapEventType kLights3
    static constexpr const int kLights3 = 2;
    // Get static field: static public BeatmapEventType kLights3
    static GlobalNamespace::BeatmapEventType _get_kLights3();
    // Set static field: static public BeatmapEventType kLights3
    static void _set_kLights3(GlobalNamespace::BeatmapEventType value);
    // static field const value: static public BeatmapEventType kLights4
    static constexpr const int kLights4 = 3;
    // Get static field: static public BeatmapEventType kLights4
    static GlobalNamespace::BeatmapEventType _get_kLights4();
    // Set static field: static public BeatmapEventType kLights4
    static void _set_kLights4(GlobalNamespace::BeatmapEventType value);
    // static field const value: static public BeatmapEventType kLights5
    static constexpr const int kLights5 = 4;
    // Get static field: static public BeatmapEventType kLights5
    static GlobalNamespace::BeatmapEventType _get_kLights5();
    // Set static field: static public BeatmapEventType kLights5
    static void _set_kLights5(GlobalNamespace::BeatmapEventType value);
    // static public System.Collections.Generic.HashSet`1<BeatmapEventType> GetEventsValidForAllBeatmaps()
    // Offset: 0x21787F8
    static System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapEventType>* GetEventsValidForAllBeatmaps();
    // static public System.Boolean IsBPMChangeEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x217897C
    static bool IsBPMChangeEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsRotationEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x2178988
    static bool IsRotationEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsSpecialEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x2178998
    static bool IsSpecialEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsLightIntensityChangeEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x21789BC
    static bool IsLightIntensityChangeEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsEarlyRotationEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x21789D8
    static bool IsEarlyRotationEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsLateRotationEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x21789E4
    static bool IsLateRotationEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsEarlyEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x21789F0
    static bool IsEarlyEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsSpawnAffectingEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x2178A00
    static bool IsSpawnAffectingEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
  }; // BeatmapEventTypeExtensions
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapEventTypeExtensions*, "", "BeatmapEventTypeExtensions");
