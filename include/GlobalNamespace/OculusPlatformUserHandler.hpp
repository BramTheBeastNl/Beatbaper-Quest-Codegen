// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IPlatformUserHandler
#include "GlobalNamespace/IPlatformUserHandler.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlatformInfo
  class PlatformInfo;
  // Forward declaring type: HMAsyncRequest
  class HMAsyncRequest;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OculusPlatformUserHandler
  class OculusPlatformUserHandler : public GlobalNamespace::IPlatformUserHandler, public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::OculusPlatformUserHandler::$$c__DisplayClass4_0
    class $$c__DisplayClass4_0;
    // Nested type: GlobalNamespace::OculusPlatformUserHandler::$$c__DisplayClass5_0
    class $$c__DisplayClass5_0;
    // Nested type: GlobalNamespace::OculusPlatformUserHandler::$$c__DisplayClass6_0
    class $$c__DisplayClass6_0;
    // private System.String[] _friendsUserIds
    // Offset: 0x10
    ::Array<::Il2CppString*>* friendsUserIds;
    // private PlatformUserModelSO/UserInfo _userInfo
    // Offset: 0x18
    GlobalNamespace::PlatformUserModelSO::UserInfo* userInfo;
    // public PlatformInfo get_platformInfo()
    // Offset: 0xBB1268
    // Implemented from: IPlatformUserHandler
    // Base method: PlatformInfo IPlatformUserHandler::get_platformInfo()
    GlobalNamespace::PlatformInfo* get_platformInfo();
    // public HMAsyncRequest GetUserInfo(PlatformUserModelSO/GetUserInfoCompletionHandler completionHandler)
    // Offset: 0xBB12D0
    // Implemented from: IPlatformUserHandler
    // Base method: HMAsyncRequest IPlatformUserHandler::GetUserInfo(PlatformUserModelSO/GetUserInfoCompletionHandler completionHandler)
    GlobalNamespace::HMAsyncRequest* GetUserInfo(GlobalNamespace::PlatformUserModelSO::GetUserInfoCompletionHandler* completionHandler);
    // public HMAsyncRequest GetUserFriendsUserIds(System.Boolean cached, PlatformUserModelSO/GetUserFriendsUserIdsCompletionHandler completionHandler)
    // Offset: 0xBB1424
    // Implemented from: IPlatformUserHandler
    // Base method: HMAsyncRequest IPlatformUserHandler::GetUserFriendsUserIds(System.Boolean cached, PlatformUserModelSO/GetUserFriendsUserIdsCompletionHandler completionHandler)
    GlobalNamespace::HMAsyncRequest* GetUserFriendsUserIds(bool cached, GlobalNamespace::PlatformUserModelSO::GetUserFriendsUserIdsCompletionHandler* completionHandler);
    // public HMAsyncRequest GetUserAuthToken(PlatformUserModelSO/GetUserAuthTokenCompletionHandler completionHandler)
    // Offset: 0xBB1588
    // Implemented from: IPlatformUserHandler
    // Base method: HMAsyncRequest IPlatformUserHandler::GetUserAuthToken(PlatformUserModelSO/GetUserAuthTokenCompletionHandler completionHandler)
    GlobalNamespace::HMAsyncRequest* GetUserAuthToken(GlobalNamespace::PlatformUserModelSO::GetUserAuthTokenCompletionHandler* completionHandler);
    // public HMAsyncRequest GetUserNamesForUserIds(System.String[] userIds, PlatformUserModelSO/GetUserNamesForUserIdsCompletionHandler completionHandler)
    // Offset: 0xBB16A0
    // Implemented from: IPlatformUserHandler
    // Base method: HMAsyncRequest IPlatformUserHandler::GetUserNamesForUserIds(System.String[] userIds, PlatformUserModelSO/GetUserNamesForUserIdsCompletionHandler completionHandler)
    GlobalNamespace::HMAsyncRequest* GetUserNamesForUserIds(::Array<::Il2CppString*>* userIds, GlobalNamespace::PlatformUserModelSO::GetUserNamesForUserIdsCompletionHandler* completionHandler);
    // public System.Void .ctor()
    // Offset: 0xBB1730
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static OculusPlatformUserHandler* New_ctor();
  }; // OculusPlatformUserHandler
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OculusPlatformUserHandler*, "", "OculusPlatformUserHandler");
#pragma pack(pop)
