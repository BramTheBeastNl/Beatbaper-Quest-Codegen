// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
// Including type: IMenuButtonTrigger
#include "GlobalNamespace/IMenuButtonTrigger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: VRControllersInputManager
  class VRControllersInputManager;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  // Autogenerated type: DelayedMenuButtonTrigger
  // [] Offset: FFFFFFFF
  class DelayedMenuButtonTrigger : public ::Il2CppObject/*, public Zenject::ITickable, public GlobalNamespace::IMenuButtonTrigger*/ {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xDC7E90
    // private System.Action menuButtonTriggeredEvent
    // Size: 0x8
    // Offset: 0x10
    System::Action* menuButtonTriggeredEvent;
    // Field size check
    static_assert(sizeof(System::Action*) == 0x8);
    // [InjectAttribute] Offset: 0xDC7EA0
    // private System.Single _pressDuration
    // Size: 0x4
    // Offset: 0x18
    float pressDuration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _timer
    // Size: 0x4
    // Offset: 0x1C
    float timer;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _waitingForButtonRelease
    // Size: 0x1
    // Offset: 0x20
    bool waitingForButtonRelease;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: waitingForButtonRelease and: vrControllersInputManager
    private: char __padding3[0x7] = {};
    public:
    // [InjectAttribute] Offset: 0xDC7EB0
    // private VRControllersInputManager _vrControllersInputManager
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::VRControllersInputManager* vrControllersInputManager;
    // Field size check
    static_assert(sizeof(GlobalNamespace::VRControllersInputManager*) == 0x8);
    // Creating value type constructor for type: DelayedMenuButtonTrigger
    DelayedMenuButtonTrigger(System::Action* menuButtonTriggeredEvent_ = {}, float pressDuration_ = {}, float timer_ = {}, bool waitingForButtonRelease_ = {}, GlobalNamespace::VRControllersInputManager* vrControllersInputManager_ = {}) noexcept : menuButtonTriggeredEvent{menuButtonTriggeredEvent_}, pressDuration{pressDuration_}, timer{timer_}, waitingForButtonRelease{waitingForButtonRelease_}, vrControllersInputManager{vrControllersInputManager_} {}
    // Creating interface conversion operator: operator Zenject::ITickable
    operator Zenject::ITickable() noexcept {
      return *reinterpret_cast<Zenject::ITickable*>(this);
    }
    // Creating interface conversion operator: operator GlobalNamespace::IMenuButtonTrigger
    operator GlobalNamespace::IMenuButtonTrigger() noexcept {
      return *reinterpret_cast<GlobalNamespace::IMenuButtonTrigger*>(this);
    }
    // public System.Void add_menuButtonTriggeredEvent(System.Action value)
    // Offset: 0x1A59D2C
    // Implemented from: IMenuButtonTrigger
    // Base method: System.Void IMenuButtonTrigger::add_menuButtonTriggeredEvent(System.Action value)
    void add_menuButtonTriggeredEvent(System::Action* value);
    // public System.Void remove_menuButtonTriggeredEvent(System.Action value)
    // Offset: 0x1A59DD0
    // Implemented from: IMenuButtonTrigger
    // Base method: System.Void IMenuButtonTrigger::remove_menuButtonTriggeredEvent(System.Action value)
    void remove_menuButtonTriggeredEvent(System::Action* value);
    // public System.Void Tick()
    // Offset: 0x1A59E74
    // Implemented from: Zenject.ITickable
    // Base method: System.Void ITickable::Tick()
    void Tick();
    // public System.Void .ctor()
    // Offset: 0x1A59F04
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DelayedMenuButtonTrigger* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DelayedMenuButtonTrigger").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DelayedMenuButtonTrigger*, creationType>()));
    }
  }; // DelayedMenuButtonTrigger
  static check_size<sizeof(DelayedMenuButtonTrigger), 40 + sizeof(GlobalNamespace::VRControllersInputManager*)> __GlobalNamespace_DelayedMenuButtonTriggerSizeCheck;
  static_assert(sizeof(DelayedMenuButtonTrigger) == 0x30);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::DelayedMenuButtonTrigger*, "", "DelayedMenuButtonTrigger");
#pragma pack(pop)
