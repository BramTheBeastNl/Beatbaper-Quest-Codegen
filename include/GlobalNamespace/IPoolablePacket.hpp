// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IPoolablePacket
  class IPoolablePacket {
    public:
    // Creating value type constructor for type: IPoolablePacket
    IPoolablePacket() noexcept {}
    // public System.Void Release()
    // Offset: 0xFFFFFFFF
    void Release();
  }; // IPoolablePacket
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::IPoolablePacket*, "", "IPoolablePacket");
// Writing MetadataGetter for method: IPoolablePacket::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPoolablePacket::*)()>(&IPoolablePacket::Release)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPoolablePacket*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
