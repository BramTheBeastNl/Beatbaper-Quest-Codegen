// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataReader
  class NetDataReader;
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NoteData
  class NoteData;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: NoteMissInfoNetSerializable
  // [PreserveAttribute] Offset: DE2700
  class NoteMissInfoNetSerializable : public ::Il2CppObject/*, public LiteNetLib::Utils::INetSerializable*/ {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xDE28C0
    // private ColorType <colorType>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    GlobalNamespace::ColorType colorType;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ColorType) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xDE28D0
    // private System.Single <noteTime>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    float noteTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xDE28E0
    // private System.Int32 <noteLineIndex>k__BackingField
    // Size: 0x4
    // Offset: 0x18
    int noteLineIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xDE28F0
    // private NoteLineLayer <noteLineLayer>k__BackingField
    // Size: 0x4
    // Offset: 0x1C
    GlobalNamespace::NoteLineLayer noteLineLayer;
    // Field size check
    static_assert(sizeof(GlobalNamespace::NoteLineLayer) == 0x4);
    // Creating value type constructor for type: NoteMissInfoNetSerializable
    NoteMissInfoNetSerializable(GlobalNamespace::ColorType colorType_ = {}, float noteTime_ = {}, int noteLineIndex_ = {}, GlobalNamespace::NoteLineLayer noteLineLayer_ = {}) noexcept : colorType{colorType_}, noteTime{noteTime_}, noteLineIndex{noteLineIndex_}, noteLineLayer{noteLineLayer_} {}
    // Creating interface conversion operator: operator LiteNetLib::Utils::INetSerializable
    operator LiteNetLib::Utils::INetSerializable() noexcept {
      return *reinterpret_cast<LiteNetLib::Utils::INetSerializable*>(this);
    }
    // public ColorType get_colorType()
    // Offset: 0x2349D0C
    GlobalNamespace::ColorType get_colorType();
    // private System.Void set_colorType(ColorType value)
    // Offset: 0x2349D14
    void set_colorType(GlobalNamespace::ColorType value);
    // public System.Single get_noteTime()
    // Offset: 0x2349D1C
    float get_noteTime();
    // private System.Void set_noteTime(System.Single value)
    // Offset: 0x2349D24
    void set_noteTime(float value);
    // public System.Int32 get_noteLineIndex()
    // Offset: 0x2349D2C
    int get_noteLineIndex();
    // private System.Void set_noteLineIndex(System.Int32 value)
    // Offset: 0x2349D34
    void set_noteLineIndex(int value);
    // public NoteLineLayer get_noteLineLayer()
    // Offset: 0x2349D3C
    GlobalNamespace::NoteLineLayer get_noteLineLayer();
    // private System.Void set_noteLineLayer(NoteLineLayer value)
    // Offset: 0x2349D44
    void set_noteLineLayer(GlobalNamespace::NoteLineLayer value);
    // private System.Void LiteNetLib.Utils.INetSerializable.Deserialize(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0x2349D4C
    void LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader);
    // private System.Void LiteNetLib.Utils.INetSerializable.Serialize(LiteNetLib.Utils.NetDataWriter writer)
    // Offset: 0x2349DCC
    void LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // public System.Void .ctor(NoteData noteData)
    // Offset: 0x2349E74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NoteMissInfoNetSerializable* New_ctor(GlobalNamespace::NoteData* noteData) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NoteMissInfoNetSerializable*, creationType>(noteData)));
    }
    // public System.Void .ctor(ColorType colorType, NoteLineLayer noteLineLayer, System.Int32 noteLineIndex, System.Single noteTime)
    // Offset: 0x2349EC0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NoteMissInfoNetSerializable* New_ctor(GlobalNamespace::ColorType colorType, GlobalNamespace::NoteLineLayer noteLineLayer, int noteLineIndex, float noteTime) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NoteMissInfoNetSerializable*, creationType>(colorType, noteLineLayer, noteLineIndex, noteTime)));
    }
    // public System.Void .ctor()
    // Offset: 0x2349E6C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NoteMissInfoNetSerializable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMissInfoNetSerializable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NoteMissInfoNetSerializable*, creationType>()));
    }
  }; // NoteMissInfoNetSerializable
  #pragma pack(pop)
  static check_size<sizeof(NoteMissInfoNetSerializable), 28 + sizeof(GlobalNamespace::NoteLineLayer)> __GlobalNamespace_NoteMissInfoNetSerializableSizeCheck;
  static_assert(sizeof(NoteMissInfoNetSerializable) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::NoteMissInfoNetSerializable*, "", "NoteMissInfoNetSerializable");
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::get_colorType
// Il2CppName: get_colorType
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::set_colorType
// Il2CppName: set_colorType
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::get_noteTime
// Il2CppName: get_noteTime
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::set_noteTime
// Il2CppName: set_noteTime
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineIndex
// Il2CppName: get_noteLineIndex
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineIndex
// Il2CppName: set_noteLineIndex
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineLayer
// Il2CppName: get_noteLineLayer
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineLayer
// Il2CppName: set_noteLineLayer
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::LiteNetLib_Utils_INetSerializable_Deserialize
// Il2CppName: LiteNetLib.Utils.INetSerializable.Deserialize
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::LiteNetLib_Utils_INetSerializable_Serialize
// Il2CppName: LiteNetLib.Utils.INetSerializable.Serialize
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::NoteMissInfoNetSerializable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
