// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IDeeplinkManager
#include "GlobalNamespace/IDeeplinkManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Deeplink
  class Deeplink;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: TestDeeplinkManager
  // [] Offset: FFFFFFFF
  class TestDeeplinkManager : public ::Il2CppObject/*, public GlobalNamespace::IDeeplinkManager*/ {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xDC2ABC
    // private System.Action`1<Deeplink> didReceiveDeeplinkEvent
    // Size: 0x8
    // Offset: 0x10
    System::Action_1<GlobalNamespace::Deeplink*>* didReceiveDeeplinkEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<GlobalNamespace::Deeplink*>*) == 0x8);
    // private Deeplink _currentDeeplink
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::Deeplink* currentDeeplink;
    // Field size check
    static_assert(sizeof(GlobalNamespace::Deeplink*) == 0x8);
    // Creating value type constructor for type: TestDeeplinkManager
    TestDeeplinkManager(System::Action_1<GlobalNamespace::Deeplink*>* didReceiveDeeplinkEvent_ = {}, GlobalNamespace::Deeplink* currentDeeplink_ = {}) noexcept : didReceiveDeeplinkEvent{didReceiveDeeplinkEvent_}, currentDeeplink{currentDeeplink_} {}
    // Creating interface conversion operator: operator GlobalNamespace::IDeeplinkManager
    operator GlobalNamespace::IDeeplinkManager() noexcept {
      return *reinterpret_cast<GlobalNamespace::IDeeplinkManager*>(this);
    }
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC2ACC
    // Get static field: static public TestDeeplinkManager instance
    static GlobalNamespace::TestDeeplinkManager* _get_instance();
    // Set static field: static public TestDeeplinkManager instance
    static void _set_instance(GlobalNamespace::TestDeeplinkManager* value);
    // public System.Void set_currentDeeplink(Deeplink value)
    // Offset: 0xF4B000
    void set_currentDeeplink(GlobalNamespace::Deeplink* value);
    // static private System.Void .cctor()
    // Offset: 0xF4B0D0
    static void _cctor();
    // public System.Void add_didReceiveDeeplinkEvent(System.Action`1<Deeplink> value)
    // Offset: 0xF4AEB0
    // Implemented from: IDeeplinkManager
    // Base method: System.Void IDeeplinkManager::add_didReceiveDeeplinkEvent(System.Action`1<Deeplink> value)
    void add_didReceiveDeeplinkEvent(System::Action_1<GlobalNamespace::Deeplink*>* value);
    // public System.Void remove_didReceiveDeeplinkEvent(System.Action`1<Deeplink> value)
    // Offset: 0xF4AF54
    // Implemented from: IDeeplinkManager
    // Base method: System.Void IDeeplinkManager::remove_didReceiveDeeplinkEvent(System.Action`1<Deeplink> value)
    void remove_didReceiveDeeplinkEvent(System::Action_1<GlobalNamespace::Deeplink*>* value);
    // public Deeplink get_currentDeeplink()
    // Offset: 0xF4AFF8
    // Implemented from: IDeeplinkManager
    // Base method: Deeplink IDeeplinkManager::get_currentDeeplink()
    GlobalNamespace::Deeplink* get_currentDeeplink();
    // public System.Void .ctor()
    // Offset: 0xF4B0C8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TestDeeplinkManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestDeeplinkManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TestDeeplinkManager*, creationType>()));
    }
  }; // TestDeeplinkManager
  #pragma pack(pop)
  static check_size<sizeof(TestDeeplinkManager), 24 + sizeof(GlobalNamespace::Deeplink*)> __GlobalNamespace_TestDeeplinkManagerSizeCheck;
  static_assert(sizeof(TestDeeplinkManager) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::TestDeeplinkManager*, "", "TestDeeplinkManager");
