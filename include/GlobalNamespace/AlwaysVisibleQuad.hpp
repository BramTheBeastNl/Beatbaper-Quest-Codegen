// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: AlwaysVisibleQuad
  // [ExecuteInEditMode] Offset: E017E8
  class AlwaysVisibleQuad : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.Mesh _mesh
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::Mesh* mesh;
    // Field size check
    static_assert(sizeof(UnityEngine::Mesh*) == 0x8);
    // Creating value type constructor for type: AlwaysVisibleQuad
    AlwaysVisibleQuad(UnityEngine::Mesh* mesh_ = {}) noexcept : mesh{mesh_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void OnEnable()
    // Offset: 0x235D700
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x235D9CC
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0x235D9D8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AlwaysVisibleQuad* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysVisibleQuad::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AlwaysVisibleQuad*, creationType>()));
    }
  }; // AlwaysVisibleQuad
  #pragma pack(pop)
  static check_size<sizeof(AlwaysVisibleQuad), 24 + sizeof(UnityEngine::Mesh*)> __GlobalNamespace_AlwaysVisibleQuadSizeCheck;
  static_assert(sizeof(AlwaysVisibleQuad) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::AlwaysVisibleQuad*, "", "AlwaysVisibleQuad");
// Writing MetadataGetter for method: GlobalNamespace::AlwaysVisibleQuad::OnEnable
// Il2CppName: OnEnable
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::AlwaysVisibleQuad::OnDisable
// Il2CppName: OnDisable
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::AlwaysVisibleQuad::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
