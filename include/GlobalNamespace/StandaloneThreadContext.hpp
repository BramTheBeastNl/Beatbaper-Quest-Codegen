// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: Thread
  class Thread;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: StandaloneThreadContext
  class StandaloneThreadContext : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::StandaloneThreadContext::StandaloneSynchronizationContext
    class StandaloneSynchronizationContext;
    // private readonly System.Threading.Thread _thread
    // Offset: 0x10
    System::Threading::Thread* thread;
    // private readonly System.Func`2<System.Threading.CancellationToken,System.Threading.Tasks.Task> _taskRunner
    // Offset: 0x18
    System::Func_2<System::Threading::CancellationToken, System::Threading::Tasks::Task*>* taskRunner;
    // private readonly System.Threading.CancellationToken _cancellationToken
    // Offset: 0x20
    System::Threading::CancellationToken cancellationToken;
    // private readonly System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _taskCompletionSource
    // Offset: 0x28
    System::Threading::Tasks::TaskCompletionSource_1<bool>* taskCompletionSource;
    // public System.Threading.Tasks.Task get_task()
    // Offset: 0x21FE328
    System::Threading::Tasks::Task* get_task();
    // private System.Void .ctor(System.Func`2<System.Threading.CancellationToken,System.Threading.Tasks.Task> taskRunner, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x21FE378
    static StandaloneThreadContext* New_ctor(System::Func_2<System::Threading::CancellationToken, System::Threading::Tasks::Task*>* taskRunner, System::Threading::CancellationToken cancellationToken);
    // private System.Void RunInternal()
    // Offset: 0x21FE494
    void RunInternal();
    // static public System.Threading.Tasks.Task Run(System.Func`2<System.Threading.CancellationToken,System.Threading.Tasks.Task> taskRunner, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x21FE7B0
    static System::Threading::Tasks::Task* Run(System::Func_2<System::Threading::CancellationToken, System::Threading::Tasks::Task*>* taskRunner, System::Threading::CancellationToken cancellationToken);
  }; // StandaloneThreadContext
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::StandaloneThreadContext*, "", "StandaloneThreadContext");
#pragma pack(pop)
