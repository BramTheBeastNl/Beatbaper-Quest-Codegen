// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: HMUI.NavigationController
#include "HMUI/NavigationController.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: SelectLevelCategoryViewController/LevelCategory
#include "GlobalNamespace/SelectLevelCategoryViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlayerDataModel
  class PlayerDataModel;
  // Skipping declaration: SelectLevelCategoryViewController because it is already included!
  // Forward declaring type: AnnotatedBeatmapLevelCollectionsViewController
  class AnnotatedBeatmapLevelCollectionsViewController;
  // Forward declaring type: LevelSearchViewController
  class LevelSearchViewController;
  // Forward declaring type: BeatmapLevelsModel
  class BeatmapLevelsModel;
  // Forward declaring type: IAnnotatedBeatmapLevelCollection
  class IAnnotatedBeatmapLevelCollection;
  // Forward declaring type: BeatmapCharacteristicSO
  class BeatmapCharacteristicSO;
  // Forward declaring type: IBeatmapLevelPack
  class IBeatmapLevelPack;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationTokenSource
  class CancellationTokenSource;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IReadOnlyList`1<T>
  template<typename T>
  class IReadOnlyList_1;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Skipping declaration: ViewController because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x140
  #pragma pack(push, 1)
  // Autogenerated type: LevelFilteringNavigationController
  // [TokenAttribute] Offset: FFFFFFFF
  class LevelFilteringNavigationController : public HMUI::NavigationController {
    public:
    // Writing base type padding for base size: 0x94 to desired offset: 0x98
    char ___base_padding[0x4] = {};
    // Nested type: GlobalNamespace::LevelFilteringNavigationController::$$c
    class $$c;
    // Nested type: GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0
    class $$c__DisplayClass44_0;
    // Nested type: GlobalNamespace::LevelFilteringNavigationController::$UpdateCustomSongs$d__45
    struct $UpdateCustomSongs$d__45;
    // private UnityEngine.GameObject _emptyFavoritesListInfoPrefab
    // Size: 0x8
    // Offset: 0x98
    UnityEngine::GameObject* emptyFavoritesListInfoPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject _emptyCustomSongListInfoPrefab
    // Size: 0x8
    // Offset: 0xA0
    UnityEngine::GameObject* emptyCustomSongListInfoPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // [InjectAttribute] Offset: 0xEBBC7C
    // private readonly PlayerDataModel _playerDataModel
    // Size: 0x8
    // Offset: 0xA8
    GlobalNamespace::PlayerDataModel* playerDataModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::PlayerDataModel*) == 0x8);
    // [InjectAttribute] Offset: 0xEBBC8C
    // private readonly SelectLevelCategoryViewController _selectLevelCategoryViewController
    // Size: 0x8
    // Offset: 0xB0
    GlobalNamespace::SelectLevelCategoryViewController* selectLevelCategoryViewController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::SelectLevelCategoryViewController*) == 0x8);
    // [InjectAttribute] Offset: 0xEBBC9C
    // private readonly AnnotatedBeatmapLevelCollectionsViewController _annotatedBeatmapLevelCollectionsViewController
    // Size: 0x8
    // Offset: 0xB8
    GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController* annotatedBeatmapLevelCollectionsViewController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController*) == 0x8);
    // [InjectAttribute] Offset: 0xEBBCAC
    // private readonly LevelSearchViewController _levelSearchViewController
    // Size: 0x8
    // Offset: 0xC0
    GlobalNamespace::LevelSearchViewController* levelSearchViewController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::LevelSearchViewController*) == 0x8);
    // [InjectAttribute] Offset: 0xEBBCBC
    // private readonly BeatmapLevelsModel _beatmapLevelsModel
    // Size: 0x8
    // Offset: 0xC8
    GlobalNamespace::BeatmapLevelsModel* beatmapLevelsModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BeatmapLevelsModel*) == 0x8);
    // private System.Action`4<LevelFilteringNavigationController,IAnnotatedBeatmapLevelCollection,UnityEngine.GameObject,BeatmapCharacteristicSO> didSelectAnnotatedBeatmapLevelCollectionEvent
    // Size: 0x8
    // Offset: 0xD0
    System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>* didSelectAnnotatedBeatmapLevelCollectionEvent;
    // Field size check
    static_assert(sizeof(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>*) == 0x8);
    // private System.Action`1<LevelFilteringNavigationController> didStartLoadingEvent
    // Size: 0x8
    // Offset: 0xD8
    System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* didStartLoadingEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*) == 0x8);
    // private System.Action`1<LevelFilteringNavigationController> didPressAllSongsEvent
    // Size: 0x8
    // Offset: 0xE0
    System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* didPressAllSongsEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*) == 0x8);
    // private System.Threading.CancellationTokenSource _cancellationTokenSource
    // Size: 0x8
    // Offset: 0xE8
    System::Threading::CancellationTokenSource* cancellationTokenSource;
    // Field size check
    static_assert(sizeof(System::Threading::CancellationTokenSource*) == 0x8);
    // private UnityEngine.GameObject _currentNoDataInfoPrefab
    // Size: 0x8
    // Offset: 0xF0
    UnityEngine::GameObject* currentNoDataInfoPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private System.String _levelPackIdToBeSelectedAfterPresent
    // Size: 0x8
    // Offset: 0xF8
    ::Il2CppString* levelPackIdToBeSelectedAfterPresent;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Boolean _hidePacksIfOneOrNone
    // Size: 0x1
    // Offset: 0x100
    bool hidePacksIfOneOrNone;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _enableCustomLevels
    // Size: 0x1
    // Offset: 0x101
    bool enableCustomLevels;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: enableCustomLevels and: songPackMask
    char __padding14[0x6] = {};
    // private SongPackMask _songPackMask
    // Size: 0x10
    // Offset: 0x108
    GlobalNamespace::SongPackMask songPackMask;
    // Field size check
    static_assert(sizeof(GlobalNamespace::SongPackMask) == 0x10);
    // private SelectLevelCategoryViewController/LevelCategory[] _enabledLevelCategories
    // Size: 0x8
    // Offset: 0x118
    ::Array<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>* enabledLevelCategories;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*) == 0x8);
    // private IBeatmapLevelPack[] _ostBeatmapLevelPacks
    // Size: 0x8
    // Offset: 0x120
    ::Array<GlobalNamespace::IBeatmapLevelPack*>* ostBeatmapLevelPacks;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::IBeatmapLevelPack*>*) == 0x8);
    // private IBeatmapLevelPack[] _musicPacksBeatmapLevelPacks
    // Size: 0x8
    // Offset: 0x128
    ::Array<GlobalNamespace::IBeatmapLevelPack*>* musicPacksBeatmapLevelPacks;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::IBeatmapLevelPack*>*) == 0x8);
    // private IBeatmapLevelPack[] _customLevelPacks
    // Size: 0x8
    // Offset: 0x130
    ::Array<GlobalNamespace::IBeatmapLevelPack*>* customLevelPacks;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::IBeatmapLevelPack*>*) == 0x8);
    // private IBeatmapLevelPack[] _allBeatmapLevelPacks
    // Size: 0x8
    // Offset: 0x138
    ::Array<GlobalNamespace::IBeatmapLevelPack*>* allBeatmapLevelPacks;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::IBeatmapLevelPack*>*) == 0x8);
    // Creating value type constructor for type: LevelFilteringNavigationController
    LevelFilteringNavigationController(UnityEngine::GameObject* emptyFavoritesListInfoPrefab_ = {}, UnityEngine::GameObject* emptyCustomSongListInfoPrefab_ = {}, GlobalNamespace::PlayerDataModel* playerDataModel_ = {}, GlobalNamespace::SelectLevelCategoryViewController* selectLevelCategoryViewController_ = {}, GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController* annotatedBeatmapLevelCollectionsViewController_ = {}, GlobalNamespace::LevelSearchViewController* levelSearchViewController_ = {}, GlobalNamespace::BeatmapLevelsModel* beatmapLevelsModel_ = {}, System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>* didSelectAnnotatedBeatmapLevelCollectionEvent_ = {}, System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* didStartLoadingEvent_ = {}, System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* didPressAllSongsEvent_ = {}, System::Threading::CancellationTokenSource* cancellationTokenSource_ = {}, UnityEngine::GameObject* currentNoDataInfoPrefab_ = {}, ::Il2CppString* levelPackIdToBeSelectedAfterPresent_ = {}, bool hidePacksIfOneOrNone_ = {}, bool enableCustomLevels_ = {}, GlobalNamespace::SongPackMask songPackMask_ = {}, ::Array<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>* enabledLevelCategories_ = {}, ::Array<GlobalNamespace::IBeatmapLevelPack*>* ostBeatmapLevelPacks_ = {}, ::Array<GlobalNamespace::IBeatmapLevelPack*>* musicPacksBeatmapLevelPacks_ = {}, ::Array<GlobalNamespace::IBeatmapLevelPack*>* customLevelPacks_ = {}, ::Array<GlobalNamespace::IBeatmapLevelPack*>* allBeatmapLevelPacks_ = {}) noexcept : emptyFavoritesListInfoPrefab{emptyFavoritesListInfoPrefab_}, emptyCustomSongListInfoPrefab{emptyCustomSongListInfoPrefab_}, playerDataModel{playerDataModel_}, selectLevelCategoryViewController{selectLevelCategoryViewController_}, annotatedBeatmapLevelCollectionsViewController{annotatedBeatmapLevelCollectionsViewController_}, levelSearchViewController{levelSearchViewController_}, beatmapLevelsModel{beatmapLevelsModel_}, didSelectAnnotatedBeatmapLevelCollectionEvent{didSelectAnnotatedBeatmapLevelCollectionEvent_}, didStartLoadingEvent{didStartLoadingEvent_}, didPressAllSongsEvent{didPressAllSongsEvent_}, cancellationTokenSource{cancellationTokenSource_}, currentNoDataInfoPrefab{currentNoDataInfoPrefab_}, levelPackIdToBeSelectedAfterPresent{levelPackIdToBeSelectedAfterPresent_}, hidePacksIfOneOrNone{hidePacksIfOneOrNone_}, enableCustomLevels{enableCustomLevels_}, songPackMask{songPackMask_}, enabledLevelCategories{enabledLevelCategories_}, ostBeatmapLevelPacks{ostBeatmapLevelPacks_}, musicPacksBeatmapLevelPacks{musicPacksBeatmapLevelPacks_}, customLevelPacks{customLevelPacks_}, allBeatmapLevelPacks{allBeatmapLevelPacks_} {}
    // Get instance field: private UnityEngine.GameObject _emptyFavoritesListInfoPrefab
    UnityEngine::GameObject* _get__emptyFavoritesListInfoPrefab();
    // Set instance field: private UnityEngine.GameObject _emptyFavoritesListInfoPrefab
    void _set__emptyFavoritesListInfoPrefab(UnityEngine::GameObject* value);
    // Get instance field: private UnityEngine.GameObject _emptyCustomSongListInfoPrefab
    UnityEngine::GameObject* _get__emptyCustomSongListInfoPrefab();
    // Set instance field: private UnityEngine.GameObject _emptyCustomSongListInfoPrefab
    void _set__emptyCustomSongListInfoPrefab(UnityEngine::GameObject* value);
    // Get instance field: private readonly PlayerDataModel _playerDataModel
    GlobalNamespace::PlayerDataModel* _get__playerDataModel();
    // Set instance field: private readonly PlayerDataModel _playerDataModel
    void _set__playerDataModel(GlobalNamespace::PlayerDataModel* value);
    // Get instance field: private readonly SelectLevelCategoryViewController _selectLevelCategoryViewController
    GlobalNamespace::SelectLevelCategoryViewController* _get__selectLevelCategoryViewController();
    // Set instance field: private readonly SelectLevelCategoryViewController _selectLevelCategoryViewController
    void _set__selectLevelCategoryViewController(GlobalNamespace::SelectLevelCategoryViewController* value);
    // Get instance field: private readonly AnnotatedBeatmapLevelCollectionsViewController _annotatedBeatmapLevelCollectionsViewController
    GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController* _get__annotatedBeatmapLevelCollectionsViewController();
    // Set instance field: private readonly AnnotatedBeatmapLevelCollectionsViewController _annotatedBeatmapLevelCollectionsViewController
    void _set__annotatedBeatmapLevelCollectionsViewController(GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController* value);
    // Get instance field: private readonly LevelSearchViewController _levelSearchViewController
    GlobalNamespace::LevelSearchViewController* _get__levelSearchViewController();
    // Set instance field: private readonly LevelSearchViewController _levelSearchViewController
    void _set__levelSearchViewController(GlobalNamespace::LevelSearchViewController* value);
    // Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
    GlobalNamespace::BeatmapLevelsModel* _get__beatmapLevelsModel();
    // Set instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
    void _set__beatmapLevelsModel(GlobalNamespace::BeatmapLevelsModel* value);
    // Get instance field: private System.Action`4<LevelFilteringNavigationController,IAnnotatedBeatmapLevelCollection,UnityEngine.GameObject,BeatmapCharacteristicSO> didSelectAnnotatedBeatmapLevelCollectionEvent
    System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>* _get_didSelectAnnotatedBeatmapLevelCollectionEvent();
    // Set instance field: private System.Action`4<LevelFilteringNavigationController,IAnnotatedBeatmapLevelCollection,UnityEngine.GameObject,BeatmapCharacteristicSO> didSelectAnnotatedBeatmapLevelCollectionEvent
    void _set_didSelectAnnotatedBeatmapLevelCollectionEvent(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>* value);
    // Get instance field: private System.Action`1<LevelFilteringNavigationController> didStartLoadingEvent
    System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* _get_didStartLoadingEvent();
    // Set instance field: private System.Action`1<LevelFilteringNavigationController> didStartLoadingEvent
    void _set_didStartLoadingEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value);
    // Get instance field: private System.Action`1<LevelFilteringNavigationController> didPressAllSongsEvent
    System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* _get_didPressAllSongsEvent();
    // Set instance field: private System.Action`1<LevelFilteringNavigationController> didPressAllSongsEvent
    void _set_didPressAllSongsEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value);
    // Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
    System::Threading::CancellationTokenSource* _get__cancellationTokenSource();
    // Set instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
    void _set__cancellationTokenSource(System::Threading::CancellationTokenSource* value);
    // Get instance field: private UnityEngine.GameObject _currentNoDataInfoPrefab
    UnityEngine::GameObject* _get__currentNoDataInfoPrefab();
    // Set instance field: private UnityEngine.GameObject _currentNoDataInfoPrefab
    void _set__currentNoDataInfoPrefab(UnityEngine::GameObject* value);
    // Get instance field: private System.String _levelPackIdToBeSelectedAfterPresent
    ::Il2CppString* _get__levelPackIdToBeSelectedAfterPresent();
    // Set instance field: private System.String _levelPackIdToBeSelectedAfterPresent
    void _set__levelPackIdToBeSelectedAfterPresent(::Il2CppString* value);
    // Get instance field: private System.Boolean _hidePacksIfOneOrNone
    bool _get__hidePacksIfOneOrNone();
    // Set instance field: private System.Boolean _hidePacksIfOneOrNone
    void _set__hidePacksIfOneOrNone(bool value);
    // Get instance field: private System.Boolean _enableCustomLevels
    bool _get__enableCustomLevels();
    // Set instance field: private System.Boolean _enableCustomLevels
    void _set__enableCustomLevels(bool value);
    // Get instance field: private SongPackMask _songPackMask
    GlobalNamespace::SongPackMask _get__songPackMask();
    // Set instance field: private SongPackMask _songPackMask
    void _set__songPackMask(GlobalNamespace::SongPackMask value);
    // Get instance field: private SelectLevelCategoryViewController/LevelCategory[] _enabledLevelCategories
    ::Array<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>* _get__enabledLevelCategories();
    // Set instance field: private SelectLevelCategoryViewController/LevelCategory[] _enabledLevelCategories
    void _set__enabledLevelCategories(::Array<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>* value);
    // Get instance field: private IBeatmapLevelPack[] _ostBeatmapLevelPacks
    ::Array<GlobalNamespace::IBeatmapLevelPack*>* _get__ostBeatmapLevelPacks();
    // Set instance field: private IBeatmapLevelPack[] _ostBeatmapLevelPacks
    void _set__ostBeatmapLevelPacks(::Array<GlobalNamespace::IBeatmapLevelPack*>* value);
    // Get instance field: private IBeatmapLevelPack[] _musicPacksBeatmapLevelPacks
    ::Array<GlobalNamespace::IBeatmapLevelPack*>* _get__musicPacksBeatmapLevelPacks();
    // Set instance field: private IBeatmapLevelPack[] _musicPacksBeatmapLevelPacks
    void _set__musicPacksBeatmapLevelPacks(::Array<GlobalNamespace::IBeatmapLevelPack*>* value);
    // Get instance field: private IBeatmapLevelPack[] _customLevelPacks
    ::Array<GlobalNamespace::IBeatmapLevelPack*>* _get__customLevelPacks();
    // Set instance field: private IBeatmapLevelPack[] _customLevelPacks
    void _set__customLevelPacks(::Array<GlobalNamespace::IBeatmapLevelPack*>* value);
    // Get instance field: private IBeatmapLevelPack[] _allBeatmapLevelPacks
    ::Array<GlobalNamespace::IBeatmapLevelPack*>* _get__allBeatmapLevelPacks();
    // Set instance field: private IBeatmapLevelPack[] _allBeatmapLevelPacks
    void _set__allBeatmapLevelPacks(::Array<GlobalNamespace::IBeatmapLevelPack*>* value);
    // public IBeatmapLevelPack get_selectedBeatmapLevelPack()
    // Offset: 0x1F497B0
    GlobalNamespace::IBeatmapLevelPack* get_selectedBeatmapLevelPack();
    // public SelectLevelCategoryViewController/LevelCategory get_selectedLevelCategory()
    // Offset: 0x1F49810
    GlobalNamespace::SelectLevelCategoryViewController::LevelCategory get_selectedLevelCategory();
    // public System.Void add_didSelectAnnotatedBeatmapLevelCollectionEvent(System.Action`4<LevelFilteringNavigationController,IAnnotatedBeatmapLevelCollection,UnityEngine.GameObject,BeatmapCharacteristicSO> value)
    // Offset: 0x1F493D8
    void add_didSelectAnnotatedBeatmapLevelCollectionEvent(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>* value);
    // public System.Void remove_didSelectAnnotatedBeatmapLevelCollectionEvent(System.Action`4<LevelFilteringNavigationController,IAnnotatedBeatmapLevelCollection,UnityEngine.GameObject,BeatmapCharacteristicSO> value)
    // Offset: 0x1F4947C
    void remove_didSelectAnnotatedBeatmapLevelCollectionEvent(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>* value);
    // public System.Void add_didStartLoadingEvent(System.Action`1<LevelFilteringNavigationController> value)
    // Offset: 0x1F49520
    void add_didStartLoadingEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value);
    // public System.Void remove_didStartLoadingEvent(System.Action`1<LevelFilteringNavigationController> value)
    // Offset: 0x1F495C4
    void remove_didStartLoadingEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value);
    // public System.Void add_didPressAllSongsEvent(System.Action`1<LevelFilteringNavigationController> value)
    // Offset: 0x1F49668
    void add_didPressAllSongsEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value);
    // public System.Void remove_didPressAllSongsEvent(System.Action`1<LevelFilteringNavigationController> value)
    // Offset: 0x1F4970C
    void remove_didPressAllSongsEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value);
    // public System.Void Setup(SongPackMask songPackMask, IBeatmapLevelPack levelPackToBeSelectedAfterPresent, SelectLevelCategoryViewController/LevelCategory startLevelCategory, System.Boolean hidePacksIfOneOrNone, System.Boolean enableCustomLevels)
    // Offset: 0x1F4982C
    void Setup(GlobalNamespace::SongPackMask songPackMask, GlobalNamespace::IBeatmapLevelPack* levelPackToBeSelectedAfterPresent, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory startLevelCategory, bool hidePacksIfOneOrNone, bool enableCustomLevels);
    // private System.Void SetupBeatmapLevelPacks()
    // Offset: 0x1F49A94
    void SetupBeatmapLevelPacks();
    // private System.Void LevelSearchViewControllerDidStartLoading(LevelSearchViewController obj)
    // Offset: 0x1F4A200
    void LevelSearchViewControllerDidStartLoading(GlobalNamespace::LevelSearchViewController* obj);
    // private System.Void LevelSearchViewControllerDidFilterBeatmapLevelCollection(IAnnotatedBeatmapLevelCollection annotatedBeatmapLevelCollection, BeatmapCharacteristicSO preferredBeatmapCharacteristic)
    // Offset: 0x1F4A4D0
    void LevelSearchViewControllerDidFilterBeatmapLevelCollection(GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection, GlobalNamespace::BeatmapCharacteristicSO* preferredBeatmapCharacteristic);
    // private System.Void SelectLevelCategoryViewControllerDidSelectLevelCategory(SelectLevelCategoryViewController viewController, SelectLevelCategoryViewController/LevelCategory levelCategory)
    // Offset: 0x1F4A554
    void SelectLevelCategoryViewControllerDidSelectLevelCategory(GlobalNamespace::SelectLevelCategoryViewController* viewController, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory levelCategory);
    // private System.Void UpdateSecondChildControllerContent(SelectLevelCategoryViewController/LevelCategory levelCategory)
    // Offset: 0x1F49D54
    void UpdateSecondChildControllerContent(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory levelCategory);
    // private System.Void ShowPacksInSecondChildController(System.Collections.Generic.IReadOnlyList`1<IBeatmapLevelPack> beatmapLevelPacks)
    // Offset: 0x1F4A55C
    void ShowPacksInSecondChildController(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks);
    // private System.Void ReplaceSecondViewController(HMUI.ViewController viewController)
    // Offset: 0x1F4A7A4
    void ReplaceSecondViewController(HMUI::ViewController* viewController);
    // private System.Void HandlePlayerDataFavoriteLevelsSetDidChange()
    // Offset: 0x1F4A918
    void HandlePlayerDataFavoriteLevelsSetDidChange();
    // private System.Void HandleIncreaseNumberOfGameplays()
    // Offset: 0x1F4A974
    void HandleIncreaseNumberOfGameplays();
    // private System.Void HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection(IAnnotatedBeatmapLevelCollection annotatedBeatmapLevelCollection)
    // Offset: 0x1F4A9C0
    void HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection(GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection);
    // public System.Void SelectAnnotatedBeatmapLevelCollection(IBeatmapLevelPack levelPack)
    // Offset: 0x1F4AA40
    void SelectAnnotatedBeatmapLevelCollection(GlobalNamespace::IBeatmapLevelPack* levelPack);
    // private System.Void UpdateCustomSongs()
    // Offset: 0x1F4A858
    void UpdateCustomSongs();
    // private System.Boolean <SetupBeatmapLevelPacks>b__32_0(IBeatmapLevelPack pack)
    // Offset: 0x1F4AE20
    bool $SetupBeatmapLevelPacks$b__32_0(GlobalNamespace::IBeatmapLevelPack* pack);
    // private System.Boolean <SetupBeatmapLevelPacks>b__32_1(IBeatmapLevelPack pack)
    // Offset: 0x1F4AF00
    bool $SetupBeatmapLevelPacks$b__32_1(GlobalNamespace::IBeatmapLevelPack* pack);
    // public System.Void .ctor()
    // Offset: 0x1F4AE18
    // Implemented from: HMUI.NavigationController
    // Base method: System.Void NavigationController::.ctor()
    // Base method: System.Void ContainerViewController::.ctor()
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LevelFilteringNavigationController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LevelFilteringNavigationController*, creationType>()));
    }
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0x1F49F00
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // protected override System.Void DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    // Offset: 0x1F4A264
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    void DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling);
  }; // LevelFilteringNavigationController
  #pragma pack(pop)
  static check_size<sizeof(LevelFilteringNavigationController), 312 + sizeof(::Array<GlobalNamespace::IBeatmapLevelPack*>*)> __GlobalNamespace_LevelFilteringNavigationControllerSizeCheck;
  static_assert(sizeof(LevelFilteringNavigationController) == 0x140);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelFilteringNavigationController*, "", "LevelFilteringNavigationController");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::get_selectedBeatmapLevelPack
// Il2CppName: get_selectedBeatmapLevelPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IBeatmapLevelPack* (GlobalNamespace::LevelFilteringNavigationController::*)()>(&GlobalNamespace::LevelFilteringNavigationController::get_selectedBeatmapLevelPack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "get_selectedBeatmapLevelPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::get_selectedLevelCategory
// Il2CppName: get_selectedLevelCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory (GlobalNamespace::LevelFilteringNavigationController::*)()>(&GlobalNamespace::LevelFilteringNavigationController::get_selectedLevelCategory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "get_selectedLevelCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::add_didSelectAnnotatedBeatmapLevelCollectionEvent
// Il2CppName: add_didSelectAnnotatedBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&GlobalNamespace::LevelFilteringNavigationController::add_didSelectAnnotatedBeatmapLevelCollectionEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "LevelFilteringNavigationController"), ::il2cpp_utils::GetClassFromName("", "IAnnotatedBeatmapLevelCollection"), ::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("", "BeatmapCharacteristicSO")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "add_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent
// Il2CppName: remove_didSelectAnnotatedBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&GlobalNamespace::LevelFilteringNavigationController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "LevelFilteringNavigationController"), ::il2cpp_utils::GetClassFromName("", "IAnnotatedBeatmapLevelCollection"), ::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), ::il2cpp_utils::GetClassFromName("", "BeatmapCharacteristicSO")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "remove_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::add_didStartLoadingEvent
// Il2CppName: add_didStartLoadingEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*)>(&GlobalNamespace::LevelFilteringNavigationController::add_didStartLoadingEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "LevelFilteringNavigationController")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "add_didStartLoadingEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::remove_didStartLoadingEvent
// Il2CppName: remove_didStartLoadingEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*)>(&GlobalNamespace::LevelFilteringNavigationController::remove_didStartLoadingEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "LevelFilteringNavigationController")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "remove_didStartLoadingEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::add_didPressAllSongsEvent
// Il2CppName: add_didPressAllSongsEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*)>(&GlobalNamespace::LevelFilteringNavigationController::add_didPressAllSongsEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "LevelFilteringNavigationController")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "add_didPressAllSongsEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::remove_didPressAllSongsEvent
// Il2CppName: remove_didPressAllSongsEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*)>(&GlobalNamespace::LevelFilteringNavigationController::remove_didPressAllSongsEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "LevelFilteringNavigationController")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "remove_didPressAllSongsEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(GlobalNamespace::SongPackMask, GlobalNamespace::IBeatmapLevelPack*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, bool, bool)>(&GlobalNamespace::LevelFilteringNavigationController::Setup)> {
  static const MethodInfo* get() {
    static auto* songPackMask = &::il2cpp_utils::GetClassFromName("", "SongPackMask")->byval_arg;
    static auto* levelPackToBeSelectedAfterPresent = &::il2cpp_utils::GetClassFromName("", "IBeatmapLevelPack")->byval_arg;
    static auto* startLevelCategory = &::il2cpp_utils::GetClassFromName("", "SelectLevelCategoryViewController/LevelCategory")->byval_arg;
    static auto* hidePacksIfOneOrNone = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* enableCustomLevels = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songPackMask, levelPackToBeSelectedAfterPresent, startLevelCategory, hidePacksIfOneOrNone, enableCustomLevels});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::SetupBeatmapLevelPacks
// Il2CppName: SetupBeatmapLevelPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)()>(&GlobalNamespace::LevelFilteringNavigationController::SetupBeatmapLevelPacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "SetupBeatmapLevelPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::LevelSearchViewControllerDidStartLoading
// Il2CppName: LevelSearchViewControllerDidStartLoading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(GlobalNamespace::LevelSearchViewController*)>(&GlobalNamespace::LevelFilteringNavigationController::LevelSearchViewControllerDidStartLoading)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "LevelSearchViewController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "LevelSearchViewControllerDidStartLoading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::LevelSearchViewControllerDidFilterBeatmapLevelCollection
// Il2CppName: LevelSearchViewControllerDidFilterBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*)>(&GlobalNamespace::LevelFilteringNavigationController::LevelSearchViewControllerDidFilterBeatmapLevelCollection)> {
  static const MethodInfo* get() {
    static auto* annotatedBeatmapLevelCollection = &::il2cpp_utils::GetClassFromName("", "IAnnotatedBeatmapLevelCollection")->byval_arg;
    static auto* preferredBeatmapCharacteristic = &::il2cpp_utils::GetClassFromName("", "BeatmapCharacteristicSO")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "LevelSearchViewControllerDidFilterBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{annotatedBeatmapLevelCollection, preferredBeatmapCharacteristic});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::SelectLevelCategoryViewControllerDidSelectLevelCategory
// Il2CppName: SelectLevelCategoryViewControllerDidSelectLevelCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(GlobalNamespace::SelectLevelCategoryViewController*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory)>(&GlobalNamespace::LevelFilteringNavigationController::SelectLevelCategoryViewControllerDidSelectLevelCategory)> {
  static const MethodInfo* get() {
    static auto* viewController = &::il2cpp_utils::GetClassFromName("", "SelectLevelCategoryViewController")->byval_arg;
    static auto* levelCategory = &::il2cpp_utils::GetClassFromName("", "SelectLevelCategoryViewController/LevelCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "SelectLevelCategoryViewControllerDidSelectLevelCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewController, levelCategory});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::UpdateSecondChildControllerContent
// Il2CppName: UpdateSecondChildControllerContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory)>(&GlobalNamespace::LevelFilteringNavigationController::UpdateSecondChildControllerContent)> {
  static const MethodInfo* get() {
    static auto* levelCategory = &::il2cpp_utils::GetClassFromName("", "SelectLevelCategoryViewController/LevelCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "UpdateSecondChildControllerContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelCategory});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::ShowPacksInSecondChildController
// Il2CppName: ShowPacksInSecondChildController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IBeatmapLevelPack*>*)>(&GlobalNamespace::LevelFilteringNavigationController::ShowPacksInSecondChildController)> {
  static const MethodInfo* get() {
    static auto* beatmapLevelPacks = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IReadOnlyList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "IBeatmapLevelPack")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "ShowPacksInSecondChildController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{beatmapLevelPacks});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::ReplaceSecondViewController
// Il2CppName: ReplaceSecondViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(HMUI::ViewController*)>(&GlobalNamespace::LevelFilteringNavigationController::ReplaceSecondViewController)> {
  static const MethodInfo* get() {
    static auto* viewController = &::il2cpp_utils::GetClassFromName("HMUI", "ViewController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "ReplaceSecondViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewController});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::HandlePlayerDataFavoriteLevelsSetDidChange
// Il2CppName: HandlePlayerDataFavoriteLevelsSetDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)()>(&GlobalNamespace::LevelFilteringNavigationController::HandlePlayerDataFavoriteLevelsSetDidChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "HandlePlayerDataFavoriteLevelsSetDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::HandleIncreaseNumberOfGameplays
// Il2CppName: HandleIncreaseNumberOfGameplays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)()>(&GlobalNamespace::LevelFilteringNavigationController::HandleIncreaseNumberOfGameplays)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "HandleIncreaseNumberOfGameplays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection
// Il2CppName: HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(GlobalNamespace::IAnnotatedBeatmapLevelCollection*)>(&GlobalNamespace::LevelFilteringNavigationController::HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection)> {
  static const MethodInfo* get() {
    static auto* annotatedBeatmapLevelCollection = &::il2cpp_utils::GetClassFromName("", "IAnnotatedBeatmapLevelCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{annotatedBeatmapLevelCollection});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::SelectAnnotatedBeatmapLevelCollection
// Il2CppName: SelectAnnotatedBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(GlobalNamespace::IBeatmapLevelPack*)>(&GlobalNamespace::LevelFilteringNavigationController::SelectAnnotatedBeatmapLevelCollection)> {
  static const MethodInfo* get() {
    static auto* levelPack = &::il2cpp_utils::GetClassFromName("", "IBeatmapLevelPack")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "SelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelPack});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::UpdateCustomSongs
// Il2CppName: UpdateCustomSongs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)()>(&GlobalNamespace::LevelFilteringNavigationController::UpdateCustomSongs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "UpdateCustomSongs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_0
// Il2CppName: <SetupBeatmapLevelPacks>b__32_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::LevelFilteringNavigationController::*)(GlobalNamespace::IBeatmapLevelPack*)>(&GlobalNamespace::LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_0)> {
  static const MethodInfo* get() {
    static auto* pack = &::il2cpp_utils::GetClassFromName("", "IBeatmapLevelPack")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "<SetupBeatmapLevelPacks>b__32_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pack});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_1
// Il2CppName: <SetupBeatmapLevelPacks>b__32_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::LevelFilteringNavigationController::*)(GlobalNamespace::IBeatmapLevelPack*)>(&GlobalNamespace::LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_1)> {
  static const MethodInfo* get() {
    static auto* pack = &::il2cpp_utils::GetClassFromName("", "IBeatmapLevelPack")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "<SetupBeatmapLevelPacks>b__32_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pack});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(bool, bool, bool)>(&GlobalNamespace::LevelFilteringNavigationController::DidActivate)> {
  static const MethodInfo* get() {
    static auto* firstActivation = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* addedToHierarchy = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* screenSystemEnabling = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstActivation, addedToHierarchy, screenSystemEnabling});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LevelFilteringNavigationController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LevelFilteringNavigationController::*)(bool, bool)>(&GlobalNamespace::LevelFilteringNavigationController::DidDeactivate)> {
  static const MethodInfo* get() {
    static auto* removedFromHierarchy = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* screenSystemDisabling = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LevelFilteringNavigationController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{removedFromHierarchy, screenSystemDisabling});
  }
};
