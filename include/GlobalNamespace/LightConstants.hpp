// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: LightConstants
  class LightConstants;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::LightConstants);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LightConstants*, "", "LightConstants");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LightConstants
  // [TokenAttribute] Offset: FFFFFFFF
  class LightConstants : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::LightConstants::BakeId
    struct BakeId;
    // static field const value: static public System.Int32 kBaseLightId
    static constexpr const int kBaseLightId = 25;
    // Get static field: static public System.Int32 kBaseLightId
    static int _get_kBaseLightId();
    // Set static field: static public System.Int32 kBaseLightId
    static void _set_kBaseLightId(int value);
  }; // LightConstants
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
