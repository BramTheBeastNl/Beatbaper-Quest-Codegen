// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PosesRecordingData
  class PosesRecordingData;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IPosesSerializer
  class IPosesSerializer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::IPosesSerializer);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::IPosesSerializer*, "", "IPosesSerializer");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: IPosesSerializer
  // [TokenAttribute] Offset: FFFFFFFF
  class IPosesSerializer {
    public:
    // public System.Void SaveToOldFormat(System.String path, PosesRecordingData data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data);
    // public System.Void SaveRecording(System.String path, PosesRecordingData data, System.Boolean saveToOldFormat)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SaveRecording(::StringW path, ::GlobalNamespace::PosesRecordingData* data, bool saveToOldFormat);
    // public PosesRecordingData LoadRecording(System.String path)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::PosesRecordingData* LoadRecording(::StringW path);
    // public System.Boolean RecordingExists(System.String path)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool RecordingExists(::StringW path);
    // public System.Boolean RecordingCanBeCreated(System.String path)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool RecordingCanBeCreated(::StringW path);
  }; // IPosesSerializer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IPosesSerializer::SaveToOldFormat
// Il2CppName: SaveToOldFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IPosesSerializer::*)(::StringW, ::GlobalNamespace::PosesRecordingData*)>(&GlobalNamespace::IPosesSerializer::SaveToOldFormat)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("", "PosesRecordingData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPosesSerializer*), "SaveToOldFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IPosesSerializer::SaveRecording
// Il2CppName: SaveRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IPosesSerializer::*)(::StringW, ::GlobalNamespace::PosesRecordingData*, bool)>(&GlobalNamespace::IPosesSerializer::SaveRecording)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("", "PosesRecordingData")->byval_arg;
    static auto* saveToOldFormat = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPosesSerializer*), "SaveRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, data, saveToOldFormat});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IPosesSerializer::LoadRecording
// Il2CppName: LoadRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PosesRecordingData* (GlobalNamespace::IPosesSerializer::*)(::StringW)>(&GlobalNamespace::IPosesSerializer::LoadRecording)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPosesSerializer*), "LoadRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IPosesSerializer::RecordingExists
// Il2CppName: RecordingExists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::IPosesSerializer::*)(::StringW)>(&GlobalNamespace::IPosesSerializer::RecordingExists)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPosesSerializer*), "RecordingExists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IPosesSerializer::RecordingCanBeCreated
// Il2CppName: RecordingCanBeCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::IPosesSerializer::*)(::StringW)>(&GlobalNamespace::IPosesSerializer::RecordingCanBeCreated)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPosesSerializer*), "RecordingCanBeCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
