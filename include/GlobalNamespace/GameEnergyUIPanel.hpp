// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GameEnergyCounter
  class GameEnergyCounter;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x44
  // Autogenerated type: GameEnergyUIPanel
  // [] Offset: FFFFFFFF
  class GameEnergyUIPanel : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.UI.Image _energyBar
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::UI::Image* energyBar;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Image*) == 0x8);
    // [SpaceAttribute] Offset: 0xDC7888
    // private UnityEngine.UI.Image _batteryLifeSegmentPrefab
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::UI::Image* batteryLifeSegmentPrefab;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Image*) == 0x8);
    // [SpaceAttribute] Offset: 0xDC78C0
    // private System.Single _batterySegmentSeparatorWidth
    // Size: 0x4
    // Offset: 0x28
    float batterySegmentSeparatorWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _batterySegmentHorizontalPadding
    // Size: 0x4
    // Offset: 0x2C
    float batterySegmentHorizontalPadding;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [InjectAttribute] Offset: 0xDC7908
    // private GameEnergyCounter _gameEnergyCounter
    // Size: 0x8
    // Offset: 0x30
    GlobalNamespace::GameEnergyCounter* gameEnergyCounter;
    // Field size check
    static_assert(sizeof(GlobalNamespace::GameEnergyCounter*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UI.Image> _batteryLifeSegments
    // Size: 0x8
    // Offset: 0x38
    System::Collections::Generic::List_1<UnityEngine::UI::Image*>* batteryLifeSegments;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::UI::Image*>*) == 0x8);
    // private System.Int32 _activeBatteryLifeSegmentsCount
    // Size: 0x4
    // Offset: 0x40
    int activeBatteryLifeSegmentsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: GameEnergyUIPanel
    GameEnergyUIPanel(UnityEngine::UI::Image* energyBar_ = {}, UnityEngine::UI::Image* batteryLifeSegmentPrefab_ = {}, float batterySegmentSeparatorWidth_ = {}, float batterySegmentHorizontalPadding_ = {}, GlobalNamespace::GameEnergyCounter* gameEnergyCounter_ = {}, System::Collections::Generic::List_1<UnityEngine::UI::Image*>* batteryLifeSegments_ = {}, int activeBatteryLifeSegmentsCount_ = {}) noexcept : energyBar{energyBar_}, batteryLifeSegmentPrefab{batteryLifeSegmentPrefab_}, batterySegmentSeparatorWidth{batterySegmentSeparatorWidth_}, batterySegmentHorizontalPadding{batterySegmentHorizontalPadding_}, gameEnergyCounter{gameEnergyCounter_}, batteryLifeSegments{batteryLifeSegments_}, activeBatteryLifeSegmentsCount{activeBatteryLifeSegmentsCount_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void Start()
    // Offset: 0x1A18F10
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x1A1957C
    void OnDestroy();
    // private System.Void Cleanup()
    // Offset: 0x1A19034
    void Cleanup();
    // private System.Void HandleGameEnergyDidChange(System.Single energy)
    // Offset: 0x1A1940C
    void HandleGameEnergyDidChange(float energy);
    // public System.Void CreateUIForBatteryEnergyType(System.Int32 batteryLives)
    // Offset: 0x1A1910C
    void CreateUIForBatteryEnergyType(int batteryLives);
    // public System.Void .ctor()
    // Offset: 0x1A19580
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameEnergyUIPanel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameEnergyUIPanel").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameEnergyUIPanel*, creationType>()));
    }
  }; // GameEnergyUIPanel
  static check_size<sizeof(GameEnergyUIPanel), 64 + sizeof(int)> __GlobalNamespace_GameEnergyUIPanelSizeCheck;
  static_assert(sizeof(GameEnergyUIPanel) == 0x44);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::GameEnergyUIPanel*, "", "GameEnergyUIPanel");
#pragma pack(pop)
