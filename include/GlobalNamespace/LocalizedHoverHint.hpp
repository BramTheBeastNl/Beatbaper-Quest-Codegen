// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizedTextComponent`1
#include "Polyglot/LocalizedTextComponent_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: HoverHint
  class HoverHint;
}
// Forward declaring namespace: Polyglot
namespace Polyglot {
  // Skipping declaration: LanguageDirection because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: LocalizedHoverHint
  class LocalizedHoverHint : public Polyglot::LocalizedTextComponent_1<HMUI::HoverHint*> {
    public:
    // Creating value type constructor for type: LocalizedHoverHint
    LocalizedHoverHint() noexcept {}
    // protected System.Void SetText(HMUI.HoverHint hoverHint, System.String value)
    // Offset: 0x23FFC20
    void SetText(HMUI::HoverHint* hoverHint, ::Il2CppString* value);
    // protected System.Void UpdateAlignment(HMUI.HoverHint hoverHint, Polyglot.LanguageDirection direction)
    // Offset: 0x23FFC38
    void UpdateAlignment(HMUI::HoverHint* hoverHint, Polyglot::LanguageDirection direction);
    // public System.Void .ctor()
    // Offset: 0x23FFC3C
    // Implemented from: Polyglot.LocalizedTextComponent`1
    // Base method: System.Void LocalizedTextComponent_1::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocalizedHoverHint* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedHoverHint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocalizedHoverHint*, creationType>()));
    }
  }; // LocalizedHoverHint
  // Writing MetadataGetter for method: LocalizedHoverHint::SetText
  // Il2CppName: SetText
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalizedHoverHint::*)(HMUI::HoverHint*, ::Il2CppString*)>(&LocalizedHoverHint::SetText)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(LocalizedHoverHint*), "SetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::HoverHint*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: LocalizedHoverHint::UpdateAlignment
  // Il2CppName: UpdateAlignment
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalizedHoverHint::*)(HMUI::HoverHint*, Polyglot::LanguageDirection)>(&LocalizedHoverHint::UpdateAlignment)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(LocalizedHoverHint*), "UpdateAlignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::HoverHint*>(), ::il2cpp_utils::ExtractIndependentType<Polyglot::LanguageDirection>()});
    }
  };
  // Writing MetadataGetter for method: LocalizedHoverHint::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalizedHoverHint::*)()>(&LocalizedHoverHint::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(LocalizedHoverHint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalizedHoverHint::*)()>(&LocalizedHoverHint::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(LocalizedHoverHint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LocalizedHoverHint*, "", "LocalizedHoverHint");
