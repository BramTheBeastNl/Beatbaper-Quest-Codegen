// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayerSaveData
#include "GlobalNamespace/PlayerSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: PlayerSaveData/PlayerAgreementsData
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerSaveData::PlayerAgreementsData : public ::Il2CppObject {
    public:
    // public System.Int32 eulaVersion
    // Size: 0x4
    // Offset: 0x10
    int eulaVersion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 privacyPolicyVersion
    // Size: 0x4
    // Offset: 0x14
    int privacyPolicyVersion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 healthAndSafetyVersion
    // Size: 0x4
    // Offset: 0x18
    int healthAndSafetyVersion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: PlayerAgreementsData
    PlayerAgreementsData(int eulaVersion_ = {}, int privacyPolicyVersion_ = {}, int healthAndSafetyVersion_ = {}) noexcept : eulaVersion{eulaVersion_}, privacyPolicyVersion{privacyPolicyVersion_}, healthAndSafetyVersion{healthAndSafetyVersion_} {}
    // Get instance field reference: public System.Int32 eulaVersion
    int& dyn_eulaVersion();
    // Get instance field reference: public System.Int32 privacyPolicyVersion
    int& dyn_privacyPolicyVersion();
    // Get instance field reference: public System.Int32 healthAndSafetyVersion
    int& dyn_healthAndSafetyVersion();
    // public System.Void .ctor()
    // Offset: 0x11AAA08
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerSaveData::PlayerAgreementsData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::PlayerAgreementsData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerSaveData::PlayerAgreementsData*, creationType>()));
    }
  }; // PlayerSaveData/PlayerAgreementsData
  #pragma pack(pop)
  static check_size<sizeof(PlayerSaveData::PlayerAgreementsData), 24 + sizeof(int)> __GlobalNamespace_PlayerSaveData_PlayerAgreementsDataSizeCheck;
  static_assert(sizeof(PlayerSaveData::PlayerAgreementsData) == 0x1C);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::PlayerSaveData::PlayerAgreementsData*, "", "PlayerSaveData/PlayerAgreementsData");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PlayerSaveData::PlayerAgreementsData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
