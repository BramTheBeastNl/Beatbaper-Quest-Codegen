// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// WARNING Layout: Sequential may not be correctly taken into account!
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture
  class Texture;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  // Autogenerated type: OVROverlay/LayerTexture
  // [] Offset: FFFFFFFF
  struct OVROverlay::LayerTexture/*, public System::ValueType*/ {
    public:
    // public UnityEngine.Texture appTexture
    // Size: 0x8
    // Offset: 0x0
    UnityEngine::Texture* appTexture;
    // Field size check
    static_assert(sizeof(UnityEngine::Texture*) == 0x8);
    // public System.IntPtr appTexturePtr
    // Size: 0x8
    // Offset: 0x8
    System::IntPtr appTexturePtr;
    // Field size check
    static_assert(sizeof(System::IntPtr) == 0x8);
    // public UnityEngine.Texture[] swapChain
    // Size: 0x8
    // Offset: 0x10
    ::Array<UnityEngine::Texture*>* swapChain;
    // Field size check
    static_assert(sizeof(::Array<UnityEngine::Texture*>*) == 0x8);
    // public System.IntPtr[] swapChainPtr
    // Size: 0x8
    // Offset: 0x18
    ::Array<System::IntPtr>* swapChainPtr;
    // Field size check
    static_assert(sizeof(::Array<System::IntPtr>*) == 0x8);
    // Creating value type constructor for type: LayerTexture
    constexpr LayerTexture(UnityEngine::Texture* appTexture_ = {}, System::IntPtr appTexturePtr_ = {}, ::Array<UnityEngine::Texture*>* swapChain_ = {}, ::Array<System::IntPtr>* swapChainPtr_ = {}) noexcept : appTexture{appTexture_}, appTexturePtr{appTexturePtr_}, swapChain{swapChain_}, swapChainPtr{swapChainPtr_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // OVROverlay/LayerTexture
  static check_size<sizeof(OVROverlay::LayerTexture), 24 + sizeof(::Array<System::IntPtr>*)> __GlobalNamespace_OVROverlay_LayerTextureSizeCheck;
  static_assert(sizeof(OVROverlay::LayerTexture) == 0x20);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVROverlay::LayerTexture, "", "OVROverlay/LayerTexture");
#pragma pack(pop)
