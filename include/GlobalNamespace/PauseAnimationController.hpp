// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PauseAnimationController
  class PauseAnimationController : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.Animator _animator
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::Animator* animator;
    // Field size check
    static_assert(sizeof(UnityEngine::Animator*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE1C464
    // private System.Action resumeFromPauseAnimationDidFinishEvent
    // Size: 0x8
    // Offset: 0x20
    System::Action* resumeFromPauseAnimationDidFinishEvent;
    // Field size check
    static_assert(sizeof(System::Action*) == 0x8);
    // Creating value type constructor for type: PauseAnimationController
    PauseAnimationController(UnityEngine::Animator* animator_ = {}, System::Action* resumeFromPauseAnimationDidFinishEvent_ = {}) noexcept : animator{animator_}, resumeFromPauseAnimationDidFinishEvent{resumeFromPauseAnimationDidFinishEvent_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_resumeFromPauseAnimationDidFinishEvent(System.Action value)
    // Offset: 0x104D8C8
    void add_resumeFromPauseAnimationDidFinishEvent(System::Action* value);
    // public System.Void remove_resumeFromPauseAnimationDidFinishEvent(System.Action value)
    // Offset: 0x104D96C
    void remove_resumeFromPauseAnimationDidFinishEvent(System::Action* value);
    // protected System.Void Awake()
    // Offset: 0x104DA10
    void Awake();
    // public System.Void StartEnterPauseAnimation()
    // Offset: 0x104DA4C
    void StartEnterPauseAnimation();
    // public System.Void StartResumeFromPauseAnimation()
    // Offset: 0x104DACC
    void StartResumeFromPauseAnimation();
    // public System.Void EnterPauseAnimationDidFinish()
    // Offset: 0x104DB4C
    void EnterPauseAnimationDidFinish();
    // public System.Void ResumeFromPauseAnimationDidFinish()
    // Offset: 0x104DB88
    void ResumeFromPauseAnimationDidFinish();
    // public System.Void .ctor()
    // Offset: 0x104DBE0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PauseAnimationController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PauseAnimationController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PauseAnimationController*, creationType>()));
    }
  }; // PauseAnimationController
  #pragma pack(pop)
  static check_size<sizeof(PauseAnimationController), 32 + sizeof(System::Action*)> __GlobalNamespace_PauseAnimationControllerSizeCheck;
  static_assert(sizeof(PauseAnimationController) == 0x28);
  // Writing MetadataGetter for method: PauseAnimationController::add_resumeFromPauseAnimationDidFinishEvent
  // Il2CppName: add_resumeFromPauseAnimationDidFinishEvent
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PauseAnimationController::*)(System::Action*)>(&PauseAnimationController::add_resumeFromPauseAnimationDidFinishEvent)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PauseAnimationController*), "add_resumeFromPauseAnimationDidFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
    }
  };
  // Writing MetadataGetter for method: PauseAnimationController::remove_resumeFromPauseAnimationDidFinishEvent
  // Il2CppName: remove_resumeFromPauseAnimationDidFinishEvent
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PauseAnimationController::*)(System::Action*)>(&PauseAnimationController::remove_resumeFromPauseAnimationDidFinishEvent)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PauseAnimationController*), "remove_resumeFromPauseAnimationDidFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
    }
  };
  // Writing MetadataGetter for method: PauseAnimationController::Awake
  // Il2CppName: Awake
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PauseAnimationController::*)()>(&PauseAnimationController::Awake)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PauseAnimationController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PauseAnimationController::StartEnterPauseAnimation
  // Il2CppName: StartEnterPauseAnimation
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PauseAnimationController::*)()>(&PauseAnimationController::StartEnterPauseAnimation)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PauseAnimationController*), "StartEnterPauseAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PauseAnimationController::StartResumeFromPauseAnimation
  // Il2CppName: StartResumeFromPauseAnimation
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PauseAnimationController::*)()>(&PauseAnimationController::StartResumeFromPauseAnimation)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PauseAnimationController*), "StartResumeFromPauseAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PauseAnimationController::EnterPauseAnimationDidFinish
  // Il2CppName: EnterPauseAnimationDidFinish
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PauseAnimationController::*)()>(&PauseAnimationController::EnterPauseAnimationDidFinish)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PauseAnimationController*), "EnterPauseAnimationDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PauseAnimationController::ResumeFromPauseAnimationDidFinish
  // Il2CppName: ResumeFromPauseAnimationDidFinish
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PauseAnimationController::*)()>(&PauseAnimationController::ResumeFromPauseAnimationDidFinish)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PauseAnimationController*), "ResumeFromPauseAnimationDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PauseAnimationController::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PauseAnimationController::*)()>(&PauseAnimationController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PauseAnimationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PauseAnimationController::*)()>(&PauseAnimationController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PauseAnimationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::PauseAnimationController*, "", "PauseAnimationController");
