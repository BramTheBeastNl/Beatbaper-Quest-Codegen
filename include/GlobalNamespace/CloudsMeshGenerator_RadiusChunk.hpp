// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// WARNING Layout: Sequential may not be correctly taken into account!
// Begin includes
// Including type: CloudsMeshGenerator
#include "GlobalNamespace/CloudsMeshGenerator.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  // Autogenerated type: CloudsMeshGenerator/RadiusChunk
  // [] Offset: FFFFFFFF
  struct CloudsMeshGenerator::RadiusChunk/*, public System::ValueType*/ {
    public:
    // public System.Single normalizedStart
    // Size: 0x4
    // Offset: 0x0
    float normalizedStart;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single normalizedEnd
    // Size: 0x4
    // Offset: 0x4
    float normalizedEnd;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single absoluteStart
    // Size: 0x4
    // Offset: 0x8
    float absoluteStart;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single absoluteEnd
    // Size: 0x4
    // Offset: 0xC
    float absoluteEnd;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: RadiusChunk
    constexpr RadiusChunk(float normalizedStart_ = {}, float normalizedEnd_ = {}, float absoluteStart_ = {}, float absoluteEnd_ = {}) noexcept : normalizedStart{normalizedStart_}, normalizedEnd{normalizedEnd_}, absoluteStart{absoluteStart_}, absoluteEnd{absoluteEnd_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // CloudsMeshGenerator/RadiusChunk
  static check_size<sizeof(CloudsMeshGenerator::RadiusChunk), 12 + sizeof(float)> __GlobalNamespace_CloudsMeshGenerator_RadiusChunkSizeCheck;
  static_assert(sizeof(CloudsMeshGenerator::RadiusChunk) == 0x10);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::CloudsMeshGenerator::RadiusChunk, "", "CloudsMeshGenerator/RadiusChunk");
#pragma pack(pop)
