// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: <>c because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IComparable because it is already included!
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Tuple`2<T1, T2>
  template<typename T1, typename T2>
  class Tuple_2;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: SimpleTextDropdown
  class SimpleTextDropdown;
  // Forward declaring type: DropdownWithTableView
  class DropdownWithTableView;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IReadOnlyList`1<T>
  template<typename T>
  class IReadOnlyList_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ValueDropdownController`1<T>
  template<typename T>
  class ValueDropdownController_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::ValueDropdownController_1, "", "ValueDropdownController`1");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: ValueDropdownController`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ValueDropdownController_1 : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::ValueDropdownController_1::$$c<T>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: ValueDropdownController`1/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = ValueDropdownController_1<T>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly ValueDropdownController`1/<>c<T> <>9
      static typename GlobalNamespace::ValueDropdownController_1<T>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename GlobalNamespace::ValueDropdownController_1<T>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename ValueDropdownController_1<T>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly ValueDropdownController`1/<>c<T> <>9
      static void _set_$$9(typename GlobalNamespace::ValueDropdownController_1<T>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename ValueDropdownController_1<T>::$$c*>::get(), "<>9", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Func`2<System.Tuple`2<T,System.String>,System.String> <>9__7_0
      static System::Func_2<System::Tuple_2<T, ::StringW>*, ::StringW>* _get_$$9__7_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::$$c::_get_$$9__7_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Tuple_2<T, ::StringW>*, ::StringW>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename ValueDropdownController_1<T>::$$c*>::get(), "<>9__7_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Func`2<System.Tuple`2<T,System.String>,System.String> <>9__7_0
      static void _set_$$9__7_0(System::Func_2<System::Tuple_2<T, ::StringW>*, ::StringW>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::$$c::_set_$$9__7_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename ValueDropdownController_1<T>::$$c*>::get(), "<>9__7_0", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename ValueDropdownController_1<T>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // System.String <Start>b__7_0(System.Tuple`2<T,System.String> x)
      // Offset: 0xFFFFFFFF
      ::StringW $Start$b__7_0(System::Tuple_2<T, ::StringW>* x) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::$$c::<Start>b__7_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
        return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename ValueDropdownController_1<T>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename ValueDropdownController_1<T>::$$c*, creationType>()));
      }
    }; // ValueDropdownController`1/<>c
    // Could not write size check! Type: ValueDropdownController`1/<>c is generic, or has no fields that are valid for size checks!
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private HMUI.SimpleTextDropdown _simpleTextDropdown
    // Size: 0x8
    // Offset: 0x0
    HMUI::SimpleTextDropdown* simpleTextDropdown;
    // Field size check
    static_assert(sizeof(HMUI::SimpleTextDropdown*) == 0x8);
    // private System.Action`2<System.Int32,T> didSelectCellWithIdxEvent
    // Size: 0x8
    // Offset: 0x0
    System::Action_2<int, T>* didSelectCellWithIdxEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<int, T>*) == 0x8);
    // private System.Collections.Generic.IReadOnlyList`1<System.Tuple`2<T,System.String>> _namedValues
    // Size: 0x8
    // Offset: 0x0
    System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<T, ::StringW>*>* namedValues;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<T, ::StringW>*>*) == 0x8);
    public:
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Autogenerated instance field getter
    // Get instance field: private HMUI.SimpleTextDropdown _simpleTextDropdown
    HMUI::SimpleTextDropdown*& dyn__simpleTextDropdown() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::dyn__simpleTextDropdown");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleTextDropdown"))->offset;
      return *reinterpret_cast<HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`2<System.Int32,T> didSelectCellWithIdxEvent
    System::Action_2<int, T>*& dyn_didSelectCellWithIdxEvent() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::dyn_didSelectCellWithIdxEvent");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
      return *reinterpret_cast<System::Action_2<int, T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Tuple`2<T,System.String>> _namedValues
    System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<T, ::StringW>*>*& dyn__namedValues() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::dyn__namedValues");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namedValues"))->offset;
      return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<T, ::StringW>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private System.Collections.Generic.IReadOnlyList`1<System.Tuple`2<T,System.String>> get_namedValues()
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<T, ::StringW>*>* get_namedValues() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::get_namedValues");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_namedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<T, ::StringW>*>*, false>(this, ___internal__method);
    }
    // public System.Void add_didSelectCellWithIdxEvent(System.Action`2<System.Int32,T> value)
    // Offset: 0xFFFFFFFF
    void add_didSelectCellWithIdxEvent(System::Action_2<int, T>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::add_didSelectCellWithIdxEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_didSelectCellWithIdxEvent(System.Action`2<System.Int32,T> value)
    // Offset: 0xFFFFFFFF
    void remove_didSelectCellWithIdxEvent(System::Action_2<int, T>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::remove_didSelectCellWithIdxEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.Void Start()
    // Offset: 0xFFFFFFFF
    void Start() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::Start");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void OnDestroy()
    // Offset: 0xFFFFFFFF
    void OnDestroy() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::OnDestroy");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Collections.Generic.IReadOnlyList`1<System.Tuple`2<T,System.String>> GetNamedValues()
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<T, ::StringW>*>* GetNamedValues() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::GetNamedValues");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<T, ::StringW>*>*, false>(this, ___internal__method);
    }
    // public T GetSelectedItemValue()
    // Offset: 0xFFFFFFFF
    T GetSelectedItemValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::GetSelectedItemValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedItemValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method);
    }
    // public System.Void SelectCellWithValue(T value)
    // Offset: 0xFFFFFFFF
    void SelectCellWithValue(T value) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::SelectCellWithValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Int32 GetIdxForValue(T value)
    // Offset: 0xFFFFFFFF
    int GetIdxForValue(T value) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::GetIdxForValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIdxForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
    }
    // private System.Void HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI.DropdownWithTableView dropdownWithTableView, System.Int32 idx)
    // Offset: 0xFFFFFFFF
    void HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::HandleSimpleTextDropdownDidSelectCellWithIdx");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ValueDropdownController_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ValueDropdownController_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ValueDropdownController_1<T>*, creationType>()));
    }
  }; // ValueDropdownController`1
  // Could not write size check! Type: ValueDropdownController`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
