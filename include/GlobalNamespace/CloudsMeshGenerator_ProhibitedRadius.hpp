// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// WARNING Layout: Sequential may not be correctly taken into account!
// Begin includes
// Including type: CloudsMeshGenerator
#include "GlobalNamespace/CloudsMeshGenerator.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  // Autogenerated type: CloudsMeshGenerator/ProhibitedRadius
  // [] Offset: FFFFFFFF
  struct CloudsMeshGenerator::ProhibitedRadius/*, public System::ValueType*/ {
    public:
    // [NullAllowed] Offset: 0xDD3748
    // public UnityEngine.Transform transform
    // Size: 0x8
    // Offset: 0x0
    UnityEngine::Transform* transform;
    // Field size check
    static_assert(sizeof(UnityEngine::Transform*) == 0x8);
    // public System.Single distance
    // Size: 0x4
    // Offset: 0x8
    float distance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [MinAttribute] Offset: 0xDD3758
    // public System.Single radius
    // Size: 0x4
    // Offset: 0xC
    float radius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: ProhibitedRadius
    constexpr ProhibitedRadius(UnityEngine::Transform* transform_ = {}, float distance_ = {}, float radius_ = {}) noexcept : transform{transform_}, distance{distance_}, radius{radius_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // CloudsMeshGenerator/ProhibitedRadius
  static check_size<sizeof(CloudsMeshGenerator::ProhibitedRadius), 12 + sizeof(float)> __GlobalNamespace_CloudsMeshGenerator_ProhibitedRadiusSizeCheck;
  static_assert(sizeof(CloudsMeshGenerator::ProhibitedRadius) == 0x10);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::CloudsMeshGenerator::ProhibitedRadius, "", "CloudsMeshGenerator/ProhibitedRadius");
#pragma pack(pop)
