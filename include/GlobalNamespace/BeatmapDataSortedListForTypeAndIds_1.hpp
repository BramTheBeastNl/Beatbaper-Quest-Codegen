// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: <>c because it is already included!
  // Forward declaring type: BeatmapDataItem
  class BeatmapDataItem;
  // Forward declaring type: ISortedList`1<T>
  template<typename T>
  class ISortedList_1;
  // Forward declaring type: ISortedListItemProcessor`1<T>
  template<typename T>
  class ISortedListItemProcessor_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: LinkedListNode`1<T>
  template<typename T>
  class LinkedListNode_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BeatmapDataSortedListForTypeAndIds`1<TBase>
  template<typename TBase>
  class BeatmapDataSortedListForTypeAndIds_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1, "", "BeatmapDataSortedListForTypeAndIds`1");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: BeatmapDataSortedListForTypeAndIds`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TBase>
  class BeatmapDataSortedListForTypeAndIds_1 : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c<TBase>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: BeatmapDataSortedListForTypeAndIds`1/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = BeatmapDataSortedListForTypeAndIds_1<TBase>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly BeatmapDataSortedListForTypeAndIds`1/<>c<TBase> <>9
      static typename ::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly BeatmapDataSortedListForTypeAndIds`1/<>c<TBase> <>9
      static void _set_$$9(typename ::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c*>::get(), "<>9", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Func`2<ISortedList`1<TBase>,System.Collections.Generic.LinkedListNode`1<TBase>> <>9__1_0
      static ::System::Func_2<::GlobalNamespace::ISortedList_1<TBase>*, ::System::Collections::Generic::LinkedListNode_1<TBase>*>* _get_$$9__1_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::_get_$$9__1_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ISortedList_1<TBase>*, ::System::Collections::Generic::LinkedListNode_1<TBase>*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c*>::get(), "<>9__1_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Func`2<ISortedList`1<TBase>,System.Collections.Generic.LinkedListNode`1<TBase>> <>9__1_0
      static void _set_$$9__1_0(::System::Func_2<::GlobalNamespace::ISortedList_1<TBase>*, ::System::Collections::Generic::LinkedListNode_1<TBase>*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::_set_$$9__1_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c*>::get(), "<>9__1_0", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Func`2<System.Collections.Generic.LinkedListNode`1<TBase>,System.Boolean> <>9__1_1
      static ::System::Func_2<::System::Collections::Generic::LinkedListNode_1<TBase>*, bool>* _get_$$9__1_1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::_get_$$9__1_1");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::LinkedListNode_1<TBase>*, bool>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c*>::get(), "<>9__1_1")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Func`2<System.Collections.Generic.LinkedListNode`1<TBase>,System.Boolean> <>9__1_1
      static void _set_$$9__1_1(::System::Func_2<::System::Collections::Generic::LinkedListNode_1<TBase>*, bool>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::_set_$$9__1_1");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c*>::get(), "<>9__1_1", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename BeatmapDataSortedListForTypeAndIds_1<TBase>::$$c*, creationType>()));
      }
      // System.Collections.Generic.LinkedListNode`1<TBase> <get_sortedListHeads>b__1_0(ISortedList`1<TBase> listItem)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Collections::Generic::LinkedListNode_1<TBase>* $get_sortedListHeads$b__1_0(::GlobalNamespace::ISortedList_1<TBase>* listItem) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::<get_sortedListHeads>b__1_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_sortedListHeads>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listItem)})));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedListNode_1<TBase>*, false>(this, ___internal__method, listItem);
      }
      // System.Boolean <get_sortedListHeads>b__1_1(System.Collections.Generic.LinkedListNode`1<TBase> head)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool $get_sortedListHeads$b__1_1(::System::Collections::Generic::LinkedListNode_1<TBase>* head) {
        static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::$$c::<get_sortedListHeads>b__1_1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_sortedListHeads>b__1_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(head)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, head);
      }
    }; // BeatmapDataSortedListForTypeAndIds`1/<>c
    // Could not write size check! Type: BeatmapDataSortedListForTypeAndIds`1/<>c is generic, or has no fields that are valid for size checks!
    public:
    // private readonly System.Collections.Generic.Dictionary`2<System.ValueTuple`2<System.Type,System.Int32>,ISortedList`1<TBase>> _items
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::System::Type*, int>, ::GlobalNamespace::ISortedList_1<TBase>*>* items;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::System::Type*, int>, ::GlobalNamespace::ISortedList_1<TBase>*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.Type,ISortedListItemProcessor`1<TBase>> _sortedListsDataProcessors
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::ISortedListItemProcessor_1<TBase>*>* sortedListsDataProcessors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::ISortedListItemProcessor_1<TBase>*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<TBase,System.Collections.Generic.LinkedListNode`1<TBase>> _itemToNodeMap
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Dictionary_2<TBase, ::System::Collections::Generic::LinkedListNode_1<TBase>*>* itemToNodeMap;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<TBase, ::System::Collections::Generic::LinkedListNode_1<TBase>*>*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.ValueTuple`2<System.Type,System.Int32>,ISortedList`1<TBase>> _items
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::System::Type*, int>, ::GlobalNamespace::ISortedList_1<TBase>*>*& dyn__items() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::dyn__items");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::System::Type*, int>, ::GlobalNamespace::ISortedList_1<TBase>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,ISortedListItemProcessor`1<TBase>> _sortedListsDataProcessors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::ISortedListItemProcessor_1<TBase>*>*& dyn__sortedListsDataProcessors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::dyn__sortedListsDataProcessors");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortedListsDataProcessors"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::ISortedListItemProcessor_1<TBase>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Collections.Generic.Dictionary`2<TBase,System.Collections.Generic.LinkedListNode`1<TBase>> _itemToNodeMap
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<TBase, ::System::Collections::Generic::LinkedListNode_1<TBase>*>*& dyn__itemToNodeMap() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::dyn__itemToNodeMap");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemToNodeMap"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<TBase, ::System::Collections::Generic::LinkedListNode_1<TBase>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Collections.Generic.LinkedListNode`1<TBase>[] get_sortedListHeads()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<::System::Collections::Generic::LinkedListNode_1<TBase>*> get_sortedListHeads() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::get_sortedListHeads");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortedListHeads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Collections::Generic::LinkedListNode_1<TBase>*>, false>(this, ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BeatmapDataSortedListForTypeAndIds_1<TBase>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BeatmapDataSortedListForTypeAndIds_1<TBase>*, creationType>()));
    }
    // public System.Collections.Generic.LinkedListNode`1<TBase> InsertItem(TBase item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::LinkedListNode_1<TBase>* InsertItem(TBase item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::InsertItem");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedListNode_1<TBase>*, false>(this, ___internal__method, item);
    }
    // public System.Void RemoveItem(TBase item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RemoveItem(TBase item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::RemoveItem");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
    }
    // public System.Int32 GetCount(System.Int32 typeIdentifier)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    int GetCount(int typeIdentifier) {
      static_assert(std::is_convertible_v<T, TBase>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::GetCount");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCount", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeIdentifier)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___generic__method, typeIdentifier);
    }
    // public System.Collections.Generic.IEnumerable`1<T> GetItems(System.Int32 typeIdentifier)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::System::Collections::Generic::IEnumerable_1<T>* GetItems(int typeIdentifier) {
      static_assert(std::is_convertible_v<T, TBase>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::GetItems");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetItems", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeIdentifier)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<T>*, false>(this, ___generic__method, typeIdentifier);
    }
    // private ISortedList`1<TBase> GetList(System.Type type, System.Int32 typeIdentifier)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::ISortedList_1<TBase>* GetList(::System::Type* type, int typeIdentifier) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1::GetList");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(typeIdentifier)})));
      return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ISortedList_1<TBase>*, false>(this, ___internal__method, type, typeIdentifier);
    }
  }; // BeatmapDataSortedListForTypeAndIds`1
  // Could not write size check! Type: BeatmapDataSortedListForTypeAndIds`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
