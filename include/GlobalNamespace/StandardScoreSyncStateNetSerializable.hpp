// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: IPoolablePacket
#include "GlobalNamespace/IPoolablePacket.hpp"
// Including type: ISyncStateSerializable`1
#include "GlobalNamespace/ISyncStateSerializable_1.hpp"
// Including type: StandardScoreSyncState
#include "GlobalNamespace/StandardScoreSyncState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PacketPool`1<T>
  template<typename T>
  class PacketPool_1;
}
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
  // Forward declaring type: NetDataReader
  class NetDataReader;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: StandardScoreSyncStateNetSerializable
  class StandardScoreSyncStateNetSerializable : public ::Il2CppObject/*, public LiteNetLib::Utils::INetSerializable, public GlobalNamespace::IPoolablePacket, public GlobalNamespace::ISyncStateSerializable_1<GlobalNamespace::StandardScoreSyncState>*/ {
    public:
    // private StandardScoreSyncState _state
    // Size: 0x14
    // Offset: 0x10
    GlobalNamespace::StandardScoreSyncState state;
    // Field size check
    static_assert(sizeof(GlobalNamespace::StandardScoreSyncState) == 0x14);
    // [CompilerGeneratedAttribute] Offset: 0xDF1040
    // private SyncStateId <id>k__BackingField
    // Size: 0x1
    // Offset: 0x24
    GlobalNamespace::SyncStateId id;
    // Field size check
    static_assert(sizeof(GlobalNamespace::SyncStateId) == 0x1);
    // Padding between fields: id and: time
    char __padding1[0x3] = {};
    // [CompilerGeneratedAttribute] Offset: 0xDF1050
    // private System.Single <time>k__BackingField
    // Size: 0x4
    // Offset: 0x28
    float time;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: StandardScoreSyncStateNetSerializable
    StandardScoreSyncStateNetSerializable(GlobalNamespace::StandardScoreSyncState state_ = {}, GlobalNamespace::SyncStateId id_ = {}, float time_ = {}) noexcept : state{state_}, id{id_}, time{time_} {}
    // Creating interface conversion operator: operator LiteNetLib::Utils::INetSerializable
    operator LiteNetLib::Utils::INetSerializable() noexcept {
      return *reinterpret_cast<LiteNetLib::Utils::INetSerializable*>(this);
    }
    // Creating interface conversion operator: operator GlobalNamespace::IPoolablePacket
    operator GlobalNamespace::IPoolablePacket() noexcept {
      return *reinterpret_cast<GlobalNamespace::IPoolablePacket*>(this);
    }
    // Creating interface conversion operator: operator GlobalNamespace::ISyncStateSerializable_1<GlobalNamespace::StandardScoreSyncState>
    operator GlobalNamespace::ISyncStateSerializable_1<GlobalNamespace::StandardScoreSyncState>() noexcept {
      return *reinterpret_cast<GlobalNamespace::ISyncStateSerializable_1<GlobalNamespace::StandardScoreSyncState>*>(this);
    }
    // static public PacketPool`1<StandardScoreSyncStateNetSerializable> get_pool()
    // Offset: 0x237D478
    static GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateNetSerializable*>* get_pool();
    // public SyncStateId get_id()
    // Offset: 0x237D4C0
    GlobalNamespace::SyncStateId get_id();
    // public System.Void set_id(SyncStateId value)
    // Offset: 0x237D4C8
    void set_id(GlobalNamespace::SyncStateId value);
    // public System.Single get_time()
    // Offset: 0x237D4D0
    float get_time();
    // public System.Void set_time(System.Single value)
    // Offset: 0x237D4D8
    void set_time(float value);
    // public StandardScoreSyncState get_state()
    // Offset: 0x237D4E0
    GlobalNamespace::StandardScoreSyncState get_state();
    // public System.Void set_state(StandardScoreSyncState value)
    // Offset: 0x237D4F4
    void set_state(GlobalNamespace::StandardScoreSyncState value);
    // public System.Void Serialize(LiteNetLib.Utils.NetDataWriter writer)
    // Offset: 0x237D508
    void Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // public System.Void Deserialize(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0x237D57C
    void Deserialize(LiteNetLib::Utils::NetDataReader* reader);
    // public System.Void Release()
    // Offset: 0x237D5F0
    void Release();
    // public System.Void .ctor()
    // Offset: 0x237D64C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StandardScoreSyncStateNetSerializable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StandardScoreSyncStateNetSerializable*, creationType>()));
    }
  }; // StandardScoreSyncStateNetSerializable
  #pragma pack(pop)
  static check_size<sizeof(StandardScoreSyncStateNetSerializable), 40 + sizeof(float)> __GlobalNamespace_StandardScoreSyncStateNetSerializableSizeCheck;
  static_assert(sizeof(StandardScoreSyncStateNetSerializable) == 0x2C);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::StandardScoreSyncStateNetSerializable*, "", "StandardScoreSyncStateNetSerializable");
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::get_pool
// Il2CppName: get_pool
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::get_id
// Il2CppName: get_id
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::set_id
// Il2CppName: set_id
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::get_time
// Il2CppName: get_time
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::set_time
// Il2CppName: set_time
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::get_state
// Il2CppName: get_state
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::set_state
// Il2CppName: set_state
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::Serialize
// Il2CppName: Serialize
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::Deserialize
// Il2CppName: Deserialize
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::Release
// Il2CppName: Release
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::StandardScoreSyncStateNetSerializable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
