// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IMultiplayerSessionManager
  class IMultiplayerSessionManager;
  // Forward declaring type: RpcHandler`1<TType>
  template<typename TType>
  class RpcHandler_1;
  // Forward declaring type: PlayerSpecificSettingsAtStartNetSerializable
  class PlayerSpecificSettingsAtStartNetSerializable;
  // Forward declaring type: PlayerSpecificSettingsNetSerializable
  class PlayerSpecificSettingsNetSerializable;
  // Forward declaring type: NoteCutInfoNetSerializable
  class NoteCutInfoNetSerializable;
  // Forward declaring type: NoteMissInfoNetSerializable
  class NoteMissInfoNetSerializable;
  // Forward declaring type: LevelCompletionResults
  class LevelCompletionResults;
  // Forward declaring type: IConnectedPlayer
  class IConnectedPlayer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: GameplayRpcManager
  // [] Offset: FFFFFFFF
  class GameplayRpcManager : public ::Il2CppObject/*, public System::IDisposable, public GlobalNamespace::IGameplayRpcManager*/ {
    public:
    // Nested type: GlobalNamespace::GameplayRpcManager::RpcType
    struct RpcType;
    // Nested type: GlobalNamespace::GameplayRpcManager::SetGameplaySceneSyncFinishedRpc
    class SetGameplaySceneSyncFinishedRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::SetGameplaySceneReadyRpc
    class SetGameplaySceneReadyRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::GetGameplaySceneReadyRpc
    class GetGameplaySceneReadyRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::SetPlayerDidConnectLateRpc
    class SetPlayerDidConnectLateRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::SetGameplaySongReadyRpc
    class SetGameplaySongReadyRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::GetGameplaySongReadyRpc
    class GetGameplaySongReadyRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::SetSongStartTimeRpc
    class SetSongStartTimeRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::NoteCutRpc
    class NoteCutRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::NoteMissedRpc
    class NoteMissedRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::LevelFinishedRpc
    class LevelFinishedRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::ReturnToMenuRpc
    class ReturnToMenuRpc;
    // Nested type: GlobalNamespace::GameplayRpcManager::EndLevelEarlyRpc
    class EndLevelEarlyRpc;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: GameplayRpcManager/RpcType
    // [] Offset: FFFFFFFF
    struct RpcType/*, public System::Enum*/ {
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      // Creating value type constructor for type: RpcType
      constexpr RpcType(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public GameplayRpcManager/RpcType SetGameplaySceneSyncFinish
      static constexpr const uint8_t SetGameplaySceneSyncFinish = 0u;
      // Get static field: static public GameplayRpcManager/RpcType SetGameplaySceneSyncFinish
      static GlobalNamespace::GameplayRpcManager::RpcType _get_SetGameplaySceneSyncFinish();
      // Set static field: static public GameplayRpcManager/RpcType SetGameplaySceneSyncFinish
      static void _set_SetGameplaySceneSyncFinish(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType SetGameplaySceneReady
      static constexpr const uint8_t SetGameplaySceneReady = 1u;
      // Get static field: static public GameplayRpcManager/RpcType SetGameplaySceneReady
      static GlobalNamespace::GameplayRpcManager::RpcType _get_SetGameplaySceneReady();
      // Set static field: static public GameplayRpcManager/RpcType SetGameplaySceneReady
      static void _set_SetGameplaySceneReady(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType GetGameplaySceneReady
      static constexpr const uint8_t GetGameplaySceneReady = 2u;
      // Get static field: static public GameplayRpcManager/RpcType GetGameplaySceneReady
      static GlobalNamespace::GameplayRpcManager::RpcType _get_GetGameplaySceneReady();
      // Set static field: static public GameplayRpcManager/RpcType GetGameplaySceneReady
      static void _set_GetGameplaySceneReady(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType SetActivePlayerFailedToConnect
      static constexpr const uint8_t SetActivePlayerFailedToConnect = 3u;
      // Get static field: static public GameplayRpcManager/RpcType SetActivePlayerFailedToConnect
      static GlobalNamespace::GameplayRpcManager::RpcType _get_SetActivePlayerFailedToConnect();
      // Set static field: static public GameplayRpcManager/RpcType SetActivePlayerFailedToConnect
      static void _set_SetActivePlayerFailedToConnect(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType SetGameplaySongReady
      static constexpr const uint8_t SetGameplaySongReady = 4u;
      // Get static field: static public GameplayRpcManager/RpcType SetGameplaySongReady
      static GlobalNamespace::GameplayRpcManager::RpcType _get_SetGameplaySongReady();
      // Set static field: static public GameplayRpcManager/RpcType SetGameplaySongReady
      static void _set_SetGameplaySongReady(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType GetGameplaySongReady
      static constexpr const uint8_t GetGameplaySongReady = 5u;
      // Get static field: static public GameplayRpcManager/RpcType GetGameplaySongReady
      static GlobalNamespace::GameplayRpcManager::RpcType _get_GetGameplaySongReady();
      // Set static field: static public GameplayRpcManager/RpcType GetGameplaySongReady
      static void _set_GetGameplaySongReady(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType SetSongStartTime
      static constexpr const uint8_t SetSongStartTime = 6u;
      // Get static field: static public GameplayRpcManager/RpcType SetSongStartTime
      static GlobalNamespace::GameplayRpcManager::RpcType _get_SetSongStartTime();
      // Set static field: static public GameplayRpcManager/RpcType SetSongStartTime
      static void _set_SetSongStartTime(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType NoteCut
      static constexpr const uint8_t NoteCut = 7u;
      // Get static field: static public GameplayRpcManager/RpcType NoteCut
      static GlobalNamespace::GameplayRpcManager::RpcType _get_NoteCut();
      // Set static field: static public GameplayRpcManager/RpcType NoteCut
      static void _set_NoteCut(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType NoteMissed
      static constexpr const uint8_t NoteMissed = 8u;
      // Get static field: static public GameplayRpcManager/RpcType NoteMissed
      static GlobalNamespace::GameplayRpcManager::RpcType _get_NoteMissed();
      // Set static field: static public GameplayRpcManager/RpcType NoteMissed
      static void _set_NoteMissed(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType LevelFinished
      static constexpr const uint8_t LevelFinished = 9u;
      // Get static field: static public GameplayRpcManager/RpcType LevelFinished
      static GlobalNamespace::GameplayRpcManager::RpcType _get_LevelFinished();
      // Set static field: static public GameplayRpcManager/RpcType LevelFinished
      static void _set_LevelFinished(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType ReturnToMenu
      static constexpr const uint8_t ReturnToMenu = 10u;
      // Get static field: static public GameplayRpcManager/RpcType ReturnToMenu
      static GlobalNamespace::GameplayRpcManager::RpcType _get_ReturnToMenu();
      // Set static field: static public GameplayRpcManager/RpcType ReturnToMenu
      static void _set_ReturnToMenu(GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType EndLevelEarly
      static constexpr const uint8_t EndLevelEarly = 11u;
      // Get static field: static public GameplayRpcManager/RpcType EndLevelEarly
      static GlobalNamespace::GameplayRpcManager::RpcType _get_EndLevelEarly();
      // Set static field: static public GameplayRpcManager/RpcType EndLevelEarly
      static void _set_EndLevelEarly(GlobalNamespace::GameplayRpcManager::RpcType value);
    }; // GameplayRpcManager/RpcType
    #pragma pack(pop)
    static check_size<sizeof(GameplayRpcManager::RpcType), 0 + sizeof(uint8_t)> __GlobalNamespace_GameplayRpcManager_RpcTypeSizeCheck;
    static_assert(sizeof(GameplayRpcManager::RpcType) == 0x1);
    // private readonly IMultiplayerSessionManager _multiplayerSessionManager
    // Size: 0x8
    // Offset: 0x10
    GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager;
    // Field size check
    static_assert(sizeof(GlobalNamespace::IMultiplayerSessionManager*) == 0x8);
    // private readonly RpcHandler`1<GameplayRpcManager/RpcType> _rpcHandler
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::RpcHandler_1<GlobalNamespace::GameplayRpcManager::RpcType>* rpcHandler;
    // Field size check
    static_assert(sizeof(GlobalNamespace::RpcHandler_1<GlobalNamespace::GameplayRpcManager::RpcType>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD059A0
    // private System.Action`3<System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> setGameplaySceneSyncFinishedEvent
    // Size: 0x8
    // Offset: 0x20
    System::Action_3<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* setGameplaySceneSyncFinishedEvent;
    // Field size check
    static_assert(sizeof(System::Action_3<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD059B0
    // private System.Action`2<System.String,PlayerSpecificSettingsNetSerializable> setGameplaySceneReadyEvent
    // Size: 0x8
    // Offset: 0x28
    System::Action_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* setGameplaySceneReadyEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD059C0
    // private System.Action`1<System.String> getGameplaySceneReadyEvent
    // Size: 0x8
    // Offset: 0x30
    System::Action_1<::Il2CppString*>* getGameplaySceneReadyEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD059D0
    // private System.Action`4<System.String,System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> setPlayerDidConnectLateEvent
    // Size: 0x8
    // Offset: 0x38
    System::Action_4<::Il2CppString*, ::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* setPlayerDidConnectLateEvent;
    // Field size check
    static_assert(sizeof(System::Action_4<::Il2CppString*, ::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD059E0
    // private System.Action`1<System.String> setGameplaySongReadyEvent
    // Size: 0x8
    // Offset: 0x40
    System::Action_1<::Il2CppString*>* setGameplaySongReadyEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD059F0
    // private System.Action`1<System.String> getGameplaySongReadyEvent
    // Size: 0x8
    // Offset: 0x48
    System::Action_1<::Il2CppString*>* getGameplaySongReadyEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD05A00
    // private System.Action`2<System.String,System.Single> setSongStartTimeEvent
    // Size: 0x8
    // Offset: 0x50
    System::Action_2<::Il2CppString*, float>* setSongStartTimeEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, float>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD05A10
    // private System.Action`4<System.String,System.Single,System.Single,NoteCutInfoNetSerializable> noteWasCutEvent
    // Size: 0x8
    // Offset: 0x58
    System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteCutInfoNetSerializable*>* noteWasCutEvent;
    // Field size check
    static_assert(sizeof(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteCutInfoNetSerializable*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD05A20
    // private System.Action`4<System.String,System.Single,System.Single,NoteMissInfoNetSerializable> noteWasMissedEvent
    // Size: 0x8
    // Offset: 0x60
    System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteMissInfoNetSerializable*>* noteWasMissedEvent;
    // Field size check
    static_assert(sizeof(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteMissInfoNetSerializable*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD05A30
    // private System.Action`2<System.String,LevelCompletionResults> levelFinishedEvent
    // Size: 0x8
    // Offset: 0x68
    System::Action_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* levelFinishedEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD05A40
    // private System.Action`1<System.String> returnToMenuEvent
    // Size: 0x8
    // Offset: 0x70
    System::Action_1<::Il2CppString*>* returnToMenuEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD05A50
    // private System.Action`1<System.String> levelEndedEarlyEvent
    // Size: 0x8
    // Offset: 0x78
    System::Action_1<::Il2CppString*>* levelEndedEarlyEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // Creating value type constructor for type: GameplayRpcManager
    GameplayRpcManager(GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager_ = {}, GlobalNamespace::RpcHandler_1<GlobalNamespace::GameplayRpcManager::RpcType>* rpcHandler_ = {}, System::Action_3<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* setGameplaySceneSyncFinishedEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* setGameplaySceneReadyEvent_ = {}, System::Action_1<::Il2CppString*>* getGameplaySceneReadyEvent_ = {}, System::Action_4<::Il2CppString*, ::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* setPlayerDidConnectLateEvent_ = {}, System::Action_1<::Il2CppString*>* setGameplaySongReadyEvent_ = {}, System::Action_1<::Il2CppString*>* getGameplaySongReadyEvent_ = {}, System::Action_2<::Il2CppString*, float>* setSongStartTimeEvent_ = {}, System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteCutInfoNetSerializable*>* noteWasCutEvent_ = {}, System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteMissInfoNetSerializable*>* noteWasMissedEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* levelFinishedEvent_ = {}, System::Action_1<::Il2CppString*>* returnToMenuEvent_ = {}, System::Action_1<::Il2CppString*>* levelEndedEarlyEvent_ = {}) noexcept : multiplayerSessionManager{multiplayerSessionManager_}, rpcHandler{rpcHandler_}, setGameplaySceneSyncFinishedEvent{setGameplaySceneSyncFinishedEvent_}, setGameplaySceneReadyEvent{setGameplaySceneReadyEvent_}, getGameplaySceneReadyEvent{getGameplaySceneReadyEvent_}, setPlayerDidConnectLateEvent{setPlayerDidConnectLateEvent_}, setGameplaySongReadyEvent{setGameplaySongReadyEvent_}, getGameplaySongReadyEvent{getGameplaySongReadyEvent_}, setSongStartTimeEvent{setSongStartTimeEvent_}, noteWasCutEvent{noteWasCutEvent_}, noteWasMissedEvent{noteWasMissedEvent_}, levelFinishedEvent{levelFinishedEvent_}, returnToMenuEvent{returnToMenuEvent_}, levelEndedEarlyEvent{levelEndedEarlyEvent_} {}
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // Creating interface conversion operator: operator GlobalNamespace::IGameplayRpcManager
    operator GlobalNamespace::IGameplayRpcManager() noexcept {
      return *reinterpret_cast<GlobalNamespace::IGameplayRpcManager*>(this);
    }
    // static field const value: static private System.String kGameplayState
    static constexpr const char* kGameplayState = "in_gameplay";
    // Get static field: static private System.String kGameplayState
    static ::Il2CppString* _get_kGameplayState();
    // Set static field: static private System.String kGameplayState
    static void _set_kGameplayState(::Il2CppString* value);
    // public System.Boolean get_enabled()
    // Offset: 0x12111F0
    bool get_enabled();
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x12112B4
    void set_enabled(bool value);
    // public System.Void .ctor(IMultiplayerSessionManager multiplayerSessionManager)
    // Offset: 0x1211388
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameplayRpcManager* New_ctor(GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayRpcManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameplayRpcManager*, creationType>(multiplayerSessionManager)));
    }
    // public System.Void Dispose()
    // Offset: 0x1211808
    void Dispose_NEW();
    // public System.Boolean EnabledForPlayer(IConnectedPlayer player)
    // Offset: 0x121186C
    bool EnabledForPlayer(GlobalNamespace::IConnectedPlayer* player);
    // public System.Void add_setGameplaySceneSyncFinishedEvent(System.Action`3<System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> value)
    // Offset: 0x121192C
    void add_setGameplaySceneSyncFinishedEvent_NEW(System::Action_3<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* value);
    // public System.Void remove_setGameplaySceneSyncFinishedEvent(System.Action`3<System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> value)
    // Offset: 0x12119D0
    void remove_setGameplaySceneSyncFinishedEvent_NEW(System::Action_3<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* value);
    // public System.Void SetGameplaySceneSyncFinished(PlayerSpecificSettingsAtStartNetSerializable playersAtGameStartNetSerializable, System.String sessionGameId)
    // Offset: 0x1211A74
    void SetGameplaySceneSyncFinished_NEW(GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::Il2CppString* sessionGameId);
    // private System.Void InvokeSetGameplaySceneSyncFinishCallback(System.String userId, PlayerSpecificSettingsAtStartNetSerializable playersAtGameStart, System.String sessionGameId)
    // Offset: 0x1211AE4
    void InvokeSetGameplaySceneSyncFinishCallback(::Il2CppString* userId, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStart, ::Il2CppString* sessionGameId);
    // public System.Void add_setGameplaySceneReadyEvent(System.Action`2<System.String,PlayerSpecificSettingsNetSerializable> value)
    // Offset: 0x1211B74
    void add_setGameplaySceneReadyEvent_NEW(System::Action_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value);
    // public System.Void remove_setGameplaySceneReadyEvent(System.Action`2<System.String,PlayerSpecificSettingsNetSerializable> value)
    // Offset: 0x1211C18
    void remove_setGameplaySceneReadyEvent_NEW(System::Action_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value);
    // public System.Void SetGameplaySceneReady(PlayerSpecificSettingsNetSerializable playerSpecificSettings)
    // Offset: 0x1211CBC
    void SetGameplaySceneReady_NEW(GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettings);
    // private System.Void InvokeSetGameplaySceneReadyCallback(System.String userId, PlayerSpecificSettingsNetSerializable playerSpecificSettingsNetSerializable)
    // Offset: 0x1211D24
    void InvokeSetGameplaySceneReadyCallback(::Il2CppString* userId, GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettingsNetSerializable);
    // public System.Void add_getGameplaySceneReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x1211DA0
    void add_getGameplaySceneReadyEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getGameplaySceneReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x1211E44
    void remove_getGameplaySceneReadyEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetGameplaySceneReady()
    // Offset: 0x1211EE8
    void GetGameplaySceneReady_NEW();
    // private System.Void InvokeGetGameplaySceneReadyCallback(System.String userId)
    // Offset: 0x1211F40
    void InvokeGetGameplaySceneReadyCallback(::Il2CppString* userId);
    // public System.Void add_setPlayerDidConnectLateEvent(System.Action`4<System.String,System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> value)
    // Offset: 0x1211FB4
    void add_setPlayerDidConnectLateEvent_NEW(System::Action_4<::Il2CppString*, ::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* value);
    // public System.Void remove_setPlayerDidConnectLateEvent(System.Action`4<System.String,System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> value)
    // Offset: 0x1212058
    void remove_setPlayerDidConnectLateEvent_NEW(System::Action_4<::Il2CppString*, ::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::Il2CppString*>* value);
    // public System.Void SetPlayerDidConnectLate(System.String usedId, PlayerSpecificSettingsAtStartNetSerializable playersAtGameStartNetSerializable, System.String sessionGameId)
    // Offset: 0x12120FC
    void SetPlayerDidConnectLate_NEW(::Il2CppString* usedId, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::Il2CppString* sessionGameId);
    // private System.Void InvokeSetPlayerDidConnectLate(System.String userId, System.String failedUserId, PlayerSpecificSettingsAtStartNetSerializable playersAtGameStartNetSerializable, System.String sessionGameId)
    // Offset: 0x121217C
    void InvokeSetPlayerDidConnectLate(::Il2CppString* userId, ::Il2CppString* failedUserId, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::Il2CppString* sessionGameId);
    // public System.Void add_setGameplaySongReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x1212214
    void add_setGameplaySongReadyEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_setGameplaySongReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x12122B8
    void remove_setGameplaySongReadyEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void SetGameplaySongReady()
    // Offset: 0x121235C
    void SetGameplaySongReady_NEW();
    // private System.Void InvokeSetGameplaySongReadyCallback(System.String userId)
    // Offset: 0x12123B4
    void InvokeSetGameplaySongReadyCallback(::Il2CppString* userId);
    // public System.Void add_getGameplaySongReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x1212428
    void add_getGameplaySongReadyEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getGameplaySongReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x12124CC
    void remove_getGameplaySongReadyEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetGameplaySongReady()
    // Offset: 0x1212570
    void GetGameplaySongReady_NEW();
    // private System.Void InvokeGetGameplayLevelReadyCallback(System.String userId)
    // Offset: 0x12125C8
    void InvokeGetGameplayLevelReadyCallback(::Il2CppString* userId);
    // public System.Void add_setSongStartTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x121263C
    void add_setSongStartTimeEvent_NEW(System::Action_2<::Il2CppString*, float>* value);
    // public System.Void remove_setSongStartTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x12126E0
    void remove_setSongStartTimeEvent_NEW(System::Action_2<::Il2CppString*, float>* value);
    // public System.Void SetSongStartTime(System.Single startTime)
    // Offset: 0x1212784
    void SetSongStartTime_NEW(float startTime);
    // private System.Void InvokeSetSongStartTimeCallback(System.String userId, System.Single startTime)
    // Offset: 0x12127EC
    void InvokeSetSongStartTimeCallback(::Il2CppString* userId, float startTime);
    // public System.Void add_noteWasCutEvent(System.Action`4<System.String,System.Single,System.Single,NoteCutInfoNetSerializable> value)
    // Offset: 0x1212874
    void add_noteWasCutEvent_NEW(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteCutInfoNetSerializable*>* value);
    // public System.Void remove_noteWasCutEvent(System.Action`4<System.String,System.Single,System.Single,NoteCutInfoNetSerializable> value)
    // Offset: 0x1212918
    void remove_noteWasCutEvent_NEW(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteCutInfoNetSerializable*>* value);
    // public System.Void NoteCut(System.Single songTime, NoteCutInfoNetSerializable noteCutInfoNetSerializable)
    // Offset: 0x12129BC
    void NoteCut_NEW(float songTime, GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfoNetSerializable);
    // private System.Void InvokeNoteWasCutCallback(System.String userId, System.Single syncTime, System.Single songTime, NoteCutInfoNetSerializable noteCutInfo)
    // Offset: 0x1212A34
    void InvokeNoteWasCutCallback(::Il2CppString* userId, float syncTime, float songTime, GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfo);
    // public System.Void add_noteWasMissedEvent(System.Action`4<System.String,System.Single,System.Single,NoteMissInfoNetSerializable> value)
    // Offset: 0x1212ACC
    void add_noteWasMissedEvent_NEW(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteMissInfoNetSerializable*>* value);
    // public System.Void remove_noteWasMissedEvent(System.Action`4<System.String,System.Single,System.Single,NoteMissInfoNetSerializable> value)
    // Offset: 0x1212B70
    void remove_noteWasMissedEvent_NEW(System::Action_4<::Il2CppString*, float, float, GlobalNamespace::NoteMissInfoNetSerializable*>* value);
    // public System.Void NoteMissed(System.Single songTime, NoteMissInfoNetSerializable noteMissInfoNetSerializable)
    // Offset: 0x1212C14
    void NoteMissed_NEW(float songTime, GlobalNamespace::NoteMissInfoNetSerializable* noteMissInfoNetSerializable);
    // private System.Void InvokeNoteWasMissedCallback(System.String userId, System.Single syncTime, System.Single songTime, NoteMissInfoNetSerializable noteMissInfo)
    // Offset: 0x1212C8C
    void InvokeNoteWasMissedCallback(::Il2CppString* userId, float syncTime, float songTime, GlobalNamespace::NoteMissInfoNetSerializable* noteMissInfo);
    // public System.Void add_levelFinishedEvent(System.Action`2<System.String,LevelCompletionResults> value)
    // Offset: 0x1212D24
    void add_levelFinishedEvent_NEW(System::Action_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* value);
    // public System.Void remove_levelFinishedEvent(System.Action`2<System.String,LevelCompletionResults> value)
    // Offset: 0x1212DC8
    void remove_levelFinishedEvent_NEW(System::Action_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* value);
    // public System.Void LevelFinished(LevelCompletionResults results)
    // Offset: 0x1212E6C
    void LevelFinished_NEW(GlobalNamespace::LevelCompletionResults* results);
    // private System.Void InvokeLevelFinishedCallback(System.String userId, LevelCompletionResults results)
    // Offset: 0x1212ED4
    void InvokeLevelFinishedCallback(::Il2CppString* userId, GlobalNamespace::LevelCompletionResults* results);
    // public System.Void add_returnToMenuEvent(System.Action`1<System.String> value)
    // Offset: 0x1212F50
    void add_returnToMenuEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_returnToMenuEvent(System.Action`1<System.String> value)
    // Offset: 0x1212FF4
    void remove_returnToMenuEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void ReturnToMenu()
    // Offset: 0x1213098
    void ReturnToMenu_NEW();
    // private System.Void InvokeReturnToMenuCallback(System.String userId)
    // Offset: 0x12130F0
    void InvokeReturnToMenuCallback(::Il2CppString* userId);
    // public System.Void add_levelEndedEarlyEvent(System.Action`1<System.String> value)
    // Offset: 0x1213164
    void add_levelEndedEarlyEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_levelEndedEarlyEvent(System.Action`1<System.String> value)
    // Offset: 0x1213208
    void remove_levelEndedEarlyEvent_NEW(System::Action_1<::Il2CppString*>* value);
    // public System.Void EndLevelEarly()
    // Offset: 0x12132AC
    void EndLevelEarly_NEW();
    // private System.Void InvokeEndLevelEarlyCallback(System.String userId)
    // Offset: 0x1213304
    void InvokeEndLevelEarlyCallback(::Il2CppString* userId);
  }; // GameplayRpcManager
  #pragma pack(pop)
  static check_size<sizeof(GameplayRpcManager), 120 + sizeof(System::Action_1<::Il2CppString*>*)> __GlobalNamespace_GameplayRpcManagerSizeCheck;
  static_assert(sizeof(GameplayRpcManager) == 0x80);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::GameplayRpcManager*, "", "GameplayRpcManager");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::GameplayRpcManager::RpcType, "", "GameplayRpcManager/RpcType");
