// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// WARNING Layout: Sequential may not be correctly taken into account!
// Begin includes
// Including type: Noise3DTexturesGenerator
#include "GlobalNamespace/Noise3DTexturesGenerator.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppString;
template<class T>
struct Array;
// Completed il2cpp-utils forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  // Autogenerated type: Noise3DTexturesGenerator/MaterialTextureParamsCouple
  // [] Offset: FFFFFFFF
  struct Noise3DTexturesGenerator::MaterialTextureParamsCouple/*, public System::ValueType*/ {
    public:
    // public System.String globalPropertyName
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppString* globalPropertyName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public Noise3DTexturesGenerator/MaterialPropertyNameCouple[] materialPropertyNameCouples
    // Size: 0x8
    // Offset: 0x8
    ::Array<GlobalNamespace::Noise3DTexturesGenerator::MaterialPropertyNameCouple>* materialPropertyNameCouples;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::Noise3DTexturesGenerator::MaterialPropertyNameCouple>*) == 0x8);
    // Creating value type constructor for type: MaterialTextureParamsCouple
    constexpr MaterialTextureParamsCouple(::Il2CppString* globalPropertyName_ = {}, ::Array<GlobalNamespace::Noise3DTexturesGenerator::MaterialPropertyNameCouple>* materialPropertyNameCouples_ = {}) noexcept : globalPropertyName{globalPropertyName_}, materialPropertyNameCouples{materialPropertyNameCouples_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // Noise3DTexturesGenerator/MaterialTextureParamsCouple
  static check_size<sizeof(Noise3DTexturesGenerator::MaterialTextureParamsCouple), 8 + sizeof(::Array<GlobalNamespace::Noise3DTexturesGenerator::MaterialPropertyNameCouple>*)> __GlobalNamespace_Noise3DTexturesGenerator_MaterialTextureParamsCoupleSizeCheck;
  static_assert(sizeof(Noise3DTexturesGenerator::MaterialTextureParamsCouple) == 0x10);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::Noise3DTexturesGenerator::MaterialTextureParamsCouple, "", "Noise3DTexturesGenerator/MaterialTextureParamsCouple");
#pragma pack(pop)
