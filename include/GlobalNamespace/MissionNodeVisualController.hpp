// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MissionToggle
  class MissionToggle;
  // Forward declaring type: MissionNode
  class MissionNode;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MissionNodeVisualController
  class MissionNodeVisualController : public UnityEngine::MonoBehaviour {
    public:
    // private MissionToggle _missionToggle
    // Offset: 0x18
    GlobalNamespace::MissionToggle* missionToggle;
    // private MissionNode _missionNode
    // Offset: 0x20
    GlobalNamespace::MissionNode* missionNode;
    // private System.Action`1<MissionNodeVisualController> nodeWasSelectEvent
    // Offset: 0x28
    System::Action_1<GlobalNamespace::MissionNodeVisualController*>* nodeWasSelectEvent;
    // private System.Action`1<MissionNodeVisualController> nodeWasDisplayedEvent
    // Offset: 0x30
    System::Action_1<GlobalNamespace::MissionNodeVisualController*>* nodeWasDisplayedEvent;
    // private System.Boolean _selected
    // Offset: 0x38
    bool selected;
    // private System.Boolean _isInitialized
    // Offset: 0x39
    bool isInitialized;
    // private System.Boolean _cleared
    // Offset: 0x3A
    bool cleared;
    // private System.Boolean _interactable
    // Offset: 0x3B
    bool interactable;
    // public System.Void add_nodeWasSelectEvent(System.Action`1<MissionNodeVisualController> value)
    // Offset: 0xC05B94
    void add_nodeWasSelectEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value);
    // public System.Void remove_nodeWasSelectEvent(System.Action`1<MissionNodeVisualController> value)
    // Offset: 0xC05E40
    void remove_nodeWasSelectEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value);
    // public System.Void add_nodeWasDisplayedEvent(System.Action`1<MissionNodeVisualController> value)
    // Offset: 0xC05C38
    void add_nodeWasDisplayedEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value);
    // public System.Void remove_nodeWasDisplayedEvent(System.Action`1<MissionNodeVisualController> value)
    // Offset: 0xC05EE4
    void remove_nodeWasDisplayedEvent(System::Action_1<GlobalNamespace::MissionNodeVisualController*>* value);
    // public MissionNode get_missionNode()
    // Offset: 0xC060FC
    GlobalNamespace::MissionNode* get_missionNode();
    // public System.Boolean get_selected()
    // Offset: 0xC06104
    bool get_selected();
    // public System.Boolean get_isInitialized()
    // Offset: 0xC0610C
    bool get_isInitialized();
    // public System.Boolean get_cleared()
    // Offset: 0xC06114
    bool get_cleared();
    // public System.Boolean get_interactable()
    // Offset: 0xC0611C
    bool get_interactable();
    // public System.Void SetSelected(System.Boolean value)
    // Offset: 0xC05A20
    void SetSelected(bool value);
    // protected System.Void OnEnable()
    // Offset: 0xC06134
    void OnEnable();
    // protected System.Void Awake()
    // Offset: 0xC06198
    void Awake();
    // protected System.Void Start()
    // Offset: 0xC062EC
    void Start();
    // public System.Void Reset()
    // Offset: 0xC06348
    void Reset();
    // protected System.Void OnDestroy()
    // Offset: 0xC06350
    void OnDestroy();
    // public System.Void Init()
    // Offset: 0xC062F0
    void Init();
    // public System.Void Setup(System.Boolean cleared, System.Boolean interactable)
    // Offset: 0xC06540
    void Setup(bool cleared, bool interactable);
    // private System.Void SetupToggle()
    // Offset: 0xC064E4
    void SetupToggle();
    // public System.Void SetMissionCleared()
    // Offset: 0xC04774
    void SetMissionCleared();
    // public System.Void SetInteractable()
    // Offset: 0xC05000
    void SetInteractable();
    // public System.Void ChangeNodeSelection(System.Boolean selected)
    // Offset: 0xC0651C
    void ChangeNodeSelection(bool selected);
    // private System.Void HandleMissionToggleSelectionDidChange(MissionToggle toggle)
    // Offset: 0xC06618
    void HandleMissionToggleSelectionDidChange(GlobalNamespace::MissionToggle* toggle);
    // public System.Void .ctor()
    // Offset: 0xC0669C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MissionNodeVisualController* New_ctor();
  }; // MissionNodeVisualController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MissionNodeVisualController*, "", "MissionNodeVisualController");
#pragma pack(pop)
