// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MenuLightsPresetSO
  class MenuLightsPresetSO;
  // Forward declaring type: BeatmapSelectionView
  class BeatmapSelectionView;
  // Forward declaring type: ModifiersSelectionView
  class ModifiersSelectionView;
  // Forward declaring type: CountdownController
  class CountdownController;
  // Forward declaring type: MultiplayerLobbyCenterScreenLayoutAnimator
  class MultiplayerLobbyCenterScreenLayoutAnimator;
  // Forward declaring type: ILobbyPlayersDataModel
  class ILobbyPlayersDataModel;
  // Forward declaring type: MenuLightsManager
  class MenuLightsManager;
  // Forward declaring type: IPreviewBeatmapLevel
  class IPreviewBeatmapLevel;
  // Forward declaring type: BeatmapCharacteristicSO
  class BeatmapCharacteristicSO;
  // Forward declaring type: BeatmapDifficulty
  struct BeatmapDifficulty;
  // Forward declaring type: ILobbyPlayerDataModel
  class ILobbyPlayerDataModel;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: CenterStageScreenController
  class CenterStageScreenController : public UnityEngine::MonoBehaviour {
    public:
    // protected MenuLightsPresetSO _defaultMenuLightsPreset
    // Offset: 0x18
    GlobalNamespace::MenuLightsPresetSO* defaultMenuLightsPreset;
    // protected MenuLightsPresetSO _lobbyLightsPreset
    // Offset: 0x20
    GlobalNamespace::MenuLightsPresetSO* lobbyLightsPreset;
    // protected MenuLightsPresetSO _countdownMenuLightsPreset
    // Offset: 0x28
    GlobalNamespace::MenuLightsPresetSO* countdownMenuLightsPreset;
    // private BeatmapSelectionView _beatmapSelectionView
    // Offset: 0x30
    GlobalNamespace::BeatmapSelectionView* beatmapSelectionView;
    // private ModifiersSelectionView _modifiersSelectionView
    // Offset: 0x38
    GlobalNamespace::ModifiersSelectionView* modifiersSelectionView;
    // private CountdownController _countdownController
    // Offset: 0x40
    GlobalNamespace::CountdownController* countdownController;
    // private MultiplayerLobbyCenterScreenLayoutAnimator _multiplayerLobbyCenterScreenLayoutAnimator
    // Offset: 0x48
    GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator* multiplayerLobbyCenterScreenLayoutAnimator;
    // private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
    // Offset: 0x50
    GlobalNamespace::ILobbyPlayersDataModel* lobbyPlayersDataModel;
    // private readonly MenuLightsManager _menuLightsManager
    // Offset: 0x58
    GlobalNamespace::MenuLightsManager* menuLightsManager;
    // private System.Boolean <countdownShown>k__BackingField
    // Offset: 0x60
    bool countdownShown;
    // private System.Single _countdownEndTime
    // Offset: 0x64
    float countdownEndTime;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Boolean get_countdownShown()
    // Offset: 0xF1CEF0
    bool get_countdownShown();
    // private System.Void set_countdownShown(System.Boolean value)
    // Offset: 0xF1CEF8
    void set_countdownShown(bool value);
    // public System.Void Setup(System.Boolean showModifiers)
    // Offset: 0xF1CF04
    void Setup(bool showModifiers);
    // public System.Void Show()
    // Offset: 0xF1CF40
    void Show();
    // public System.Void Hide()
    // Offset: 0xF1D4C8
    void Hide();
    // public System.Void ShowCountdown(System.Single countdownEndTime)
    // Offset: 0xF1D640
    void ShowCountdown(float countdownEndTime);
    // public System.Void HideCountdown(System.Boolean instant)
    // Offset: 0xF1D5FC
    void HideCountdown(bool instant);
    // public System.Void SetCountdownEndTime(System.Single countdownEndTime)
    // Offset: 0xF1D7F8
    void SetCountdownEndTime(float countdownEndTime);
    // public System.Void ShowCountdownColorPreset(System.Boolean animated)
    // Offset: 0xF1D8C8
    void ShowCountdownColorPreset(bool animated);
    // public System.Void ShowLobbyColorPreset(System.Boolean animated)
    // Offset: 0xF1D188
    void ShowLobbyColorPreset(bool animated);
    // public System.Void SetHostDataManual(IPreviewBeatmapLevel previewBeatmapLevel, BeatmapCharacteristicSO beatmapCharacteristic, BeatmapDifficulty beatmapDifficulty)
    // Offset: 0xF1D8F4
    void SetHostDataManual(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty beatmapDifficulty);
    // private System.Void SetNextGameData(ILobbyPlayerDataModel playerData)
    // Offset: 0xF1D1B4
    void SetNextGameData(GlobalNamespace::ILobbyPlayerDataModel* playerData);
    // private System.Void HandleLobbyPlayersDataModelDidChange(System.String userId)
    // Offset: 0xF1D91C
    void HandleLobbyPlayersDataModelDidChange(::Il2CppString* userId);
    // public System.Void .ctor()
    // Offset: 0xF1DA7C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static CenterStageScreenController* New_ctor();
  }; // CenterStageScreenController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::CenterStageScreenController*, "", "CenterStageScreenController");
#pragma pack(pop)
