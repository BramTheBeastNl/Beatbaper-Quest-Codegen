// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: DiContainer
  class DiContainer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: RecordingTool
  class RecordingTool;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::RecordingTool);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::RecordingTool*, "", "RecordingTool");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: RecordingTool
  // [TokenAttribute] Offset: FFFFFFFF
  class RecordingTool : public ::Il2CppObject {
    public:
    // static field const value: static public System.String kRecordingToolId
    static constexpr const char* kRecordingToolId = "RecordingTool";
    // Get static field: static public System.String kRecordingToolId
    static ::StringW _get_kRecordingToolId();
    // Set static field: static public System.String kRecordingToolId
    static void _set_kRecordingToolId(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x1454974
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RecordingTool* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingTool::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RecordingTool*, creationType>()));
    }
    // static public System.Void InstallDependencies(Zenject.DiContainer container)
    // Offset: 0x1454868
    static void InstallDependencies(::Zenject::DiContainer* container);
  }; // RecordingTool
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::RecordingTool::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::RecordingTool::InstallDependencies
// Il2CppName: InstallDependencies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Zenject::DiContainer*)>(&GlobalNamespace::RecordingTool::InstallDependencies)> {
  static const MethodInfo* get() {
    static auto* container = &::il2cpp_utils::GetClassFromName("Zenject", "DiContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecordingTool*), "InstallDependencies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{container});
  }
};
