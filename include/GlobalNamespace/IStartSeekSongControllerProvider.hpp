// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IStartSeekSongController
  class IStartSeekSongController;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IStartSeekSongControllerProvider
  class IStartSeekSongControllerProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(GlobalNamespace::IStartSeekSongControllerProvider);
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::IStartSeekSongControllerProvider*, "", "IStartSeekSongControllerProvider");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: IStartSeekSongControllerProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class IStartSeekSongControllerProvider {
    public:
    // public IStartSeekSongController get_songController()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::IStartSeekSongController* get_songController();
  }; // IStartSeekSongControllerProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IStartSeekSongControllerProvider::get_songController
// Il2CppName: get_songController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IStartSeekSongController* (GlobalNamespace::IStartSeekSongControllerProvider::*)()>(&GlobalNamespace::IStartSeekSongControllerProvider::get_songController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IStartSeekSongControllerProvider*), "get_songController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
