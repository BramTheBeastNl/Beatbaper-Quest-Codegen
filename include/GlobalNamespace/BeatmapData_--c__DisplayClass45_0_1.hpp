// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapDataItem
  class BeatmapDataItem;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: LinkedListNode`1<T>
  template<typename T>
  class LinkedListNode_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::GlobalNamespace::BeatmapData::$$c__DisplayClass45_0_1, "", "BeatmapData/<>c__DisplayClass45_0`1");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: BeatmapData/<>c__DisplayClass45_0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  template<typename T>
  class BeatmapData::$$c__DisplayClass45_0_1 : public ::Il2CppObject {
    public:
    public:
    // public System.Int32[] subtypeGroupIdentifiers
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<int> subtypeGroupIdentifiers;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    public:
    // Creating conversion operator: operator ::ArrayW<int>
    constexpr operator ::ArrayW<int>() const noexcept {
      return subtypeGroupIdentifiers;
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Int32[] subtypeGroupIdentifiers
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_subtypeGroupIdentifiers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::$$c__DisplayClass45_0_1::dyn_subtypeGroupIdentifiers");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subtypeGroupIdentifiers"))->offset;
      return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BeatmapData::$$c__DisplayClass45_0_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::$$c__DisplayClass45_0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BeatmapData::$$c__DisplayClass45_0_1<T>*, creationType>()));
    }
    // System.Boolean <GetBeatmapDataItemsMerged>b__0(System.Collections.Generic.LinkedListNode`1<BeatmapDataItem> head)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool $GetBeatmapDataItemsMerged$b__0(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* head) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::$$c__DisplayClass45_0_1::<GetBeatmapDataItemsMerged>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetBeatmapDataItemsMerged>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(head)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, head);
    }
  }; // BeatmapData/<>c__DisplayClass45_0`1
  // Could not write size check! Type: BeatmapData/<>c__DisplayClass45_0`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
