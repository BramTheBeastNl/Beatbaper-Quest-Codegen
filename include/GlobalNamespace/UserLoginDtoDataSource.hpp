// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.API.IUserLoginDtoDataSource
#include "OnlineServices/API/IUserLoginDtoDataSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IPlatformUserModel
  class IPlatformUserModel;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Forward declaring namespace: BeatSaberAPI::DataTransferObjects
namespace BeatSaberAPI::DataTransferObjects {
  // Forward declaring type: UserAuthenticationData
  class UserAuthenticationData;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UserLoginDtoDataSource
  class UserLoginDtoDataSource : public ::Il2CppObject/*, public OnlineServices::API::IUserLoginDtoDataSource*/ {
    public:
    // Nested type: GlobalNamespace::UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2
    struct $GetPlatformUserIdAsync$d__2;
    // Nested type: GlobalNamespace::UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3
    struct $UserAuthenticationDataAsync$d__3;
    // Nested type: GlobalNamespace::UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4
    struct $GetUserFriendsUserIds$d__4;
    // [InjectAttribute] Offset: 0xE18130
    // private readonly IPlatformUserModel _platformUserModel
    // Size: 0x8
    // Offset: 0x10
    GlobalNamespace::IPlatformUserModel* platformUserModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::IPlatformUserModel*) == 0x8);
    // Creating value type constructor for type: UserLoginDtoDataSource
    UserLoginDtoDataSource(GlobalNamespace::IPlatformUserModel* platformUserModel_ = {}) noexcept : platformUserModel{platformUserModel_} {}
    // Creating interface conversion operator: operator OnlineServices::API::IUserLoginDtoDataSource
    operator OnlineServices::API::IUserLoginDtoDataSource() noexcept {
      return *reinterpret_cast<OnlineServices::API::IUserLoginDtoDataSource*>(this);
    }
    // Creating conversion operator: operator GlobalNamespace::IPlatformUserModel*
    constexpr operator GlobalNamespace::IPlatformUserModel*() const noexcept {
      return platformUserModel;
    }
    // static field const value: static private System.String kVersion
    static constexpr const char* kVersion = "0.0.1";
    // Get static field: static private System.String kVersion
    static ::Il2CppString* _get_kVersion();
    // Set static field: static private System.String kVersion
    static void _set_kVersion(::Il2CppString* value);
    // public System.Threading.Tasks.Task`1<System.String> GetPlatformUserIdAsync(System.Threading.CancellationToken cancellationToken)
    // Offset: 0x1DA9058
    System::Threading::Tasks::Task_1<::Il2CppString*>* GetPlatformUserIdAsync(System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<BeatSaberAPI.DataTransferObjects.UserAuthenticationData> UserAuthenticationDataAsync(System.Threading.CancellationToken cancellationToken)
    // Offset: 0x1DA9158
    System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::UserAuthenticationData*>* UserAuthenticationDataAsync(System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<System.String[]> GetUserFriendsUserIds(System.Threading.CancellationToken cancellationToken)
    // Offset: 0x1DA925C
    System::Threading::Tasks::Task_1<::Array<::Il2CppString*>*>* GetUserFriendsUserIds(System::Threading::CancellationToken cancellationToken);
    // public System.Void .ctor()
    // Offset: 0x1DA935C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UserLoginDtoDataSource* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UserLoginDtoDataSource*, creationType>()));
    }
  }; // UserLoginDtoDataSource
  #pragma pack(pop)
  static check_size<sizeof(UserLoginDtoDataSource), 16 + sizeof(GlobalNamespace::IPlatformUserModel*)> __GlobalNamespace_UserLoginDtoDataSourceSizeCheck;
  static_assert(sizeof(UserLoginDtoDataSource) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::UserLoginDtoDataSource*, "", "UserLoginDtoDataSource");
// Writing MetadataGetter for method: UserLoginDtoDataSource::GetPlatformUserIdAsync
// Il2CppName: GetPlatformUserIdAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (UserLoginDtoDataSource::*)(System::Threading::CancellationToken)>(&UserLoginDtoDataSource::GetPlatformUserIdAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), "GetPlatformUserIdAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: UserLoginDtoDataSource::UserAuthenticationDataAsync
// Il2CppName: UserAuthenticationDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::UserAuthenticationData*>* (UserLoginDtoDataSource::*)(System::Threading::CancellationToken)>(&UserLoginDtoDataSource::UserAuthenticationDataAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), "UserAuthenticationDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: UserLoginDtoDataSource::GetUserFriendsUserIds
// Il2CppName: GetUserFriendsUserIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Array<::Il2CppString*>*>* (UserLoginDtoDataSource::*)(System::Threading::CancellationToken)>(&UserLoginDtoDataSource::GetUserFriendsUserIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), "GetUserFriendsUserIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: UserLoginDtoDataSource::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::*)()>(&UserLoginDtoDataSource::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::*)()>(&UserLoginDtoDataSource::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
