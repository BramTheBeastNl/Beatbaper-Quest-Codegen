// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSessionManager
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IConnectedPlayer
  class IConnectedPlayer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: MultiplayerSessionManager/<>c__DisplayClass96_0
  // [CompilerGeneratedAttribute] Offset: DF04A0
  class MultiplayerSessionManager::$$c__DisplayClass96_0 : public ::Il2CppObject {
    public:
    // public System.String userId
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* userId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass96_0
    $$c__DisplayClass96_0(::Il2CppString* userId_ = {}) noexcept : userId{userId_} {}
    // Creating conversion operator: operator ::Il2CppString*
    constexpr operator ::Il2CppString*() const noexcept {
      return userId;
    }
    // System.Boolean <GetConnectedPlayerByUserId>b__0(IConnectedPlayer player)
    // Offset: 0x1504388
    bool $GetConnectedPlayerByUserId$b__0(GlobalNamespace::IConnectedPlayer* player);
    // public System.Void .ctor()
    // Offset: 0x1503FA0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerSessionManager::$$c__DisplayClass96_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass96_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerSessionManager::$$c__DisplayClass96_0*, creationType>()));
    }
  }; // MultiplayerSessionManager/<>c__DisplayClass96_0
  #pragma pack(pop)
  static check_size<sizeof(MultiplayerSessionManager::$$c__DisplayClass96_0), 16 + sizeof(::Il2CppString*)> __GlobalNamespace_MultiplayerSessionManager_$$c__DisplayClass96_0SizeCheck;
  static_assert(sizeof(MultiplayerSessionManager::$$c__DisplayClass96_0) == 0x18);
  // Writing MetadataGetter for method: MultiplayerSessionManager::$$c__DisplayClass96_0::$GetConnectedPlayerByUserId$b__0
  // Il2CppName: <GetConnectedPlayerByUserId>b__0
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MultiplayerSessionManager::$$c__DisplayClass96_0::*)(GlobalNamespace::IConnectedPlayer*)>(&MultiplayerSessionManager::$$c__DisplayClass96_0::$GetConnectedPlayerByUserId$b__0)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(MultiplayerSessionManager::$$c__DisplayClass96_0*), "<GetConnectedPlayerByUserId>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IConnectedPlayer*>()});
    }
  };
  // Writing MetadataGetter for method: MultiplayerSessionManager::$$c__DisplayClass96_0::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSessionManager::$$c__DisplayClass96_0::*)()>(&MultiplayerSessionManager::$$c__DisplayClass96_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(MultiplayerSessionManager::$$c__DisplayClass96_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSessionManager::$$c__DisplayClass96_0::*)()>(&MultiplayerSessionManager::$$c__DisplayClass96_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(MultiplayerSessionManager::$$c__DisplayClass96_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass96_0*, "", "MultiplayerSessionManager/<>c__DisplayClass96_0");
