// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MaterialPropertyBlockController
  class MaterialPropertyBlockController;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: MeshFilter
  class MeshFilter;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: TestNoteRibbonVisuals
  class TestNoteRibbonVisuals : public UnityEngine::MonoBehaviour {
    public:
    // private System.Single _time
    // Offset: 0x18
    float time;
    // private System.Single _beatTime
    // Offset: 0x1C
    float beatTime;
    // private System.Single _noteDuration
    // Offset: 0x20
    float noteDuration;
    // private System.Single _width
    // Offset: 0x24
    float width;
    // private System.Single _jumpLength
    // Offset: 0x28
    float jumpLength;
    // private System.Single _jumpDuration
    // Offset: 0x2C
    float jumpDuration;
    // private System.Single _moveLength
    // Offset: 0x30
    float moveLength;
    // private System.Single _moveDuration
    // Offset: 0x34
    float moveDuration;
    // private UnityEngine.Vector2 _splitPoint
    // Offset: 0x38
    UnityEngine::Vector2 splitPoint;
    // private UnityEngine.Color _color
    // Offset: 0x40
    UnityEngine::Color color;
    // private System.Single _jumpGravity
    // Offset: 0x50
    float jumpGravity;
    // private System.Single _alpha
    // Offset: 0x54
    float alpha;
    // private MaterialPropertyBlockController _jumpPartMaterialPropertyBlockController
    // Offset: 0x58
    GlobalNamespace::MaterialPropertyBlockController* jumpPartMaterialPropertyBlockController;
    // private MaterialPropertyBlockController _movePartMaterialPropertyBlockController
    // Offset: 0x60
    GlobalNamespace::MaterialPropertyBlockController* movePartMaterialPropertyBlockController;
    // private UnityEngine.Transform _jumpPartTransform
    // Offset: 0x68
    UnityEngine::Transform* jumpPartTransform;
    // private UnityEngine.Transform _movePartTransform
    // Offset: 0x70
    UnityEngine::Transform* movePartTransform;
    // private UnityEngine.MeshFilter _jumpPartMeshFilter
    // Offset: 0x78
    UnityEngine::MeshFilter* jumpPartMeshFilter;
    // private UnityEngine.MeshFilter _movePartMeshFilter
    // Offset: 0x80
    UnityEngine::MeshFilter* movePartMeshFilter;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get static field: static private readonly System.Int32 _splitPointId
    static int _get__splitPointId();
    // Set static field: static private readonly System.Int32 _splitPointId
    static void _set__splitPointId(int value);
    // Get static field: static private readonly System.Int32 _movementSpeedId
    static int _get__movementSpeedId();
    // Set static field: static private readonly System.Int32 _movementSpeedId
    static void _set__movementSpeedId(int value);
    // Get static field: static private readonly System.Int32 _colorId
    static int _get__colorId();
    // Set static field: static private readonly System.Int32 _colorId
    static void _set__colorId(int value);
    // Get static field: static private readonly System.Int32 _jumpGravityId
    static int _get__jumpGravityId();
    // Set static field: static private readonly System.Int32 _jumpGravityId
    static void _set__jumpGravityId(int value);
    // Get static field: static private readonly System.Int32 _jumpYVelocityId
    static int _get__jumpYVelocityId();
    // Set static field: static private readonly System.Int32 _jumpYVelocityId
    static void _set__jumpYVelocityId(int value);
    // Get static field: static private readonly System.Int32 _widthId
    static int _get__widthId();
    // Set static field: static private readonly System.Int32 _widthId
    static void _set__widthId(int value);
    // Get static field: static private readonly System.Int32 _lengthId
    static int _get__lengthId();
    // Set static field: static private readonly System.Int32 _lengthId
    static void _set__lengthId(int value);
    // Get static field: static private readonly System.Int32 _startOffsetId
    static int _get__startOffsetId();
    // Set static field: static private readonly System.Int32 _startOffsetId
    static void _set__startOffsetId(int value);
    // Get static field: static private readonly System.Int32 _endOffsetId
    static int _get__endOffsetId();
    // Set static field: static private readonly System.Int32 _endOffsetId
    static void _set__endOffsetId(int value);
    // Get static field: static private readonly System.Int32 _alphaId
    static int _get__alphaId();
    // Set static field: static private readonly System.Int32 _alphaId
    static void _set__alphaId(int value);
    // static field const value: static private System.Single kJumpRibbonLengthOffset
    static constexpr const float kJumpRibbonLengthOffset = 3;
    // Get static field: static private System.Single kJumpRibbonLengthOffset
    static float _get_kJumpRibbonLengthOffset();
    // Set static field: static private System.Single kJumpRibbonLengthOffset
    static void _set_kJumpRibbonLengthOffset(float value);
    // protected System.Void OnValidate()
    // Offset: 0xF32ACC
    void OnValidate();
    // public System.Void .ctor()
    // Offset: 0xF33138
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static TestNoteRibbonVisuals* New_ctor();
    // static private System.Void .cctor()
    // Offset: 0xF331E0
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // TestNoteRibbonVisuals
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::TestNoteRibbonVisuals*, "", "TestNoteRibbonVisuals");
#pragma pack(pop)
