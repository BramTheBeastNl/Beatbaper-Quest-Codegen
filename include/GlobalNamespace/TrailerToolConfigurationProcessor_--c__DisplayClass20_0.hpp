// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: TrailerToolConfigurationProcessor
#include "GlobalNamespace/TrailerToolConfigurationProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IBeatmapLevelPack
  class IBeatmapLevelPack;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0*, "", "TrailerToolConfigurationProcessor/<>c__DisplayClass20_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: TrailerToolConfigurationProcessor/<>c__DisplayClass20_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class TrailerToolConfigurationProcessor::$$c__DisplayClass20_0 : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public System.String levePackId
    // Size: 0x8
    // Offset: 0x10
    ::StringW levePackId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return levePackId;
    }
    // Get instance field reference: public System.String levePackId
    ::StringW& dyn_levePackId();
    // System.Boolean <GetLevelPack>b__0(IBeatmapLevelPack beatmapLevelPack)
    // Offset: 0x134191C
    bool $GetLevelPack$b__0(::GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack);
    // public System.Void .ctor()
    // Offset: 0x134190C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TrailerToolConfigurationProcessor::$$c__DisplayClass20_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TrailerToolConfigurationProcessor::$$c__DisplayClass20_0*, creationType>()));
    }
  }; // TrailerToolConfigurationProcessor/<>c__DisplayClass20_0
  #pragma pack(pop)
  static check_size<sizeof(TrailerToolConfigurationProcessor::$$c__DisplayClass20_0), 16 + sizeof(::StringW)> __GlobalNamespace_TrailerToolConfigurationProcessor_$$c__DisplayClass20_0SizeCheck;
  static_assert(sizeof(TrailerToolConfigurationProcessor::$$c__DisplayClass20_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0::$GetLevelPack$b__0
// Il2CppName: <GetLevelPack>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0::*)(::GlobalNamespace::IBeatmapLevelPack*)>(&GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0::$GetLevelPack$b__0)> {
  static const MethodInfo* get() {
    static auto* beatmapLevelPack = &::il2cpp_utils::GetClassFromName("", "IBeatmapLevelPack")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0*), "<GetLevelPack>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{beatmapLevelPack});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
