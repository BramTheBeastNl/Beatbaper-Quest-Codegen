// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1C
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVRPose
  // [] Offset: FFFFFFFF
  struct OVRPose/*, public System::ValueType*/ {
    public:
    // public UnityEngine.Vector3 position
    // Size: 0xC
    // Offset: 0x0
    UnityEngine::Vector3 position;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Quaternion orientation
    // Size: 0x10
    // Offset: 0xC
    UnityEngine::Quaternion orientation;
    // Field size check
    static_assert(sizeof(UnityEngine::Quaternion) == 0x10);
    // Creating value type constructor for type: OVRPose
    constexpr OVRPose(UnityEngine::Vector3 position_ = {}, UnityEngine::Quaternion orientation_ = {}) noexcept : position{position_}, orientation{orientation_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // static public OVRPose get_identity()
    // Offset: 0x1564E4C
    static GlobalNamespace::OVRPose get_identity();
    // public OVRPose Inverse()
    // Offset: 0xDF2D24
    GlobalNamespace::OVRPose Inverse();
    // public OVRPose flipZ()
    // Offset: 0xDF2D2C
    GlobalNamespace::OVRPose flipZ();
    // public OVRPlugin/Posef ToPosef_Legacy()
    // Offset: 0xDF2D58
    GlobalNamespace::OVRPlugin::Posef ToPosef_Legacy();
    // public OVRPlugin/Posef ToPosef()
    // Offset: 0xDF2D60
    GlobalNamespace::OVRPlugin::Posef ToPosef();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xDF2CE0
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0xDF2CE8
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // OVRPose
  #pragma pack(pop)
  static check_size<sizeof(OVRPose), 12 + sizeof(UnityEngine::Quaternion)> __GlobalNamespace_OVRPoseSizeCheck;
  static_assert(sizeof(OVRPose) == 0x1C);
  // static public System.Boolean op_Equality(OVRPose x, OVRPose y)
  // Offset: 0x1564FB8
  bool operator ==(const GlobalNamespace::OVRPose& x, const GlobalNamespace::OVRPose& y);
  // static public System.Boolean op_Inequality(OVRPose x, OVRPose y)
  // Offset: 0x1565128
  bool operator !=(const GlobalNamespace::OVRPose& x, const GlobalNamespace::OVRPose& y);
  // static public OVRPose op_Multiply(OVRPose lhs, OVRPose rhs)
  // Offset: 0x1565174
  GlobalNamespace::OVRPose operator*(const GlobalNamespace::OVRPose& lhs, const GlobalNamespace::OVRPose& rhs);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRPose, "", "OVRPose");
