// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BladeMovementDataElement
  struct BladeMovementDataElement;
  // Forward declaring type: ISaberMovementDataProcessor
  class ISaberMovementDataProcessor;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ISaberMovementData
  class ISaberMovementData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ISaberMovementData);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ISaberMovementData*, "", "ISaberMovementData");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: ISaberMovementData
  // [TokenAttribute] Offset: FFFFFFFF
  class ISaberMovementData {
    public:
    // public BladeMovementDataElement get_lastAddedData()
    // Offset: 0xFFFFFFFF
    ::GlobalNamespace::BladeMovementDataElement get_lastAddedData();
    // public System.Void AddDataProcessor(ISaberMovementDataProcessor dataProcessor)
    // Offset: 0xFFFFFFFF
    void AddDataProcessor(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor);
    // public System.Void RemoveDataProcessor(ISaberMovementDataProcessor dataProcessor)
    // Offset: 0xFFFFFFFF
    void RemoveDataProcessor(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor);
    // public System.Void RequestLastDataProcessing(ISaberMovementDataProcessor dataProcessor)
    // Offset: 0xFFFFFFFF
    void RequestLastDataProcessing(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor);
    // public System.Single ComputeSwingRating(System.Single overrideSegmentAngle)
    // Offset: 0xFFFFFFFF
    float ComputeSwingRating(float overrideSegmentAngle);
    // public System.Single ComputeSwingRating()
    // Offset: 0xFFFFFFFF
    float ComputeSwingRating();
  }; // ISaberMovementData
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ISaberMovementData::get_lastAddedData
// Il2CppName: get_lastAddedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::BladeMovementDataElement (GlobalNamespace::ISaberMovementData::*)()>(&GlobalNamespace::ISaberMovementData::get_lastAddedData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ISaberMovementData*), "get_lastAddedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ISaberMovementData::AddDataProcessor
// Il2CppName: AddDataProcessor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ISaberMovementData::*)(::GlobalNamespace::ISaberMovementDataProcessor*)>(&GlobalNamespace::ISaberMovementData::AddDataProcessor)> {
  static const MethodInfo* get() {
    static auto* dataProcessor = &::il2cpp_utils::GetClassFromName("", "ISaberMovementDataProcessor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ISaberMovementData*), "AddDataProcessor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataProcessor});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ISaberMovementData::RemoveDataProcessor
// Il2CppName: RemoveDataProcessor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ISaberMovementData::*)(::GlobalNamespace::ISaberMovementDataProcessor*)>(&GlobalNamespace::ISaberMovementData::RemoveDataProcessor)> {
  static const MethodInfo* get() {
    static auto* dataProcessor = &::il2cpp_utils::GetClassFromName("", "ISaberMovementDataProcessor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ISaberMovementData*), "RemoveDataProcessor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataProcessor});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ISaberMovementData::RequestLastDataProcessing
// Il2CppName: RequestLastDataProcessing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ISaberMovementData::*)(::GlobalNamespace::ISaberMovementDataProcessor*)>(&GlobalNamespace::ISaberMovementData::RequestLastDataProcessing)> {
  static const MethodInfo* get() {
    static auto* dataProcessor = &::il2cpp_utils::GetClassFromName("", "ISaberMovementDataProcessor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ISaberMovementData*), "RequestLastDataProcessing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataProcessor});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ISaberMovementData::ComputeSwingRating
// Il2CppName: ComputeSwingRating
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::ISaberMovementData::*)(float)>(&GlobalNamespace::ISaberMovementData::ComputeSwingRating)> {
  static const MethodInfo* get() {
    static auto* overrideSegmentAngle = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ISaberMovementData*), "ComputeSwingRating", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{overrideSegmentAngle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ISaberMovementData::ComputeSwingRating
// Il2CppName: ComputeSwingRating
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::ISaberMovementData::*)()>(&GlobalNamespace::ISaberMovementData::ComputeSwingRating)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ISaberMovementData*), "ComputeSwingRating", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
