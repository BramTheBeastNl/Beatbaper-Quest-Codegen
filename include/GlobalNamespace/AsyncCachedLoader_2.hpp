// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder_1.hpp"
// Including type: System.Runtime.CompilerServices.TaskAwaiter`1
#include "System/Runtime/CompilerServices/TaskAwaiter_1.hpp"
// Including type: System.Runtime.CompilerServices.AsyncVoidMethodBuilder
#include "System/Runtime/CompilerServices/AsyncVoidMethodBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: ScheduledTask because it is already included!
  // Skipping declaration: <LoadAsync>d__7 because it is already included!
  // Skipping declaration: <LoadAllAsync>d__8 because it is already included!
  // Forward declaring type: HMCache`2<K, V>
  template<typename K, typename V>
  class HMCache_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: AsyncCachedLoader`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TKey, typename TValue>
  class AsyncCachedLoader_2 : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::AsyncCachedLoader_2::ScheduledTask<TKey, TValue>
    struct ScheduledTask;
    // Nested type: GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7<TKey, TValue>
    struct $LoadAsync$d__7;
    // Nested type: GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8<TKey, TValue>
    struct $LoadAllAsync$d__8;
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: AsyncCachedLoader`2/ScheduledTask
    // [TokenAttribute] Offset: FFFFFFFF
    struct ScheduledTask : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public System::ValueType*/ {
      public:
      using declaring_type = AsyncCachedLoader_2<TKey, TValue>*;
      static constexpr std::string_view NESTED_NAME = "ScheduledTask";
      // public TKey keyId
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      TKey keyId;
      // public System.Threading.Tasks.TaskCompletionSource`1<TValue> taskCompletionSource
      // Size: 0x8
      // Offset: 0x0
      System::Threading::Tasks::TaskCompletionSource_1<TValue>* taskCompletionSource;
      // Field size check
      static_assert(sizeof(System::Threading::Tasks::TaskCompletionSource_1<TValue>*) == 0x8);
      // public System.Threading.CancellationToken cancellationToken
      // Size: 0x8
      // Offset: 0x0
      System::Threading::CancellationToken cancellationToken;
      // Field size check
      static_assert(sizeof(System::Threading::CancellationToken) == 0x8);
      // Creating value type constructor for type: ScheduledTask
      constexpr ScheduledTask(TKey keyId_ = {}, System::Threading::Tasks::TaskCompletionSource_1<TValue>* taskCompletionSource_ = {}, System::Threading::CancellationToken cancellationToken_ = {}) noexcept : keyId{keyId_}, taskCompletionSource{taskCompletionSource_}, cancellationToken{cancellationToken_} {}
      // Creating interface conversion operator: operator System::ValueType
      operator System::ValueType() noexcept {
        return *reinterpret_cast<System::ValueType*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: public TKey keyId
      TKey _get_keyId() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::ScheduledTask::_get_keyId");
        static auto ___internal__instance = *this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<TKey>(___internal__instance, "keyId"));
      }
      // Autogenerated instance field setter
      // Set instance field: public TKey keyId
      void _set_keyId(TKey value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::ScheduledTask::_set_keyId");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "keyId", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<TValue> taskCompletionSource
      System::Threading::Tasks::TaskCompletionSource_1<TValue>* _get_taskCompletionSource() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::ScheduledTask::_get_taskCompletionSource");
        static auto ___internal__instance = *this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCompletionSource_1<TValue>*>(___internal__instance, "taskCompletionSource"));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Threading.Tasks.TaskCompletionSource`1<TValue> taskCompletionSource
      void _set_taskCompletionSource(System::Threading::Tasks::TaskCompletionSource_1<TValue>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::ScheduledTask::_set_taskCompletionSource");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "taskCompletionSource", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Threading.CancellationToken cancellationToken
      System::Threading::CancellationToken _get_cancellationToken() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::ScheduledTask::_get_cancellationToken");
        static auto ___internal__instance = *this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::CancellationToken>(___internal__instance, "cancellationToken"));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Threading.CancellationToken cancellationToken
      void _set_cancellationToken(System::Threading::CancellationToken value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::ScheduledTask::_set_cancellationToken");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "cancellationToken", value));
      }
      // public System.Void .ctor(TKey keyId, System.Threading.Tasks.TaskCompletionSource`1<TValue> taskCompletionSource, System.Threading.CancellationToken cancellationToken)
      // Offset: 0xFFFFFFFF
      // template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      // ABORTED: conflicts with another method.  ScheduledTask(TKey keyId, System::Threading::Tasks::TaskCompletionSource_1<TValue>* taskCompletionSource, System::Threading::CancellationToken cancellationToken)
    }; // AsyncCachedLoader`2/ScheduledTask
    // Could not write size check! Type: AsyncCachedLoader`2/ScheduledTask is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: AsyncCachedLoader`2/<LoadAsync>d__7
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    struct $LoadAsync$d__7 : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public System::ValueType, public System::Runtime::CompilerServices::IAsyncStateMachine*/ {
      public:
      using declaring_type = AsyncCachedLoader_2<TKey, TValue>*;
      static constexpr std::string_view NESTED_NAME = "<LoadAsync>d__7";
      // public System.Int32 <>1__state
      // Size: 0x4
      // Offset: 0x0
      int $$1__state;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<TValue> <>t__builder
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TValue> $$t__builder;
      // public TKey keyId
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      TKey keyId;
      // public System.Threading.CancellationToken cancellationToken
      // Size: 0x8
      // Offset: 0x0
      System::Threading::CancellationToken cancellationToken;
      // Field size check
      static_assert(sizeof(System::Threading::CancellationToken) == 0x8);
      // public AsyncCachedLoader`2<TKey,TValue> <>4__this
      // Size: 0x8
      // Offset: 0x0
      GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>* $$4__this;
      // Field size check
      static_assert(sizeof(GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>*) == 0x8);
      // private System.Runtime.CompilerServices.TaskAwaiter`1<TValue> <>u__1
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      System::Runtime::CompilerServices::TaskAwaiter_1<TValue> $$u__1;
      // Creating value type constructor for type: $LoadAsync$d__7
      constexpr $LoadAsync$d__7(int $$1__state_ = {}, System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TValue> $$t__builder_ = {}, TKey keyId_ = {}, System::Threading::CancellationToken cancellationToken_ = {}, GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>* $$4__this_ = {}, System::Runtime::CompilerServices::TaskAwaiter_1<TValue> $$u__1_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, keyId{keyId_}, cancellationToken{cancellationToken_}, $$4__this{$$4__this_}, $$u__1{$$u__1_} {}
      // Creating interface conversion operator: operator System::ValueType
      operator System::ValueType() noexcept {
        return *reinterpret_cast<System::ValueType*>(this);
      }
      // Creating interface conversion operator: operator System::Runtime::CompilerServices::IAsyncStateMachine
      operator System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
        return *reinterpret_cast<System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 <>1__state
      int _get_$$1__state() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_get_$$1__state");
        static auto ___internal__instance = *this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Int32 <>1__state
      void _set_$$1__state(int value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_set_$$1__state");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<TValue> <>t__builder
      System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TValue> _get_$$t__builder() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_get_$$t__builder");
        static auto ___internal__instance = *this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TValue>>(___internal__instance, "<>t__builder")));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<TValue> <>t__builder
      void _set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TValue> value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_set_$$t__builder");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public TKey keyId
      TKey _get_keyId() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_get_keyId");
        static auto ___internal__instance = *this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<TKey>(___internal__instance, "keyId"));
      }
      // Autogenerated instance field setter
      // Set instance field: public TKey keyId
      void _set_keyId(TKey value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_set_keyId");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "keyId", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Threading.CancellationToken cancellationToken
      System::Threading::CancellationToken _get_cancellationToken() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_get_cancellationToken");
        static auto ___internal__instance = *this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::CancellationToken>(___internal__instance, "cancellationToken"));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Threading.CancellationToken cancellationToken
      void _set_cancellationToken(System::Threading::CancellationToken value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_set_cancellationToken");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "cancellationToken", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public AsyncCachedLoader`2<TKey,TValue> <>4__this
      GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>* _get_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_get_$$4__this");
        static auto ___internal__instance = *this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>*>(___internal__instance, "<>4__this")));
      }
      // Autogenerated instance field setter
      // Set instance field: public AsyncCachedLoader`2<TKey,TValue> <>4__this
      void _set_$$4__this(GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_set_$$4__this");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<TValue> <>u__1
      System::Runtime::CompilerServices::TaskAwaiter_1<TValue> _get_$$u__1() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_get_$$u__1");
        static auto ___internal__instance = *this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<TValue>>(___internal__instance, "<>u__1")));
      }
      // Autogenerated instance field setter
      // Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<TValue> <>u__1
      void _set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<TValue> value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::_set_$$u__1");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
      }
      // private System.Void MoveNext()
      // Offset: 0xFFFFFFFF
      void MoveNext() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::MoveNext");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
      }
      // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
      // Offset: 0xFFFFFFFF
      void SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAsync$d__7::SetStateMachine");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
      }
    }; // AsyncCachedLoader`2/<LoadAsync>d__7
    // Could not write size check! Type: AsyncCachedLoader`2/<LoadAsync>d__7 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: AsyncCachedLoader`2/<LoadAllAsync>d__8
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    struct $LoadAllAsync$d__8 : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public System::ValueType, public System::Runtime::CompilerServices::IAsyncStateMachine*/ {
      public:
      using declaring_type = AsyncCachedLoader_2<TKey, TValue>*;
      static constexpr std::string_view NESTED_NAME = "<LoadAllAsync>d__8";
      // public System.Int32 <>1__state
      // Size: 0x4
      // Offset: 0x0
      int $$1__state;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
      // Size: 0x20
      // Offset: 0x0
      System::Runtime::CompilerServices::AsyncVoidMethodBuilder $$t__builder;
      // Field size check
      static_assert(sizeof(System::Runtime::CompilerServices::AsyncVoidMethodBuilder) == 0x20);
      // public AsyncCachedLoader`2<TKey,TValue> <>4__this
      // Size: 0x8
      // Offset: 0x0
      GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>* $$4__this;
      // Field size check
      static_assert(sizeof(GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>*) == 0x8);
      // private AsyncCachedLoader`2/ScheduledTask<TKey,TValue> <scheduledTask>5__2
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask $scheduledTask$5__2;
      // private System.Runtime.CompilerServices.TaskAwaiter`1<TValue> <>u__1
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      System::Runtime::CompilerServices::TaskAwaiter_1<TValue> $$u__1;
      // Creating value type constructor for type: $LoadAllAsync$d__8
      constexpr $LoadAllAsync$d__8(int $$1__state_ = {}, System::Runtime::CompilerServices::AsyncVoidMethodBuilder $$t__builder_ = {}, GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>* $$4__this_ = {}, typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask $scheduledTask$5__2_ = {}, System::Runtime::CompilerServices::TaskAwaiter_1<TValue> $$u__1_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, $$4__this{$$4__this_}, $scheduledTask$5__2{$scheduledTask$5__2_}, $$u__1{$$u__1_} {}
      // Creating interface conversion operator: operator System::ValueType
      operator System::ValueType() noexcept {
        return *reinterpret_cast<System::ValueType*>(this);
      }
      // Creating interface conversion operator: operator System::Runtime::CompilerServices::IAsyncStateMachine
      operator System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
        return *reinterpret_cast<System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 <>1__state
      int _get_$$1__state() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_get_$$1__state");
        static auto ___internal__instance = *this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Int32 <>1__state
      void _set_$$1__state(int value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_set_$$1__state");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
      System::Runtime::CompilerServices::AsyncVoidMethodBuilder _get_$$t__builder() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_get_$$t__builder");
        static auto ___internal__instance = *this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncVoidMethodBuilder>(___internal__instance, "<>t__builder")));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
      void _set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_set_$$t__builder");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public AsyncCachedLoader`2<TKey,TValue> <>4__this
      GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>* _get_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_get_$$4__this");
        static auto ___internal__instance = *this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>*>(___internal__instance, "<>4__this")));
      }
      // Autogenerated instance field setter
      // Set instance field: public AsyncCachedLoader`2<TKey,TValue> <>4__this
      void _set_$$4__this(GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_set_$$4__this");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
      }
      // Autogenerated instance field getter
      // Get instance field: private AsyncCachedLoader`2/ScheduledTask<TKey,TValue> <scheduledTask>5__2
      typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask _get_$scheduledTask$5__2() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_get_$scheduledTask$5__2");
        static auto ___internal__instance = *this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask>(___internal__instance, "<scheduledTask>5__2")));
      }
      // Autogenerated instance field setter
      // Set instance field: private AsyncCachedLoader`2/ScheduledTask<TKey,TValue> <scheduledTask>5__2
      void _set_$scheduledTask$5__2(typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_set_$scheduledTask$5__2");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<scheduledTask>5__2", value));
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<TValue> <>u__1
      System::Runtime::CompilerServices::TaskAwaiter_1<TValue> _get_$$u__1() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_get_$$u__1");
        static auto ___internal__instance = *this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<TValue>>(___internal__instance, "<>u__1")));
      }
      // Autogenerated instance field setter
      // Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<TValue> <>u__1
      void _set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<TValue> value) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::_set_$$u__1");
        static auto ___internal__instance = *this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
      }
      // private System.Void MoveNext()
      // Offset: 0xFFFFFFFF
      void MoveNext() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::MoveNext");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
      }
      // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
      // Offset: 0xFFFFFFFF
      void SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::$LoadAllAsync$d__8::SetStateMachine");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
      }
    }; // AsyncCachedLoader`2/<LoadAllAsync>d__8
    // Could not write size check! Type: AsyncCachedLoader`2/<LoadAllAsync>d__8 is generic, or has no fields that are valid for size checks!
    // private System.Collections.Generic.List`1<AsyncCachedLoader`2/ScheduledTask<TKey,TValue>> _scheduledTaskList
    // Size: 0x8
    // Offset: 0x0
    System::Collections::Generic::List_1<typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask>* scheduledTaskList;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask>*) == 0x8);
    // private HMCache`2<TKey,TValue> _cache
    // Size: 0x8
    // Offset: 0x0
    GlobalNamespace::HMCache_2<TKey, TValue>* cache;
    // Field size check
    static_assert(sizeof(GlobalNamespace::HMCache_2<TKey, TValue>*) == 0x8);
    // private System.Func`3<TKey,System.Threading.CancellationToken,System.Threading.Tasks.Task`1<TValue>> _resultValueFunc
    // Size: 0x8
    // Offset: 0x0
    System::Func_3<TKey, System::Threading::CancellationToken, System::Threading::Tasks::Task_1<TValue>*>* resultValueFunc;
    // Field size check
    static_assert(sizeof(System::Func_3<TKey, System::Threading::CancellationToken, System::Threading::Tasks::Task_1<TValue>*>*) == 0x8);
    // private System.Boolean _isLoading
    // Size: 0x1
    // Offset: 0x0
    bool isLoading;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: AsyncCachedLoader_2
    AsyncCachedLoader_2(System::Collections::Generic::List_1<typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask>* scheduledTaskList_ = {}, GlobalNamespace::HMCache_2<TKey, TValue>* cache_ = {}, System::Func_3<TKey, System::Threading::CancellationToken, System::Threading::Tasks::Task_1<TValue>*>* resultValueFunc_ = {}, bool isLoading_ = {}) noexcept : scheduledTaskList{scheduledTaskList_}, cache{cache_}, resultValueFunc{resultValueFunc_}, isLoading{isLoading_} {}
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<AsyncCachedLoader`2/ScheduledTask<TKey,TValue>> _scheduledTaskList
    System::Collections::Generic::List_1<typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask>* _get__scheduledTaskList() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::_get__scheduledTaskList");
      static auto ___internal__instance = this;
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask>*>(___internal__instance, "_scheduledTaskList")));
    }
    // Autogenerated instance field setter
    // Set instance field: private System.Collections.Generic.List`1<AsyncCachedLoader`2/ScheduledTask<TKey,TValue>> _scheduledTaskList
    void _set__scheduledTaskList(System::Collections::Generic::List_1<typename GlobalNamespace::AsyncCachedLoader_2<TKey, TValue>::ScheduledTask>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::_set__scheduledTaskList");
      static auto ___internal__instance = this;
      THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_scheduledTaskList", value));
    }
    // Autogenerated instance field getter
    // Get instance field: private HMCache`2<TKey,TValue> _cache
    GlobalNamespace::HMCache_2<TKey, TValue>* _get__cache() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::_get__cache");
      static auto ___internal__instance = this;
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::HMCache_2<TKey, TValue>*>(___internal__instance, "_cache")));
    }
    // Autogenerated instance field setter
    // Set instance field: private HMCache`2<TKey,TValue> _cache
    void _set__cache(GlobalNamespace::HMCache_2<TKey, TValue>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::_set__cache");
      static auto ___internal__instance = this;
      THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_cache", value));
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Func`3<TKey,System.Threading.CancellationToken,System.Threading.Tasks.Task`1<TValue>> _resultValueFunc
    System::Func_3<TKey, System::Threading::CancellationToken, System::Threading::Tasks::Task_1<TValue>*>* _get__resultValueFunc() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::_get__resultValueFunc");
      static auto ___internal__instance = this;
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_3<TKey, System::Threading::CancellationToken, System::Threading::Tasks::Task_1<TValue>*>*>(___internal__instance, "_resultValueFunc")));
    }
    // Autogenerated instance field setter
    // Set instance field: private System.Func`3<TKey,System.Threading.CancellationToken,System.Threading.Tasks.Task`1<TValue>> _resultValueFunc
    void _set__resultValueFunc(System::Func_3<TKey, System::Threading::CancellationToken, System::Threading::Tasks::Task_1<TValue>*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::_set__resultValueFunc");
      static auto ___internal__instance = this;
      THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_resultValueFunc", value));
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _isLoading
    bool _get__isLoading() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::_get__isLoading");
      static auto ___internal__instance = this;
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isLoading"));
    }
    // Autogenerated instance field setter
    // Set instance field: private System.Boolean _isLoading
    void _set__isLoading(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::_set__isLoading");
      static auto ___internal__instance = this;
      THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isLoading", value));
    }
    // public System.Void .ctor(System.Int32 maxNumberCachedElements, System.Func`3<TKey,System.Threading.CancellationToken,System.Threading.Tasks.Task`1<TValue>> resultValueFunc)
    // Offset: 0xFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsyncCachedLoader_2<TKey, TValue>* New_ctor(int maxNumberCachedElements, System::Func_3<TKey, System::Threading::CancellationToken, System::Threading::Tasks::Task_1<TValue>*>* resultValueFunc) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsyncCachedLoader_2<TKey, TValue>*, creationType>(maxNumberCachedElements, resultValueFunc)));
    }
    // public System.Void ClearCache()
    // Offset: 0xFFFFFFFF
    void ClearCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::ClearCache");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // public System.Threading.Tasks.Task`1<TValue> LoadAsync(TKey keyId, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFF
    System::Threading::Tasks::Task_1<TValue>* LoadAsync(TKey keyId, System::Threading::CancellationToken cancellationToken) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::LoadAsync");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyId), ::il2cpp_utils::ExtractType(cancellationToken)})));
      return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<TValue>*, false>(this, ___internal__method, keyId, cancellationToken);
    }
    // private System.Void LoadAllAsync()
    // Offset: 0xFFFFFFFF
    void LoadAllAsync() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncCachedLoader_2::LoadAllAsync");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAllAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
  }; // AsyncCachedLoader`2
  // Could not write size check! Type: AsyncCachedLoader`2 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::AsyncCachedLoader_2, "", "AsyncCachedLoader`2");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
