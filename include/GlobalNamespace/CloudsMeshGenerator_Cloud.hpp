// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// WARNING Layout: Sequential may not be correctly taken into account!
// Begin includes
// Including type: CloudsMeshGenerator
#include "GlobalNamespace/CloudsMeshGenerator.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  // Autogenerated type: CloudsMeshGenerator/Cloud
  // [] Offset: FFFFFFFF
  struct CloudsMeshGenerator::Cloud/*, public System::ValueType*/ {
    public:
    // public UnityEngine.Mesh precisionOpaqueMesh
    // Size: 0x8
    // Offset: 0x0
    UnityEngine::Mesh* precisionOpaqueMesh;
    // Field size check
    static_assert(sizeof(UnityEngine::Mesh*) == 0x8);
    // public UnityEngine.Mesh lowPolyMesh
    // Size: 0x8
    // Offset: 0x8
    UnityEngine::Mesh* lowPolyMesh;
    // Field size check
    static_assert(sizeof(UnityEngine::Mesh*) == 0x8);
    // public System.Single sizeModifier
    // Size: 0x4
    // Offset: 0x10
    float sizeModifier;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single bottomThreshold
    // Size: 0x4
    // Offset: 0x14
    float bottomThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Int32 weight
    // Size: 0x4
    // Offset: 0x18
    int weight;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [HeaderAttribute] Offset: 0xDD3710
    // public System.Int32 precisionVertexCount
    // Size: 0x4
    // Offset: 0x1C
    int precisionVertexCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 lowPolyVertexCount
    // Size: 0x4
    // Offset: 0x20
    int lowPolyVertexCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 generatedCount
    // Size: 0x4
    // Offset: 0x24
    int generatedCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: Cloud
    constexpr Cloud(UnityEngine::Mesh* precisionOpaqueMesh_ = {}, UnityEngine::Mesh* lowPolyMesh_ = {}, float sizeModifier_ = {}, float bottomThreshold_ = {}, int weight_ = {}, int precisionVertexCount_ = {}, int lowPolyVertexCount_ = {}, int generatedCount_ = {}) noexcept : precisionOpaqueMesh{precisionOpaqueMesh_}, lowPolyMesh{lowPolyMesh_}, sizeModifier{sizeModifier_}, bottomThreshold{bottomThreshold_}, weight{weight_}, precisionVertexCount{precisionVertexCount_}, lowPolyVertexCount{lowPolyVertexCount_}, generatedCount{generatedCount_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // CloudsMeshGenerator/Cloud
  static check_size<sizeof(CloudsMeshGenerator::Cloud), 36 + sizeof(int)> __GlobalNamespace_CloudsMeshGenerator_CloudSizeCheck;
  static_assert(sizeof(CloudsMeshGenerator::Cloud) == 0x28);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::CloudsMeshGenerator::Cloud, "", "CloudsMeshGenerator/Cloud");
#pragma pack(pop)
