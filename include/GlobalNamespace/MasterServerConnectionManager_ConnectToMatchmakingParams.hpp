// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager
#include "GlobalNamespace/MasterServerConnectionManager.hpp"
// Including type: MasterServerConnectionManager/MasterServerConnectionManagerParamsBase
#include "GlobalNamespace/MasterServerConnectionManager_MasterServerConnectionManagerParamsBase.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: MasterServerConnectionManager/ConnectToMatchmakingParams
  class MasterServerConnectionManager::ConnectToMatchmakingParams : public GlobalNamespace::MasterServerConnectionManager::MasterServerConnectionManagerParamsBase {
    public:
    // public GameplayServerConfiguration configuration
    // Size: 0x18
    // Offset: 0x30
    GlobalNamespace::GameplayServerConfiguration configuration;
    // Field size check
    static_assert(sizeof(GlobalNamespace::GameplayServerConfiguration) == 0x18);
    // public DiscoveryPolicy discoveryPolicy
    // Size: 0x1
    // Offset: 0x48
    GlobalNamespace::DiscoveryPolicy discoveryPolicy;
    // Field size check
    static_assert(sizeof(GlobalNamespace::DiscoveryPolicy) == 0x1);
    // Padding between fields: discoveryPolicy and: secret
    char __padding1[0x7] = {};
    // public System.String secret
    // Size: 0x8
    // Offset: 0x50
    ::Il2CppString* secret;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String code
    // Size: 0x8
    // Offset: 0x58
    ::Il2CppString* code;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: ConnectToMatchmakingParams
    ConnectToMatchmakingParams(GlobalNamespace::GameplayServerConfiguration configuration_ = {}, GlobalNamespace::DiscoveryPolicy discoveryPolicy_ = {}, ::Il2CppString* secret_ = {}, ::Il2CppString* code_ = {}) noexcept : configuration{configuration_}, discoveryPolicy{discoveryPolicy_}, secret{secret_}, code{code_} {}
    // public System.Void .ctor()
    // Offset: 0x14E1508
    // Implemented from: MasterServerConnectionManager/MasterServerConnectionManagerParamsBase
    // Base method: System.Void MasterServerConnectionManagerParamsBase::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MasterServerConnectionManager::ConnectToMatchmakingParams* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerConnectionManager::ConnectToMatchmakingParams::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MasterServerConnectionManager::ConnectToMatchmakingParams*, creationType>()));
    }
  }; // MasterServerConnectionManager/ConnectToMatchmakingParams
  #pragma pack(pop)
  static check_size<sizeof(MasterServerConnectionManager::ConnectToMatchmakingParams), 88 + sizeof(::Il2CppString*)> __GlobalNamespace_MasterServerConnectionManager_ConnectToMatchmakingParamsSizeCheck;
  static_assert(sizeof(MasterServerConnectionManager::ConnectToMatchmakingParams) == 0x60);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MasterServerConnectionManager::ConnectToMatchmakingParams*, "", "MasterServerConnectionManager/ConnectToMatchmakingParams");
