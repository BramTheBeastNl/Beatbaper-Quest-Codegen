// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IMultiplayerSpectatingSpot
  class IMultiplayerSpectatingSpot;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: IReadOnlyList`1<T>
  template<typename T>
  class IReadOnlyList_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerSpectatingSpotManager
  class MultiplayerSpectatingSpotManager : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::MultiplayerSpectatingSpotManager::$$c
    class $$c;
    // private readonly System.Collections.Generic.List`1<IMultiplayerSpectatingSpot> _spectatingSpots
    // Offset: 0x10
    System::Collections::Generic::List_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* spectatingSpots;
    // private readonly System.Collections.Generic.Dictionary`2<IMultiplayerSpectatingSpot,System.Int32> _spotIndexBySpot
    // Offset: 0x18
    System::Collections::Generic::Dictionary_2<GlobalNamespace::IMultiplayerSpectatingSpot*, int>* spotIndexBySpot;
    // public System.Collections.Generic.IReadOnlyList`1<IMultiplayerSpectatingSpot> get_spectatingSpots()
    // Offset: 0x1FDAA20
    System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* get_spectatingSpots();
    // public IMultiplayerSpectatingSpot get_defaultSpot()
    // Offset: 0x1FDAA28
    GlobalNamespace::IMultiplayerSpectatingSpot* get_defaultSpot();
    // public System.Void RegisterSpectatingSpot(IMultiplayerSpectatingSpot spectatingSpot)
    // Offset: 0x1FDAB58
    void RegisterSpectatingSpot(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot);
    // public IMultiplayerSpectatingSpot GetAdjacentSpot(IMultiplayerSpectatingSpot spectatingSpot, System.Int32 offset)
    // Offset: 0x1FDADE8
    GlobalNamespace::IMultiplayerSpectatingSpot* GetAdjacentSpot(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot, int offset);
    // private System.Int32 GetIndexBySpot(IMultiplayerSpectatingSpot spectatingSpot)
    // Offset: 0x1FDAE98
    int GetIndexBySpot(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot);
    // private System.Void UpdateIndexBySpotDictionary()
    // Offset: 0x1FDAC6C
    void UpdateIndexBySpotDictionary();
    // private System.Void SpotOnHasBeenRemoved(IMultiplayerSpectatingSpot spectatingSpot)
    // Offset: 0x1FDAF24
    void SpotOnHasBeenRemoved(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot);
    // public System.Void .ctor()
    // Offset: 0x1FDB03C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static MultiplayerSpectatingSpotManager* New_ctor();
  }; // MultiplayerSpectatingSpotManager
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerSpectatingSpotManager*, "", "MultiplayerSpectatingSpotManager");
#pragma pack(pop)
