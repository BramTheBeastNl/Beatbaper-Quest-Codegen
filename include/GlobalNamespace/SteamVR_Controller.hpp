// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: Valve::VR
namespace Valve::VR {
  // Forward declaring type: ETrackedDeviceClass
  struct ETrackedDeviceClass;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  // Autogenerated type: SteamVR_Controller
  // [] Offset: FFFFFFFF
  class SteamVR_Controller : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::SteamVR_Controller::ButtonMask
    class ButtonMask;
    // Nested type: GlobalNamespace::SteamVR_Controller::Device
    class Device;
    // Nested type: GlobalNamespace::SteamVR_Controller::DeviceRelation
    struct DeviceRelation;
    // Creating value type constructor for type: SteamVR_Controller
    SteamVR_Controller() noexcept {}
    // Get static field: static private SteamVR_Controller/Device[] devices
    static ::Array<GlobalNamespace::SteamVR_Controller::Device*>* _get_devices();
    // Set static field: static private SteamVR_Controller/Device[] devices
    static void _set_devices(::Array<GlobalNamespace::SteamVR_Controller::Device*>* value);
    // static public SteamVR_Controller/Device Input(System.Int32 deviceIndex)
    // Offset: 0x110354C
    static GlobalNamespace::SteamVR_Controller::Device* Input(int deviceIndex);
    // static public System.Void Update()
    // Offset: 0x11036EC
    static void Update();
    // static public System.Int32 GetDeviceIndex(SteamVR_Controller/DeviceRelation relation, Valve.VR.ETrackedDeviceClass deviceClass, System.Int32 relativeTo)
    // Offset: 0x11038B0
    static int GetDeviceIndex(GlobalNamespace::SteamVR_Controller::DeviceRelation relation, Valve::VR::ETrackedDeviceClass deviceClass, int relativeTo);
    // public System.Void .ctor()
    // Offset: 0x1103C8C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SteamVR_Controller* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Controller").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SteamVR_Controller*, creationType>()));
    }
  }; // SteamVR_Controller
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SteamVR_Controller*, "", "SteamVR_Controller");
#pragma pack(pop)
