// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: EmptyLogger
  class EmptyLogger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::EmptyLogger);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::EmptyLogger*, "", "EmptyLogger");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: EmptyLogger
  // [TokenAttribute] Offset: FFFFFFFF
  class EmptyLogger : public ::Il2CppObject/*, public ::GlobalNamespace::IBeatSaberLogger*/ {
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IBeatSaberLogger
    operator ::GlobalNamespace::IBeatSaberLogger() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger*>(this);
    }
    // Creating interface conversion operator: i_IBeatSaberLogger
    inline ::GlobalNamespace::IBeatSaberLogger* i_IBeatSaberLogger() noexcept {
      return reinterpret_cast<::GlobalNamespace::IBeatSaberLogger*>(this);
    }
    // public System.Void .ctor()
    // Offset: 0x1394568
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EmptyLogger* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyLogger::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EmptyLogger*, creationType>()));
    }
    // public System.Void Log(System.String message)
    // Offset: 0x1394548
    void Log(::StringW message);
    // public System.Void Log(System.String message, System.Object context)
    // Offset: 0x139454C
    void Log(::StringW message, ::Il2CppObject* context);
    // public System.Void LogWarning(System.String message)
    // Offset: 0x1394550
    void LogWarning(::StringW message);
    // public System.Void LogWarning(System.String message, System.Object context)
    // Offset: 0x1394554
    void LogWarning(::StringW message, ::Il2CppObject* context);
    // public System.Void LogError(System.String message)
    // Offset: 0x1394558
    void LogError(::StringW message);
    // public System.Void LogError(System.String message, System.Object context)
    // Offset: 0x139455C
    void LogError(::StringW message, ::Il2CppObject* context);
    // public System.Void LogException(System.Exception exception)
    // Offset: 0x1394560
    void LogException(::System::Exception* exception);
    // public System.Void LogException(System.Exception exception, System.Object context)
    // Offset: 0x1394564
    void LogException(::System::Exception* exception, ::Il2CppObject* context);
  }; // EmptyLogger
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::EmptyLogger::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::EmptyLogger::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyLogger::*)(::StringW)>(&GlobalNamespace::EmptyLogger::Log)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyLogger*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyLogger::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyLogger::*)(::StringW, ::Il2CppObject*)>(&GlobalNamespace::EmptyLogger::Log)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyLogger*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, context});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyLogger::LogWarning
// Il2CppName: LogWarning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyLogger::*)(::StringW)>(&GlobalNamespace::EmptyLogger::LogWarning)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyLogger*), "LogWarning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyLogger::LogWarning
// Il2CppName: LogWarning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyLogger::*)(::StringW, ::Il2CppObject*)>(&GlobalNamespace::EmptyLogger::LogWarning)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyLogger*), "LogWarning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, context});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyLogger::LogError
// Il2CppName: LogError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyLogger::*)(::StringW)>(&GlobalNamespace::EmptyLogger::LogError)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyLogger*), "LogError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyLogger::LogError
// Il2CppName: LogError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyLogger::*)(::StringW, ::Il2CppObject*)>(&GlobalNamespace::EmptyLogger::LogError)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyLogger*), "LogError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, context});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyLogger::LogException
// Il2CppName: LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyLogger::*)(::System::Exception*)>(&GlobalNamespace::EmptyLogger::LogException)> {
  static const MethodInfo* get() {
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyLogger*), "LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exception});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyLogger::LogException
// Il2CppName: LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyLogger::*)(::System::Exception*, ::Il2CppObject*)>(&GlobalNamespace::EmptyLogger::LogException)> {
  static const MethodInfo* get() {
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyLogger*), "LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exception, context});
  }
};
