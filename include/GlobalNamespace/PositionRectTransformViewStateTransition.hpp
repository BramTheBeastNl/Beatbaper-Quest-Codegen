// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseStateTransition`1
#include "GlobalNamespace/BaseStateTransition_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Vector3TransitionSO
  class Vector3TransitionSO;
  // Forward declaring type: BaseTransitionSO
  class BaseTransitionSO;
}
// Forward declaring namespace: Tweening
namespace Tweening {
  // Forward declaring type: Vector3Tween
  class Vector3Tween;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: PositionRectTransformViewStateTransition
  // [RequireComponent] Offset: E11134
  class PositionRectTransformViewStateTransition : public GlobalNamespace::BaseStateTransition_1<UnityEngine::RectTransform*> {
    public:
    // [SpaceAttribute] Offset: 0xE21F40
    // private Vector3TransitionSO _transition
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::Vector3TransitionSO* transition;
    // Field size check
    static_assert(sizeof(GlobalNamespace::Vector3TransitionSO*) == 0x8);
    // private Tweening.Vector3Tween _vectorTween
    // Size: 0x8
    // Offset: 0x30
    Tweening::Vector3Tween* vectorTween;
    // Field size check
    static_assert(sizeof(Tweening::Vector3Tween*) == 0x8);
    // Creating value type constructor for type: PositionRectTransformViewStateTransition
    PositionRectTransformViewStateTransition(GlobalNamespace::Vector3TransitionSO* transition_ = {}, Tweening::Vector3Tween* vectorTween_ = {}) noexcept : transition{transition_}, vectorTween{vectorTween_} {}
    // private System.Void StartTween(UnityEngine.Vector3 endPosition)
    // Offset: 0x10A57A0
    void StartTween(UnityEngine::Vector3 endPosition);
    // private System.Void <StartTween>b__16_0(UnityEngine.Vector3 pos)
    // Offset: 0x10A5EB8
    void $StartTween$b__16_0(UnityEngine::Vector3 pos);
    // private System.Void <StartTween>b__16_1()
    // Offset: 0x10A5F5C
    void $StartTween$b__16_1();
    // protected override BaseTransitionSO get_transition()
    // Offset: 0x10A5778
    // Implemented from: BaseStateTransition
    // Base method: BaseTransitionSO BaseStateTransition::get_transition()
    GlobalNamespace::BaseTransitionSO* get_transition();
    // protected override System.Void TransitionToNormalState()
    // Offset: 0x10A5780
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::TransitionToNormalState()
    void TransitionToNormalState();
    // protected override System.Void TransitionToHighlightedState()
    // Offset: 0x10A59D8
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::TransitionToHighlightedState()
    void TransitionToHighlightedState();
    // protected override System.Void TransitionToPressedState()
    // Offset: 0x10A59F8
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::TransitionToPressedState()
    void TransitionToPressedState();
    // protected override System.Void TransitionToDisabledState()
    // Offset: 0x10A5A18
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::TransitionToDisabledState()
    void TransitionToDisabledState();
    // protected override System.Void TransitionToSelectedState()
    // Offset: 0x10A5A38
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::TransitionToSelectedState()
    void TransitionToSelectedState();
    // protected override System.Void TransitionToSelectedAndHighlightedState()
    // Offset: 0x10A5A58
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::TransitionToSelectedAndHighlightedState()
    void TransitionToSelectedAndHighlightedState();
    // protected override System.Void SetNormalState()
    // Offset: 0x10A5A78
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::SetNormalState()
    void SetNormalState();
    // protected override System.Void SetHighlightedState()
    // Offset: 0x10A5B20
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::SetHighlightedState()
    void SetHighlightedState();
    // protected override System.Void SetPressedState()
    // Offset: 0x10A5BC8
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::SetPressedState()
    void SetPressedState();
    // protected override System.Void SetDisabledState()
    // Offset: 0x10A5C70
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::SetDisabledState()
    void SetDisabledState();
    // protected override System.Void SetSelectedState()
    // Offset: 0x10A5D18
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::SetSelectedState()
    void SetSelectedState();
    // protected override System.Void SetSelectedAndHighlightedState()
    // Offset: 0x10A5DC0
    // Implemented from: BaseStateTransition
    // Base method: System.Void BaseStateTransition::SetSelectedAndHighlightedState()
    void SetSelectedAndHighlightedState();
    // public System.Void .ctor()
    // Offset: 0x10A5E68
    // Implemented from: BaseStateTransition`1
    // Base method: System.Void BaseStateTransition_1::.ctor()
    // Base method: System.Void BaseStateTransition::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PositionRectTransformViewStateTransition* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PositionRectTransformViewStateTransition*, creationType>()));
    }
  }; // PositionRectTransformViewStateTransition
  // WARNING Not writing size check since size may be invalid!
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::StartTween
  // Il2CppName: StartTween
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)(UnityEngine::Vector3)>(&PositionRectTransformViewStateTransition::StartTween)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "StartTween", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::$StartTween$b__16_0
  // Il2CppName: <StartTween>b__16_0
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)(UnityEngine::Vector3)>(&PositionRectTransformViewStateTransition::$StartTween$b__16_0)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "<StartTween>b__16_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::$StartTween$b__16_1
  // Il2CppName: <StartTween>b__16_1
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::$StartTween$b__16_1)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "<StartTween>b__16_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::get_transition
  // Il2CppName: get_transition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BaseTransitionSO* (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::get_transition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "get_transition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::TransitionToNormalState
  // Il2CppName: TransitionToNormalState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::TransitionToNormalState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "TransitionToNormalState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::TransitionToHighlightedState
  // Il2CppName: TransitionToHighlightedState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::TransitionToHighlightedState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "TransitionToHighlightedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::TransitionToPressedState
  // Il2CppName: TransitionToPressedState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::TransitionToPressedState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "TransitionToPressedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::TransitionToDisabledState
  // Il2CppName: TransitionToDisabledState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::TransitionToDisabledState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "TransitionToDisabledState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::TransitionToSelectedState
  // Il2CppName: TransitionToSelectedState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::TransitionToSelectedState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "TransitionToSelectedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState
  // Il2CppName: TransitionToSelectedAndHighlightedState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::SetNormalState
  // Il2CppName: SetNormalState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::SetNormalState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "SetNormalState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::SetHighlightedState
  // Il2CppName: SetHighlightedState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::SetHighlightedState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "SetHighlightedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::SetPressedState
  // Il2CppName: SetPressedState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::SetPressedState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "SetPressedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::SetDisabledState
  // Il2CppName: SetDisabledState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::SetDisabledState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "SetDisabledState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::SetSelectedState
  // Il2CppName: SetSelectedState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::SetSelectedState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "SetSelectedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::SetSelectedAndHighlightedState
  // Il2CppName: SetSelectedAndHighlightedState
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::SetSelectedAndHighlightedState)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PositionRectTransformViewStateTransition::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionRectTransformViewStateTransition::*)()>(&PositionRectTransformViewStateTransition::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PositionRectTransformViewStateTransition*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::PositionRectTransformViewStateTransition*, "", "PositionRectTransformViewStateTransition");
