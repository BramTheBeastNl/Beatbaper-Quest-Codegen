// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IBeatSaberLogger
  class IBeatSaberLogger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::IBeatSaberLogger);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::IBeatSaberLogger*, "", "IBeatSaberLogger");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: IBeatSaberLogger
  // [TokenAttribute] Offset: FFFFFFFF
  class IBeatSaberLogger {
    public:
    // public System.Void Log(System.String message)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Log(::StringW message);
    // public System.Void Log(System.String message, System.Object context)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Log(::StringW message, ::Il2CppObject* context);
    // public System.Void LogWarning(System.String message)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogWarning(::StringW message);
    // public System.Void LogWarning(System.String message, System.Object context)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogWarning(::StringW message, ::Il2CppObject* context);
    // public System.Void LogError(System.String message)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogError(::StringW message);
    // public System.Void LogError(System.String message, System.Object context)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogError(::StringW message, ::Il2CppObject* context);
    // public System.Void LogException(System.Exception exception)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogException(::System::Exception* exception);
    // public System.Void LogException(System.Exception exception, System.Object context)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogException(::System::Exception* exception, ::Il2CppObject* context);
  }; // IBeatSaberLogger
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IBeatSaberLogger::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IBeatSaberLogger::*)(::StringW)>(&GlobalNamespace::IBeatSaberLogger::Log)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBeatSaberLogger*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IBeatSaberLogger::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IBeatSaberLogger::*)(::StringW, ::Il2CppObject*)>(&GlobalNamespace::IBeatSaberLogger::Log)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBeatSaberLogger*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, context});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IBeatSaberLogger::LogWarning
// Il2CppName: LogWarning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IBeatSaberLogger::*)(::StringW)>(&GlobalNamespace::IBeatSaberLogger::LogWarning)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBeatSaberLogger*), "LogWarning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IBeatSaberLogger::LogWarning
// Il2CppName: LogWarning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IBeatSaberLogger::*)(::StringW, ::Il2CppObject*)>(&GlobalNamespace::IBeatSaberLogger::LogWarning)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBeatSaberLogger*), "LogWarning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, context});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IBeatSaberLogger::LogError
// Il2CppName: LogError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IBeatSaberLogger::*)(::StringW)>(&GlobalNamespace::IBeatSaberLogger::LogError)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBeatSaberLogger*), "LogError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IBeatSaberLogger::LogError
// Il2CppName: LogError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IBeatSaberLogger::*)(::StringW, ::Il2CppObject*)>(&GlobalNamespace::IBeatSaberLogger::LogError)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBeatSaberLogger*), "LogError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, context});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IBeatSaberLogger::LogException
// Il2CppName: LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IBeatSaberLogger::*)(::System::Exception*)>(&GlobalNamespace::IBeatSaberLogger::LogException)> {
  static const MethodInfo* get() {
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBeatSaberLogger*), "LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exception});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IBeatSaberLogger::LogException
// Il2CppName: LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IBeatSaberLogger::*)(::System::Exception*, ::Il2CppObject*)>(&GlobalNamespace::IBeatSaberLogger::LogException)> {
  static const MethodInfo* get() {
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBeatSaberLogger*), "LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exception, context});
  }
};
