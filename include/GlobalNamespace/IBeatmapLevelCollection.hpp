// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IPreviewBeatmapLevel
  class IPreviewBeatmapLevel;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
template<class T>
struct Array;
// Completed il2cpp-utils forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IBeatmapLevelCollection
  class IBeatmapLevelCollection {
    public:
    // Creating value type constructor for type: IBeatmapLevelCollection
    IBeatmapLevelCollection() noexcept {}
    // public IPreviewBeatmapLevel[] get_beatmapLevels()
    // Offset: 0xFFFFFFFF
    ::Array<GlobalNamespace::IPreviewBeatmapLevel*>* get_beatmapLevels();
  }; // IBeatmapLevelCollection
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::IBeatmapLevelCollection*, "", "IBeatmapLevelCollection");
// Writing MetadataGetter for method: IBeatmapLevelCollection::get_beatmapLevels
// Il2CppName: get_beatmapLevels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::IPreviewBeatmapLevel*>* (IBeatmapLevelCollection::*)()>(&IBeatmapLevelCollection::get_beatmapLevels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBeatmapLevelCollection*), "get_beatmapLevels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
