// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseMasterServerResponse
#include "GlobalNamespace/BaseMasterServerResponse.hpp"
// Including type: MasterServer.IMasterServerAcknowledgeMessage
#include "MasterServer/IMasterServerAcknowledgeMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
  // Forward declaring type: NetDataReader
  class NetDataReader;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x15
  // Autogenerated type: BaseMasterServerAcknowledgeMessage
  // [] Offset: FFFFFFFF
  class BaseMasterServerAcknowledgeMessage : public GlobalNamespace::BaseMasterServerResponse/*, public MasterServer::IMasterServerAcknowledgeMessage*/ {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xDAA0A4
    // private System.Boolean <messageHandled>k__BackingField
    // Size: 0x1
    // Offset: 0x14
    bool messageHandled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: BaseMasterServerAcknowledgeMessage
    BaseMasterServerAcknowledgeMessage(bool messageHandled_ = {}) noexcept : messageHandled{messageHandled_} {}
    // Creating interface conversion operator: operator MasterServer::IMasterServerAcknowledgeMessage
    operator MasterServer::IMasterServerAcknowledgeMessage() noexcept {
      return *reinterpret_cast<MasterServer::IMasterServerAcknowledgeMessage*>(this);
    }
    // Deleting conversion operator: operator uint
    constexpr operator uint() const noexcept = delete;
    // private System.Void set_messageHandled(System.Boolean value)
    // Offset: 0x1B43504
    void set_messageHandled(bool value);
    // public BaseMasterServerAcknowledgeMessage Init(System.Boolean messageHandled)
    // Offset: 0x1B43510
    GlobalNamespace::BaseMasterServerAcknowledgeMessage* Init(bool messageHandled);
    // public override System.Byte get_resultCode()
    // Offset: 0x1B43494
    // Implemented from: BaseMasterServerResponse
    // Base method: System.Byte BaseMasterServerResponse::get_resultCode()
    uint8_t get_resultCode();
    // public override System.String get_resultCodeString()
    // Offset: 0x1B4349C
    // Implemented from: BaseMasterServerResponse
    // Base method: System.String BaseMasterServerResponse::get_resultCodeString()
    ::Il2CppString* get_resultCodeString();
    // public System.Boolean get_messageHandled()
    // Offset: 0x1B434FC
    // Implemented from: MasterServer.IMasterServerAcknowledgeMessage
    // Base method: System.Boolean IMasterServerAcknowledgeMessage::get_messageHandled()
    bool get_messageHandled();
    // public override System.Void Serialize(LiteNetLib.Utils.NetDataWriter writer)
    // Offset: 0x1B4351C
    // Implemented from: BaseMasterServerResponse
    // Base method: System.Void BaseMasterServerResponse::Serialize(LiteNetLib.Utils.NetDataWriter writer)
    void Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // Creating proxy method: LiteNetLib_Utils_INetSerializable_Serialize
    // Maps to method: Serialize
    void LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // public override System.Void Deserialize(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0x1B43584
    // Implemented from: BaseMasterServerResponse
    // Base method: System.Void BaseMasterServerResponse::Deserialize(LiteNetLib.Utils.NetDataReader reader)
    void Deserialize(LiteNetLib::Utils::NetDataReader* reader);
    // Creating proxy method: LiteNetLib_Utils_INetSerializable_Deserialize
    // Maps to method: Deserialize
    void LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader);
    // protected System.Void .ctor()
    // Offset: 0x1B43604
    // Implemented from: BaseMasterServerResponse
    // Base method: System.Void BaseMasterServerResponse::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseMasterServerAcknowledgeMessage* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerAcknowledgeMessage").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseMasterServerAcknowledgeMessage*, creationType>()));
    }
  }; // BaseMasterServerAcknowledgeMessage
  static check_size<sizeof(BaseMasterServerAcknowledgeMessage), 20 + sizeof(bool)> __GlobalNamespace_BaseMasterServerAcknowledgeMessageSizeCheck;
  static_assert(sizeof(BaseMasterServerAcknowledgeMessage) == 0x15);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BaseMasterServerAcknowledgeMessage*, "", "BaseMasterServerAcknowledgeMessage");
#pragma pack(pop)
