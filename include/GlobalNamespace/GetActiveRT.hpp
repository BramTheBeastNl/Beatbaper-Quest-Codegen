// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.RenderBuffer
#include "UnityEngine/RenderBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: GetActiveRT
  // [RequireComponent] Offset: E10C38
  class GetActiveRT : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.RenderBuffer _colorBuffer
    // Size: 0x10
    // Offset: 0x18
    UnityEngine::RenderBuffer colorBuffer;
    // Field size check
    static_assert(sizeof(UnityEngine::RenderBuffer) == 0x10);
    // private UnityEngine.RenderBuffer _depthBuffer
    // Size: 0x10
    // Offset: 0x28
    UnityEngine::RenderBuffer depthBuffer;
    // Field size check
    static_assert(sizeof(UnityEngine::RenderBuffer) == 0x10);
    // Creating value type constructor for type: GetActiveRT
    GetActiveRT(UnityEngine::RenderBuffer colorBuffer_ = {}, UnityEngine::RenderBuffer depthBuffer_ = {}) noexcept : colorBuffer{colorBuffer_}, depthBuffer{depthBuffer_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public UnityEngine.RenderBuffer get_ColorBuffer()
    // Offset: 0x108D628
    UnityEngine::RenderBuffer get_ColorBuffer();
    // public UnityEngine.RenderBuffer get_DepthBuffer()
    // Offset: 0x108D634
    UnityEngine::RenderBuffer get_DepthBuffer();
    // private System.Void OnPreRender()
    // Offset: 0x108D640
    void OnPreRender();
    // public System.Void .ctor()
    // Offset: 0x108D6B8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GetActiveRT* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GetActiveRT::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GetActiveRT*, creationType>()));
    }
  }; // GetActiveRT
  #pragma pack(pop)
  static check_size<sizeof(GetActiveRT), 40 + sizeof(UnityEngine::RenderBuffer)> __GlobalNamespace_GetActiveRTSizeCheck;
  static_assert(sizeof(GetActiveRT) == 0x38);
  // Writing MetadataGetter for method: GetActiveRT::get_ColorBuffer
  // Il2CppName: get_ColorBuffer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (GetActiveRT::*)()>(&GetActiveRT::get_ColorBuffer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(GetActiveRT*), "get_ColorBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: GetActiveRT::get_DepthBuffer
  // Il2CppName: get_DepthBuffer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (GetActiveRT::*)()>(&GetActiveRT::get_DepthBuffer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(GetActiveRT*), "get_DepthBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: GetActiveRT::OnPreRender
  // Il2CppName: OnPreRender
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GetActiveRT::*)()>(&GetActiveRT::OnPreRender)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(GetActiveRT*), "OnPreRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: GetActiveRT::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GetActiveRT::*)()>(&GetActiveRT::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(GetActiveRT*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GetActiveRT::*)()>(&GetActiveRT::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(GetActiveRT*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::GetActiveRT*, "", "GetActiveRT");
