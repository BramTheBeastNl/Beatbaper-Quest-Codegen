// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRInput
#include "GlobalNamespace/OVRInput.hpp"
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x102
  #pragma pack(push, 1)
  // Autogenerated type: OVRInput/OVRControllerGamepadMac
  class OVRInput::OVRControllerGamepadMac : public GlobalNamespace::OVRInput::OVRControllerBase {
    public:
    // Nested type: GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC
    struct AxisGPC;
    // Nested type: GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC
    struct ButtonGPC;
    // private System.Boolean initialized
    // Size: 0x1
    // Offset: 0x101
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: OVRControllerGamepadMac
    OVRControllerGamepadMac(bool initialized_ = {}) noexcept : initialized{initialized_} {}
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return initialized;
    }
    // static field const value: static private System.String DllName
    static constexpr const char* DllName = "OVRGamepad";
    // Get static field: static private System.String DllName
    static ::Il2CppString* _get_DllName();
    // Set static field: static private System.String DllName
    static void _set_DllName(::Il2CppString* value);
    // static private System.Boolean OVR_GamepadController_Initialize()
    // Offset: 0x151A930
    static bool OVR_GamepadController_Initialize();
    // static private System.Boolean OVR_GamepadController_Destroy()
    // Offset: 0x151AA1C
    static bool OVR_GamepadController_Destroy();
    // static private System.Boolean OVR_GamepadController_Update()
    // Offset: 0x151B044
    static bool OVR_GamepadController_Update();
    // static private System.Single OVR_GamepadController_GetAxis(System.Int32 axis)
    // Offset: 0x151B148
    static float OVR_GamepadController_GetAxis(int axis);
    // static private System.Boolean OVR_GamepadController_GetButton(System.Int32 button)
    // Offset: 0x151B0C0
    static bool OVR_GamepadController_GetButton(int button);
    // static private System.Boolean OVR_GamepadController_SetVibration(System.Int32 node, System.Single strength, System.Single frequency)
    // Offset: 0x151B5A4
    static bool OVR_GamepadController_SetVibration(int node, float strength, float frequency);
    // public System.Void .ctor()
    // Offset: 0x151A8FC
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRInput::OVRControllerGamepadMac* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRInput::OVRControllerGamepadMac::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRInput::OVRControllerGamepadMac*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x151A9AC
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
    // public override OVRInput/Controller Update()
    // Offset: 0x151AA98
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: OVRInput/Controller OVRControllerBase::Update()
    GlobalNamespace::OVRInput::Controller Update();
    // public override System.Void ConfigureButtonMap()
    // Offset: 0x151B1C8
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureButtonMap()
    void ConfigureButtonMap();
    // public override System.Void ConfigureTouchMap()
    // Offset: 0x151B3D8
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureTouchMap()
    void ConfigureTouchMap();
    // public override System.Void ConfigureNearTouchMap()
    // Offset: 0x151B488
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureNearTouchMap()
    void ConfigureNearTouchMap();
    // public override System.Void ConfigureAxis1DMap()
    // Offset: 0x151B4D8
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureAxis1DMap()
    void ConfigureAxis1DMap();
    // public override System.Void ConfigureAxis2DMap()
    // Offset: 0x151B530
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureAxis2DMap()
    void ConfigureAxis2DMap();
    // public override System.Void SetControllerVibration(System.Single frequency, System.Single amplitude)
    // Offset: 0x151B588
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::SetControllerVibration(System.Single frequency, System.Single amplitude)
    void SetControllerVibration(float frequency, float amplitude);
  }; // OVRInput/OVRControllerGamepadMac
  #pragma pack(pop)
  static check_size<sizeof(OVRInput::OVRControllerGamepadMac), 257 + sizeof(bool)> __GlobalNamespace_OVRInput_OVRControllerGamepadMacSizeCheck;
  static_assert(sizeof(OVRInput::OVRControllerGamepadMac) == 0x102);
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Initialize
  // Il2CppName: OVR_GamepadController_Initialize
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Initialize)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "OVR_GamepadController_Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Destroy
  // Il2CppName: OVR_GamepadController_Destroy
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Destroy)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "OVR_GamepadController_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Update
  // Il2CppName: OVR_GamepadController_Update
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&OVRInput::OVRControllerGamepadMac::OVR_GamepadController_Update)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "OVR_GamepadController_Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::OVR_GamepadController_GetAxis
  // Il2CppName: OVR_GamepadController_GetAxis
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int)>(&OVRInput::OVRControllerGamepadMac::OVR_GamepadController_GetAxis)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "OVR_GamepadController_GetAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::OVR_GamepadController_GetButton
  // Il2CppName: OVR_GamepadController_GetButton
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&OVRInput::OVRControllerGamepadMac::OVR_GamepadController_GetButton)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "OVR_GamepadController_GetButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::OVR_GamepadController_SetVibration
  // Il2CppName: OVR_GamepadController_SetVibration
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, float, float)>(&OVRInput::OVRControllerGamepadMac::OVR_GamepadController_SetVibration)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "OVR_GamepadController_SetVibration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OVRInput::OVRControllerGamepadMac::*)()>(&OVRInput::OVRControllerGamepadMac::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OVRInput::OVRControllerGamepadMac::*)()>(&OVRInput::OVRControllerGamepadMac::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::Finalize
  // Il2CppName: Finalize
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OVRInput::OVRControllerGamepadMac::*)()>(&OVRInput::OVRControllerGamepadMac::Finalize)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::Update
  // Il2CppName: Update
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OVRInput::Controller (OVRInput::OVRControllerGamepadMac::*)()>(&OVRInput::OVRControllerGamepadMac::Update)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::ConfigureButtonMap
  // Il2CppName: ConfigureButtonMap
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OVRInput::OVRControllerGamepadMac::*)()>(&OVRInput::OVRControllerGamepadMac::ConfigureButtonMap)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "ConfigureButtonMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::ConfigureTouchMap
  // Il2CppName: ConfigureTouchMap
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OVRInput::OVRControllerGamepadMac::*)()>(&OVRInput::OVRControllerGamepadMac::ConfigureTouchMap)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "ConfigureTouchMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::ConfigureNearTouchMap
  // Il2CppName: ConfigureNearTouchMap
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OVRInput::OVRControllerGamepadMac::*)()>(&OVRInput::OVRControllerGamepadMac::ConfigureNearTouchMap)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "ConfigureNearTouchMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::ConfigureAxis1DMap
  // Il2CppName: ConfigureAxis1DMap
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OVRInput::OVRControllerGamepadMac::*)()>(&OVRInput::OVRControllerGamepadMac::ConfigureAxis1DMap)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "ConfigureAxis1DMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::ConfigureAxis2DMap
  // Il2CppName: ConfigureAxis2DMap
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OVRInput::OVRControllerGamepadMac::*)()>(&OVRInput::OVRControllerGamepadMac::ConfigureAxis2DMap)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "ConfigureAxis2DMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: OVRInput::OVRControllerGamepadMac::SetControllerVibration
  // Il2CppName: SetControllerVibration
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OVRInput::OVRControllerGamepadMac::*)(float, float)>(&OVRInput::OVRControllerGamepadMac::SetControllerVibration)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(OVRInput::OVRControllerGamepadMac*), "SetControllerVibration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRInput::OVRControllerGamepadMac*, "", "OVRInput/OVRControllerGamepadMac");
