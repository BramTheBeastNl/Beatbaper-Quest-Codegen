// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRInput
#include "GlobalNamespace/OVRInput.hpp"
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRInput/OVRControllerGamepadMac
  class OVRInput::OVRControllerGamepadMac : public GlobalNamespace::OVRInput::OVRControllerBase {
    public:
    // Nested type: GlobalNamespace::OVRInput::OVRControllerGamepadMac::AxisGPC
    struct AxisGPC;
    // Nested type: GlobalNamespace::OVRInput::OVRControllerGamepadMac::ButtonGPC
    struct ButtonGPC;
    // private System.Boolean initialized
    // Offset: 0x101
    bool initialized;
    // static field const value: static private System.String DllName
    static constexpr const char* DllName = "OVRGamepad";
    // Get static field: static private System.String DllName
    static ::Il2CppString* _get_DllName();
    // Set static field: static private System.String DllName
    static void _set_DllName(::Il2CppString* value);
    // static private System.Boolean OVR_GamepadController_Initialize()
    // Offset: 0xDD1A90
    static bool OVR_GamepadController_Initialize();
    // static private System.Boolean OVR_GamepadController_Destroy()
    // Offset: 0xDD1B7C
    static bool OVR_GamepadController_Destroy();
    // static private System.Boolean OVR_GamepadController_Update()
    // Offset: 0xDD21A4
    static bool OVR_GamepadController_Update();
    // static private System.Single OVR_GamepadController_GetAxis(System.Int32 axis)
    // Offset: 0xDD22A8
    static float OVR_GamepadController_GetAxis(int axis);
    // static private System.Boolean OVR_GamepadController_GetButton(System.Int32 button)
    // Offset: 0xDD2220
    static bool OVR_GamepadController_GetButton(int button);
    // static private System.Boolean OVR_GamepadController_SetVibration(System.Int32 node, System.Single strength, System.Single frequency)
    // Offset: 0xDD2704
    static bool OVR_GamepadController_SetVibration(int node, float strength, float frequency);
    // public System.Void .ctor()
    // Offset: 0xDD1A5C
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::.ctor()
    // Base method: System.Void Object::.ctor()
    static OVRInput::OVRControllerGamepadMac* New_ctor();
    // protected override System.Void Finalize()
    // Offset: 0xDD1B0C
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
    // public override OVRInput/Controller Update()
    // Offset: 0xDD1BF8
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: OVRInput/Controller OVRControllerBase::Update()
    GlobalNamespace::OVRInput::Controller Update();
    // public override System.Void ConfigureButtonMap()
    // Offset: 0xDD2328
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureButtonMap()
    void ConfigureButtonMap();
    // public override System.Void ConfigureTouchMap()
    // Offset: 0xDD2538
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureTouchMap()
    void ConfigureTouchMap();
    // public override System.Void ConfigureNearTouchMap()
    // Offset: 0xDD25E8
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureNearTouchMap()
    void ConfigureNearTouchMap();
    // public override System.Void ConfigureAxis1DMap()
    // Offset: 0xDD2638
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureAxis1DMap()
    void ConfigureAxis1DMap();
    // public override System.Void ConfigureAxis2DMap()
    // Offset: 0xDD2690
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::ConfigureAxis2DMap()
    void ConfigureAxis2DMap();
    // public override System.Void SetControllerVibration(System.Single frequency, System.Single amplitude)
    // Offset: 0xDD26E8
    // Implemented from: OVRInput/OVRControllerBase
    // Base method: System.Void OVRControllerBase::SetControllerVibration(System.Single frequency, System.Single amplitude)
    void SetControllerVibration(float frequency, float amplitude);
  }; // OVRInput/OVRControllerGamepadMac
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRInput::OVRControllerGamepadMac*, "", "OVRInput/OVRControllerGamepadMac");
#pragma pack(pop)
