// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IMultiplayerLevelEndActionsPublisher
  class IMultiplayerLevelEndActionsPublisher;
  // Forward declaring type: IGameplayRpcManager
  class IGameplayRpcManager;
  // Forward declaring type: IMultiplayerSessionManager
  class IMultiplayerSessionManager;
  // Forward declaring type: LevelCompletionResults
  class LevelCompletionResults;
  // Forward declaring type: PlayerNetworkFailReason
  struct PlayerNetworkFailReason;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerLevelFinishedController
  class MultiplayerLevelFinishedController : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::MultiplayerLevelFinishedController::$StartLevelFinished$d__20
    class $StartLevelFinished$d__20;
    // private readonly IMultiplayerLevelEndActionsPublisher _levelEndActionsPublisher
    // Offset: 0x18
    GlobalNamespace::IMultiplayerLevelEndActionsPublisher* levelEndActionsPublisher;
    // private readonly IGameplayRpcManager _rpcManager
    // Offset: 0x20
    GlobalNamespace::IGameplayRpcManager* rpcManager;
    // private readonly IMultiplayerSessionManager _multiplayerSessionManager
    // Offset: 0x28
    GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager;
    // private System.Action`2<LevelCompletionResults,System.Collections.Generic.Dictionary`2<System.String,LevelCompletionResults>> allResultsCollectedEvent
    // Offset: 0x30
    System::Action_2<GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* allResultsCollectedEvent;
    // private readonly System.Collections.Generic.Dictionary`2<System.String,LevelCompletionResults> _otherPlayersCompletionResults
    // Offset: 0x38
    System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* otherPlayersCompletionResults;
    // private LevelCompletionResults _localPlayerResults
    // Offset: 0x40
    GlobalNamespace::LevelCompletionResults* localPlayerResults;
    // private System.Boolean _gameFinishReported
    // Offset: 0x48
    bool gameFinishReported;
    // private System.Single _sceneLoadTime
    // Offset: 0x4C
    float sceneLoadTime;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // static field const value: static private System.Single kMinSceneDuration
    static constexpr const float kMinSceneDuration = 2;
    // Get static field: static private System.Single kMinSceneDuration
    static float _get_kMinSceneDuration();
    // Set static field: static private System.Single kMinSceneDuration
    static void _set_kMinSceneDuration(float value);
    // public System.Void add_allResultsCollectedEvent(System.Action`2<LevelCompletionResults,System.Collections.Generic.Dictionary`2<System.String,LevelCompletionResults>> value)
    // Offset: 0x2041448
    void add_allResultsCollectedEvent(System::Action_2<GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value);
    // public System.Void remove_allResultsCollectedEvent(System.Action`2<LevelCompletionResults,System.Collections.Generic.Dictionary`2<System.String,LevelCompletionResults>> value)
    // Offset: 0x20414EC
    void remove_allResultsCollectedEvent(System::Action_2<GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value);
    // public System.Boolean get_gameResultsReady()
    // Offset: 0x2041590
    bool get_gameResultsReady();
    // public System.Collections.Generic.Dictionary`2<System.String,LevelCompletionResults> get_otherPlayersCompletionResults()
    // Offset: 0x2041598
    System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* get_otherPlayersCompletionResults();
    // public LevelCompletionResults get_localPlayerResults()
    // Offset: 0x20415A0
    GlobalNamespace::LevelCompletionResults* get_localPlayerResults();
    // protected System.Void Start()
    // Offset: 0x20415A8
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x20417F4
    void OnDestroy();
    // public System.Void PlayerNetworkDidFail(PlayerNetworkFailReason playerNetworkFailReason)
    // Offset: 0x2041A48
    void PlayerNetworkDidFail(GlobalNamespace::PlayerNetworkFailReason playerNetworkFailReason);
    // private System.Collections.IEnumerator StartLevelFinished(LevelCompletionResults localPlayerResults)
    // Offset: 0x2041BB8
    System::Collections::IEnumerator* StartLevelFinished(GlobalNamespace::LevelCompletionResults* localPlayerResults);
    // private System.Void HandlePlayerDidFinish(LevelCompletionResults levelCompletionResults)
    // Offset: 0x2041C7C
    void HandlePlayerDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults);
    // private System.Void HandlePlayerNetworkDidFailed(PlayerNetworkFailReason playerNetworkFailReason)
    // Offset: 0x2041A4C
    void HandlePlayerNetworkDidFailed(GlobalNamespace::PlayerNetworkFailReason playerNetworkFailReason);
    // private System.Void HandleRpcLevelFinished(System.String userId, LevelCompletionResults results)
    // Offset: 0x2041CA8
    void HandleRpcLevelFinished(::Il2CppString* userId, GlobalNamespace::LevelCompletionResults* results);
    // public System.Void .ctor()
    // Offset: 0x2041D18
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MultiplayerLevelFinishedController* New_ctor();
  }; // MultiplayerLevelFinishedController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerLevelFinishedController*, "", "MultiplayerLevelFinishedController");
#pragma pack(pop)
