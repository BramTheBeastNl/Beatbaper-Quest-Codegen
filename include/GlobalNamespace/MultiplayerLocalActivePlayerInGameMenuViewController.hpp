// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
}
// Forward declaring namespace: Polyglot
namespace Polyglot {
  // Forward declaring type: LocalizedTextMeshProUGUI
  class LocalizedTextMeshProUGUI;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: DisconnectPromptView
  class DisconnectPromptView;
  // Forward declaring type: LevelBar
  class LevelBar;
  // Forward declaring type: IConnectedPlayer
  class IConnectedPlayer;
  // Forward declaring type: LocalPlayerInGameMenuInitData
  class LocalPlayerInGameMenuInitData;
  // Forward declaring type: VRControllersInputManager
  class VRControllersInputManager;
  // Forward declaring type: MultiplayerLocalPlayerDisconnectHelper
  class MultiplayerLocalPlayerDisconnectHelper;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ButtonBinder
  class ButtonBinder;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xA4
  #pragma pack(push, 1)
  // Autogenerated type: MultiplayerLocalActivePlayerInGameMenuViewController
  // [TokenAttribute] Offset: FFFFFFFF
  class MultiplayerLocalActivePlayerInGameMenuViewController : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.UI.Button _disconnectButton
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::UI::Button* disconnectButton;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // private Polyglot.LocalizedTextMeshProUGUI _disconnectButtonLocalizedText
    // Size: 0x8
    // Offset: 0x20
    Polyglot::LocalizedTextMeshProUGUI* disconnectButtonLocalizedText;
    // Field size check
    static_assert(sizeof(Polyglot::LocalizedTextMeshProUGUI*) == 0x8);
    // private UnityEngine.UI.Button _giveUpButton
    // Size: 0x8
    // Offset: 0x28
    UnityEngine::UI::Button* giveUpButton;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _resumeButton
    // Size: 0x8
    // Offset: 0x30
    UnityEngine::UI::Button* resumeButton;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // [SpaceAttribute] Offset: 0xE06678
    // private UnityEngine.GameObject _mainBar
    // Size: 0x8
    // Offset: 0x38
    UnityEngine::GameObject* mainBar;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private DisconnectPromptView _disconnectPromptView
    // Size: 0x8
    // Offset: 0x40
    GlobalNamespace::DisconnectPromptView* disconnectPromptView;
    // Field size check
    static_assert(sizeof(GlobalNamespace::DisconnectPromptView*) == 0x8);
    // [SpaceAttribute] Offset: 0xE066C0
    // private LevelBar _levelBar
    // Size: 0x8
    // Offset: 0x48
    GlobalNamespace::LevelBar* levelBar;
    // Field size check
    static_assert(sizeof(GlobalNamespace::LevelBar*) == 0x8);
    // [SpaceAttribute] Offset: 0xE066F8
    // private UnityEngine.GameObject _menuWrapperGameObject
    // Size: 0x8
    // Offset: 0x50
    UnityEngine::GameObject* menuWrapperGameObject;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject _menuControllersGameObject
    // Size: 0x8
    // Offset: 0x58
    UnityEngine::GameObject* menuControllersGameObject;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // [InjectAttribute] Offset: 0xE06740
    // private readonly IConnectedPlayer _connectedPlayer
    // Size: 0x8
    // Offset: 0x60
    GlobalNamespace::IConnectedPlayer* connectedPlayer;
    // Field size check
    static_assert(sizeof(GlobalNamespace::IConnectedPlayer*) == 0x8);
    // [InjectAttribute] Offset: 0xE06750
    // private readonly LocalPlayerInGameMenuInitData _localPlayerInGameMenuInitData
    // Size: 0x8
    // Offset: 0x68
    GlobalNamespace::LocalPlayerInGameMenuInitData* localPlayerInGameMenuInitData;
    // Field size check
    static_assert(sizeof(GlobalNamespace::LocalPlayerInGameMenuInitData*) == 0x8);
    // [InjectAttribute] Offset: 0xE06760
    // private readonly VRControllersInputManager _vrControllersInputManager
    // Size: 0x8
    // Offset: 0x70
    GlobalNamespace::VRControllersInputManager* vrControllersInputManager;
    // Field size check
    static_assert(sizeof(GlobalNamespace::VRControllersInputManager*) == 0x8);
    // [InjectAttribute] Offset: 0xE06770
    // private readonly MultiplayerLocalPlayerDisconnectHelper _disconnectHelper
    // Size: 0x8
    // Offset: 0x78
    GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper* disconnectHelper;
    // Field size check
    static_assert(sizeof(GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper*) == 0x8);
    // private System.Action didPressDisconnectButtonEvent
    // Size: 0x8
    // Offset: 0x80
    System::Action* didPressDisconnectButtonEvent;
    // Field size check
    static_assert(sizeof(System::Action*) == 0x8);
    // private System.Action didPressGiveUpButtonEvent
    // Size: 0x8
    // Offset: 0x88
    System::Action* didPressGiveUpButtonEvent;
    // Field size check
    static_assert(sizeof(System::Action*) == 0x8);
    // private System.Action didPressResumeButtonEvent
    // Size: 0x8
    // Offset: 0x90
    System::Action* didPressResumeButtonEvent;
    // Field size check
    static_assert(sizeof(System::Action*) == 0x8);
    // private HMUI.ButtonBinder _buttonBinder
    // Size: 0x8
    // Offset: 0x98
    HMUI::ButtonBinder* buttonBinder;
    // Field size check
    static_assert(sizeof(HMUI::ButtonBinder*) == 0x8);
    // private System.Single _disabledInteractionRemainingTime
    // Size: 0x4
    // Offset: 0xA0
    float disabledInteractionRemainingTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: MultiplayerLocalActivePlayerInGameMenuViewController
    MultiplayerLocalActivePlayerInGameMenuViewController(UnityEngine::UI::Button* disconnectButton_ = {}, Polyglot::LocalizedTextMeshProUGUI* disconnectButtonLocalizedText_ = {}, UnityEngine::UI::Button* giveUpButton_ = {}, UnityEngine::UI::Button* resumeButton_ = {}, UnityEngine::GameObject* mainBar_ = {}, GlobalNamespace::DisconnectPromptView* disconnectPromptView_ = {}, GlobalNamespace::LevelBar* levelBar_ = {}, UnityEngine::GameObject* menuWrapperGameObject_ = {}, UnityEngine::GameObject* menuControllersGameObject_ = {}, GlobalNamespace::IConnectedPlayer* connectedPlayer_ = {}, GlobalNamespace::LocalPlayerInGameMenuInitData* localPlayerInGameMenuInitData_ = {}, GlobalNamespace::VRControllersInputManager* vrControllersInputManager_ = {}, GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper* disconnectHelper_ = {}, System::Action* didPressDisconnectButtonEvent_ = {}, System::Action* didPressGiveUpButtonEvent_ = {}, System::Action* didPressResumeButtonEvent_ = {}, HMUI::ButtonBinder* buttonBinder_ = {}, float disabledInteractionRemainingTime_ = {}) noexcept : disconnectButton{disconnectButton_}, disconnectButtonLocalizedText{disconnectButtonLocalizedText_}, giveUpButton{giveUpButton_}, resumeButton{resumeButton_}, mainBar{mainBar_}, disconnectPromptView{disconnectPromptView_}, levelBar{levelBar_}, menuWrapperGameObject{menuWrapperGameObject_}, menuControllersGameObject{menuControllersGameObject_}, connectedPlayer{connectedPlayer_}, localPlayerInGameMenuInitData{localPlayerInGameMenuInitData_}, vrControllersInputManager{vrControllersInputManager_}, disconnectHelper{disconnectHelper_}, didPressDisconnectButtonEvent{didPressDisconnectButtonEvent_}, didPressGiveUpButtonEvent{didPressGiveUpButtonEvent_}, didPressResumeButtonEvent{didPressResumeButtonEvent_}, buttonBinder{buttonBinder_}, disabledInteractionRemainingTime{disabledInteractionRemainingTime_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // static field const value: static private System.Single kDisabledInteractionDuration
    static constexpr const float kDisabledInteractionDuration = 0.2;
    // Get static field: static private System.Single kDisabledInteractionDuration
    static float _get_kDisabledInteractionDuration();
    // Set static field: static private System.Single kDisabledInteractionDuration
    static void _set_kDisabledInteractionDuration(float value);
    // Get instance field: private UnityEngine.UI.Button _disconnectButton
    UnityEngine::UI::Button* _get__disconnectButton();
    // Set instance field: private UnityEngine.UI.Button _disconnectButton
    void _set__disconnectButton(UnityEngine::UI::Button* value);
    // Get instance field: private Polyglot.LocalizedTextMeshProUGUI _disconnectButtonLocalizedText
    Polyglot::LocalizedTextMeshProUGUI* _get__disconnectButtonLocalizedText();
    // Set instance field: private Polyglot.LocalizedTextMeshProUGUI _disconnectButtonLocalizedText
    void _set__disconnectButtonLocalizedText(Polyglot::LocalizedTextMeshProUGUI* value);
    // Get instance field: private UnityEngine.UI.Button _giveUpButton
    UnityEngine::UI::Button* _get__giveUpButton();
    // Set instance field: private UnityEngine.UI.Button _giveUpButton
    void _set__giveUpButton(UnityEngine::UI::Button* value);
    // Get instance field: private UnityEngine.UI.Button _resumeButton
    UnityEngine::UI::Button* _get__resumeButton();
    // Set instance field: private UnityEngine.UI.Button _resumeButton
    void _set__resumeButton(UnityEngine::UI::Button* value);
    // Get instance field: private UnityEngine.GameObject _mainBar
    UnityEngine::GameObject* _get__mainBar();
    // Set instance field: private UnityEngine.GameObject _mainBar
    void _set__mainBar(UnityEngine::GameObject* value);
    // Get instance field: private DisconnectPromptView _disconnectPromptView
    GlobalNamespace::DisconnectPromptView* _get__disconnectPromptView();
    // Set instance field: private DisconnectPromptView _disconnectPromptView
    void _set__disconnectPromptView(GlobalNamespace::DisconnectPromptView* value);
    // Get instance field: private LevelBar _levelBar
    GlobalNamespace::LevelBar* _get__levelBar();
    // Set instance field: private LevelBar _levelBar
    void _set__levelBar(GlobalNamespace::LevelBar* value);
    // Get instance field: private UnityEngine.GameObject _menuWrapperGameObject
    UnityEngine::GameObject* _get__menuWrapperGameObject();
    // Set instance field: private UnityEngine.GameObject _menuWrapperGameObject
    void _set__menuWrapperGameObject(UnityEngine::GameObject* value);
    // Get instance field: private UnityEngine.GameObject _menuControllersGameObject
    UnityEngine::GameObject* _get__menuControllersGameObject();
    // Set instance field: private UnityEngine.GameObject _menuControllersGameObject
    void _set__menuControllersGameObject(UnityEngine::GameObject* value);
    // Get instance field: private readonly IConnectedPlayer _connectedPlayer
    GlobalNamespace::IConnectedPlayer* _get__connectedPlayer();
    // Set instance field: private readonly IConnectedPlayer _connectedPlayer
    void _set__connectedPlayer(GlobalNamespace::IConnectedPlayer* value);
    // Get instance field: private readonly LocalPlayerInGameMenuInitData _localPlayerInGameMenuInitData
    GlobalNamespace::LocalPlayerInGameMenuInitData* _get__localPlayerInGameMenuInitData();
    // Set instance field: private readonly LocalPlayerInGameMenuInitData _localPlayerInGameMenuInitData
    void _set__localPlayerInGameMenuInitData(GlobalNamespace::LocalPlayerInGameMenuInitData* value);
    // Get instance field: private readonly VRControllersInputManager _vrControllersInputManager
    GlobalNamespace::VRControllersInputManager* _get__vrControllersInputManager();
    // Set instance field: private readonly VRControllersInputManager _vrControllersInputManager
    void _set__vrControllersInputManager(GlobalNamespace::VRControllersInputManager* value);
    // Get instance field: private readonly MultiplayerLocalPlayerDisconnectHelper _disconnectHelper
    GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper* _get__disconnectHelper();
    // Set instance field: private readonly MultiplayerLocalPlayerDisconnectHelper _disconnectHelper
    void _set__disconnectHelper(GlobalNamespace::MultiplayerLocalPlayerDisconnectHelper* value);
    // Get instance field: private System.Action didPressDisconnectButtonEvent
    System::Action* _get_didPressDisconnectButtonEvent();
    // Set instance field: private System.Action didPressDisconnectButtonEvent
    void _set_didPressDisconnectButtonEvent(System::Action* value);
    // Get instance field: private System.Action didPressGiveUpButtonEvent
    System::Action* _get_didPressGiveUpButtonEvent();
    // Set instance field: private System.Action didPressGiveUpButtonEvent
    void _set_didPressGiveUpButtonEvent(System::Action* value);
    // Get instance field: private System.Action didPressResumeButtonEvent
    System::Action* _get_didPressResumeButtonEvent();
    // Set instance field: private System.Action didPressResumeButtonEvent
    void _set_didPressResumeButtonEvent(System::Action* value);
    // Get instance field: private HMUI.ButtonBinder _buttonBinder
    HMUI::ButtonBinder* _get__buttonBinder();
    // Set instance field: private HMUI.ButtonBinder _buttonBinder
    void _set__buttonBinder(HMUI::ButtonBinder* value);
    // Get instance field: private System.Single _disabledInteractionRemainingTime
    float _get__disabledInteractionRemainingTime();
    // Set instance field: private System.Single _disabledInteractionRemainingTime
    void _set__disabledInteractionRemainingTime(float value);
    // public System.Void add_didPressDisconnectButtonEvent(System.Action value)
    // Offset: 0x23D5BB8
    void add_didPressDisconnectButtonEvent(System::Action* value);
    // public System.Void remove_didPressDisconnectButtonEvent(System.Action value)
    // Offset: 0x23D60B4
    void remove_didPressDisconnectButtonEvent(System::Action* value);
    // public System.Void add_didPressGiveUpButtonEvent(System.Action value)
    // Offset: 0x23D5D00
    void add_didPressGiveUpButtonEvent(System::Action* value);
    // public System.Void remove_didPressGiveUpButtonEvent(System.Action value)
    // Offset: 0x23D61FC
    void remove_didPressGiveUpButtonEvent(System::Action* value);
    // public System.Void add_didPressResumeButtonEvent(System.Action value)
    // Offset: 0x23D5C5C
    void add_didPressResumeButtonEvent(System::Action* value);
    // public System.Void remove_didPressResumeButtonEvent(System.Action value)
    // Offset: 0x23D6158
    void remove_didPressResumeButtonEvent(System::Action* value);
    // protected System.Void Awake()
    // Offset: 0x23D6608
    void Awake();
    // protected System.Void Start()
    // Offset: 0x23D6794
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x23D6890
    void OnDestroy();
    // protected System.Void Update()
    // Offset: 0x23D6934
    void Update();
    // public System.Void ShowMenu()
    // Offset: 0x23D6328
    void ShowMenu();
    // public System.Void HideMenu()
    // Offset: 0x23D6384
    void HideMenu();
    // private System.Void DisconnectButtonPressed()
    // Offset: 0x23D69E4
    void DisconnectButtonPressed();
    // private System.Void HandleDisconnectPromptViewDidViewFinish(System.Boolean disconnect)
    // Offset: 0x23D6A24
    void HandleDisconnectPromptViewDidViewFinish(bool disconnect);
    // private System.Void GiveUpButtonPressed()
    // Offset: 0x23D6AF4
    void GiveUpButtonPressed();
    // private System.Void ResumeButtonPressed()
    // Offset: 0x23D69A4
    void ResumeButtonPressed();
    // private System.Void <HandleDisconnectPromptViewDidViewFinish>b__32_0()
    // Offset: 0x23D6B50
    void $HandleDisconnectPromptViewDidViewFinish$b__32_0();
    // public System.Void .ctor()
    // Offset: 0x23D6B48
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerLocalActivePlayerInGameMenuViewController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerLocalActivePlayerInGameMenuViewController*, creationType>()));
    }
  }; // MultiplayerLocalActivePlayerInGameMenuViewController
  #pragma pack(pop)
  static check_size<sizeof(MultiplayerLocalActivePlayerInGameMenuViewController), 160 + sizeof(float)> __GlobalNamespace_MultiplayerLocalActivePlayerInGameMenuViewControllerSizeCheck;
  static_assert(sizeof(MultiplayerLocalActivePlayerInGameMenuViewController) == 0xA4);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*, "", "MultiplayerLocalActivePlayerInGameMenuViewController");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressDisconnectButtonEvent
// Il2CppName: add_didPressDisconnectButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)(System::Action*)>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressDisconnectButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "add_didPressDisconnectButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressDisconnectButtonEvent
// Il2CppName: remove_didPressDisconnectButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)(System::Action*)>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressDisconnectButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "remove_didPressDisconnectButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressGiveUpButtonEvent
// Il2CppName: add_didPressGiveUpButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)(System::Action*)>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressGiveUpButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "add_didPressGiveUpButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressGiveUpButtonEvent
// Il2CppName: remove_didPressGiveUpButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)(System::Action*)>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressGiveUpButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "remove_didPressGiveUpButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressResumeButtonEvent
// Il2CppName: add_didPressResumeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)(System::Action*)>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::add_didPressResumeButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "add_didPressResumeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressResumeButtonEvent
// Il2CppName: remove_didPressResumeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)(System::Action*)>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::remove_didPressResumeButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "remove_didPressResumeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::ShowMenu
// Il2CppName: ShowMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::ShowMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "ShowMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::HideMenu
// Il2CppName: HideMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::HideMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "HideMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::DisconnectButtonPressed
// Il2CppName: DisconnectButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::DisconnectButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "DisconnectButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::HandleDisconnectPromptViewDidViewFinish
// Il2CppName: HandleDisconnectPromptViewDidViewFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)(bool)>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::HandleDisconnectPromptViewDidViewFinish)> {
  static const MethodInfo* get() {
    static auto* disconnect = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "HandleDisconnectPromptViewDidViewFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disconnect});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::GiveUpButtonPressed
// Il2CppName: GiveUpButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::GiveUpButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "GiveUpButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::ResumeButtonPressed
// Il2CppName: ResumeButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::ResumeButtonPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "ResumeButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::$HandleDisconnectPromptViewDidViewFinish$b__32_0
// Il2CppName: <HandleDisconnectPromptViewDidViewFinish>b__32_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::*)()>(&GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::$HandleDisconnectPromptViewDidViewFinish$b__32_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController*), "<HandleDisconnectPromptViewDidViewFinish>b__32_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
