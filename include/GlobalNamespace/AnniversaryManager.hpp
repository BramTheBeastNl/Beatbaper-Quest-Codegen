// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: MainMenuViewController
#include "GlobalNamespace/MainMenuViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FireworksController
  class FireworksController;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: AnniversaryManager
  class AnniversaryManager : public UnityEngine::MonoBehaviour {
    public:
    // private FireworksController _fireworksController
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::FireworksController* fireworksController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::FireworksController*) == 0x8);
    // [InjectAttribute] Offset: 0xE13A98
    // private readonly MainMenuViewController _mainMenuViewController
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::MainMenuViewController* mainMenuViewController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::MainMenuViewController*) == 0x8);
    // Creating value type constructor for type: AnniversaryManager
    AnniversaryManager(GlobalNamespace::FireworksController* fireworksController_ = {}, GlobalNamespace::MainMenuViewController* mainMenuViewController_ = {}) noexcept : fireworksController{fireworksController_}, mainMenuViewController{mainMenuViewController_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void Start()
    // Offset: 0x112779C
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x1127858
    void OnDestroy();
    // private System.Void HandleMainMenuViewControllerDidFinish(MainMenuViewController mainMenuViewController, MainMenuViewController/MenuButton menuButton)
    // Offset: 0x1127934
    void HandleMainMenuViewControllerDidFinish(GlobalNamespace::MainMenuViewController* mainMenuViewController, GlobalNamespace::MainMenuViewController::MenuButton menuButton);
    // private System.Void StartFireworks()
    // Offset: 0x1127838
    void StartFireworks();
    // private System.Void StopFireworks()
    // Offset: 0x1127938
    void StopFireworks();
    // public System.Void .ctor()
    // Offset: 0x1127958
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AnniversaryManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnniversaryManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AnniversaryManager*, creationType>()));
    }
  }; // AnniversaryManager
  #pragma pack(pop)
  static check_size<sizeof(AnniversaryManager), 32 + sizeof(GlobalNamespace::MainMenuViewController*)> __GlobalNamespace_AnniversaryManagerSizeCheck;
  static_assert(sizeof(AnniversaryManager) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::AnniversaryManager*, "", "AnniversaryManager");
