// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IMultiplayerSessionManager
  class IMultiplayerSessionManager;
  // Forward declaring type: IGameplayRpcManager
  class IGameplayRpcManager;
  // Forward declaring type: IMenuRpcManager
  class IMenuRpcManager;
  // Forward declaring type: IMockBeatmapDataProvider
  class IMockBeatmapDataProvider;
  // Forward declaring type: MockPlayerLobbyPoseGenerator
  class MockPlayerLobbyPoseGenerator;
  // Forward declaring type: MockPlayerGamePoseGenerator
  class MockPlayerGamePoseGenerator;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: MockPlayerFiniteStateMachine
  class MockPlayerFiniteStateMachine : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // Creating value type constructor for type: MockPlayerFiniteStateMachine
    MockPlayerFiniteStateMachine() noexcept {}
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // public System.Void .ctor(IMultiplayerSessionManager multiplayerSessionManager, IGameplayRpcManager gameplayRpcManager, IMenuRpcManager menuRpcManager, IMockBeatmapDataProvider beatmapDataProvider, MockPlayerLobbyPoseGenerator lobbyPoseGenerator, MockPlayerGamePoseGenerator gamePoseGenerator)
    // Offset: 0x2399CEC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MockPlayerFiniteStateMachine* New_ctor(GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager, GlobalNamespace::IGameplayRpcManager* gameplayRpcManager, GlobalNamespace::IMenuRpcManager* menuRpcManager, GlobalNamespace::IMockBeatmapDataProvider* beatmapDataProvider, GlobalNamespace::MockPlayerLobbyPoseGenerator* lobbyPoseGenerator, GlobalNamespace::MockPlayerGamePoseGenerator* gamePoseGenerator) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MockPlayerFiniteStateMachine*, creationType>(multiplayerSessionManager, gameplayRpcManager, menuRpcManager, beatmapDataProvider, lobbyPoseGenerator, gamePoseGenerator)));
    }
    // public UnityEngine.Color get_saberAColor()
    // Offset: 0x2399CF4
    UnityEngine::Color get_saberAColor();
    // public System.Void set_saberAColor(UnityEngine.Color value)
    // Offset: 0x2399CFC
    void set_saberAColor(UnityEngine::Color value);
    // public UnityEngine.Color get_saberBColor()
    // Offset: 0x2399D00
    UnityEngine::Color get_saberBColor();
    // public System.Void set_saberBColor(UnityEngine.Color value)
    // Offset: 0x2399D08
    void set_saberBColor(UnityEngine::Color value);
    // public UnityEngine.Color get_obstaclesColor()
    // Offset: 0x2399D0C
    UnityEngine::Color get_obstaclesColor();
    // public System.Void set_obstaclesColor(UnityEngine.Color value)
    // Offset: 0x2399D14
    void set_obstaclesColor(UnityEngine::Color value);
    // public System.Boolean get_leftHanded()
    // Offset: 0x2399D18
    bool get_leftHanded();
    // public System.Void set_leftHanded(System.Boolean value)
    // Offset: 0x2399D20
    void set_leftHanded(bool value);
    // public System.Boolean get_inactiveByDefault()
    // Offset: 0x2399D24
    bool get_inactiveByDefault();
    // public System.Void set_inactiveByDefault(System.Boolean value)
    // Offset: 0x2399D2C
    void set_inactiveByDefault(bool value);
    // public MockPlayerGamePoseGenerator get_gamePoseGenerator()
    // Offset: 0x2399D30
    GlobalNamespace::MockPlayerGamePoseGenerator* get_gamePoseGenerator();
    // public System.Void Dispose()
    // Offset: 0x2399D38
    void Dispose();
    // public System.Void SetIsReady(System.Boolean isReady)
    // Offset: 0x2399D3C
    void SetIsReady(bool isReady);
  }; // MockPlayerFiniteStateMachine
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MockPlayerFiniteStateMachine*, "", "MockPlayerFiniteStateMachine");
