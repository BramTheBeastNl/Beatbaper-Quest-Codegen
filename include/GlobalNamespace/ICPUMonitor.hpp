// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: ICPUMonitor
  class ICPUMonitor {
    public:
    // Creating value type constructor for type: ICPUMonitor
    ICPUMonitor() noexcept {}
    // public System.Single get_utilization()
    // Offset: 0xFFFFFFFF
    float get_utilization();
    // public System.Void PollUpdate()
    // Offset: 0xFFFFFFFF
    void PollUpdate();
  }; // ICPUMonitor
  #pragma pack(pop)
  // Writing MetadataGetter for method: ICPUMonitor::get_utilization
  // Il2CppName: get_utilization
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ICPUMonitor::*)()>(&ICPUMonitor::get_utilization)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ICPUMonitor*), "get_utilization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ICPUMonitor::PollUpdate
  // Il2CppName: PollUpdate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ICPUMonitor::*)()>(&ICPUMonitor::PollUpdate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ICPUMonitor*), "PollUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ICPUMonitor*, "", "ICPUMonitor");
