// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapLevelPackCollectionSO
  class BeatmapLevelPackCollectionSO;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: SongPackMaskModelSO
  class SongPackMaskModelSO : public GlobalNamespace::PersistentScriptableObject {
    public:
    // Nested type: GlobalNamespace::SongPackMaskModelSO::SongPackDataType
    struct SongPackDataType;
    // Nested type: GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem
    class SongPackMaskItem;
    // private System.Collections.Generic.List`1<System.String> _defaultSongPackMaskItems
    // Size: 0x8
    // Offset: 0x18
    System::Collections::Generic::List_1<::Il2CppString*>* defaultSongPackMaskItems;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<::Il2CppString*>*) == 0x8);
    // private SongPackMaskModelSO/SongPackMaskItem[] _customSongPackMaskItems
    // Size: 0x8
    // Offset: 0x20
    ::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* customSongPackMaskItems;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>*) == 0x8);
    // [SpaceAttribute] Offset: 0xE17C98
    // private BeatmapLevelPackCollectionSO _ostAndExtrasCollection
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::BeatmapLevelPackCollectionSO* ostAndExtrasCollection;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BeatmapLevelPackCollectionSO*) == 0x8);
    // private BeatmapLevelPackCollectionSO _dlcCollection
    // Size: 0x8
    // Offset: 0x30
    GlobalNamespace::BeatmapLevelPackCollectionSO* dlcCollection;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BeatmapLevelPackCollectionSO*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,System.String> _songPackSerializedNameToLocalizedNameDict
    // Size: 0x8
    // Offset: 0x38
    System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* songPackSerializedNameToLocalizedNameDict;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,SongPackMask> _songPackSerializedNameToMaskDict
    // Size: 0x8
    // Offset: 0x40
    System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* songPackSerializedNameToMaskDict;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<SongPackMask,System.String> _songPackMaskToSerializedNameDict
    // Size: 0x8
    // Offset: 0x48
    System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>* songPackMaskToSerializedNameDict;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*) == 0x8);
    // Creating value type constructor for type: SongPackMaskModelSO
    SongPackMaskModelSO(System::Collections::Generic::List_1<::Il2CppString*>* defaultSongPackMaskItems_ = {}, ::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* customSongPackMaskItems_ = {}, GlobalNamespace::BeatmapLevelPackCollectionSO* ostAndExtrasCollection_ = {}, GlobalNamespace::BeatmapLevelPackCollectionSO* dlcCollection_ = {}, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* songPackSerializedNameToLocalizedNameDict_ = {}, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* songPackSerializedNameToMaskDict_ = {}, System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>* songPackMaskToSerializedNameDict_ = {}) noexcept : defaultSongPackMaskItems{defaultSongPackMaskItems_}, customSongPackMaskItems{customSongPackMaskItems_}, ostAndExtrasCollection{ostAndExtrasCollection_}, dlcCollection{dlcCollection_}, songPackSerializedNameToLocalizedNameDict{songPackSerializedNameToLocalizedNameDict_}, songPackSerializedNameToMaskDict{songPackSerializedNameToMaskDict_}, songPackMaskToSerializedNameDict{songPackMaskToSerializedNameDict_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Collections.Generic.List`1<System.String> get_defaultSongPackMaskItems()
    // Offset: 0x1155480
    System::Collections::Generic::List_1<::Il2CppString*>* get_defaultSongPackMaskItems();
    // public SongPackMaskModelSO/SongPackMaskItem[] get_customSongPackMaskItems()
    // Offset: 0x1155488
    ::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* get_customSongPackMaskItems();
    // public BeatmapLevelPackCollectionSO get_ostAndExtrasCollection()
    // Offset: 0x1155490
    GlobalNamespace::BeatmapLevelPackCollectionSO* get_ostAndExtrasCollection();
    // public BeatmapLevelPackCollectionSO get_dlcCollection()
    // Offset: 0x1155498
    GlobalNamespace::BeatmapLevelPackCollectionSO* get_dlcCollection();
    // private System.String ToLocalizedName(System.String serializedName)
    // Offset: 0x11554A0
    ::Il2CppString* ToLocalizedName(::Il2CppString* serializedName);
    // public System.Boolean ToSongPackMask(System.String serializedName, out SongPackMask songPackMask)
    // Offset: 0x1155B78
    bool ToSongPackMask(::Il2CppString* serializedName, GlobalNamespace::SongPackMask& songPackMask);
    // public SongPackMask ToSongPackMask(System.String serializedName)
    // Offset: 0x1155BF0
    GlobalNamespace::SongPackMask ToSongPackMask(::Il2CppString* serializedName);
    // public System.Boolean ToSerializedName(SongPackMask songPackMask, out System.String serializedName)
    // Offset: 0x1155C28
    bool ToSerializedName(GlobalNamespace::SongPackMask songPackMask, ::Il2CppString*& serializedName);
    // public System.String ToSerializedName(SongPackMask songPackMask)
    // Offset: 0x1155CB0
    ::Il2CppString* ToSerializedName(GlobalNamespace::SongPackMask songPackMask);
    // private System.Void LazyInit()
    // Offset: 0x1155534
    void LazyInit();
    // public System.Void .ctor()
    // Offset: 0x11560F8
    // Implemented from: PersistentScriptableObject
    // Base method: System.Void PersistentScriptableObject::.ctor()
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SongPackMaskModelSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SongPackMaskModelSO*, creationType>()));
    }
  }; // SongPackMaskModelSO
  #pragma pack(pop)
  static check_size<sizeof(SongPackMaskModelSO), 72 + sizeof(System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*)> __GlobalNamespace_SongPackMaskModelSOSizeCheck;
  static_assert(sizeof(SongPackMaskModelSO) == 0x50);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SongPackMaskModelSO*, "", "SongPackMaskModelSO");
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems
// Il2CppName: get_defaultSongPackMaskItems
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems
// Il2CppName: get_customSongPackMaskItems
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection
// Il2CppName: get_ostAndExtrasCollection
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::get_dlcCollection
// Il2CppName: get_dlcCollection
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToLocalizedName
// Il2CppName: ToLocalizedName
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToSongPackMask
// Il2CppName: ToSongPackMask
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToSongPackMask
// Il2CppName: ToSongPackMask
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToSerializedName
// Il2CppName: ToSerializedName
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToSerializedName
// Il2CppName: ToSerializedName
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::LazyInit
// Il2CppName: LazyInit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
