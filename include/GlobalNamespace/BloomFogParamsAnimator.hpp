// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BloomFogSO
  class BloomFogSO;
  // Forward declaring type: BloomFogEnvironmentParams
  class BloomFogEnvironmentParams;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: BloomFogParamsAnimator
  class BloomFogParamsAnimator : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2
    class $AnimationCoroutine$d__2;
    // [InjectAttribute] Offset: 0xDF5B9C
    // private readonly BloomFogSO _bloomFog
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::BloomFogSO* bloomFog;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BloomFogSO*) == 0x8);
    // Creating value type constructor for type: BloomFogParamsAnimator
    BloomFogParamsAnimator(GlobalNamespace::BloomFogSO* bloomFog_ = {}) noexcept : bloomFog{bloomFog_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void AnimateBloomFogParamsChange(BloomFogEnvironmentParams envFogParams, System.Single duration)
    // Offset: 0x1D83C74
    void AnimateBloomFogParamsChange(GlobalNamespace::BloomFogEnvironmentParams* envFogParams, float duration);
    // private System.Collections.IEnumerator AnimationCoroutine(BloomFogEnvironmentParams envFogParams, System.Single duration)
    // Offset: 0x1D83D9C
    System::Collections::IEnumerator* AnimationCoroutine(GlobalNamespace::BloomFogEnvironmentParams* envFogParams, float duration);
    // public System.Void SetBloomFogParamsChange(BloomFogEnvironmentParams envFogParams, System.Single transition)
    // Offset: 0x1D83E54
    void SetBloomFogParamsChange(GlobalNamespace::BloomFogEnvironmentParams* envFogParams, float transition);
    // public BloomFogEnvironmentParams GetDefaultBloomFogParams()
    // Offset: 0x1D83EA0
    GlobalNamespace::BloomFogEnvironmentParams* GetDefaultBloomFogParams();
    // public System.Void SetDefaultBloomFogParams(BloomFogEnvironmentParams newDefaultBloomFogParams)
    // Offset: 0x1D83EBC
    void SetDefaultBloomFogParams(GlobalNamespace::BloomFogEnvironmentParams* newDefaultBloomFogParams);
    // public System.Void .ctor()
    // Offset: 0x1D83F80
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BloomFogParamsAnimator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BloomFogParamsAnimator*, creationType>()));
    }
  }; // BloomFogParamsAnimator
  #pragma pack(pop)
  static check_size<sizeof(BloomFogParamsAnimator), 24 + sizeof(GlobalNamespace::BloomFogSO*)> __GlobalNamespace_BloomFogParamsAnimatorSizeCheck;
  static_assert(sizeof(BloomFogParamsAnimator) == 0x20);
  // Writing MetadataGetter for method: BloomFogParamsAnimator::AnimateBloomFogParamsChange
  // Il2CppName: AnimateBloomFogParamsChange
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BloomFogParamsAnimator::*)(GlobalNamespace::BloomFogEnvironmentParams*, float)>(&BloomFogParamsAnimator::AnimateBloomFogParamsChange)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BloomFogParamsAnimator*), "AnimateBloomFogParamsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BloomFogEnvironmentParams*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: BloomFogParamsAnimator::AnimationCoroutine
  // Il2CppName: AnimationCoroutine
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (BloomFogParamsAnimator::*)(GlobalNamespace::BloomFogEnvironmentParams*, float)>(&BloomFogParamsAnimator::AnimationCoroutine)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BloomFogParamsAnimator*), "AnimationCoroutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BloomFogEnvironmentParams*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: BloomFogParamsAnimator::SetBloomFogParamsChange
  // Il2CppName: SetBloomFogParamsChange
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BloomFogParamsAnimator::*)(GlobalNamespace::BloomFogEnvironmentParams*, float)>(&BloomFogParamsAnimator::SetBloomFogParamsChange)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BloomFogParamsAnimator*), "SetBloomFogParamsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BloomFogEnvironmentParams*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: BloomFogParamsAnimator::GetDefaultBloomFogParams
  // Il2CppName: GetDefaultBloomFogParams
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BloomFogEnvironmentParams* (BloomFogParamsAnimator::*)()>(&BloomFogParamsAnimator::GetDefaultBloomFogParams)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BloomFogParamsAnimator*), "GetDefaultBloomFogParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: BloomFogParamsAnimator::SetDefaultBloomFogParams
  // Il2CppName: SetDefaultBloomFogParams
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BloomFogParamsAnimator::*)(GlobalNamespace::BloomFogEnvironmentParams*)>(&BloomFogParamsAnimator::SetDefaultBloomFogParams)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BloomFogParamsAnimator*), "SetDefaultBloomFogParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BloomFogEnvironmentParams*>()});
    }
  };
  // Writing MetadataGetter for method: BloomFogParamsAnimator::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BloomFogParamsAnimator::*)()>(&BloomFogParamsAnimator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BloomFogParamsAnimator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BloomFogParamsAnimator::*)()>(&BloomFogParamsAnimator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BloomFogParamsAnimator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BloomFogParamsAnimator*, "", "BloomFogParamsAnimator");
