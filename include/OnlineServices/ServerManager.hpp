// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OnlineServices
namespace OnlineServices {
  // Forward declaring type: PlatformServicesAvailabilityInfo
  class PlatformServicesAvailabilityInfo;
  // Forward declaring type: LevelScoreUploader
  class LevelScoreUploader;
  // Forward declaring type: PlatformOnlineServicesAvailabilityModel
  class PlatformOnlineServicesAvailabilityModel;
  // Forward declaring type: LeaderboardEntriesResult
  class LeaderboardEntriesResult;
  // Forward declaring type: GetLeaderboardFilterData
  struct GetLeaderboardFilterData;
  // Forward declaring type: LevelScoreResultsData
  struct LevelScoreResultsData;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: HTTPLeaderboardsModel
  class HTTPLeaderboardsModel;
  // Forward declaring type: IDifficultyBeatmap
  class IDifficultyBeatmap;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Completed forward declares
// Type namespace: OnlineServices
namespace OnlineServices {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: OnlineServices.ServerManager
  class ServerManager : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: OnlineServices::ServerManager::$GetLeaderboardEntriesAsync$d__14
    struct $GetLeaderboardEntriesAsync$d__14;
    // [InjectAttribute] Offset: 0xE298D4
    // private readonly HTTPLeaderboardsModel _leaderboardsModel
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::HTTPLeaderboardsModel* leaderboardsModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::HTTPLeaderboardsModel*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE298E4
    // private System.Action`1<OnlineServices.PlatformServicesAvailabilityInfo> platformServicesAvailabilityInfoChangedEvent
    // Size: 0x8
    // Offset: 0x20
    System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>* platformServicesAvailabilityInfoChangedEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE298F4
    // private System.Action`1<System.String> scoreForLeaderboardDidUploadEvent
    // Size: 0x8
    // Offset: 0x28
    System::Action_1<::Il2CppString*>* scoreForLeaderboardDidUploadEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // private System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x30
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: initialized and: levelScoreUploader
    char __padding3[0x7] = {};
    // private OnlineServices.LevelScoreUploader _levelScoreUploader
    // Size: 0x8
    // Offset: 0x38
    OnlineServices::LevelScoreUploader* levelScoreUploader;
    // Field size check
    static_assert(sizeof(OnlineServices::LevelScoreUploader*) == 0x8);
    // private OnlineServices.PlatformOnlineServicesAvailabilityModel _platformOnlineServicesAvailabilityModel
    // Size: 0x8
    // Offset: 0x40
    OnlineServices::PlatformOnlineServicesAvailabilityModel* platformOnlineServicesAvailabilityModel;
    // Field size check
    static_assert(sizeof(OnlineServices::PlatformOnlineServicesAvailabilityModel*) == 0x8);
    // Creating value type constructor for type: ServerManager
    ServerManager(GlobalNamespace::HTTPLeaderboardsModel* leaderboardsModel_ = {}, System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>* platformServicesAvailabilityInfoChangedEvent_ = {}, System::Action_1<::Il2CppString*>* scoreForLeaderboardDidUploadEvent_ = {}, bool initialized_ = {}, OnlineServices::LevelScoreUploader* levelScoreUploader_ = {}, OnlineServices::PlatformOnlineServicesAvailabilityModel* platformOnlineServicesAvailabilityModel_ = {}) noexcept : leaderboardsModel{leaderboardsModel_}, platformServicesAvailabilityInfoChangedEvent{platformServicesAvailabilityInfoChangedEvent_}, scoreForLeaderboardDidUploadEvent{scoreForLeaderboardDidUploadEvent_}, initialized{initialized_}, levelScoreUploader{levelScoreUploader_}, platformOnlineServicesAvailabilityModel{platformOnlineServicesAvailabilityModel_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_platformServicesAvailabilityInfoChangedEvent(System.Action`1<OnlineServices.PlatformServicesAvailabilityInfo> value)
    // Offset: 0x11F5B14
    void add_platformServicesAvailabilityInfoChangedEvent(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>* value);
    // public System.Void remove_platformServicesAvailabilityInfoChangedEvent(System.Action`1<OnlineServices.PlatformServicesAvailabilityInfo> value)
    // Offset: 0x11F5BB8
    void remove_platformServicesAvailabilityInfoChangedEvent(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>* value);
    // public System.Void add_scoreForLeaderboardDidUploadEvent(System.Action`1<System.String> value)
    // Offset: 0x11F5C5C
    void add_scoreForLeaderboardDidUploadEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_scoreForLeaderboardDidUploadEvent(System.Action`1<System.String> value)
    // Offset: 0x11F5D00
    void remove_scoreForLeaderboardDidUploadEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Boolean get_initialized()
    // Offset: 0x11F5DA4
    bool get_initialized();
    // public System.Void Init()
    // Offset: 0x11F5DAC
    void Init();
    // public System.String GetLeaderboardId(IDifficultyBeatmap difficultyBeatmap)
    // Offset: 0x11F5ED4
    ::Il2CppString* GetLeaderboardId(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap);
    // public System.Threading.Tasks.Task`1<OnlineServices.LeaderboardEntriesResult> GetLeaderboardEntriesAsync(OnlineServices.GetLeaderboardFilterData leaderboardFilterData, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x11F5F00
    System::Threading::Tasks::Task_1<OnlineServices::LeaderboardEntriesResult*>* GetLeaderboardEntriesAsync(OnlineServices::GetLeaderboardFilterData leaderboardFilterData, System::Threading::CancellationToken cancellationToken);
    // public System.Void SendLevelScoreResult(OnlineServices.LevelScoreResultsData levelScoreResultsData)
    // Offset: 0x11F602C
    void SendLevelScoreResult(OnlineServices::LevelScoreResultsData levelScoreResultsData);
    // private System.Void <Init>b__12_0(OnlineServices.PlatformServicesAvailabilityInfo availabilityInfo)
    // Offset: 0x11F6088
    void $Init$b__12_0(OnlineServices::PlatformServicesAvailabilityInfo* availabilityInfo);
    // private System.Void <Init>b__12_1(System.String leaderboardId)
    // Offset: 0x11F60FC
    void $Init$b__12_1(::Il2CppString* leaderboardId);
    // public System.Void .ctor()
    // Offset: 0x11F6080
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ServerManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ServerManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ServerManager*, creationType>()));
    }
  }; // OnlineServices.ServerManager
  #pragma pack(pop)
  static check_size<sizeof(ServerManager), 64 + sizeof(OnlineServices::PlatformOnlineServicesAvailabilityModel*)> __OnlineServices_ServerManagerSizeCheck;
  static_assert(sizeof(ServerManager) == 0x48);
}
DEFINE_IL2CPP_ARG_TYPE(OnlineServices::ServerManager*, "OnlineServices", "ServerManager");
// Writing MetadataGetter for method: OnlineServices::ServerManager::add_platformServicesAvailabilityInfoChangedEvent
// Il2CppName: add_platformServicesAvailabilityInfoChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*)>(&OnlineServices::ServerManager::add_platformServicesAvailabilityInfoChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "add_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*>()});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::remove_platformServicesAvailabilityInfoChangedEvent
// Il2CppName: remove_platformServicesAvailabilityInfoChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)(System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*)>(&OnlineServices::ServerManager::remove_platformServicesAvailabilityInfoChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "remove_platformServicesAvailabilityInfoChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<OnlineServices::PlatformServicesAvailabilityInfo*>*>()});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::add_scoreForLeaderboardDidUploadEvent
// Il2CppName: add_scoreForLeaderboardDidUploadEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)(System::Action_1<::Il2CppString*>*)>(&OnlineServices::ServerManager::add_scoreForLeaderboardDidUploadEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "add_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::remove_scoreForLeaderboardDidUploadEvent
// Il2CppName: remove_scoreForLeaderboardDidUploadEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)(System::Action_1<::Il2CppString*>*)>(&OnlineServices::ServerManager::remove_scoreForLeaderboardDidUploadEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "remove_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::get_initialized
// Il2CppName: get_initialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (OnlineServices::ServerManager::*)()>(&OnlineServices::ServerManager::get_initialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "get_initialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)()>(&OnlineServices::ServerManager::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::GetLeaderboardId
// Il2CppName: GetLeaderboardId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (OnlineServices::ServerManager::*)(GlobalNamespace::IDifficultyBeatmap*)>(&OnlineServices::ServerManager::GetLeaderboardId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "GetLeaderboardId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::GetLeaderboardEntriesAsync
// Il2CppName: GetLeaderboardEntriesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::LeaderboardEntriesResult*>* (OnlineServices::ServerManager::*)(OnlineServices::GetLeaderboardFilterData, System::Threading::CancellationToken)>(&OnlineServices::ServerManager::GetLeaderboardEntriesAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::GetLeaderboardFilterData>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::SendLevelScoreResult
// Il2CppName: SendLevelScoreResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)(OnlineServices::LevelScoreResultsData)>(&OnlineServices::ServerManager::SendLevelScoreResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "SendLevelScoreResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::LevelScoreResultsData>()});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::$Init$b__12_0
// Il2CppName: <Init>b__12_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)(OnlineServices::PlatformServicesAvailabilityInfo*)>(&OnlineServices::ServerManager::$Init$b__12_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "<Init>b__12_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::PlatformServicesAvailabilityInfo*>()});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::$Init$b__12_1
// Il2CppName: <Init>b__12_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)(::Il2CppString*)>(&OnlineServices::ServerManager::$Init$b__12_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), "<Init>b__12_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: OnlineServices::ServerManager::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)()>(&OnlineServices::ServerManager::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::ServerManager::*)()>(&OnlineServices::ServerManager::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::ServerManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
