// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: LiteNetLib
namespace LiteNetLib {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: LiteNetLib.NetStatistics
  class NetStatistics : public ::Il2CppObject {
    public:
    // private System.Int64 _packetsSent
    // Size: 0x8
    // Offset: 0x10
    int64_t packetsSent;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Int64 _packetsReceived
    // Size: 0x8
    // Offset: 0x18
    int64_t packetsReceived;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Int64 _bytesSent
    // Size: 0x8
    // Offset: 0x20
    int64_t bytesSent;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Int64 _bytesReceived
    // Size: 0x8
    // Offset: 0x28
    int64_t bytesReceived;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Int64 _packetLoss
    // Size: 0x8
    // Offset: 0x30
    int64_t packetLoss;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // Creating value type constructor for type: NetStatistics
    NetStatistics(int64_t packetsSent_ = {}, int64_t packetsReceived_ = {}, int64_t bytesSent_ = {}, int64_t bytesReceived_ = {}, int64_t packetLoss_ = {}) noexcept : packetsSent{packetsSent_}, packetsReceived{packetsReceived_}, bytesSent{bytesSent_}, bytesReceived{bytesReceived_}, packetLoss{packetLoss_} {}
    // public System.Int64 get_PacketsSent()
    // Offset: 0x1B48E84
    int64_t get_PacketsSent();
    // public System.Int64 get_PacketsReceived()
    // Offset: 0x1B48E90
    int64_t get_PacketsReceived();
    // public System.Int64 get_BytesSent()
    // Offset: 0x1B48E9C
    int64_t get_BytesSent();
    // public System.Int64 get_BytesReceived()
    // Offset: 0x1B48EA8
    int64_t get_BytesReceived();
    // public System.Int64 get_PacketLoss()
    // Offset: 0x1B48EB4
    int64_t get_PacketLoss();
    // public System.Int64 get_PacketLossPercent()
    // Offset: 0x1B48EC0
    int64_t get_PacketLossPercent();
    // public System.Void Reset()
    // Offset: 0x1B48F10
    void Reset();
    // public System.Void IncrementPacketsSent()
    // Offset: 0x1B410CC
    void IncrementPacketsSent();
    // public System.Void IncrementPacketsReceived()
    // Offset: 0x1B43148
    void IncrementPacketsReceived();
    // public System.Void AddBytesSent(System.Int64 bytesSent)
    // Offset: 0x1B410D8
    void AddBytesSent(int64_t bytesSent);
    // public System.Void AddBytesReceived(System.Int64 bytesReceived)
    // Offset: 0x1B43154
    void AddBytesReceived(int64_t bytesReceived);
    // public System.Void IncrementPacketLoss()
    // Offset: 0x1B48F78
    void IncrementPacketLoss();
    // public System.Void AddPacketLoss(System.Int64 packetLoss)
    // Offset: 0x1B48F84
    void AddPacketLoss(int64_t packetLoss);
    // public override System.String ToString()
    // Offset: 0x1B48F90
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
    // public System.Void .ctor()
    // Offset: 0x1B40750
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetStatistics* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::NetStatistics::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetStatistics*, creationType>()));
    }
  }; // LiteNetLib.NetStatistics
  #pragma pack(pop)
  static check_size<sizeof(NetStatistics), 48 + sizeof(int64_t)> __LiteNetLib_NetStatisticsSizeCheck;
  static_assert(sizeof(NetStatistics) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::NetStatistics*, "LiteNetLib", "NetStatistics");
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::get_PacketsSent
// Il2CppName: get_PacketsSent
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::get_PacketsReceived
// Il2CppName: get_PacketsReceived
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::get_BytesSent
// Il2CppName: get_BytesSent
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::get_BytesReceived
// Il2CppName: get_BytesReceived
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::get_PacketLoss
// Il2CppName: get_PacketLoss
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::get_PacketLossPercent
// Il2CppName: get_PacketLossPercent
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::Reset
// Il2CppName: Reset
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::IncrementPacketsSent
// Il2CppName: IncrementPacketsSent
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::IncrementPacketsReceived
// Il2CppName: IncrementPacketsReceived
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::AddBytesSent
// Il2CppName: AddBytesSent
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::AddBytesReceived
// Il2CppName: AddBytesReceived
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::IncrementPacketLoss
// Il2CppName: IncrementPacketLoss
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::AddPacketLoss
// Il2CppName: AddPacketLoss
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NetStatistics::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
