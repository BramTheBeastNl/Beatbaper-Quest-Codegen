// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: IPEndPoint
  class IPEndPoint;
  // Forward declaring type: IPAddress
  class IPAddress;
}
// Forward declaring namespace: System::Net::Sockets
namespace System::Net::Sockets {
  // Forward declaring type: AddressFamily
  struct AddressFamily;
}
// Forward declaring namespace: LiteNetLib
namespace LiteNetLib {
  // Forward declaring type: LocalAddrType
  struct LocalAddrType;
}
// Completed forward declares
// Type namespace: LiteNetLib
namespace LiteNetLib {
  // Autogenerated type: LiteNetLib.NetUtils
  class NetUtils : public ::Il2CppObject {
    public:
    // Get static field: static private readonly System.Collections.Generic.List`1<System.String> IpList
    static System::Collections::Generic::List_1<::Il2CppString*>* _get_IpList();
    // Set static field: static private readonly System.Collections.Generic.List`1<System.String> IpList
    static void _set_IpList(System::Collections::Generic::List_1<::Il2CppString*>* value);
    // static public System.Net.IPEndPoint MakeEndPoint(System.String hostStr, System.Int32 port)
    // Offset: 0x1805F9C
    static System::Net::IPEndPoint* MakeEndPoint(::Il2CppString* hostStr, int port);
    // static public System.Net.IPAddress ResolveAddress(System.String hostStr)
    // Offset: 0x180C554
    static System::Net::IPAddress* ResolveAddress(::Il2CppString* hostStr);
    // static private System.Net.IPAddress ResolveAddress(System.String hostStr, System.Net.Sockets.AddressFamily addressFamily)
    // Offset: 0x1811374
    static System::Net::IPAddress* ResolveAddress(::Il2CppString* hostStr, System::Net::Sockets::AddressFamily addressFamily);
    // static private System.Net.IPAddress[] ResolveAddresses(System.String hostStr)
    // Offset: 0x1811448
    static ::Array<System::Net::IPAddress*>* ResolveAddresses(::Il2CppString* hostStr);
    // static public System.Collections.Generic.List`1<System.String> GetLocalIpList(LiteNetLib.LocalAddrType addrType)
    // Offset: 0x181146C
    static System::Collections::Generic::List_1<::Il2CppString*>* GetLocalIpList(LiteNetLib::LocalAddrType addrType);
    // static public System.Void GetLocalIpList(System.Collections.Generic.IList`1<System.String> targetList, LiteNetLib.LocalAddrType addrType)
    // Offset: 0x1811500
    static void GetLocalIpList(System::Collections::Generic::IList_1<::Il2CppString*>* targetList, LiteNetLib::LocalAddrType addrType);
    // static public System.String GetLocalIp(LiteNetLib.LocalAddrType addrType)
    // Offset: 0x1806180
    static ::Il2CppString* GetLocalIp(LiteNetLib::LocalAddrType addrType);
    // static System.Void PrintInterfaceInfos()
    // Offset: 0x1811D04
    static void PrintInterfaceInfos();
    // static System.Int32 RelativeSequenceNumber(System.Int32 number, System.Int32 expected)
    // Offset: 0x1810074
    static int RelativeSequenceNumber(int number, int expected);
    // static private System.Void .cctor()
    // Offset: 0x18120E0
    static void _cctor();
  }; // LiteNetLib.NetUtils
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::NetUtils*, "LiteNetLib", "NetUtils");
#pragma pack(pop)
