// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.FastBitConverter
#include "LiteNetLib/Utils/FastBitConverter.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: LiteNetLib.Utils
namespace LiteNetLib::Utils {
  // Autogenerated type: LiteNetLib.Utils.FastBitConverter/ConverterHelperFloat
  struct FastBitConverter::ConverterHelperFloat : public System::ValueType {
    public:
    // public System.Int32 Aint
    // Offset: 0x0
    int Aint;
    // public System.Single Afloat
    // Offset: 0x0
    float Afloat;
    // Creating value type constructor for type: ConverterHelperFloat
    constexpr ConverterHelperFloat(int Aint_ = {}, float Afloat_ = {}) noexcept : Aint{Aint_}, Afloat{Afloat_} {}
  }; // LiteNetLib.Utils.FastBitConverter/ConverterHelperFloat
  check_size<sizeof(FastBitConverter::ConverterHelperFloat), 0 + sizeof(float) + 8 - (0 + sizeof(float)) % 8> __LiteNetLib_Utils_FastBitConverter_ConverterHelperFloatSizeCheck;
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::Utils::FastBitConverter::ConverterHelperFloat, "LiteNetLib.Utils", "FastBitConverter/ConverterHelperFloat");
#pragma pack(pop)
