// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.NatPunchModule
#include "LiteNetLib/NatPunchModule.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: LiteNetLib
namespace LiteNetLib {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: LiteNetLib.NatPunchModule/NatPunchPacket
  class NatPunchModule::NatPunchPacket : public ::Il2CppObject {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xDCC608
    // private System.String <Token>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* Token;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xDCC618
    // private System.Boolean <IsExternal>k__BackingField
    // Size: 0x1
    // Offset: 0x18
    bool IsExternal;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: NatPunchPacket
    NatPunchPacket(::Il2CppString* Token_ = {}, bool IsExternal_ = {}) noexcept : Token{Token_}, IsExternal{IsExternal_} {}
    // public System.String get_Token()
    // Offset: 0x1B3F090
    ::Il2CppString* get_Token();
    // public System.Void set_Token(System.String value)
    // Offset: 0x1B3F098
    void set_Token(::Il2CppString* value);
    // public System.Boolean get_IsExternal()
    // Offset: 0x1B3F0A0
    bool get_IsExternal();
    // public System.Void set_IsExternal(System.Boolean value)
    // Offset: 0x1B3F0A8
    void set_IsExternal(bool value);
    // public System.Void .ctor()
    // Offset: 0x1B3EB5C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NatPunchModule::NatPunchPacket* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::NatPunchModule::NatPunchPacket::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NatPunchModule::NatPunchPacket*, creationType>()));
    }
  }; // LiteNetLib.NatPunchModule/NatPunchPacket
  #pragma pack(pop)
  static check_size<sizeof(NatPunchModule::NatPunchPacket), 24 + sizeof(bool)> __LiteNetLib_NatPunchModule_NatPunchPacketSizeCheck;
  static_assert(sizeof(NatPunchModule::NatPunchPacket) == 0x19);
}
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::NatPunchModule::NatPunchPacket*, "LiteNetLib", "NatPunchModule/NatPunchPacket");
// Writing MetadataGetter for method: LiteNetLib::NatPunchModule::NatPunchPacket::get_Token
// Il2CppName: get_Token
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NatPunchModule::NatPunchPacket::set_Token
// Il2CppName: set_Token
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NatPunchModule::NatPunchPacket::get_IsExternal
// Il2CppName: get_IsExternal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NatPunchModule::NatPunchPacket::set_IsExternal
// Il2CppName: set_IsExternal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LiteNetLib::NatPunchModule::NatPunchPacket::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
