// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetEase.Docker.InitializeData
#include "NetEase/Docker/InitializeData.hpp"
// Including type: NetEase.Docker.LoginData
#include "NetEase/Docker/LoginData.hpp"
// Including type: NetEase.Docker.LogoutData
#include "NetEase/Docker/LogoutData.hpp"
// Including type: NetEase.Docker.ReceivedHighscoreData
#include "NetEase/Docker/ReceivedHighscoreData.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NetEase::Docker
namespace NetEase::Docker {
  // Forward declaring type: IDock
  class IDock;
  // Forward declaring type: UploadScoreData
  struct UploadScoreData;
  // Forward declaring type: RequestHighscoreData
  struct RequestHighscoreData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: NetEase.Docker
namespace NetEase::Docker {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: NetEase.Docker.VivaDocker
  class VivaDocker : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: VivaDocker
    VivaDocker() noexcept {}
    // Get static field: static private NetEase.Docker.IDock _activeDock
    static NetEase::Docker::IDock* _get__activeDock();
    // Set static field: static private NetEase.Docker.IDock _activeDock
    static void _set__activeDock(NetEase::Docker::IDock* value);
    // static public System.Void SetInitializeCallback(System.Action`1<NetEase.Docker.InitializeData> callbackAction)
    // Offset: 0x23EC8E4
    static void SetInitializeCallback(System::Action_1<NetEase::Docker::InitializeData>* callbackAction);
    // static public System.Void Initialize()
    // Offset: 0x23EC9C0
    static void Initialize();
    // static public System.Void SetLoginCallback(System.Action`1<NetEase.Docker.LoginData> callbackAction)
    // Offset: 0x23ECA98
    static void SetLoginCallback(System::Action_1<NetEase::Docker::LoginData>* callbackAction);
    // static public System.Void Login()
    // Offset: 0x23ECB78
    static void Login();
    // static public System.Void SetLogoutCallback(System.Action`1<NetEase.Docker.LogoutData> callbackAction)
    // Offset: 0x23ECC50
    static void SetLogoutCallback(System::Action_1<NetEase::Docker::LogoutData>* callbackAction);
    // static public System.Void Logout()
    // Offset: 0x23ECD30
    static void Logout();
    // static public System.Void UploadScore(NetEase.Docker.UploadScoreData scoreData)
    // Offset: 0x23ECE08
    static void UploadScore(NetEase::Docker::UploadScoreData scoreData);
    // static public System.Boolean WillProvideHighscore()
    // Offset: 0x23ECF28
    static bool WillProvideHighscore();
    // static public System.Void SetHighscoreReceivedCallback(System.Action`1<NetEase.Docker.ReceivedHighscoreData> callbackAction)
    // Offset: 0x23ED000
    static void SetHighscoreReceivedCallback(System::Action_1<NetEase::Docker::ReceivedHighscoreData>* callbackAction);
    // static public System.Void RequestHighscoreList(NetEase.Docker.RequestHighscoreData highscoreRequest)
    // Offset: 0x23ED0E0
    static void RequestHighscoreList(NetEase::Docker::RequestHighscoreData highscoreRequest);
    // static public System.Void UpdateLoop()
    // Offset: 0x23ED1D0
    static void UpdateLoop();
    // static private System.Void .cctor()
    // Offset: 0x23ED2A8
    static void _cctor();
  }; // NetEase.Docker.VivaDocker
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(NetEase::Docker::VivaDocker*, "NetEase.Docker", "VivaDocker");
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::SetInitializeCallback
// Il2CppName: SetInitializeCallback
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::Initialize
// Il2CppName: Initialize
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::SetLoginCallback
// Il2CppName: SetLoginCallback
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::Login
// Il2CppName: Login
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::SetLogoutCallback
// Il2CppName: SetLogoutCallback
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::Logout
// Il2CppName: Logout
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::UploadScore
// Il2CppName: UploadScore
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::WillProvideHighscore
// Il2CppName: WillProvideHighscore
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::SetHighscoreReceivedCallback
// Il2CppName: SetHighscoreReceivedCallback
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::RequestHighscoreList
// Il2CppName: RequestHighscoreList
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::UpdateLoop
// Il2CppName: UpdateLoop
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: NetEase::Docker::VivaDocker::_cctor
// Il2CppName: .cctor
// Cannot perform method pointer template specialization from operators!
