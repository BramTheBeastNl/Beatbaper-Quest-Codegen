// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: BeatSaberAPI::DataTransferObjects
namespace BeatSaberAPI::DataTransferObjects {
}
// Completed forward declares
// Type namespace: BeatSaberAPI.DataTransferObjects
namespace BeatSaberAPI::DataTransferObjects {
  // Size: 0x50
  // Autogenerated type: BeatSaberAPI.DataTransferObjects.LevelScoreResult
  // [] Offset: FFFFFFFF
  class LevelScoreResult : public ::Il2CppObject {
    public:
    // Nested type: BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers
    struct GameplayModifiers;
    // public System.String leaderboardId
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* leaderboardId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.Int32 rawScore
    // Size: 0x4
    // Offset: 0x18
    int rawScore;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 modifiedScore
    // Size: 0x4
    // Offset: 0x1C
    int modifiedScore;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean fullCombo
    // Size: 0x1
    // Offset: 0x20
    bool fullCombo;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: fullCombo and: goodCutsCount
    private: char __padding3[0x3] = {};
    public:
    // public System.Int32 goodCutsCount
    // Size: 0x4
    // Offset: 0x24
    int goodCutsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 badCutsCount
    // Size: 0x4
    // Offset: 0x28
    int badCutsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 missedCount
    // Size: 0x4
    // Offset: 0x2C
    int missedCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 maxCombo
    // Size: 0x4
    // Offset: 0x30
    int maxCombo;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: maxCombo and: gameplayModifiers
    private: char __padding7[0x4] = {};
    public:
    // public BeatSaberAPI.DataTransferObjects.LevelScoreResult/GameplayModifiers[] gameplayModifiers
    // Size: 0x8
    // Offset: 0x38
    ::Array<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>* gameplayModifiers;
    // Field size check
    static_assert(sizeof(::Array<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>*) == 0x8);
    // public System.String deviceModel
    // Size: 0x8
    // Offset: 0x40
    ::Il2CppString* deviceModel;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String extraDataBase64
    // Size: 0x8
    // Offset: 0x48
    ::Il2CppString* extraDataBase64;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: LevelScoreResult
    LevelScoreResult(::Il2CppString* leaderboardId_ = {}, int rawScore_ = {}, int modifiedScore_ = {}, bool fullCombo_ = {}, int goodCutsCount_ = {}, int badCutsCount_ = {}, int missedCount_ = {}, int maxCombo_ = {}, ::Array<BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>* gameplayModifiers_ = {}, ::Il2CppString* deviceModel_ = {}, ::Il2CppString* extraDataBase64_ = {}) noexcept : leaderboardId{leaderboardId_}, rawScore{rawScore_}, modifiedScore{modifiedScore_}, fullCombo{fullCombo_}, goodCutsCount{goodCutsCount_}, badCutsCount{badCutsCount_}, missedCount{missedCount_}, maxCombo{maxCombo_}, gameplayModifiers{gameplayModifiers_}, deviceModel{deviceModel_}, extraDataBase64{extraDataBase64_} {}
    // public System.Void .ctor()
    // Offset: 0x1A78D90
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LevelScoreResult* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("BeatSaberAPI::DataTransferObjects").WithContext("LevelScoreResult").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LevelScoreResult*, creationType>()));
    }
  }; // BeatSaberAPI.DataTransferObjects.LevelScoreResult
  static check_size<sizeof(LevelScoreResult), 72 + sizeof(::Il2CppString*)> __BeatSaberAPI_DataTransferObjects_LevelScoreResultSizeCheck;
  static_assert(sizeof(LevelScoreResult) == 0x50);
}
DEFINE_IL2CPP_ARG_TYPE(BeatSaberAPI::DataTransferObjects::LevelScoreResult*, "BeatSaberAPI.DataTransferObjects", "LevelScoreResult");
#pragma pack(pop)
