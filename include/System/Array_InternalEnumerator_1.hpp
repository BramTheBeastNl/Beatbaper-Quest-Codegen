// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System
namespace System {
  // Autogenerated type: System.Array/InternalEnumerator`1
  template<typename T>
  struct Array::InternalEnumerator_1 : public System::ValueType/*, public System::Collections::Generic::IEnumerator_1<T>*/ {
    public:
    // private readonly System.Array array
    // Offset: 0x0
    System::Array* array;
    // private System.Int32 idx
    // Offset: 0x0
    int idx;
    // Creating value type constructor for type: InternalEnumerator_1
    constexpr InternalEnumerator_1(System::Array* array_ = {}, int idx_ = {}) noexcept : array{array_}, idx{idx_} {}
    // Creating interface conversion operator: operator System::Collections::Generic::IEnumerator_1<T>
    operator System::Collections::Generic::IEnumerator_1<T>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEnumerator_1<T>*>(this);
    }
    // System.Void .ctor(System.Array array)
    // Offset: 0xFFFFFFFF
    InternalEnumerator_1(System::Array* array) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("InternalEnumerator_1").WithContext(".ctor");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<Array::InternalEnumerator_1<T>>(), ".ctor", {}, ::il2cpp_utils::ExtractTypes(array)));
      ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, array);
    }
    // public System.Void Dispose()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("InternalEnumerator_1").WithContext("Dispose");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "Dispose", {}, ::il2cpp_utils::ExtractTypes()));
      ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
    }
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose() {
      Dispose();
    }
    // public System.Boolean MoveNext()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Boolean IEnumerator::MoveNext()
    bool MoveNext() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("InternalEnumerator_1").WithContext("MoveNext");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "MoveNext", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
    }
    // Creating proxy method: System_Collections_IEnumerator_MoveNext
    // Maps to method: MoveNext
    bool System_Collections_IEnumerator_MoveNext() {
      return MoveNext();
    }
    // public T get_Current()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.Generic.IEnumerator`1
    // Base method: T IEnumerator_1::get_Current()
    T get_Current() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("InternalEnumerator_1").WithContext("get_Current");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<T>(), "get_Current", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<T, false>(*this, ___internal__method);
    }
    // Creating proxy method: System_Collections_Generic_IEnumerator_1_get_Current
    // Maps to method: get_Current
    T System_Collections_Generic_IEnumerator_1_get_Current() {
      return get_Current();
    }
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Void IEnumerator::Reset()
    void System_Collections_IEnumerator_Reset() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("InternalEnumerator_1").WithContext("System.Collections.IEnumerator.Reset");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "System.Collections.IEnumerator.Reset", {}, ::il2cpp_utils::ExtractTypes()));
      ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
    }
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Object IEnumerator::get_Current()
    ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("InternalEnumerator_1").WithContext("System.Collections.IEnumerator.get_Current");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<::Il2CppObject*>(), "System.Collections.IEnumerator.get_Current", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
    }
  }; // System.Array/InternalEnumerator`1
  // Could not write size check! Type: System.Array/InternalEnumerator`1 is generic!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(System::Array::InternalEnumerator_1, "System", "Array/InternalEnumerator`1");
#pragma pack(pop)
