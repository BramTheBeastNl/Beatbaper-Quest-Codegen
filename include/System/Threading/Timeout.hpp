// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Completed includes
// Type namespace: System.Threading
namespace System::Threading {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Threading.Timeout
  // [ComVisibleAttribute] Offset: D7D168
  class Timeout : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Timeout
    Timeout() noexcept {}
    // [ComVisibleAttribute] Offset: 0xD81EFC
    // Get static field: static public readonly System.TimeSpan InfiniteTimeSpan
    static System::TimeSpan _get_InfiniteTimeSpan();
    // Set static field: static public readonly System.TimeSpan InfiniteTimeSpan
    static void _set_InfiniteTimeSpan(System::TimeSpan value);
    // static private System.Void .cctor()
    // Offset: 0x18951E4
    static void _cctor();
  }; // System.Threading.Timeout
  #pragma pack(pop)
  // Writing MetadataGetter for method: Timeout::_cctor
  // Il2CppName: .cctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Timeout::_cctor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Timeout*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Threading::Timeout*, "System.Threading", "Timeout");
