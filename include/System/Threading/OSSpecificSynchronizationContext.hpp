// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: SendOrPostCallback
  class SendOrPostCallback;
}
// Forward declaring namespace: System::Runtime::CompilerServices
namespace System::Runtime::CompilerServices {
  // Forward declaring type: ConditionalWeakTable`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class ConditionalWeakTable_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
// Type namespace: System.Threading
namespace System::Threading {
  // Autogenerated type: System.Threading.OSSpecificSynchronizationContext
  class OSSpecificSynchronizationContext : public System::Threading::SynchronizationContext {
    public:
    // Nested type: System::Threading::OSSpecificSynchronizationContext::InvocationEntryDelegate
    class InvocationEntryDelegate;
    // Nested type: System::Threading::OSSpecificSynchronizationContext::MonoPInvokeCallbackAttribute
    class MonoPInvokeCallbackAttribute;
    // Nested type: System::Threading::OSSpecificSynchronizationContext::InvocationContext
    class InvocationContext;
    // Nested type: System::Threading::OSSpecificSynchronizationContext::$$c
    class $$c;
    // private System.Object m_OSSynchronizationContext
    // Offset: 0x18
    ::CsObject* m_OSSynchronizationContext;
    // Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Threading.OSSpecificSynchronizationContext> s_ContextCache
    static System::Runtime::CompilerServices::ConditionalWeakTable_2<::CsObject*, System::Threading::OSSpecificSynchronizationContext*>* _get_s_ContextCache();
    // Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Threading.OSSpecificSynchronizationContext> s_ContextCache
    static void _set_s_ContextCache(System::Runtime::CompilerServices::ConditionalWeakTable_2<::CsObject*, System::Threading::OSSpecificSynchronizationContext*>* value);
    // private System.Void .ctor(System.Object osContext)
    // Offset: 0x13D6E84
    static OSSpecificSynchronizationContext* New_ctor(::CsObject* osContext);
    // static public System.Threading.OSSpecificSynchronizationContext Get()
    // Offset: 0x13D6EB8
    static System::Threading::OSSpecificSynchronizationContext* Get();
    // static private System.Void InvocationEntry(System.IntPtr arg)
    // Offset: 0x13D6D28
    static void InvocationEntry(System::IntPtr arg);
    // static private System.Object GetOSContext()
    // Offset: 0x13D7014
    static ::CsObject* GetOSContext();
    // static private System.Void PostInternal(System.Object osSynchronizationContext, System.IntPtr callback, System.IntPtr arg)
    // Offset: 0x13D728C
    static void PostInternal(::CsObject* osSynchronizationContext, System::IntPtr callback, System::IntPtr arg);
    // static private System.Void .cctor()
    // Offset: 0x13D72B4
    static void _cctor();
    // public override System.Threading.SynchronizationContext CreateCopy()
    // Offset: 0x13D7018
    // Implemented from: System.Threading.SynchronizationContext
    // Base method: System.Threading.SynchronizationContext SynchronizationContext::CreateCopy()
    System::Threading::SynchronizationContext* CreateCopy();
    // public override System.Void Send(System.Threading.SendOrPostCallback d, System.Object state)
    // Offset: 0x13D708C
    // Implemented from: System.Threading.SynchronizationContext
    // Base method: System.Void SynchronizationContext::Send(System.Threading.SendOrPostCallback d, System.Object state)
    void Send(System::Threading::SendOrPostCallback* d, ::CsObject* state);
    // public override System.Void Post(System.Threading.SendOrPostCallback d, System.Object state)
    // Offset: 0x13D70EC
    // Implemented from: System.Threading.SynchronizationContext
    // Base method: System.Void SynchronizationContext::Post(System.Threading.SendOrPostCallback d, System.Object state)
    void Post(System::Threading::SendOrPostCallback* d, ::CsObject* state);
  }; // System.Threading.OSSpecificSynchronizationContext
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Threading::OSSpecificSynchronizationContext*, "System.Threading", "OSSpecificSynchronizationContext");
#pragma pack(pop)
