// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadPoolWorkQueue
#include "System/Threading/ThreadPoolWorkQueue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Threading
namespace System::Threading {
  // Autogenerated type: System.Threading.ThreadPoolWorkQueue/SparseArray`1
  template<typename T>
  class ThreadPoolWorkQueue::SparseArray_1 : public ::Il2CppObject {
    public:
    // private T[] m_array
    // Offset: 0x0
    ::Array<T>* m_array;
    // Creating conversion operator: operator ::Array<T>*
    constexpr operator ::Array<T>*() const noexcept {
      return m_array;
    }
    // System.Void .ctor(System.Int32 initialSize)
    // Offset: 0xFFFFFFFF
    static ThreadPoolWorkQueue::SparseArray_1<T>* New_ctor(int initialSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("SparseArray_1").WithContext(".ctor");
      return THROW_UNLESS(::il2cpp_utils::New<ThreadPoolWorkQueue::SparseArray_1<T>*>(initialSize));
    }
    // T[] get_Current()
    // Offset: 0xFFFFFFFF
    ::Array<T>* get_Current() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("SparseArray_1").WithContext("get_Current");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<T>*>(), "get_Current", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<::Array<T>*, false>(this, ___internal__method);
    }
    // System.Int32 Add(T e)
    // Offset: 0xFFFFFFFF
    int Add(T e) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("SparseArray_1").WithContext("Add");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "Add", {}, ::il2cpp_utils::ExtractTypes(e)));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, e);
    }
    // System.Void Remove(T e)
    // Offset: 0xFFFFFFFF
    void Remove(T e) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("SparseArray_1").WithContext("Remove");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Remove", {}, ::il2cpp_utils::ExtractTypes(e)));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
    }
  }; // System.Threading.ThreadPoolWorkQueue/SparseArray`1
  // Could not write size check! Type: System.Threading.ThreadPoolWorkQueue/SparseArray`1 is generic!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Threading::ThreadPoolWorkQueue::SparseArray_1, "System.Threading", "ThreadPoolWorkQueue/SparseArray`1");
#pragma pack(pop)
