// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation
#include "System/Threading/Tasks/TaskSchedulerAwaitTaskContinuation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: System.Threading.Tasks
namespace System::Threading::Tasks {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/<>c
  // [CompilerGeneratedAttribute] Offset: D7D3E8
  class TaskSchedulerAwaitTaskContinuation::$$c : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: $$c
    $$c() noexcept {}
    // Get static field: static public readonly System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/<>c <>9
    static System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c* _get_$$9();
    // Set static field: static public readonly System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/<>c <>9
    static void _set_$$9(System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c* value);
    // Get static field: static public System.Action`1<System.Object> <>9__2_0
    static System::Action_1<::Il2CppObject*>* _get_$$9__2_0();
    // Set static field: static public System.Action`1<System.Object> <>9__2_0
    static void _set_$$9__2_0(System::Action_1<::Il2CppObject*>* value);
    // static private System.Void .cctor()
    // Offset: 0x18908F0
    static void _cctor();
    // System.Void <Run>b__2_0(System.Object state)
    // Offset: 0x189095C
    void $Run$b__2_0(::Il2CppObject* state);
    // public System.Void .ctor()
    // Offset: 0x1890954
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TaskSchedulerAwaitTaskContinuation::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TaskSchedulerAwaitTaskContinuation::$$c*, creationType>()));
    }
  }; // System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/<>c
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c*, "System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c");
// Writing includes for template specializations
// Writing MetadataGetter for method: System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::$Run$b__2_0
// Il2CppName: <Run>b__2_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::*)(::Il2CppObject*)>(&System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::$Run$b__2_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c*), "<Run>b__2_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
