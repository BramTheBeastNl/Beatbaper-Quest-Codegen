// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Type namespace: System.Threading
namespace System::Threading {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Threading.Monitor
  // [ComVisibleAttribute] Offset: D7CF54
  class Monitor : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Monitor
    Monitor() noexcept {}
    // static public System.Void Enter(System.Object obj)
    // Offset: 0x18ADA54
    static void Enter(::Il2CppObject* obj);
    // static public System.Void Enter(System.Object obj, ref System.Boolean lockTaken)
    // Offset: 0x18AD090
    static void Enter(::Il2CppObject* obj, bool& lockTaken);
    // static private System.Void ThrowLockTakenException()
    // Offset: 0x18ADA58
    static void ThrowLockTakenException();
    // static public System.Void Exit(System.Object obj)
    // Offset: 0x18AD0B0
    static void Exit(::Il2CppObject* obj);
    // static public System.Boolean Wait(System.Object obj, System.Int32 millisecondsTimeout, System.Boolean exitContext)
    // Offset: 0x18ADAF0
    static bool Wait(::Il2CppObject* obj, int millisecondsTimeout, bool exitContext);
    // static public System.Boolean Wait(System.Object obj, System.Int32 millisecondsTimeout)
    // Offset: 0x18AD78C
    static bool Wait(::Il2CppObject* obj, int millisecondsTimeout);
    // static public System.Void Pulse(System.Object obj)
    // Offset: 0x18ADC54
    static void Pulse(::Il2CppObject* obj);
    // static public System.Void PulseAll(System.Object obj)
    // Offset: 0x18AD250
    static void PulseAll(::Il2CppObject* obj);
    // static private System.Boolean Monitor_test_synchronised(System.Object obj)
    // Offset: 0x18ADDE8
    static bool Monitor_test_synchronised(::Il2CppObject* obj);
    // static private System.Void Monitor_pulse(System.Object obj)
    // Offset: 0x18ADDEC
    static void Monitor_pulse(::Il2CppObject* obj);
    // static private System.Void ObjPulse(System.Object obj)
    // Offset: 0x18ADCD8
    static void ObjPulse(::Il2CppObject* obj);
    // static private System.Void Monitor_pulse_all(System.Object obj)
    // Offset: 0x18ADE24
    static void Monitor_pulse_all(::Il2CppObject* obj);
    // static private System.Void ObjPulseAll(System.Object obj)
    // Offset: 0x18ADD60
    static void ObjPulseAll(::Il2CppObject* obj);
    // static private System.Boolean Monitor_wait(System.Object obj, System.Int32 ms)
    // Offset: 0x18ADE28
    static bool Monitor_wait(::Il2CppObject* obj, int ms);
    // static private System.Boolean ObjWait(System.Boolean exitContext, System.Int32 millisecondsTimeout, System.Object obj)
    // Offset: 0x18ADB88
    static bool ObjWait(bool exitContext, int millisecondsTimeout, ::Il2CppObject* obj);
    // static private System.Void try_enter_with_atomic_var(System.Object obj, System.Int32 millisecondsTimeout, ref System.Boolean lockTaken)
    // Offset: 0x18ADE2C
    static void try_enter_with_atomic_var(::Il2CppObject* obj, int millisecondsTimeout, bool& lockTaken);
    // static private System.Void ReliableEnterTimeout(System.Object obj, System.Int32 timeout, ref System.Boolean lockTaken)
    // Offset: 0x18ADE30
    static void ReliableEnterTimeout(::Il2CppObject* obj, int timeout, bool& lockTaken);
    // static private System.Void ReliableEnter(System.Object obj, ref System.Boolean lockTaken)
    // Offset: 0x18ADAE4
    static void ReliableEnter(::Il2CppObject* obj, bool& lockTaken);
  }; // System.Threading.Monitor
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Threading::Monitor*, "System.Threading", "Monitor");
// Writing MetadataGetter for method: System::Threading::Monitor::Enter
// Il2CppName: Enter
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::Enter
// Il2CppName: Enter
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::ThrowLockTakenException
// Il2CppName: ThrowLockTakenException
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::Exit
// Il2CppName: Exit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::Wait
// Il2CppName: Wait
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::Wait
// Il2CppName: Wait
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::Pulse
// Il2CppName: Pulse
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::PulseAll
// Il2CppName: PulseAll
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::Monitor_test_synchronised
// Il2CppName: Monitor_test_synchronised
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::Monitor_pulse
// Il2CppName: Monitor_pulse
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::ObjPulse
// Il2CppName: ObjPulse
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::Monitor_pulse_all
// Il2CppName: Monitor_pulse_all
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::ObjPulseAll
// Il2CppName: ObjPulseAll
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::Monitor_wait
// Il2CppName: Monitor_wait
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::ObjWait
// Il2CppName: ObjWait
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::try_enter_with_atomic_var
// Il2CppName: try_enter_with_atomic_var
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::ReliableEnterTimeout
// Il2CppName: ReliableEnterTimeout
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Threading::Monitor::ReliableEnter
// Il2CppName: ReliableEnter
// Cannot perform method pointer template specialization from operators!
