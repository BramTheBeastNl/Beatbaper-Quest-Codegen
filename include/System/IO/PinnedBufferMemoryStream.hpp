// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.UnmanagedMemoryStream
#include "System/IO/UnmanagedMemoryStream.hpp"
// Including type: System.Runtime.InteropServices.GCHandle
#include "System/Runtime/InteropServices/GCHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.IO
namespace System::IO {
  // Size: 0x74
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.PinnedBufferMemoryStream
  class PinnedBufferMemoryStream : public System::IO::UnmanagedMemoryStream {
    public:
    // private System.Byte[] _array
    // Size: 0x8
    // Offset: 0x68
    ::Array<uint8_t>* array;
    // Field size check
    static_assert(sizeof(::Array<uint8_t>*) == 0x8);
    // private System.Runtime.InteropServices.GCHandle _pinningHandle
    // Size: 0x4
    // Offset: 0x70
    System::Runtime::InteropServices::GCHandle pinningHandle;
    // Field size check
    static_assert(sizeof(System::Runtime::InteropServices::GCHandle) == 0x4);
    // Creating value type constructor for type: PinnedBufferMemoryStream
    PinnedBufferMemoryStream(::Array<uint8_t>* array_ = {}, System::Runtime::InteropServices::GCHandle pinningHandle_ = {}) noexcept : array{array_}, pinningHandle{pinningHandle_} {}
    // System.Void .ctor(System.Byte[] array)
    // Offset: 0x1956E00
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PinnedBufferMemoryStream* New_ctor(::Array<uint8_t>* array) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::IO::PinnedBufferMemoryStream::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PinnedBufferMemoryStream*, creationType>(array)));
    }
    // protected override System.Void Finalize()
    // Offset: 0x1956EE4
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x1956F5C
    // Implemented from: System.IO.UnmanagedMemoryStream
    // Base method: System.Void UnmanagedMemoryStream::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
  }; // System.IO.PinnedBufferMemoryStream
  #pragma pack(pop)
  static check_size<sizeof(PinnedBufferMemoryStream), 112 + sizeof(System::Runtime::InteropServices::GCHandle)> __System_IO_PinnedBufferMemoryStreamSizeCheck;
  static_assert(sizeof(PinnedBufferMemoryStream) == 0x74);
  // Writing MetadataGetter for method: PinnedBufferMemoryStream::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PinnedBufferMemoryStream::*)(::Array<uint8_t>*)>(&PinnedBufferMemoryStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PinnedBufferMemoryStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PinnedBufferMemoryStream::*)(::Array<uint8_t>*)>(&PinnedBufferMemoryStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PinnedBufferMemoryStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
    }
  };
  // Writing MetadataGetter for method: PinnedBufferMemoryStream::Finalize
  // Il2CppName: Finalize
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PinnedBufferMemoryStream::*)()>(&PinnedBufferMemoryStream::Finalize)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PinnedBufferMemoryStream*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: PinnedBufferMemoryStream::Dispose
  // Il2CppName: Dispose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PinnedBufferMemoryStream::*)(bool)>(&PinnedBufferMemoryStream::Dispose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(PinnedBufferMemoryStream*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(System::IO::PinnedBufferMemoryStream*, "System.IO", "PinnedBufferMemoryStream");
