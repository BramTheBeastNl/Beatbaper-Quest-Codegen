// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: SeekOrigin
  struct SeekOrigin;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
template<class T>
struct Array;
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: System.IO
namespace System::IO {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.Stream/NullStream
  // [] Offset: FFFFFFFF
  class Stream::NullStream : public System::IO::Stream {
    public:
    // Creating value type constructor for type: NullStream
    NullStream() noexcept {}
    // Get static field: static private System.Threading.Tasks.Task`1<System.Int32> s_nullReadTask
    static System::Threading::Tasks::Task_1<int>* _get_s_nullReadTask();
    // Set static field: static private System.Threading.Tasks.Task`1<System.Int32> s_nullReadTask
    static void _set_s_nullReadTask(System::Threading::Tasks::Task_1<int>* value);
    // System.Void .ctor()
    // Offset: 0x17AF224
    // Implemented from: System.IO.Stream
    // Base method: System.Void Stream::.ctor()
    // Base method: System.Void MarshalByRefObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Stream::NullStream* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Stream::NullStream*, creationType>()));
    }
    // public override System.Boolean get_CanRead()
    // Offset: 0x17AF980
    // Implemented from: System.IO.Stream
    // Base method: System.Boolean Stream::get_CanRead_NEW()
    bool get_CanRead();
    // public override System.Boolean get_CanWrite()
    // Offset: 0x17AF988
    // Implemented from: System.IO.Stream
    // Base method: System.Boolean Stream::get_CanWrite_NEW()
    bool get_CanWrite();
    // public override System.Boolean get_CanSeek()
    // Offset: 0x17AF990
    // Implemented from: System.IO.Stream
    // Base method: System.Boolean Stream::get_CanSeek_NEW()
    bool get_CanSeek();
    // public override System.Int64 get_Length()
    // Offset: 0x17AF998
    // Implemented from: System.IO.Stream
    // Base method: System.Int64 Stream::get_Length_NEW()
    int64_t get_Length();
    // public override System.Int64 get_Position()
    // Offset: 0x17AF9A0
    // Implemented from: System.IO.Stream
    // Base method: System.Int64 Stream::get_Position_NEW()
    int64_t get_Position();
    // public override System.Void set_Position(System.Int64 value)
    // Offset: 0x17AF9A8
    // Implemented from: System.IO.Stream
    // Base method: System.Void Stream::set_Position_NEW(System.Int64 value)
    void set_Position(int64_t value);
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x17AF9AC
    // Implemented from: System.IO.Stream
    // Base method: System.Void Stream::Dispose_NEW(System.Boolean disposing)
    void Dispose(bool disposing);
    // public override System.Void Flush()
    // Offset: 0x17AF9B0
    // Implemented from: System.IO.Stream
    // Base method: System.Void Stream::Flush_NEW()
    void Flush();
    // public override System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)
    // Offset: 0x17AF9B4
    // Implemented from: System.IO.Stream
    // Base method: System.IAsyncResult Stream::BeginRead_NEW(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)
    System::IAsyncResult* BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state);
    // public override System.Int32 EndRead(System.IAsyncResult asyncResult)
    // Offset: 0x17AFA28
    // Implemented from: System.IO.Stream
    // Base method: System.Int32 Stream::EndRead_NEW(System.IAsyncResult asyncResult)
    int EndRead(System::IAsyncResult* asyncResult);
    // public override System.IAsyncResult BeginWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)
    // Offset: 0x17AFACC
    // Implemented from: System.IO.Stream
    // Base method: System.IAsyncResult Stream::BeginWrite_NEW(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)
    System::IAsyncResult* BeginWrite(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state);
    // public override System.Void EndWrite(System.IAsyncResult asyncResult)
    // Offset: 0x17AFB40
    // Implemented from: System.IO.Stream
    // Base method: System.Void Stream::EndWrite_NEW(System.IAsyncResult asyncResult)
    void EndWrite(System::IAsyncResult* asyncResult);
    // public override System.Int32 Read(in System.Byte[] buffer, System.Int32 offset, System.Int32 count)
    // Offset: 0x17AFBE4
    // Implemented from: System.IO.Stream
    // Base method: System.Int32 Stream::Read_NEW(in System.Byte[] buffer, System.Int32 offset, System.Int32 count)
    int Read(::Array<uint8_t>*& buffer, int offset, int count);
    // public override System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x17AFBEC
    // Implemented from: System.IO.Stream
    // Base method: System.Threading.Tasks.Task`1<System.Int32> Stream::ReadAsync_NEW(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)
    System::Threading::Tasks::Task_1<int>* ReadAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);
    // public override System.Int32 ReadByte()
    // Offset: 0x17AFCBC
    // Implemented from: System.IO.Stream
    // Base method: System.Int32 Stream::ReadByte_NEW()
    int ReadByte();
    // public override System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)
    // Offset: 0x17AFCC4
    // Implemented from: System.IO.Stream
    // Base method: System.Void Stream::Write_NEW(System.Byte[] buffer, System.Int32 offset, System.Int32 count)
    void Write(::Array<uint8_t>* buffer, int offset, int count);
    // public override System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x17AFCC8
    // Implemented from: System.IO.Stream
    // Base method: System.Threading.Tasks.Task Stream::WriteAsync_NEW(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)
    System::Threading::Tasks::Task* WriteAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);
    // public override System.Void WriteByte(System.Byte value)
    // Offset: 0x17AFD6C
    // Implemented from: System.IO.Stream
    // Base method: System.Void Stream::WriteByte_NEW(System.Byte value)
    void WriteByte(uint8_t value);
    // public override System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)
    // Offset: 0x17AFD70
    // Implemented from: System.IO.Stream
    // Base method: System.Int64 Stream::Seek_NEW(System.Int64 offset, System.IO.SeekOrigin origin)
    int64_t Seek(int64_t offset, System::IO::SeekOrigin origin);
    // public override System.Void SetLength(System.Int64 length)
    // Offset: 0x17AFD78
    // Implemented from: System.IO.Stream
    // Base method: System.Void Stream::SetLength_NEW(System.Int64 length)
    void SetLength(int64_t length);
  }; // System.IO.Stream/NullStream
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::IO::Stream::NullStream*, "System.IO", "Stream/NullStream");
