// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: StreamWriter
  class StreamWriter;
  // Forward declaring type: FileStream
  class FileStream;
  // Forward declaring type: FileAttributes
  struct FileAttributes;
  // Forward declaring type: FileMode
  struct FileMode;
  // Forward declaring type: StreamReader
  class StreamReader;
  // Forward declaring type: MonoIOStat
  struct MonoIOStat;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: System.IO
namespace System::IO {
  // Autogenerated type: System.IO.File
  class File : public ::CsObject {
    public:
    // Get static field: static private System.Nullable`1<System.DateTime> defaultLocalFileTime
    static System::Nullable_1<System::DateTime> _get_defaultLocalFileTime();
    // Set static field: static private System.Nullable`1<System.DateTime> defaultLocalFileTime
    static void _set_defaultLocalFileTime(System::Nullable_1<System::DateTime> value);
    // static public System.IO.StreamWriter AppendText(System.String path)
    // Offset: 0x111CC04
    static System::IO::StreamWriter* AppendText(::CsString* path);
    // static public System.IO.FileStream Create(System.String path)
    // Offset: 0x111CC6C
    static System::IO::FileStream* Create(::CsString* path);
    // static public System.IO.FileStream Create(System.String path, System.Int32 bufferSize)
    // Offset: 0x111CC74
    static System::IO::FileStream* Create(::CsString* path, int bufferSize);
    // static public System.IO.StreamWriter CreateText(System.String path)
    // Offset: 0x111CD24
    static System::IO::StreamWriter* CreateText(::CsString* path);
    // static public System.Void Delete(System.String path)
    // Offset: 0x111B840
    static void Delete(::CsString* path);
    // static public System.Boolean Exists(System.String path)
    // Offset: 0x111A7B0
    static bool Exists(::CsString* path);
    // static public System.IO.FileAttributes GetAttributes(System.String path)
    // Offset: 0x111CE1C
    static System::IO::FileAttributes GetAttributes(::CsString* path);
    // static public System.DateTime GetCreationTime(System.String path)
    // Offset: 0x111CF8C
    static System::DateTime GetCreationTime(::CsString* path);
    // static public System.DateTime GetLastWriteTime(System.String path)
    // Offset: 0x111D228
    static System::DateTime GetLastWriteTime(::CsString* path);
    // static public System.IO.FileStream Open(System.String path, System.IO.FileMode mode)
    // Offset: 0x111D364
    static System::IO::FileStream* Open(::CsString* path, System::IO::FileMode mode);
    // static public System.IO.FileStream OpenRead(System.String path)
    // Offset: 0x111D424
    static System::IO::FileStream* OpenRead(::CsString* path);
    // static public System.IO.StreamReader OpenText(System.String path)
    // Offset: 0x111D4A4
    static System::IO::StreamReader* OpenText(::CsString* path);
    // static public System.Void Replace(System.String sourceFileName, System.String destinationFileName, System.String destinationBackupFileName)
    // Offset: 0x111D508
    static void Replace(::CsString* sourceFileName, ::CsString* destinationFileName, ::CsString* destinationBackupFileName);
    // static public System.Void Replace(System.String sourceFileName, System.String destinationFileName, System.String destinationBackupFileName, System.Boolean ignoreMetadataErrors)
    // Offset: 0x111D510
    static void Replace(::CsString* sourceFileName, ::CsString* destinationFileName, ::CsString* destinationBackupFileName, bool ignoreMetadataErrors);
    // static public System.String[] ReadAllLines(System.String path)
    // Offset: 0x111DC54
    static ::Array<::CsString*>* ReadAllLines(::CsString* path);
    // static private System.String[] ReadAllLines(System.IO.StreamReader reader)
    // Offset: 0x111DD68
    static ::Array<::CsString*>* ReadAllLines(System::IO::StreamReader* reader);
    // static public System.String ReadAllText(System.String path)
    // Offset: 0x111DE40
    static ::CsString* ReadAllText(::CsString* path);
    // static public System.Void WriteAllBytes(System.String path, System.Byte[] bytes)
    // Offset: 0x111DF7C
    static void WriteAllBytes(::CsString* path, ::Array<uint8_t>* bytes);
    // static public System.Void WriteAllLines(System.String path, System.String[] contents)
    // Offset: 0x111E0B4
    static void WriteAllLines(::CsString* path, ::Array<::CsString*>* contents);
    // static private System.Void WriteAllLines(System.IO.StreamWriter writer, System.String[] contents)
    // Offset: 0x111E1DC
    static void WriteAllLines(System::IO::StreamWriter* writer, ::Array<::CsString*>* contents);
    // static public System.Void WriteAllText(System.String path, System.String contents)
    // Offset: 0x111E264
    static void WriteAllText(::CsString* path, ::CsString* contents);
    // static public System.Void WriteAllText(System.String path, System.String contents, System.Text.Encoding encoding)
    // Offset: 0x111E2E4
    static void WriteAllText(::CsString* path, ::CsString* contents, System::Text::Encoding* encoding);
    // static private System.DateTime get_DefaultLocalFileTime()
    // Offset: 0x111D154
    static System::DateTime get_DefaultLocalFileTime();
    // static public System.Void AppendAllLines(System.String path, System.Collections.Generic.IEnumerable`1<System.String> contents)
    // Offset: 0x111E428
    static void AppendAllLines(::CsString* path, System::Collections::Generic::IEnumerable_1<::CsString*>* contents);
    // static System.Int32 FillAttributeInfo(System.String path, System.IO.MonoIOStat data, System.Boolean tryagain, System.Boolean returnErrorOnNotFound)
    // Offset: 0x111E7A8
    static int FillAttributeInfo(::CsString* path, System::IO::MonoIOStat& data, bool tryagain, bool returnErrorOnNotFound);
  }; // System.IO.File
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::IO::File*, "System.IO", "File");
#pragma pack(pop)
