// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: System.ModifierSpec
  class ModifierSpec {
    public:
    // Creating value type constructor for type: ModifierSpec
    ModifierSpec() noexcept {}
    // public System.Type Resolve(System.Type type)
    // Offset: 0xFFFFFFFF
    System::Type* Resolve(System::Type* type);
    // public System.Text.StringBuilder Append(System.Text.StringBuilder sb)
    // Offset: 0xFFFFFFFF
    System::Text::StringBuilder* Append(System::Text::StringBuilder* sb);
  }; // System.ModifierSpec
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::ModifierSpec*, "System", "ModifierSpec");
// Writing MetadataGetter for method: ModifierSpec::Resolve
// Il2CppName: Resolve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (ModifierSpec::*)(System::Type*)>(&ModifierSpec::Resolve)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ModifierSpec*), "Resolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: ModifierSpec::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::StringBuilder* (ModifierSpec::*)(System::Text::StringBuilder*)>(&ModifierSpec::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ModifierSpec*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>()});
  }
};
