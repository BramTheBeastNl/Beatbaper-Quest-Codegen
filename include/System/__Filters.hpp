// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MemberInfo
  class MemberInfo;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.__Filters
  class __Filters : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: __Filters
    __Filters() noexcept {}
    // Get static field: static readonly System.__Filters Instance
    static System::__Filters* _get_Instance();
    // Set static field: static readonly System.__Filters Instance
    static void _set_Instance(System::__Filters* value);
    // System.Boolean FilterAttribute(System.Reflection.MemberInfo m, System.Object filterCriteria)
    // Offset: 0x2335428
    bool FilterAttribute(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria);
    // System.Boolean FilterName(System.Reflection.MemberInfo m, System.Object filterCriteria)
    // Offset: 0x2335780
    bool FilterName(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria);
    // System.Boolean FilterIgnoreCase(System.Reflection.MemberInfo m, System.Object filterCriteria)
    // Offset: 0x2335918
    bool FilterIgnoreCase(System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria);
    // static private System.Void .cctor()
    // Offset: 0x2335AC8
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x2335AC0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static __Filters* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::__Filters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<__Filters*, creationType>()));
    }
  }; // System.__Filters
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::__Filters*, "System", "__Filters");
// Writing MetadataGetter for method: __Filters::FilterAttribute
// Il2CppName: FilterAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (__Filters::*)(System::Reflection::MemberInfo*, ::Il2CppObject*)>(&__Filters::FilterAttribute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(__Filters*), "FilterAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: __Filters::FilterName
// Il2CppName: FilterName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (__Filters::*)(System::Reflection::MemberInfo*, ::Il2CppObject*)>(&__Filters::FilterName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(__Filters*), "FilterName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: __Filters::FilterIgnoreCase
// Il2CppName: FilterIgnoreCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (__Filters::*)(System::Reflection::MemberInfo*, ::Il2CppObject*)>(&__Filters::FilterIgnoreCase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(__Filters*), "FilterIgnoreCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: __Filters::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&__Filters::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(__Filters*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: __Filters::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (__Filters::*)()>(&__Filters::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(__Filters*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (__Filters::*)()>(&__Filters::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(__Filters*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
