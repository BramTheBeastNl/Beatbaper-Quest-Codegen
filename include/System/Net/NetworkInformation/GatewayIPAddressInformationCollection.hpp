// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::NetworkInformation
namespace System::Net::NetworkInformation {
  // Forward declaring type: GatewayIPAddressInformation
  class GatewayIPAddressInformation;
}
// Forward declaring namespace: System::Collections::ObjectModel
namespace System::Collections::ObjectModel {
  // Forward declaring type: Collection`1<T>
  template<typename T>
  class Collection_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  // [] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: CA0A04
  class GatewayIPAddressInformationCollection : public ::Il2CppObject/*, public System::Collections::Generic::ICollection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>*/ {
    public:
    // private System.Collections.ObjectModel.Collection`1<System.Net.NetworkInformation.GatewayIPAddressInformation> addresses
    // Size: 0x8
    // Offset: 0x10
    System::Collections::ObjectModel::Collection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>* addresses;
    // Field size check
    static_assert(sizeof(System::Collections::ObjectModel::Collection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>*) == 0x8);
    // Creating value type constructor for type: GatewayIPAddressInformationCollection
    GatewayIPAddressInformationCollection(System::Collections::ObjectModel::Collection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>* addresses_ = {}) noexcept : addresses{addresses_} {}
    // Creating interface conversion operator: operator System::Collections::Generic::ICollection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>
    operator System::Collections::Generic::ICollection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::ICollection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>*>(this);
    }
    // Creating conversion operator: operator System::Collections::ObjectModel::Collection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>*
    constexpr operator System::Collections::ObjectModel::Collection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>*() const noexcept {
      return addresses;
    }
    // public System.Void CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[] array, System.Int32 offset)
    // Offset: 0x1325724
    void CopyTo_NEW(::Array<System::Net::NetworkInformation::GatewayIPAddressInformation*>* array, int offset);
    // public System.Int32 get_Count()
    // Offset: 0x1325794
    int get_Count_NEW();
    // public System.Boolean get_IsReadOnly()
    // Offset: 0x13257EC
    bool get_IsReadOnly_NEW();
    // public System.Void Add(System.Net.NetworkInformation.GatewayIPAddressInformation address)
    // Offset: 0x13257F4
    void Add_NEW(System::Net::NetworkInformation::GatewayIPAddressInformation* address);
    // System.Void InternalAdd(System.Net.NetworkInformation.GatewayIPAddressInformation address)
    // Offset: 0x1325874
    void InternalAdd(System::Net::NetworkInformation::GatewayIPAddressInformation* address);
    // public System.Boolean Contains(System.Net.NetworkInformation.GatewayIPAddressInformation address)
    // Offset: 0x13258DC
    bool Contains_NEW(System::Net::NetworkInformation::GatewayIPAddressInformation* address);
    // public System.Collections.Generic.IEnumerator`1<System.Net.NetworkInformation.GatewayIPAddressInformation> GetEnumerator()
    // Offset: 0x1325944
    System::Collections::Generic::IEnumerator_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>* GetEnumerator_NEW();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x132599C
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator_NEW();
    // public System.Boolean Remove(System.Net.NetworkInformation.GatewayIPAddressInformation address)
    // Offset: 0x13259AC
    bool Remove_NEW(System::Net::NetworkInformation::GatewayIPAddressInformation* address);
    // public System.Void Clear()
    // Offset: 0x1325A2C
    void Clear_NEW();
    // protected internal System.Void .ctor()
    // Offset: 0x13256B4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GatewayIPAddressInformationCollection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GatewayIPAddressInformationCollection*, creationType>()));
    }
  }; // System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  #pragma pack(pop)
  static check_size<sizeof(GatewayIPAddressInformationCollection), 16 + sizeof(System::Collections::ObjectModel::Collection_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>*)> __System_Net_NetworkInformation_GatewayIPAddressInformationCollectionSizeCheck;
  static_assert(sizeof(GatewayIPAddressInformationCollection) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, "System.Net.NetworkInformation", "GatewayIPAddressInformationCollection");
