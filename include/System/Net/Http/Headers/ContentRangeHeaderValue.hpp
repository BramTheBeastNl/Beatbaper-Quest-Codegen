// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Net.Http.Headers
namespace System::Net::Http::Headers {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Net.Http.Headers.ContentRangeHeaderValue
  // [] Offset: FFFFFFFF
  class ContentRangeHeaderValue : public ::Il2CppObject/*, public System::ICloneable*/ {
    public:
    // private System.String unit
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* unit;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xCF7780
    // private System.Nullable`1<System.Int64> <From>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    System::Nullable_1<int64_t> From;
    // [CompilerGeneratedAttribute] Offset: 0xCF7790
    // private System.Nullable`1<System.Int64> <Length>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x28
    System::Nullable_1<int64_t> Length;
    // [CompilerGeneratedAttribute] Offset: 0xCF77A0
    // private System.Nullable`1<System.Int64> <To>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x38
    System::Nullable_1<int64_t> To;
    // Creating value type constructor for type: ContentRangeHeaderValue
    ContentRangeHeaderValue(::Il2CppString* unit_ = {}, System::Nullable_1<int64_t> From_ = {}, System::Nullable_1<int64_t> Length_ = {}, System::Nullable_1<int64_t> To_ = {}) noexcept : unit{unit_}, From{From_}, Length{Length_}, To{To_} {}
    // Creating interface conversion operator: operator System::ICloneable
    operator System::ICloneable() noexcept {
      return *reinterpret_cast<System::ICloneable*>(this);
    }
    // public System.Nullable`1<System.Int64> get_From()
    // Offset: 0x13D8314
    System::Nullable_1<int64_t> get_From();
    // private System.Void set_From(System.Nullable`1<System.Int64> value)
    // Offset: 0x13D8320
    void set_From(System::Nullable_1<int64_t> value);
    // public System.Nullable`1<System.Int64> get_Length()
    // Offset: 0x13D8328
    System::Nullable_1<int64_t> get_Length();
    // private System.Void set_Length(System.Nullable`1<System.Int64> value)
    // Offset: 0x13D8334
    void set_Length(System::Nullable_1<int64_t> value);
    // public System.Nullable`1<System.Int64> get_To()
    // Offset: 0x13D833C
    System::Nullable_1<int64_t> get_To();
    // private System.Void set_To(System.Nullable`1<System.Int64> value)
    // Offset: 0x13D8348
    void set_To(System::Nullable_1<int64_t> value);
    // public System.String get_Unit()
    // Offset: 0x13D8350
    ::Il2CppString* get_Unit();
    // private System.Object System.ICloneable.Clone()
    // Offset: 0x13D8358
    ::Il2CppObject* System_ICloneable_Clone_NEW();
    // static public System.Boolean TryParse(System.String input, out System.Net.Http.Headers.ContentRangeHeaderValue parsedValue)
    // Offset: 0x13D85A0
    static bool TryParse(::Il2CppString* input, System::Net::Http::Headers::ContentRangeHeaderValue*& parsedValue);
    // private System.Void .ctor()
    // Offset: 0x13D82BC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ContentRangeHeaderValue* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ContentRangeHeaderValue*, creationType>()));
    }
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x13D8360
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals_NEW(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x13D84A4
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode_NEW()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x13D8AC4
    // Implemented from: System.Object
    // Base method: System.String Object::ToString_NEW()
    ::Il2CppString* ToString();
  }; // System.Net.Http.Headers.ContentRangeHeaderValue
  // WARNING Not writing size check since size may be invalid!
}
DEFINE_IL2CPP_ARG_TYPE(System::Net::Http::Headers::ContentRangeHeaderValue*, "System.Net.Http.Headers", "ContentRangeHeaderValue");
