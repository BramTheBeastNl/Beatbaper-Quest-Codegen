// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// WARNING Layout: Sequential may not be correctly taken into account!
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter
#include "System/Xml/XmlWellFormedWriter.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x1C
  // Autogenerated type: System.Xml.XmlWellFormedWriter/AttrName
  // [] Offset: FFFFFFFF
  struct XmlWellFormedWriter::AttrName/*, public System::ValueType*/ {
    public:
    // System.String prefix
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppString* prefix;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // System.String namespaceUri
    // Size: 0x8
    // Offset: 0x8
    ::Il2CppString* namespaceUri;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // System.String localName
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* localName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // System.Int32 prev
    // Size: 0x4
    // Offset: 0x18
    int prev;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: AttrName
    constexpr AttrName(::Il2CppString* prefix_ = {}, ::Il2CppString* namespaceUri_ = {}, ::Il2CppString* localName_ = {}, int prev_ = {}) noexcept : prefix{prefix_}, namespaceUri{namespaceUri_}, localName{localName_}, prev{prev_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // System.Void Set(System.String prefix, System.String localName, System.String namespaceUri)
    // Offset: 0xCB7718
    void Set(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* namespaceUri);
    // System.Boolean IsDuplicate(System.String prefix, System.String localName, System.String namespaceUri)
    // Offset: 0xCB7720
    bool IsDuplicate(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* namespaceUri);
  }; // System.Xml.XmlWellFormedWriter/AttrName
  static check_size<sizeof(XmlWellFormedWriter::AttrName), 24 + sizeof(int)> __System_Xml_XmlWellFormedWriter_AttrNameSizeCheck;
  static_assert(sizeof(XmlWellFormedWriter::AttrName) == 0x1C);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Xml::XmlWellFormedWriter::AttrName, "System.Xml", "XmlWellFormedWriter/AttrName");
#pragma pack(pop)
