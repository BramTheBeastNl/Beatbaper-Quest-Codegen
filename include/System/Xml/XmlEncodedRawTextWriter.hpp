// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
// Including type: System.Xml.XmlCharType
#include "System/Xml/XmlCharType.hpp"
// Including type: System.Xml.NewLineHandling
#include "System/Xml/NewLineHandling.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
// Including type: System.Xml.XmlOutputMethod
#include "System/Xml/XmlOutputMethod.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
  // Forward declaring type: TextWriter
  class TextWriter;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
  // Forward declaring type: Encoder
  class Encoder;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: CharEntityEncoderFallback
  class CharEntityEncoderFallback;
  // Forward declaring type: XmlWriterSettings
  class XmlWriterSettings;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Autogenerated type: System.Xml.XmlEncodedRawTextWriter
  class XmlEncodedRawTextWriter : public System::Xml::XmlRawWriter {
    public:
    // private readonly System.Boolean useAsync
    // Offset: 0x20
    bool useAsync;
    // protected System.Byte[] bufBytes
    // Offset: 0x28
    ::Array<uint8_t>* bufBytes;
    // protected System.IO.Stream stream
    // Offset: 0x30
    System::IO::Stream* stream;
    // protected System.Text.Encoding encoding
    // Offset: 0x38
    System::Text::Encoding* encoding;
    // protected System.Xml.XmlCharType xmlCharType
    // Offset: 0x40
    System::Xml::XmlCharType xmlCharType;
    // protected System.Int32 bufPos
    // Offset: 0x48
    int bufPos;
    // protected System.Int32 textPos
    // Offset: 0x4C
    int textPos;
    // protected System.Int32 contentPos
    // Offset: 0x50
    int contentPos;
    // protected System.Int32 cdataPos
    // Offset: 0x54
    int cdataPos;
    // protected System.Int32 attrEndPos
    // Offset: 0x58
    int attrEndPos;
    // protected System.Int32 bufLen
    // Offset: 0x5C
    int bufLen;
    // protected System.Boolean writeToNull
    // Offset: 0x60
    bool writeToNull;
    // protected System.Boolean hadDoubleBracket
    // Offset: 0x61
    bool hadDoubleBracket;
    // protected System.Boolean inAttributeValue
    // Offset: 0x62
    bool inAttributeValue;
    // protected System.Int32 bufBytesUsed
    // Offset: 0x64
    int bufBytesUsed;
    // protected System.Char[] bufChars
    // Offset: 0x68
    ::Array<::Il2CppChar>* bufChars;
    // protected System.Text.Encoder encoder
    // Offset: 0x70
    System::Text::Encoder* encoder;
    // protected System.IO.TextWriter writer
    // Offset: 0x78
    System::IO::TextWriter* writer;
    // protected System.Boolean trackTextContent
    // Offset: 0x80
    bool trackTextContent;
    // protected System.Boolean inTextContent
    // Offset: 0x81
    bool inTextContent;
    // private System.Int32 lastMarkPos
    // Offset: 0x84
    int lastMarkPos;
    // private System.Int32[] textContentMarks
    // Offset: 0x88
    ::Array<int>* textContentMarks;
    // private System.Xml.CharEntityEncoderFallback charEntityFallback
    // Offset: 0x90
    System::Xml::CharEntityEncoderFallback* charEntityFallback;
    // protected System.Xml.NewLineHandling newLineHandling
    // Offset: 0x98
    System::Xml::NewLineHandling newLineHandling;
    // protected System.Boolean closeOutput
    // Offset: 0x9C
    bool closeOutput;
    // protected System.Boolean omitXmlDeclaration
    // Offset: 0x9D
    bool omitXmlDeclaration;
    // protected System.String newLineChars
    // Offset: 0xA0
    ::CsString* newLineChars;
    // protected System.Boolean checkCharacters
    // Offset: 0xA8
    bool checkCharacters;
    // protected System.Xml.XmlStandalone standalone
    // Offset: 0xAC
    System::Xml::XmlStandalone standalone;
    // protected System.Xml.XmlOutputMethod outputMethod
    // Offset: 0xB0
    System::Xml::XmlOutputMethod outputMethod;
    // protected System.Boolean autoXmlDeclaration
    // Offset: 0xB4
    bool autoXmlDeclaration;
    // protected System.Boolean mergeCDataSections
    // Offset: 0xB5
    bool mergeCDataSections;
    // protected System.Void .ctor(System.Xml.XmlWriterSettings settings)
    // Offset: 0x119E910
    static XmlEncodedRawTextWriter* New_ctor(System::Xml::XmlWriterSettings* settings);
    // public System.Void .ctor(System.IO.TextWriter writer, System.Xml.XmlWriterSettings settings)
    // Offset: 0x1193610
    static XmlEncodedRawTextWriter* New_ctor(System::IO::TextWriter* writer, System::Xml::XmlWriterSettings* settings);
    // public System.Void .ctor(System.IO.Stream stream, System.Xml.XmlWriterSettings settings)
    // Offset: 0x11938DC
    static XmlEncodedRawTextWriter* New_ctor(System::IO::Stream* stream, System::Xml::XmlWriterSettings* settings);
    // protected System.Void FlushBuffer()
    // Offset: 0x11967D8
    void FlushBuffer();
    // private System.Void EncodeChars(System.Int32 startOffset, System.Int32 endOffset, System.Boolean writeAllToStream)
    // Offset: 0x11A088C
    void EncodeChars(int startOffset, int endOffset, bool writeAllToStream);
    // private System.Void FlushEncoder()
    // Offset: 0x11A077C
    void FlushEncoder();
    // protected System.Void WriteAttributeTextBlock(System.Char* pSrc, System.Char* pSrcEnd)
    // Offset: 0x1195368
    void WriteAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd);
    // protected System.Void WriteElementTextBlock(System.Char* pSrc, System.Char* pSrcEnd)
    // Offset: 0x119565C
    void WriteElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd);
    // protected System.Void RawText(System.String s)
    // Offset: 0x1193E58
    void RawText(::CsString* s);
    // protected System.Void RawText(System.Char* pSrcBegin, System.Char* pSrcEnd)
    // Offset: 0x1195940
    void RawText(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd);
    // protected System.Void WriteRawWithCharChecking(System.Char* pSrcBegin, System.Char* pSrcEnd)
    // Offset: 0x11A02D0
    void WriteRawWithCharChecking(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd);
    // protected System.Void WriteCommentOrPi(System.String text, System.Int32 stopChar)
    // Offset: 0x1194DAC
    void WriteCommentOrPi(::CsString* text, int stopChar);
    // protected System.Void WriteCDataSection(System.String text)
    // Offset: 0x119F700
    void WriteCDataSection(::CsString* text);
    // static private System.Char* EncodeSurrogate(System.Char* pSrc, System.Char* pSrcEnd, System.Char* pDst)
    // Offset: 0x11A0A20
    static ::Il2CppChar* EncodeSurrogate(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd, ::Il2CppChar* pDst);
    // private System.Char* InvalidXmlChar(System.Int32 ch, System.Char* pDst, System.Boolean entitize)
    // Offset: 0x11A0B78
    ::Il2CppChar* InvalidXmlChar(int ch, ::Il2CppChar* pDst, bool entitize);
    // System.Void EncodeChar(System.Char* pSrc, System.Char* pSrcEnd, System.Char* pDst)
    // Offset: 0x11961C8
    void EncodeChar(::Il2CppChar*& pSrc, ::Il2CppChar* pSrcEnd, ::Il2CppChar*& pDst);
    // protected System.Void ChangeTextContentMark(System.Boolean value)
    // Offset: 0x1193DD0
    void ChangeTextContentMark(bool value);
    // private System.Void GrowTextContentMarks()
    // Offset: 0x11A0DB0
    void GrowTextContentMarks();
    // protected System.Char* WriteNewLine(System.Char* pDst)
    // Offset: 0x11A0C40
    ::Il2CppChar* WriteNewLine(::Il2CppChar* pDst);
    // static protected System.Char* LtEntity(System.Char* pDst)
    // Offset: 0x11A09C8
    static ::Il2CppChar* LtEntity(::Il2CppChar* pDst);
    // static protected System.Char* GtEntity(System.Char* pDst)
    // Offset: 0x11A09E0
    static ::Il2CppChar* GtEntity(::Il2CppChar* pDst);
    // static protected System.Char* AmpEntity(System.Char* pDst)
    // Offset: 0x1196124
    static ::Il2CppChar* AmpEntity(::Il2CppChar* pDst);
    // static protected System.Char* QuoteEntity(System.Char* pDst)
    // Offset: 0x119614C
    static ::Il2CppChar* QuoteEntity(::Il2CppChar* pDst);
    // static protected System.Char* TabEntity(System.Char* pDst)
    // Offset: 0x11A09F8
    static ::Il2CppChar* TabEntity(::Il2CppChar* pDst);
    // static protected System.Char* LineFeedEntity(System.Char* pDst)
    // Offset: 0x11961A0
    static ::Il2CppChar* LineFeedEntity(::Il2CppChar* pDst);
    // static protected System.Char* CarriageReturnEntity(System.Char* pDst)
    // Offset: 0x1196178
    static ::Il2CppChar* CarriageReturnEntity(::Il2CppChar* pDst);
    // static private System.Char* CharEntity(System.Char* pDst, System.Char ch)
    // Offset: 0x11A0CF8
    static ::Il2CppChar* CharEntity(::Il2CppChar* pDst, ::Il2CppChar ch);
    // static protected System.Char* RawStartCData(System.Char* pDst)
    // Offset: 0x11A0CC0
    static ::Il2CppChar* RawStartCData(::Il2CppChar* pDst);
    // static protected System.Char* RawEndCData(System.Char* pDst)
    // Offset: 0x11A0CA0
    static ::Il2CppChar* RawEndCData(::Il2CppChar* pDst);
    // protected System.Void ValidateContentChars(System.String chars, System.String propertyName, System.Boolean allowOnlyWhitespace)
    // Offset: 0x119EA1C
    void ValidateContentChars(::CsString* chars, ::CsString* propertyName, bool allowOnlyWhitespace);
    // override System.Void WriteXmlDeclaration(System.Xml.XmlStandalone standalone)
    // Offset: 0x119EDA0
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteXmlDeclaration(System.Xml.XmlStandalone standalone)
    void WriteXmlDeclaration(System::Xml::XmlStandalone standalone);
    // override System.Void WriteXmlDeclaration(System.String xmldecl)
    // Offset: 0x119EEDC
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteXmlDeclaration(System.String xmldecl)
    void WriteXmlDeclaration(::CsString* xmldecl);
    // public override System.Void WriteDocType(System.String name, System.String pubid, System.String sysid, System.String subset)
    // Offset: 0x119EF68
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteDocType(System.String name, System.String pubid, System.String sysid, System.String subset)
    void WriteDocType(::CsString* name, ::CsString* pubid, ::CsString* sysid, ::CsString* subset);
    // public override System.Void WriteStartElement(System.String prefix, System.String localName, System.String ns)
    // Offset: 0x1194104
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteStartElement(System.String prefix, System.String localName, System.String ns)
    void WriteStartElement(::CsString* prefix, ::CsString* localName, ::CsString* ns);
    // override System.Void StartElementContent()
    // Offset: 0x119F160
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::StartElementContent()
    void StartElementContent();
    // override System.Void WriteEndElement(System.String prefix, System.String localName, System.String ns)
    // Offset: 0x1194434
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteEndElement(System.String prefix, System.String localName, System.String ns)
    void WriteEndElement(::CsString* prefix, ::CsString* localName, ::CsString* ns);
    // override System.Void WriteFullEndElement(System.String prefix, System.String localName, System.String ns)
    // Offset: 0x11946D8
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteFullEndElement(System.String prefix, System.String localName, System.String ns)
    void WriteFullEndElement(::CsString* prefix, ::CsString* localName, ::CsString* ns);
    // public override System.Void WriteStartAttribute(System.String prefix, System.String localName, System.String ns)
    // Offset: 0x119499C
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteStartAttribute(System.String prefix, System.String localName, System.String ns)
    void WriteStartAttribute(::CsString* prefix, ::CsString* localName, ::CsString* ns);
    // public override System.Void WriteEndAttribute()
    // Offset: 0x119F1B4
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteEndAttribute()
    void WriteEndAttribute();
    // override System.Void WriteNamespaceDeclaration(System.String prefix, System.String namespaceName)
    // Offset: 0x119F234
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteNamespaceDeclaration(System.String prefix, System.String namespaceName)
    void WriteNamespaceDeclaration(::CsString* prefix, ::CsString* namespaceName);
    // override System.Boolean get_SupportsNamespaceDeclarationInChunks()
    // Offset: 0x119F28C
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Boolean XmlRawWriter::get_SupportsNamespaceDeclarationInChunks()
    bool get_SupportsNamespaceDeclarationInChunks();
    // override System.Void WriteStartNamespaceDeclaration(System.String prefix)
    // Offset: 0x119F294
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteStartNamespaceDeclaration(System.String prefix)
    void WriteStartNamespaceDeclaration(::CsString* prefix);
    // override System.Void WriteEndNamespaceDeclaration()
    // Offset: 0x119F3D8
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteEndNamespaceDeclaration()
    void WriteEndNamespaceDeclaration();
    // public override System.Void WriteCData(System.String text)
    // Offset: 0x119F458
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteCData(System.String text)
    void WriteCData(::CsString* text);
    // public override System.Void WriteComment(System.String text)
    // Offset: 0x119FA10
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteComment(System.String text)
    void WriteComment(::CsString* text);
    // public override System.Void WriteProcessingInstruction(System.String name, System.String text)
    // Offset: 0x119FBA0
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteProcessingInstruction(System.String name, System.String text)
    void WriteProcessingInstruction(::CsString* name, ::CsString* text);
    // public override System.Void WriteEntityRef(System.String name)
    // Offset: 0x119FD00
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteEntityRef(System.String name)
    void WriteEntityRef(::CsString* name);
    // public override System.Void WriteCharEntity(System.Char ch)
    // Offset: 0x119FDDC
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteCharEntity(System.Char ch)
    void WriteCharEntity(::Il2CppChar ch);
    // public override System.Void WriteWhitespace(System.String ws)
    // Offset: 0x119FFD0
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteWhitespace(System.String ws)
    void WriteWhitespace(::CsString* ws);
    // public override System.Void WriteString(System.String text)
    // Offset: 0x11A0040
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteString(System.String text)
    void WriteString(::CsString* text);
    // public override System.Void WriteSurrogateCharEntity(System.Char lowChar, System.Char highChar)
    // Offset: 0x11A00B0
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteSurrogateCharEntity(System.Char lowChar, System.Char highChar)
    void WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar);
    // public override System.Void WriteChars(System.Char[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x11A023C
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteChars(System.Char[] buffer, System.Int32 index, System.Int32 count)
    void WriteChars(::Array<::Il2CppChar>* buffer, int index, int count);
    // public override System.Void WriteRaw(System.Char[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x119B1A4
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteRaw(System.Char[] buffer, System.Int32 index, System.Int32 count)
    void WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count);
    // public override System.Void WriteRaw(System.String data)
    // Offset: 0x119B0F8
    // Implemented from: System.Xml.XmlRawWriter
    // Base method: System.Void XmlRawWriter::WriteRaw(System.String data)
    void WriteRaw(::CsString* data);
    // public override System.Void Close()
    // Offset: 0x11A04F4
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::Close()
    void Close();
    // public override System.Void Flush()
    // Offset: 0x11A0824
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::Flush()
    void Flush();
  }; // System.Xml.XmlEncodedRawTextWriter
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Xml::XmlEncodedRawTextWriter*, "System.Xml", "XmlEncodedRawTextWriter");
#pragma pack(pop)
