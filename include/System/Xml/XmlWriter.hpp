// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: WriteState
  struct WriteState;
  // Forward declaring type: XmlWriterSettings
  class XmlWriterSettings;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
  // Forward declaring type: TextWriter
  class TextWriter;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XmlWriter
  class XmlWriter : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // Creating value type constructor for type: XmlWriter
    XmlWriter() noexcept {}
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // public System.Void WriteStartDocument()
    // Offset: 0xFFFFFFFF
    void WriteStartDocument();
    // public System.Void WriteDocType(System.String name, System.String pubid, System.String sysid, System.String subset)
    // Offset: 0xFFFFFFFF
    void WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset);
    // public System.Void WriteStartElement(System.String prefix, System.String localName, System.String ns)
    // Offset: 0xFFFFFFFF
    void WriteStartElement(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns);
    // public System.Void WriteStartElement(System.String localName)
    // Offset: 0x23C4D64
    void WriteStartElement(::Il2CppString* localName);
    // public System.Void WriteEndElement()
    // Offset: 0xFFFFFFFF
    void WriteEndElement();
    // public System.Void WriteFullEndElement()
    // Offset: 0xFFFFFFFF
    void WriteFullEndElement();
    // public System.Void WriteAttributeString(System.String localName, System.String value)
    // Offset: 0x23C4D7C
    void WriteAttributeString(::Il2CppString* localName, ::Il2CppString* value);
    // public System.Void WriteAttributeString(System.String prefix, System.String localName, System.String ns, System.String value)
    // Offset: 0x23C4DD8
    void WriteAttributeString(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns, ::Il2CppString* value);
    // public System.Void WriteStartAttribute(System.String prefix, System.String localName, System.String ns)
    // Offset: 0xFFFFFFFF
    void WriteStartAttribute(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns);
    // public System.Void WriteEndAttribute()
    // Offset: 0xFFFFFFFF
    void WriteEndAttribute();
    // public System.Void WriteCData(System.String text)
    // Offset: 0xFFFFFFFF
    void WriteCData(::Il2CppString* text);
    // public System.Void WriteComment(System.String text)
    // Offset: 0xFFFFFFFF
    void WriteComment(::Il2CppString* text);
    // public System.Void WriteProcessingInstruction(System.String name, System.String text)
    // Offset: 0xFFFFFFFF
    void WriteProcessingInstruction(::Il2CppString* name, ::Il2CppString* text);
    // public System.Void WriteEntityRef(System.String name)
    // Offset: 0xFFFFFFFF
    void WriteEntityRef(::Il2CppString* name);
    // public System.Void WriteCharEntity(System.Char ch)
    // Offset: 0xFFFFFFFF
    void WriteCharEntity(::Il2CppChar ch);
    // public System.Void WriteWhitespace(System.String ws)
    // Offset: 0xFFFFFFFF
    void WriteWhitespace(::Il2CppString* ws);
    // public System.Void WriteString(System.String text)
    // Offset: 0xFFFFFFFF
    void WriteString(::Il2CppString* text);
    // public System.Void WriteSurrogateCharEntity(System.Char lowChar, System.Char highChar)
    // Offset: 0xFFFFFFFF
    void WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar);
    // public System.Void WriteChars(System.Char[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0xFFFFFFFF
    void WriteChars(::Array<::Il2CppChar>* buffer, int index, int count);
    // public System.Void WriteRaw(System.Char[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0xFFFFFFFF
    void WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count);
    // public System.Void WriteRaw(System.String data)
    // Offset: 0xFFFFFFFF
    void WriteRaw(::Il2CppString* data);
    // public System.Void WriteBase64(System.Byte[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0xFFFFFFFF
    void WriteBase64(::Array<uint8_t>* buffer, int index, int count);
    // public System.Void WriteBinHex(System.Byte[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x23C4E28
    void WriteBinHex(::Array<uint8_t>* buffer, int index, int count);
    // public System.Xml.WriteState get_WriteState()
    // Offset: 0xFFFFFFFF
    System::Xml::WriteState get_WriteState();
    // public System.Void Close()
    // Offset: 0x23C4E44
    void Close();
    // public System.Void Flush()
    // Offset: 0xFFFFFFFF
    void Flush();
    // public System.String LookupPrefix(System.String ns)
    // Offset: 0xFFFFFFFF
    ::Il2CppString* LookupPrefix(::Il2CppString* ns);
    // public System.Void WriteValue(System.String value)
    // Offset: 0x23C4E48
    void WriteValue(::Il2CppString* value);
    // public System.Void Dispose()
    // Offset: 0x23C4E60
    void Dispose();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x23C4E74
    void Dispose(bool disposing);
    // static public System.Xml.XmlWriter Create(System.IO.Stream output, System.Xml.XmlWriterSettings settings)
    // Offset: 0x23C4EC8
    static System::Xml::XmlWriter* Create(System::IO::Stream* output, System::Xml::XmlWriterSettings* settings);
    // static public System.Xml.XmlWriter Create(System.IO.TextWriter output, System.Xml.XmlWriterSettings settings)
    // Offset: 0x23C5378
    static System::Xml::XmlWriter* Create(System::IO::TextWriter* output, System::Xml::XmlWriterSettings* settings);
    // protected System.Void .ctor()
    // Offset: 0x23C5680
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlWriter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlWriter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlWriter*, creationType>()));
    }
  }; // System.Xml.XmlWriter
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::Xml::XmlWriter*, "System.Xml", "XmlWriter");
// Writing MetadataGetter for method: XmlWriter::WriteStartDocument
// Il2CppName: WriteStartDocument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)()>(&XmlWriter::WriteStartDocument)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteStartDocument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteDocType
// Il2CppName: WriteDocType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&XmlWriter::WriteDocType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteDocType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteStartElement
// Il2CppName: WriteStartElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&XmlWriter::WriteStartElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteStartElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteStartElement
// Il2CppName: WriteStartElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*)>(&XmlWriter::WriteStartElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteStartElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteEndElement
// Il2CppName: WriteEndElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)()>(&XmlWriter::WriteEndElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteEndElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteFullEndElement
// Il2CppName: WriteFullEndElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)()>(&XmlWriter::WriteFullEndElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteFullEndElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteAttributeString
// Il2CppName: WriteAttributeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*, ::Il2CppString*)>(&XmlWriter::WriteAttributeString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteAttributeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteAttributeString
// Il2CppName: WriteAttributeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&XmlWriter::WriteAttributeString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteAttributeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteStartAttribute
// Il2CppName: WriteStartAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&XmlWriter::WriteStartAttribute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteStartAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteEndAttribute
// Il2CppName: WriteEndAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)()>(&XmlWriter::WriteEndAttribute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteEndAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteCData
// Il2CppName: WriteCData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*)>(&XmlWriter::WriteCData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteCData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteComment
// Il2CppName: WriteComment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*)>(&XmlWriter::WriteComment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteComment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteProcessingInstruction
// Il2CppName: WriteProcessingInstruction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*, ::Il2CppString*)>(&XmlWriter::WriteProcessingInstruction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteProcessingInstruction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteEntityRef
// Il2CppName: WriteEntityRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*)>(&XmlWriter::WriteEntityRef)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteEntityRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteCharEntity
// Il2CppName: WriteCharEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppChar)>(&XmlWriter::WriteCharEntity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteCharEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteWhitespace
// Il2CppName: WriteWhitespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*)>(&XmlWriter::WriteWhitespace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteWhitespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteString
// Il2CppName: WriteString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*)>(&XmlWriter::WriteString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteSurrogateCharEntity
// Il2CppName: WriteSurrogateCharEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppChar, ::Il2CppChar)>(&XmlWriter::WriteSurrogateCharEntity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteSurrogateCharEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteChars
// Il2CppName: WriteChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Array<::Il2CppChar>*, int, int)>(&XmlWriter::WriteChars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteRaw
// Il2CppName: WriteRaw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Array<::Il2CppChar>*, int, int)>(&XmlWriter::WriteRaw)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteRaw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteRaw
// Il2CppName: WriteRaw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*)>(&XmlWriter::WriteRaw)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteRaw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteBase64
// Il2CppName: WriteBase64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Array<uint8_t>*, int, int)>(&XmlWriter::WriteBase64)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteBase64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteBinHex
// Il2CppName: WriteBinHex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Array<uint8_t>*, int, int)>(&XmlWriter::WriteBinHex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteBinHex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::get_WriteState
// Il2CppName: get_WriteState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Xml::WriteState (XmlWriter::*)()>(&XmlWriter::get_WriteState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "get_WriteState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XmlWriter::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)()>(&XmlWriter::Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XmlWriter::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)()>(&XmlWriter::Flush)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XmlWriter::LookupPrefix
// Il2CppName: LookupPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (XmlWriter::*)(::Il2CppString*)>(&XmlWriter::LookupPrefix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "LookupPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::WriteValue
// Il2CppName: WriteValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(::Il2CppString*)>(&XmlWriter::WriteValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "WriteValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)()>(&XmlWriter::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: XmlWriter::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)(bool)>(&XmlWriter::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Xml::XmlWriter* (*)(System::IO::Stream*, System::Xml::XmlWriterSettings*)>(&XmlWriter::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<System::Xml::XmlWriterSettings*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Xml::XmlWriter* (*)(System::IO::TextWriter*, System::Xml::XmlWriterSettings*)>(&XmlWriter::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::TextWriter*>(), ::il2cpp_utils::ExtractIndependentType<System::Xml::XmlWriterSettings*>()});
  }
};
// Writing MetadataGetter for method: XmlWriter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)()>(&XmlWriter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (XmlWriter::*)()>(&XmlWriter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(XmlWriter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
