// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// WARNING Layout: Sequential may not be correctly taken into account!
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlEventCache
#include "System/Xml/XmlEventCache.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Xml.XmlEventCache/XmlEventType
#include "System/Xml/XmlEventCache_XmlEventType.hpp"
// Completed includes
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x28
  // Autogenerated type: System.Xml.XmlEventCache/XmlEvent
  // [] Offset: FFFFFFFF
  struct XmlEventCache::XmlEvent/*, public System::ValueType*/ {
    public:
    // private System.Xml.XmlEventCache/XmlEventType eventType
    // Size: 0x4
    // Offset: 0x0
    System::Xml::XmlEventCache::XmlEventType eventType;
    // Field size check
    static_assert(sizeof(System::Xml::XmlEventCache::XmlEventType) == 0x4);
    // Padding between fields: eventType and: s1
    char __padding0[0x4] = {};
    // private System.String s1
    // Size: 0x8
    // Offset: 0x8
    ::Il2CppString* s1;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String s2
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* s2;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String s3
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* s3;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Object o
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppObject* o;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // Creating value type constructor for type: XmlEvent
    constexpr XmlEvent(System::Xml::XmlEventCache::XmlEventType eventType_ = {}, ::Il2CppString* s1_ = {}, ::Il2CppString* s2_ = {}, ::Il2CppString* s3_ = {}, ::Il2CppObject* o_ = {}) noexcept : eventType{eventType_}, s1{s1_}, s2{s2_}, s3{s3_}, o{o_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // public System.Void InitEvent(System.Xml.XmlEventCache/XmlEventType eventType)
    // Offset: 0xCA09A0
    void InitEvent(System::Xml::XmlEventCache::XmlEventType eventType);
    // public System.Void InitEvent(System.Xml.XmlEventCache/XmlEventType eventType, System.String s1)
    // Offset: 0xCA09A8
    void InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1);
    // public System.Void InitEvent(System.Xml.XmlEventCache/XmlEventType eventType, System.String s1, System.String s2)
    // Offset: 0xCA09B8
    void InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1, ::Il2CppString* s2);
    // public System.Void InitEvent(System.Xml.XmlEventCache/XmlEventType eventType, System.String s1, System.String s2, System.String s3)
    // Offset: 0xCA09F4
    void InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1, ::Il2CppString* s2, ::Il2CppString* s3);
    // public System.Void InitEvent(System.Xml.XmlEventCache/XmlEventType eventType, System.String s1, System.String s2, System.String s3, System.Object o)
    // Offset: 0xCA09FC
    void InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppString* s1, ::Il2CppString* s2, ::Il2CppString* s3, ::Il2CppObject* o);
    // public System.Void InitEvent(System.Xml.XmlEventCache/XmlEventType eventType, System.Object o)
    // Offset: 0xCA0A04
    void InitEvent(System::Xml::XmlEventCache::XmlEventType eventType, ::Il2CppObject* o);
    // public System.Xml.XmlEventCache/XmlEventType get_EventType()
    // Offset: 0xCA0A14
    System::Xml::XmlEventCache::XmlEventType get_EventType();
    // public System.String get_String1()
    // Offset: 0xCA0A1C
    ::Il2CppString* get_String1();
    // public System.String get_String2()
    // Offset: 0xCA0A24
    ::Il2CppString* get_String2();
    // public System.String get_String3()
    // Offset: 0xCA0A2C
    ::Il2CppString* get_String3();
    // public System.Object get_Object()
    // Offset: 0xCA0A34
    ::Il2CppObject* get_Object();
  }; // System.Xml.XmlEventCache/XmlEvent
  static check_size<sizeof(XmlEventCache::XmlEvent), 32 + sizeof(::Il2CppObject*)> __System_Xml_XmlEventCache_XmlEventSizeCheck;
  static_assert(sizeof(XmlEventCache::XmlEvent) == 0x28);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Xml::XmlEventCache::XmlEvent, "System.Xml", "XmlEventCache/XmlEvent");
#pragma pack(pop)
