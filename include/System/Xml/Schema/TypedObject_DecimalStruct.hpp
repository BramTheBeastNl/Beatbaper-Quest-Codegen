// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.TypedObject
#include "System/Xml/Schema/TypedObject.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::TypedObject::DecimalStruct);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::TypedObject::DecimalStruct*, "System.Xml.Schema", "TypedObject/DecimalStruct");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.TypedObject/System.Xml.Schema.DecimalStruct
  // [TokenAttribute] Offset: FFFFFFFF
  class TypedObject::DecimalStruct : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private System.Boolean isDecimal
    // Size: 0x1
    // Offset: 0x10
    bool isDecimal;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isDecimal and: dvalue
    char __padding0[0x7] = {};
    // private System.Decimal[] dvalue
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::System::Decimal> dvalue;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Decimal>) == 0x8);
    public:
    // Get instance field reference: private System.Boolean isDecimal
    bool& dyn_isDecimal();
    // Get instance field reference: private System.Decimal[] dvalue
    ::ArrayW<::System::Decimal>& dyn_dvalue();
    // public System.Boolean get_IsDecimal()
    // Offset: 0x169CFBC
    bool get_IsDecimal();
    // public System.Void set_IsDecimal(System.Boolean value)
    // Offset: 0x169CFC4
    void set_IsDecimal(bool value);
    // public System.Decimal[] get_Dvalue()
    // Offset: 0x169CFD0
    ::ArrayW<::System::Decimal> get_Dvalue();
    // public System.Void .ctor(System.Int32 dim)
    // Offset: 0x169CB3C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TypedObject::DecimalStruct* New_ctor(int dim) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::TypedObject::DecimalStruct::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TypedObject::DecimalStruct*, creationType>(dim)));
    }
    // public System.Void .ctor()
    // Offset: 0x169CBAC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TypedObject::DecimalStruct* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::TypedObject::DecimalStruct::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TypedObject::DecimalStruct*, creationType>()));
    }
  }; // System.Xml.Schema.TypedObject/System.Xml.Schema.DecimalStruct
  #pragma pack(pop)
  static check_size<sizeof(TypedObject::DecimalStruct), 24 + sizeof(::ArrayW<::System::Decimal>)> __System_Xml_Schema_TypedObject_DecimalStructSizeCheck;
  static_assert(sizeof(TypedObject::DecimalStruct) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::TypedObject::DecimalStruct::get_IsDecimal
// Il2CppName: get_IsDecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::TypedObject::DecimalStruct::*)()>(&System::Xml::Schema::TypedObject::DecimalStruct::get_IsDecimal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::TypedObject::DecimalStruct*), "get_IsDecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::TypedObject::DecimalStruct::set_IsDecimal
// Il2CppName: set_IsDecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::TypedObject::DecimalStruct::*)(bool)>(&System::Xml::Schema::TypedObject::DecimalStruct::set_IsDecimal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::TypedObject::DecimalStruct*), "set_IsDecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::TypedObject::DecimalStruct::get_Dvalue
// Il2CppName: get_Dvalue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Decimal> (System::Xml::Schema::TypedObject::DecimalStruct::*)()>(&System::Xml::Schema::TypedObject::DecimalStruct::get_Dvalue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::TypedObject::DecimalStruct*), "get_Dvalue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::TypedObject::DecimalStruct::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::TypedObject::DecimalStruct::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
