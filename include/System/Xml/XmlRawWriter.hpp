// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlRawWriterBase64Encoder
  class XmlRawWriterBase64Encoder;
  // Forward declaring type: IXmlNamespaceResolver
  class IXmlNamespaceResolver;
  // Forward declaring type: XmlStandalone
  struct XmlStandalone;
  // Forward declaring type: ConformanceLevel
  struct ConformanceLevel;
  // Forward declaring type: WriteState
  struct WriteState;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XmlRawWriter
  // [] Offset: FFFFFFFF
  class XmlRawWriter : public System::Xml::XmlWriter {
    public:
    // protected System.Xml.XmlRawWriterBase64Encoder base64Encoder
    // Size: 0x8
    // Offset: 0x10
    System::Xml::XmlRawWriterBase64Encoder* base64Encoder;
    // Field size check
    static_assert(sizeof(System::Xml::XmlRawWriterBase64Encoder*) == 0x8);
    // protected System.Xml.IXmlNamespaceResolver resolver
    // Size: 0x8
    // Offset: 0x18
    System::Xml::IXmlNamespaceResolver* resolver;
    // Field size check
    static_assert(sizeof(System::Xml::IXmlNamespaceResolver*) == 0x8);
    // Creating value type constructor for type: XmlRawWriter
    XmlRawWriter(System::Xml::XmlRawWriterBase64Encoder* base64Encoder_ = {}, System::Xml::IXmlNamespaceResolver* resolver_ = {}) noexcept : base64Encoder{base64Encoder_}, resolver{resolver_} {}
    // System.Void set_NamespaceResolver(System.Xml.IXmlNamespaceResolver value)
    // Offset: 0x17914D8
    void set_NamespaceResolver_NEW(System::Xml::IXmlNamespaceResolver* value);
    // System.Void WriteXmlDeclaration(System.Xml.XmlStandalone standalone)
    // Offset: 0x17914E0
    void WriteXmlDeclaration_NEW(System::Xml::XmlStandalone standalone);
    // System.Void WriteXmlDeclaration(System.String xmldecl)
    // Offset: 0x17914E4
    void WriteXmlDeclaration_NEW(::Il2CppString* xmldecl);
    // System.Void StartElementContent()
    // Offset: 0xFFFFFFFF
    void StartElementContent_NEW();
    // System.Void OnRootElement(System.Xml.ConformanceLevel conformanceLevel)
    // Offset: 0x17914E8
    void OnRootElement_NEW(System::Xml::ConformanceLevel conformanceLevel);
    // System.Void WriteEndElement(System.String prefix, System.String localName, System.String ns)
    // Offset: 0xFFFFFFFF
    void WriteEndElement_NEW(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns);
    // System.Void WriteFullEndElement(System.String prefix, System.String localName, System.String ns)
    // Offset: 0x17914EC
    void WriteFullEndElement_NEW(::Il2CppString* prefix, ::Il2CppString* localName, ::Il2CppString* ns);
    // System.Void WriteNamespaceDeclaration(System.String prefix, System.String ns)
    // Offset: 0xFFFFFFFF
    void WriteNamespaceDeclaration_NEW(::Il2CppString* prefix, ::Il2CppString* ns);
    // System.Boolean get_SupportsNamespaceDeclarationInChunks()
    // Offset: 0x17914FC
    bool get_SupportsNamespaceDeclarationInChunks_NEW();
    // System.Void WriteStartNamespaceDeclaration(System.String prefix)
    // Offset: 0x1791504
    void WriteStartNamespaceDeclaration_NEW(::Il2CppString* prefix);
    // System.Void WriteEndNamespaceDeclaration()
    // Offset: 0x1791564
    void WriteEndNamespaceDeclaration_NEW();
    // System.Void WriteEndBase64()
    // Offset: 0x17915C4
    void WriteEndBase64_NEW();
    // System.Void Close(System.Xml.WriteState currentState)
    // Offset: 0x17915DC
    void Close_NEW(System::Xml::WriteState currentState);
    // public override System.Void WriteStartDocument()
    // Offset: 0x179106C
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteStartDocument_NEW()
    void WriteStartDocument();
    // public override System.Void WriteDocType(System.String name, System.String pubid, System.String sysid, System.String subset)
    // Offset: 0x17910DC
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteDocType_NEW(System.String name, System.String pubid, System.String sysid, System.String subset)
    void WriteDocType(::Il2CppString* name, ::Il2CppString* pubid, ::Il2CppString* sysid, ::Il2CppString* subset);
    // public override System.Void WriteEndElement()
    // Offset: 0x17910E0
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteEndElement_NEW()
    void WriteEndElement();
    // public override System.Void WriteFullEndElement()
    // Offset: 0x1791150
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteFullEndElement_NEW()
    void WriteFullEndElement();
    // public override System.Void WriteBase64(System.Byte[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x178F0DC
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteBase64_NEW(System.Byte[] buffer, System.Int32 index, System.Int32 count)
    void WriteBase64(::Array<uint8_t>* buffer, int index, int count);
    // public override System.String LookupPrefix(System.String ns)
    // Offset: 0x17911E8
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.String XmlWriter::LookupPrefix_NEW(System.String ns)
    ::Il2CppString* LookupPrefix(::Il2CppString* ns);
    // public override System.Xml.WriteState get_WriteState()
    // Offset: 0x1791258
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Xml.WriteState XmlWriter::get_WriteState_NEW()
    System::Xml::WriteState get_WriteState();
    // public override System.Void WriteCData(System.String text)
    // Offset: 0x17912C8
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteCData_NEW(System.String text)
    void WriteCData(::Il2CppString* text);
    // public override System.Void WriteCharEntity(System.Char ch)
    // Offset: 0x17912D8
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteCharEntity_NEW(System.Char ch)
    void WriteCharEntity(::Il2CppChar ch);
    // public override System.Void WriteSurrogateCharEntity(System.Char lowChar, System.Char highChar)
    // Offset: 0x179137C
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteSurrogateCharEntity_NEW(System.Char lowChar, System.Char highChar)
    void WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar);
    // public override System.Void WriteWhitespace(System.String ws)
    // Offset: 0x1791430
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteWhitespace_NEW(System.String ws)
    void WriteWhitespace(::Il2CppString* ws);
    // public override System.Void WriteChars(System.Char[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x1791440
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteChars_NEW(System.Char[] buffer, System.Int32 index, System.Int32 count)
    void WriteChars(::Array<::Il2CppChar>* buffer, int index, int count);
    // public override System.Void WriteRaw(System.Char[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x179147C
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteRaw_NEW(System.Char[] buffer, System.Int32 index, System.Int32 count)
    void WriteRaw(::Array<::Il2CppChar>* buffer, int index, int count);
    // public override System.Void WriteRaw(System.String data)
    // Offset: 0x17914B8
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteRaw_NEW(System.String data)
    void WriteRaw(::Il2CppString* data);
    // public override System.Void WriteValue(System.String value)
    // Offset: 0x17914C8
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::WriteValue_NEW(System.String value)
    void WriteValue(::Il2CppString* value);
    // protected System.Void .ctor()
    // Offset: 0x1787D30
    // Implemented from: System.Xml.XmlWriter
    // Base method: System.Void XmlWriter::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlRawWriter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlRawWriter*, creationType>()));
    }
  }; // System.Xml.XmlRawWriter
  #pragma pack(pop)
  static check_size<sizeof(XmlRawWriter), 24 + sizeof(System::Xml::IXmlNamespaceResolver*)> __System_Xml_XmlRawWriterSizeCheck;
  static_assert(sizeof(XmlRawWriter) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(System::Xml::XmlRawWriter*, "System.Xml", "XmlRawWriter");
