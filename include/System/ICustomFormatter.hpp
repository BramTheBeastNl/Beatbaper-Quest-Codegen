// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppString;
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: System
namespace System {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: System.ICustomFormatter
  // [ComVisibleAttribute] Offset: D7A850
  class ICustomFormatter {
    public:
    // Creating value type constructor for type: ICustomFormatter
    ICustomFormatter() noexcept {}
    // public System.String Format(System.String format, System.Object arg, System.IFormatProvider formatProvider)
    // Offset: 0xFFFFFFFF
    ::Il2CppString* Format(::Il2CppString* format, ::Il2CppObject* arg, System::IFormatProvider* formatProvider);
  }; // System.ICustomFormatter
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::ICustomFormatter*, "System", "ICustomFormatter");
// Writing MetadataGetter for method: ICustomFormatter::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ICustomFormatter::*)(::Il2CppString*, ::Il2CppObject*, System::IFormatProvider*)>(&ICustomFormatter::Format)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICustomFormatter*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IFormatProvider*>()});
  }
};
