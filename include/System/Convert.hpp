// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: RuntimeType
  class RuntimeType;
  // Forward declaring type: TypeCode
  struct TypeCode;
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
  // Forward declaring type: IConvertible
  class IConvertible;
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Decimal
  struct Decimal;
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: Base64FormattingOptions
  struct Base64FormattingOptions;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Convert
  class Convert : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Convert
    Convert() noexcept {}
    // Get static field: static readonly System.RuntimeType[] ConvertTypes
    static ::Array<System::RuntimeType*>* _get_ConvertTypes();
    // Set static field: static readonly System.RuntimeType[] ConvertTypes
    static void _set_ConvertTypes(::Array<System::RuntimeType*>* value);
    // Get static field: static private readonly System.RuntimeType EnumType
    static System::RuntimeType* _get_EnumType();
    // Set static field: static private readonly System.RuntimeType EnumType
    static void _set_EnumType(System::RuntimeType* value);
    // Get static field: static readonly System.Char[] base64Table
    static ::Array<::Il2CppChar>* _get_base64Table();
    // Set static field: static readonly System.Char[] base64Table
    static void _set_base64Table(::Array<::Il2CppChar>* value);
    // Get static field: static public readonly System.Object DBNull
    static ::Il2CppObject* _get_DBNull();
    // Set static field: static public readonly System.Object DBNull
    static void _set_DBNull(::Il2CppObject* value);
    // static public System.TypeCode GetTypeCode(System.Object value)
    // Offset: 0x197AEBC
    static System::TypeCode GetTypeCode(::Il2CppObject* value);
    // static public System.Object ChangeType(System.Object value, System.TypeCode typeCode, System.IFormatProvider provider)
    // Offset: 0x197AF90
    static ::Il2CppObject* ChangeType(::Il2CppObject* value, System::TypeCode typeCode, System::IFormatProvider* provider);
    // static System.Object DefaultToType(System.IConvertible value, System.Type targetType, System.IFormatProvider provider)
    // Offset: 0x197B814
    static ::Il2CppObject* DefaultToType(System::IConvertible* value, System::Type* targetType, System::IFormatProvider* provider);
    // static public System.Object ChangeType(System.Object value, System.Type conversionType)
    // Offset: 0x197C9FC
    static ::Il2CppObject* ChangeType(::Il2CppObject* value, System::Type* conversionType);
    // static public System.Object ChangeType(System.Object value, System.Type conversionType, System.IFormatProvider provider)
    // Offset: 0x197CA94
    static ::Il2CppObject* ChangeType(::Il2CppObject* value, System::Type* conversionType, System::IFormatProvider* provider);
    // static public System.Boolean ToBoolean(System.Object value, System.IFormatProvider provider)
    // Offset: 0x197DA7C
    static bool ToBoolean(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Boolean ToBoolean(System.SByte value)
    // Offset: 0x197DB90
    static bool ToBoolean(int8_t value);
    // static public System.Boolean ToBoolean(System.Byte value)
    // Offset: 0x197DB9C
    static bool ToBoolean(uint8_t value);
    // static public System.Boolean ToBoolean(System.Int16 value)
    // Offset: 0x197DBA8
    static bool ToBoolean(int16_t value);
    // static public System.Boolean ToBoolean(System.UInt16 value)
    // Offset: 0x197DBB4
    static bool ToBoolean(uint16_t value);
    // static public System.Boolean ToBoolean(System.Int32 value)
    // Offset: 0x197DBC0
    static bool ToBoolean(int value);
    // static public System.Boolean ToBoolean(System.UInt32 value)
    // Offset: 0x197DBCC
    static bool ToBoolean(uint value);
    // static public System.Boolean ToBoolean(System.Int64 value)
    // Offset: 0x197DBD8
    static bool ToBoolean(int64_t value);
    // static public System.Boolean ToBoolean(System.UInt64 value)
    // Offset: 0x197DBE4
    static bool ToBoolean(uint64_t value);
    // static public System.Boolean ToBoolean(System.String value)
    // Offset: 0x197DBF0
    static bool ToBoolean(::Il2CppString* value);
    // static public System.Boolean ToBoolean(System.String value, System.IFormatProvider provider)
    // Offset: 0x197DC6C
    static bool ToBoolean(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Boolean ToBoolean(System.Single value)
    // Offset: 0x197DCE8
    static bool ToBoolean(float value);
    // static public System.Boolean ToBoolean(System.Double value)
    // Offset: 0x197DCF4
    static bool ToBoolean(double value);
    // static public System.Boolean ToBoolean(System.Decimal value)
    // Offset: 0x197DD00
    static bool ToBoolean(System::Decimal value);
    // static public System.Char ToChar(System.Object value, System.IFormatProvider provider)
    // Offset: 0x197DD84
    static ::Il2CppChar ToChar(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Char ToChar(System.SByte value)
    // Offset: 0x197DE98
    static ::Il2CppChar ToChar(int8_t value);
    // static public System.Char ToChar(System.Byte value)
    // Offset: 0x197DF30
    static ::Il2CppChar ToChar(uint8_t value);
    // static public System.Char ToChar(System.Int16 value)
    // Offset: 0x197DF38
    static ::Il2CppChar ToChar(int16_t value);
    // static public System.Char ToChar(System.UInt16 value)
    // Offset: 0x197DFD4
    static ::Il2CppChar ToChar(uint16_t value);
    // static public System.Char ToChar(System.Int32 value)
    // Offset: 0x197DFD8
    static ::Il2CppChar ToChar(int value);
    // static public System.Char ToChar(System.UInt32 value)
    // Offset: 0x197E074
    static ::Il2CppChar ToChar(uint value);
    // static public System.Char ToChar(System.Int64 value)
    // Offset: 0x197E110
    static ::Il2CppChar ToChar(int64_t value);
    // static public System.Char ToChar(System.UInt64 value)
    // Offset: 0x197E1AC
    static ::Il2CppChar ToChar(uint64_t value);
    // static public System.Char ToChar(System.String value, System.IFormatProvider provider)
    // Offset: 0x197E248
    static ::Il2CppChar ToChar(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.SByte ToSByte(System.Object value, System.IFormatProvider provider)
    // Offset: 0x197E330
    static int8_t ToSByte(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.SByte ToSByte(System.Boolean value)
    // Offset: 0x197E444
    static int8_t ToSByte(bool value);
    // static public System.SByte ToSByte(System.Char value)
    // Offset: 0x197E44C
    static int8_t ToSByte(::Il2CppChar value);
    // static public System.SByte ToSByte(System.Byte value)
    // Offset: 0x197E4EC
    static int8_t ToSByte(uint8_t value);
    // static public System.SByte ToSByte(System.Int16 value)
    // Offset: 0x197E588
    static int8_t ToSByte(int16_t value);
    // static public System.SByte ToSByte(System.UInt16 value)
    // Offset: 0x197E62C
    static int8_t ToSByte(uint16_t value);
    // static public System.SByte ToSByte(System.Int32 value)
    // Offset: 0x197E6CC
    static int8_t ToSByte(int value);
    // static public System.SByte ToSByte(System.UInt32 value)
    // Offset: 0x197E76C
    static int8_t ToSByte(uint value);
    // static public System.SByte ToSByte(System.Int64 value)
    // Offset: 0x197E808
    static int8_t ToSByte(int64_t value);
    // static public System.SByte ToSByte(System.UInt64 value)
    // Offset: 0x197E8A8
    static int8_t ToSByte(uint64_t value);
    // static public System.SByte ToSByte(System.Single value)
    // Offset: 0x197E944
    static int8_t ToSByte(float value);
    // static public System.SByte ToSByte(System.Double value)
    // Offset: 0x197E9B0
    static int8_t ToSByte(double value);
    // static public System.SByte ToSByte(System.Decimal value)
    // Offset: 0x197EB34
    static int8_t ToSByte(System::Decimal value);
    // static public System.SByte ToSByte(System.String value, System.IFormatProvider provider)
    // Offset: 0x197EBB8
    static int8_t ToSByte(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Byte ToByte(System.Object value, System.IFormatProvider provider)
    // Offset: 0x197EBC8
    static uint8_t ToByte(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Byte ToByte(System.Boolean value)
    // Offset: 0x197ECDC
    static uint8_t ToByte(bool value);
    // static public System.Byte ToByte(System.Char value)
    // Offset: 0x197ECE4
    static uint8_t ToByte(::Il2CppChar value);
    // static public System.Byte ToByte(System.SByte value)
    // Offset: 0x197ED84
    static uint8_t ToByte(int8_t value);
    // static public System.Byte ToByte(System.Int16 value)
    // Offset: 0x197EE20
    static uint8_t ToByte(int16_t value);
    // static public System.Byte ToByte(System.UInt16 value)
    // Offset: 0x197EEC0
    static uint8_t ToByte(uint16_t value);
    // static public System.Byte ToByte(System.Int32 value)
    // Offset: 0x197EF60
    static uint8_t ToByte(int value);
    // static public System.Byte ToByte(System.UInt32 value)
    // Offset: 0x197EFFC
    static uint8_t ToByte(uint value);
    // static public System.Byte ToByte(System.Int64 value)
    // Offset: 0x197F098
    static uint8_t ToByte(int64_t value);
    // static public System.Byte ToByte(System.UInt64 value)
    // Offset: 0x197F134
    static uint8_t ToByte(uint64_t value);
    // static public System.Byte ToByte(System.Single value)
    // Offset: 0x197F1D0
    static uint8_t ToByte(float value);
    // static public System.Byte ToByte(System.Double value)
    // Offset: 0x197F23C
    static uint8_t ToByte(double value);
    // static public System.Byte ToByte(System.Decimal value)
    // Offset: 0x197F2AC
    static uint8_t ToByte(System::Decimal value);
    // static public System.Byte ToByte(System.String value)
    // Offset: 0x197F330
    static uint8_t ToByte(::Il2CppString* value);
    // static public System.Byte ToByte(System.String value, System.IFormatProvider provider)
    // Offset: 0x197F3B8
    static uint8_t ToByte(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Int16 ToInt16(System.Object value, System.IFormatProvider provider)
    // Offset: 0x197F3D0
    static int16_t ToInt16(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Int16 ToInt16(System.Boolean value)
    // Offset: 0x197F4E4
    static int16_t ToInt16(bool value);
    // static public System.Int16 ToInt16(System.Char value)
    // Offset: 0x197F4EC
    static int16_t ToInt16(::Il2CppChar value);
    // static public System.Int16 ToInt16(System.SByte value)
    // Offset: 0x197F588
    static int16_t ToInt16(int8_t value);
    // static public System.Int16 ToInt16(System.Byte value)
    // Offset: 0x197F590
    static int16_t ToInt16(uint8_t value);
    // static public System.Int16 ToInt16(System.UInt16 value)
    // Offset: 0x197F598
    static int16_t ToInt16(uint16_t value);
    // static public System.Int16 ToInt16(System.Int32 value)
    // Offset: 0x197F634
    static int16_t ToInt16(int value);
    // static public System.Int16 ToInt16(System.UInt32 value)
    // Offset: 0x197F6D4
    static int16_t ToInt16(uint value);
    // static public System.Int16 ToInt16(System.Int64 value)
    // Offset: 0x197F770
    static int16_t ToInt16(int64_t value);
    // static public System.Int16 ToInt16(System.UInt64 value)
    // Offset: 0x197F810
    static int16_t ToInt16(uint64_t value);
    // static public System.Int16 ToInt16(System.Single value)
    // Offset: 0x197F8AC
    static int16_t ToInt16(float value);
    // static public System.Int16 ToInt16(System.Double value)
    // Offset: 0x197F918
    static int16_t ToInt16(double value);
    // static public System.Int16 ToInt16(System.Decimal value)
    // Offset: 0x197F988
    static int16_t ToInt16(System::Decimal value);
    // static public System.Int16 ToInt16(System.String value, System.IFormatProvider provider)
    // Offset: 0x197FA0C
    static int16_t ToInt16(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.UInt16 ToUInt16(System.Object value, System.IFormatProvider provider)
    // Offset: 0x197FA24
    static uint16_t ToUInt16(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.UInt16 ToUInt16(System.Boolean value)
    // Offset: 0x197FB38
    static uint16_t ToUInt16(bool value);
    // static public System.UInt16 ToUInt16(System.Char value)
    // Offset: 0x197FB40
    static uint16_t ToUInt16(::Il2CppChar value);
    // static public System.UInt16 ToUInt16(System.SByte value)
    // Offset: 0x197FB44
    static uint16_t ToUInt16(int8_t value);
    // static public System.UInt16 ToUInt16(System.Byte value)
    // Offset: 0x197FBDC
    static uint16_t ToUInt16(uint8_t value);
    // static public System.UInt16 ToUInt16(System.Int16 value)
    // Offset: 0x197FBE4
    static uint16_t ToUInt16(int16_t value);
    // static public System.UInt16 ToUInt16(System.Int32 value)
    // Offset: 0x197FC80
    static uint16_t ToUInt16(int value);
    // static public System.UInt16 ToUInt16(System.UInt32 value)
    // Offset: 0x197FD1C
    static uint16_t ToUInt16(uint value);
    // static public System.UInt16 ToUInt16(System.Int64 value)
    // Offset: 0x197FDB8
    static uint16_t ToUInt16(int64_t value);
    // static public System.UInt16 ToUInt16(System.UInt64 value)
    // Offset: 0x197FE54
    static uint16_t ToUInt16(uint64_t value);
    // static public System.UInt16 ToUInt16(System.Single value)
    // Offset: 0x197FEF0
    static uint16_t ToUInt16(float value);
    // static public System.UInt16 ToUInt16(System.Double value)
    // Offset: 0x197FF5C
    static uint16_t ToUInt16(double value);
    // static public System.UInt16 ToUInt16(System.Decimal value)
    // Offset: 0x197FFCC
    static uint16_t ToUInt16(System::Decimal value);
    // static public System.UInt16 ToUInt16(System.String value, System.IFormatProvider provider)
    // Offset: 0x1980050
    static uint16_t ToUInt16(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Int32 ToInt32(System.Object value)
    // Offset: 0x1980068
    static int ToInt32(::Il2CppObject* value);
    // static public System.Int32 ToInt32(System.Object value, System.IFormatProvider provider)
    // Offset: 0x1980178
    static int ToInt32(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Int32 ToInt32(System.Boolean value)
    // Offset: 0x198028C
    static int ToInt32(bool value);
    // static public System.Int32 ToInt32(System.Char value)
    // Offset: 0x1980294
    static int ToInt32(::Il2CppChar value);
    // static public System.Int32 ToInt32(System.Byte value)
    // Offset: 0x198029C
    static int ToInt32(uint8_t value);
    // static public System.Int32 ToInt32(System.Int16 value)
    // Offset: 0x19802A4
    static int ToInt32(int16_t value);
    // static public System.Int32 ToInt32(System.UInt16 value)
    // Offset: 0x19802AC
    static int ToInt32(uint16_t value);
    // static public System.Int32 ToInt32(System.UInt32 value)
    // Offset: 0x19802B4
    static int ToInt32(uint value);
    // static public System.Int32 ToInt32(System.Int64 value)
    // Offset: 0x198034C
    static int ToInt32(int64_t value);
    // static public System.Int32 ToInt32(System.UInt64 value)
    // Offset: 0x19803EC
    static int ToInt32(uint64_t value);
    // static public System.Int32 ToInt32(System.Single value)
    // Offset: 0x1980488
    static int ToInt32(float value);
    // static public System.Int32 ToInt32(System.Double value)
    // Offset: 0x197EA20
    static int ToInt32(double value);
    // static public System.Int32 ToInt32(System.Decimal value)
    // Offset: 0x19804F4
    static int ToInt32(System::Decimal value);
    // static public System.Int32 ToInt32(System.String value, System.IFormatProvider provider)
    // Offset: 0x198056C
    static int ToInt32(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.UInt32 ToUInt32(System.Object value)
    // Offset: 0x1980584
    static uint ToUInt32(::Il2CppObject* value);
    // static public System.UInt32 ToUInt32(System.Object value, System.IFormatProvider provider)
    // Offset: 0x1980694
    static uint ToUInt32(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.UInt32 ToUInt32(System.Boolean value)
    // Offset: 0x19807A8
    static uint ToUInt32(bool value);
    // static public System.UInt32 ToUInt32(System.Char value)
    // Offset: 0x19807B0
    static uint ToUInt32(::Il2CppChar value);
    // static public System.UInt32 ToUInt32(System.SByte value)
    // Offset: 0x19807B8
    static uint ToUInt32(int8_t value);
    // static public System.UInt32 ToUInt32(System.Byte value)
    // Offset: 0x1980850
    static uint ToUInt32(uint8_t value);
    // static public System.UInt32 ToUInt32(System.Int16 value)
    // Offset: 0x1980858
    static uint ToUInt32(int16_t value);
    // static public System.UInt32 ToUInt32(System.UInt16 value)
    // Offset: 0x19808F0
    static uint ToUInt32(uint16_t value);
    // static public System.UInt32 ToUInt32(System.Int32 value)
    // Offset: 0x19808F8
    static uint ToUInt32(int value);
    // static public System.UInt32 ToUInt32(System.Int64 value)
    // Offset: 0x1980990
    static uint ToUInt32(int64_t value);
    // static public System.UInt32 ToUInt32(System.UInt64 value)
    // Offset: 0x1980A2C
    static uint ToUInt32(uint64_t value);
    // static public System.UInt32 ToUInt32(System.Single value)
    // Offset: 0x1980AC8
    static uint ToUInt32(float value);
    // static public System.UInt32 ToUInt32(System.Double value)
    // Offset: 0x1980B34
    static uint ToUInt32(double value);
    // static public System.UInt32 ToUInt32(System.Decimal value)
    // Offset: 0x1980C1C
    static uint ToUInt32(System::Decimal value);
    // static public System.UInt32 ToUInt32(System.String value, System.IFormatProvider provider)
    // Offset: 0x1980CA0
    static uint ToUInt32(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Int64 ToInt64(System.Object value)
    // Offset: 0x1980CB8
    static int64_t ToInt64(::Il2CppObject* value);
    // static public System.Int64 ToInt64(System.Object value, System.IFormatProvider provider)
    // Offset: 0x1980DC8
    static int64_t ToInt64(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Int64 ToInt64(System.Boolean value)
    // Offset: 0x1980EDC
    static int64_t ToInt64(bool value);
    // static public System.Int64 ToInt64(System.Char value)
    // Offset: 0x1980EE4
    static int64_t ToInt64(::Il2CppChar value);
    // static public System.Int64 ToInt64(System.SByte value)
    // Offset: 0x1980EEC
    static int64_t ToInt64(int8_t value);
    // static public System.Int64 ToInt64(System.Byte value)
    // Offset: 0x1980EF4
    static int64_t ToInt64(uint8_t value);
    // static public System.Int64 ToInt64(System.Int16 value)
    // Offset: 0x1980EFC
    static int64_t ToInt64(int16_t value);
    // static public System.Int64 ToInt64(System.UInt16 value)
    // Offset: 0x1980F04
    static int64_t ToInt64(uint16_t value);
    // static public System.Int64 ToInt64(System.Int32 value)
    // Offset: 0x1980F0C
    static int64_t ToInt64(int value);
    // static public System.Int64 ToInt64(System.UInt32 value)
    // Offset: 0x1980F14
    static int64_t ToInt64(uint value);
    // static public System.Int64 ToInt64(System.UInt64 value)
    // Offset: 0x1980F1C
    static int64_t ToInt64(uint64_t value);
    // static public System.Int64 ToInt64(System.Single value)
    // Offset: 0x1980FB4
    static int64_t ToInt64(float value);
    // static public System.Int64 ToInt64(System.Double value)
    // Offset: 0x1981020
    static int64_t ToInt64(double value);
    // static public System.Int64 ToInt64(System.Decimal value)
    // Offset: 0x1981118
    static int64_t ToInt64(System::Decimal value);
    // static public System.Int64 ToInt64(System.String value)
    // Offset: 0x198119C
    static int64_t ToInt64(::Il2CppString* value);
    // static public System.Int64 ToInt64(System.String value, System.IFormatProvider provider)
    // Offset: 0x1981224
    static int64_t ToInt64(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.UInt64 ToUInt64(System.Object value)
    // Offset: 0x198123C
    static uint64_t ToUInt64(::Il2CppObject* value);
    // static public System.UInt64 ToUInt64(System.Object value, System.IFormatProvider provider)
    // Offset: 0x198134C
    static uint64_t ToUInt64(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.UInt64 ToUInt64(System.Boolean value)
    // Offset: 0x1981460
    static uint64_t ToUInt64(bool value);
    // static public System.UInt64 ToUInt64(System.Char value)
    // Offset: 0x1981468
    static uint64_t ToUInt64(::Il2CppChar value);
    // static public System.UInt64 ToUInt64(System.SByte value)
    // Offset: 0x1981470
    static uint64_t ToUInt64(int8_t value);
    // static public System.UInt64 ToUInt64(System.Byte value)
    // Offset: 0x198150C
    static uint64_t ToUInt64(uint8_t value);
    // static public System.UInt64 ToUInt64(System.Int16 value)
    // Offset: 0x1981514
    static uint64_t ToUInt64(int16_t value);
    // static public System.UInt64 ToUInt64(System.UInt16 value)
    // Offset: 0x19815B0
    static uint64_t ToUInt64(uint16_t value);
    // static public System.UInt64 ToUInt64(System.Int32 value)
    // Offset: 0x19815B8
    static uint64_t ToUInt64(int value);
    // static public System.UInt64 ToUInt64(System.UInt32 value)
    // Offset: 0x1981650
    static uint64_t ToUInt64(uint value);
    // static public System.UInt64 ToUInt64(System.Int64 value)
    // Offset: 0x1981658
    static uint64_t ToUInt64(int64_t value);
    // static public System.UInt64 ToUInt64(System.Single value)
    // Offset: 0x19816F0
    static uint64_t ToUInt64(float value);
    // static public System.UInt64 ToUInt64(System.Double value)
    // Offset: 0x198175C
    static uint64_t ToUInt64(double value);
    // static public System.UInt64 ToUInt64(System.Decimal value)
    // Offset: 0x1981854
    static uint64_t ToUInt64(System::Decimal value);
    // static public System.UInt64 ToUInt64(System.String value, System.IFormatProvider provider)
    // Offset: 0x19818D8
    static uint64_t ToUInt64(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Single ToSingle(System.Object value)
    // Offset: 0x19818F0
    static float ToSingle(::Il2CppObject* value);
    // static public System.Single ToSingle(System.Object value, System.IFormatProvider provider)
    // Offset: 0x1981A00
    static float ToSingle(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Single ToSingle(System.SByte value)
    // Offset: 0x1981B14
    static float ToSingle(int8_t value);
    // static public System.Single ToSingle(System.Byte value)
    // Offset: 0x1981B20
    static float ToSingle(uint8_t value);
    // static public System.Single ToSingle(System.Int16 value)
    // Offset: 0x1981B2C
    static float ToSingle(int16_t value);
    // static public System.Single ToSingle(System.UInt16 value)
    // Offset: 0x1981B38
    static float ToSingle(uint16_t value);
    // static public System.Single ToSingle(System.Int32 value)
    // Offset: 0x1981B44
    static float ToSingle(int value);
    // static public System.Single ToSingle(System.UInt32 value)
    // Offset: 0x1981B4C
    static float ToSingle(uint value);
    // static public System.Single ToSingle(System.Int64 value)
    // Offset: 0x1981B58
    static float ToSingle(int64_t value);
    // static public System.Single ToSingle(System.UInt64 value)
    // Offset: 0x1981B60
    static float ToSingle(uint64_t value);
    // static public System.Single ToSingle(System.Double value)
    // Offset: 0x1981B6C
    static float ToSingle(double value);
    // static public System.Single ToSingle(System.Decimal value)
    // Offset: 0x1981B74
    static float ToSingle(System::Decimal value);
    // static public System.Single ToSingle(System.String value, System.IFormatProvider provider)
    // Offset: 0x1981BEC
    static float ToSingle(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Single ToSingle(System.Boolean value)
    // Offset: 0x1981C08
    static float ToSingle(bool value);
    // static public System.Double ToDouble(System.Object value)
    // Offset: 0x1981C1C
    static double ToDouble(::Il2CppObject* value);
    // static public System.Double ToDouble(System.Object value, System.IFormatProvider provider)
    // Offset: 0x1981D2C
    static double ToDouble(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Double ToDouble(System.SByte value)
    // Offset: 0x1981E40
    static double ToDouble(int8_t value);
    // static public System.Double ToDouble(System.Byte value)
    // Offset: 0x1981E4C
    static double ToDouble(uint8_t value);
    // static public System.Double ToDouble(System.Int16 value)
    // Offset: 0x1981E58
    static double ToDouble(int16_t value);
    // static public System.Double ToDouble(System.UInt16 value)
    // Offset: 0x1981E64
    static double ToDouble(uint16_t value);
    // static public System.Double ToDouble(System.Int32 value)
    // Offset: 0x1981E70
    static double ToDouble(int value);
    // static public System.Double ToDouble(System.UInt32 value)
    // Offset: 0x1981E78
    static double ToDouble(uint value);
    // static public System.Double ToDouble(System.Int64 value)
    // Offset: 0x1981E80
    static double ToDouble(int64_t value);
    // static public System.Double ToDouble(System.UInt64 value)
    // Offset: 0x1981E88
    static double ToDouble(uint64_t value);
    // static public System.Double ToDouble(System.Single value)
    // Offset: 0x1981E90
    static double ToDouble(float value);
    // static public System.Double ToDouble(System.Decimal value)
    // Offset: 0x1981E98
    static double ToDouble(System::Decimal value);
    // static public System.Double ToDouble(System.String value, System.IFormatProvider provider)
    // Offset: 0x1981F10
    static double ToDouble(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Double ToDouble(System.Boolean value)
    // Offset: 0x1981FA4
    static double ToDouble(bool value);
    // static public System.Decimal ToDecimal(System.Object value)
    // Offset: 0x1981FB8
    static System::Decimal ToDecimal(::Il2CppObject* value);
    // static public System.Decimal ToDecimal(System.Object value, System.IFormatProvider provider)
    // Offset: 0x19820E8
    static System::Decimal ToDecimal(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Decimal ToDecimal(System.SByte value)
    // Offset: 0x198221C
    static System::Decimal ToDecimal(int8_t value);
    // static public System.Decimal ToDecimal(System.Byte value)
    // Offset: 0x1982284
    static System::Decimal ToDecimal(uint8_t value);
    // static public System.Decimal ToDecimal(System.Int16 value)
    // Offset: 0x19822EC
    static System::Decimal ToDecimal(int16_t value);
    // static public System.Decimal ToDecimal(System.UInt16 value)
    // Offset: 0x1982354
    static System::Decimal ToDecimal(uint16_t value);
    // static public System.Decimal ToDecimal(System.Int32 value)
    // Offset: 0x19823BC
    static System::Decimal ToDecimal(int value);
    // static public System.Decimal ToDecimal(System.UInt32 value)
    // Offset: 0x1982424
    static System::Decimal ToDecimal(uint value);
    // static public System.Decimal ToDecimal(System.Int64 value)
    // Offset: 0x198248C
    static System::Decimal ToDecimal(int64_t value);
    // static public System.Decimal ToDecimal(System.UInt64 value)
    // Offset: 0x19824F4
    static System::Decimal ToDecimal(uint64_t value);
    // static public System.Decimal ToDecimal(System.Single value)
    // Offset: 0x198255C
    static System::Decimal ToDecimal(float value);
    // static public System.Decimal ToDecimal(System.Double value)
    // Offset: 0x19825CC
    static System::Decimal ToDecimal(double value);
    // static public System.Decimal ToDecimal(System.String value, System.IFormatProvider provider)
    // Offset: 0x198263C
    static System::Decimal ToDecimal(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Decimal ToDecimal(System.Boolean value)
    // Offset: 0x19826E0
    static System::Decimal ToDecimal(bool value);
    // static public System.DateTime ToDateTime(System.String value, System.IFormatProvider provider)
    // Offset: 0x198274C
    static System::DateTime ToDateTime(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.String ToString(System.Object value, System.IFormatProvider provider)
    // Offset: 0x1982970
    static ::Il2CppString* ToString(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.String ToString(System.Char value, System.IFormatProvider provider)
    // Offset: 0x1982B10
    static ::Il2CppString* ToString(::Il2CppChar value, System::IFormatProvider* provider);
    // static public System.String ToString(System.Int32 value, System.IFormatProvider provider)
    // Offset: 0x1982B38
    static ::Il2CppString* ToString(int value, System::IFormatProvider* provider);
    // static public System.Int32 ToInt32(System.String value, System.Int32 fromBase)
    // Offset: 0x1982B60
    static int ToInt32(::Il2CppString* value, int fromBase);
    // static public System.String ToString(System.Int32 value, System.Int32 toBase)
    // Offset: 0x1982C30
    static ::Il2CppString* ToString(int value, int toBase);
    // static public System.String ToString(System.Int64 value, System.Int32 toBase)
    // Offset: 0x1982D08
    static ::Il2CppString* ToString(int64_t value, int toBase);
    // static public System.String ToBase64String(System.Byte[] inArray)
    // Offset: 0x1982DE0
    static ::Il2CppString* ToBase64String(::Array<uint8_t>* inArray);
    // static public System.String ToBase64String(System.Byte[] inArray, System.Int32 offset, System.Int32 length)
    // Offset: 0x1983148
    static ::Il2CppString* ToBase64String(::Array<uint8_t>* inArray, int offset, int length);
    // static public System.String ToBase64String(System.Byte[] inArray, System.Int32 offset, System.Int32 length, System.Base64FormattingOptions options)
    // Offset: 0x1982E90
    static ::Il2CppString* ToBase64String(::Array<uint8_t>* inArray, int offset, int length, System::Base64FormattingOptions options);
    // static public System.Int32 ToBase64CharArray(System.Byte[] inArray, System.Int32 offsetIn, System.Int32 length, System.Char[] outArray, System.Int32 offsetOut)
    // Offset: 0x1983508
    static int ToBase64CharArray(::Array<uint8_t>* inArray, int offsetIn, int length, ::Array<::Il2CppChar>* outArray, int offsetOut);
    // static public System.Int32 ToBase64CharArray(System.Byte[] inArray, System.Int32 offsetIn, System.Int32 length, System.Char[] outArray, System.Int32 offsetOut, System.Base64FormattingOptions options)
    // Offset: 0x19835A0
    static int ToBase64CharArray(::Array<uint8_t>* inArray, int offsetIn, int length, ::Array<::Il2CppChar>* outArray, int offsetOut, System::Base64FormattingOptions options);
    // static private System.Int32 ConvertToBase64Array(System.Char* outChars, System.Byte* inData, System.Int32 offset, System.Int32 length, System.Boolean insertLineBreaks)
    // Offset: 0x19832B8
    static int ConvertToBase64Array(::Il2CppChar* outChars, uint8_t* inData, int offset, int length, bool insertLineBreaks);
    // static private System.Int32 ToBase64_CalculateAndValidateOutputLength(System.Int32 inputLength, System.Boolean insertLineBreaks)
    // Offset: 0x19831C8
    static int ToBase64_CalculateAndValidateOutputLength(int inputLength, bool insertLineBreaks);
    // static public System.Byte[] FromBase64String(System.String s)
    // Offset: 0x19838DC
    static ::Array<uint8_t>* FromBase64String(::Il2CppString* s);
    // static private System.Byte[] FromBase64CharPtr(System.Char* inputPtr, System.Int32 inputLength)
    // Offset: 0x1983998
    static ::Array<uint8_t>* FromBase64CharPtr(::Il2CppChar* inputPtr, int inputLength);
    // static private System.Int32 FromBase64_Decode(System.Char* startInputPtr, System.Int32 inputLength, System.Byte* startDestPtr, System.Int32 destLength)
    // Offset: 0x1983BD4
    static int FromBase64_Decode(::Il2CppChar* startInputPtr, int inputLength, uint8_t* startDestPtr, int destLength);
    // static private System.Int32 FromBase64_ComputeResultLength(System.Char* inputPtr, System.Int32 inputLength)
    // Offset: 0x1983AD0
    static int FromBase64_ComputeResultLength(::Il2CppChar* inputPtr, int inputLength);
    // static private System.Void .cctor()
    // Offset: 0x1983E38
    static void _cctor();
  }; // System.Convert
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Convert*, "System", "Convert");
// Writing MetadataGetter for method: System::Convert::GetTypeCode
// Il2CppName: GetTypeCode
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ChangeType
// Il2CppName: ChangeType
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::DefaultToType
// Il2CppName: DefaultToType
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ChangeType
// Il2CppName: ChangeType
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ChangeType
// Il2CppName: ChangeType
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBoolean
// Il2CppName: ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToChar
// Il2CppName: ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSByte
// Il2CppName: ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToByte
// Il2CppName: ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt16
// Il2CppName: ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt16
// Il2CppName: ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt32
// Il2CppName: ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt64
// Il2CppName: ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToUInt64
// Il2CppName: ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToSingle
// Il2CppName: ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDouble
// Il2CppName: ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDecimal
// Il2CppName: ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToDateTime
// Il2CppName: ToDateTime
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToInt32
// Il2CppName: ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBase64String
// Il2CppName: ToBase64String
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBase64String
// Il2CppName: ToBase64String
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBase64String
// Il2CppName: ToBase64String
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBase64CharArray
// Il2CppName: ToBase64CharArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBase64CharArray
// Il2CppName: ToBase64CharArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ConvertToBase64Array
// Il2CppName: ConvertToBase64Array
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::ToBase64_CalculateAndValidateOutputLength
// Il2CppName: ToBase64_CalculateAndValidateOutputLength
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::FromBase64String
// Il2CppName: FromBase64String
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::FromBase64CharPtr
// Il2CppName: FromBase64CharPtr
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::FromBase64_Decode
// Il2CppName: FromBase64_Decode
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::FromBase64_ComputeResultLength
// Il2CppName: FromBase64_ComputeResultLength
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Convert::_cctor
// Il2CppName: .cctor
// Cannot perform method pointer template specialization from operators!
