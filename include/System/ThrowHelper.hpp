// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: System.ExceptionArgument
#include "System/ExceptionArgument.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: ExceptionResource
  struct ExceptionResource;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.ThrowHelper
  class ThrowHelper : public ::CsObject {
    public:
    // static System.Void ThrowArgumentNullException(System.ExceptionArgument argument)
    // Offset: 0xCD9338
    static void ThrowArgumentNullException(System::ExceptionArgument argument);
    // static private System.Exception CreateArgumentNullException(System.ExceptionArgument argument)
    // Offset: 0xCD9384
    static System::Exception* CreateArgumentNullException(System::ExceptionArgument argument);
    // static System.Void ThrowArgumentOutOfRangeException()
    // Offset: 0xCD9430
    static void ThrowArgumentOutOfRangeException();
    // static System.Void ThrowWrongValueTypeArgumentException(System.Object value, System.Type targetType)
    // Offset: 0xCD9518
    static void ThrowWrongValueTypeArgumentException(::CsObject* value, System::Type* targetType);
    // static System.Void ThrowArgumentException(System.ExceptionResource resource)
    // Offset: 0xCD9610
    static void ThrowArgumentException(System::ExceptionResource resource);
    // static System.Void ThrowArgumentOutOfRangeException(System.ExceptionArgument argument, System.ExceptionResource resource)
    // Offset: 0xCD9444
    static void ThrowArgumentOutOfRangeException(System::ExceptionArgument argument, System::ExceptionResource resource);
    // static System.Void ThrowInvalidOperationException(System.ExceptionResource resource)
    // Offset: 0xCD9768
    static void ThrowInvalidOperationException(System::ExceptionResource resource);
    // static System.Void ThrowNotSupportedException(System.ExceptionResource resource)
    // Offset: 0xCD97E8
    static void ThrowNotSupportedException(System::ExceptionResource resource);
    // static System.Void IfNullAndNullsAreIllegalThenThrow(System.Object value, System.ExceptionArgument argName)
    // Offset: 0xFFFFFFFF
    template<class T>
    static void IfNullAndNullsAreIllegalThenThrow(::CsObject* value, System::ExceptionArgument argName) {
      THROW_UNLESS(il2cpp_utils::RunGenericMethod("System", "ThrowHelper", "IfNullAndNullsAreIllegalThenThrow", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, value, argName));
    }
    // static System.String GetArgumentName(System.ExceptionArgument argument)
    // Offset: 0xCD96FC
    static ::CsString* GetArgumentName(System::ExceptionArgument argument);
    // static System.String GetResourceName(System.ExceptionResource resource)
    // Offset: 0xCD9690
    static ::CsString* GetResourceName(System::ExceptionResource resource);
  }; // System.ThrowHelper
}
DEFINE_IL2CPP_ARG_TYPE(System::ThrowHelper*, "System", "ThrowHelper");
#pragma pack(pop)
