// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: ExpressionType
  struct ExpressionType;
}
// Completed forward declares
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Error
  class Error;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(System::Linq::Expressions::Error);
DEFINE_IL2CPP_ARG_TYPE(System::Linq::Expressions::Error*, "System.Linq.Expressions", "Error");
// Type namespace: System.Linq.Expressions
namespace System::Linq::Expressions {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Linq.Expressions.Error
  // [TokenAttribute] Offset: FFFFFFFF
  class Error : public ::Il2CppObject {
    public:
    // static System.Exception ReducibleMustOverrideReduce()
    // Offset: 0x15FB7E0
    static System::Exception* ReducibleMustOverrideReduce();
    // static System.Exception InvalidMetaObjectCreated(System.Object p0)
    // Offset: 0x15EA490
    static System::Exception* InvalidMetaObjectCreated(::Il2CppObject* p0);
    // static System.Exception AmbiguousMatchInExpandoObject(System.Object p0)
    // Offset: 0x15EBEA0
    static System::Exception* AmbiguousMatchInExpandoObject(::Il2CppObject* p0);
    // static System.Exception SameKeyExistsInExpando(System.Object key)
    // Offset: 0x15EC2A8
    static System::Exception* SameKeyExistsInExpando(::Il2CppObject* key);
    // static System.Exception KeyDoesNotExistInExpando(System.Object p0)
    // Offset: 0x15ECE94
    static System::Exception* KeyDoesNotExistInExpando(::Il2CppObject* p0);
    // static System.Exception CollectionModifiedWhileEnumerating()
    // Offset: 0x15EDBDC
    static System::Exception* CollectionModifiedWhileEnumerating();
    // static System.Exception CollectionReadOnly()
    // Offset: 0x15EDFAC
    static System::Exception* CollectionReadOnly();
    // static System.Exception MustReduceToDifferent()
    // Offset: 0x15FB850
    static System::Exception* MustReduceToDifferent();
    // static System.Exception BinderNotCompatibleWithCallSite(System.Object p0, System.Object p1, System.Object p2)
    // Offset: 0x15EACF8
    static System::Exception* BinderNotCompatibleWithCallSite(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2);
    // static System.Exception DynamicBindingNeedsRestrictions(System.Object p0, System.Object p1)
    // Offset: 0x15EB0C4
    static System::Exception* DynamicBindingNeedsRestrictions(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception DynamicObjectResultNotAssignable(System.Object p0, System.Object p1, System.Object p2, System.Object p3)
    // Offset: 0x15EAF94
    static System::Exception* DynamicObjectResultNotAssignable(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2, ::Il2CppObject* p3);
    // static System.Exception DynamicBinderResultNotAssignable(System.Object p0, System.Object p1, System.Object p2)
    // Offset: 0x15EB034
    static System::Exception* DynamicBinderResultNotAssignable(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2);
    // static System.Exception BindingCannotBeNull()
    // Offset: 0x15EAF24
    static System::Exception* BindingCannotBeNull();
    // static System.Exception ReducedNotCompatible()
    // Offset: 0x15FB8C0
    static System::Exception* ReducedNotCompatible();
    // static System.Exception SetterHasNoParams(System.String paramName)
    // Offset: 0x15FB930
    static System::Exception* SetterHasNoParams(::StringW paramName);
    // static System.Exception PropertyCannotHaveRefType(System.String paramName)
    // Offset: 0x15FB9B0
    static System::Exception* PropertyCannotHaveRefType(::StringW paramName);
    // static System.Exception IndexesOfSetGetMustMatch(System.String paramName)
    // Offset: 0x15FBA30
    static System::Exception* IndexesOfSetGetMustMatch(::StringW paramName);
    // static System.Exception TypeParameterIsNotDelegate(System.Object p0)
    // Offset: 0x15FBAB0
    static System::Exception* TypeParameterIsNotDelegate(::Il2CppObject* p0);
    // static System.Exception FirstArgumentMustBeCallSite()
    // Offset: 0x15FBB28
    static System::Exception* FirstArgumentMustBeCallSite();
    // static System.Exception AccessorsCannotHaveVarArgs(System.String paramName)
    // Offset: 0x15FBB98
    static System::Exception* AccessorsCannotHaveVarArgs(::StringW paramName);
    // static private System.Exception AccessorsCannotHaveByRefArgs(System.String paramName)
    // Offset: 0x15FBC18
    static System::Exception* AccessorsCannotHaveByRefArgs(::StringW paramName);
    // static System.Exception AccessorsCannotHaveByRefArgs(System.String paramName, System.Int32 index)
    // Offset: 0x15FBC98
    static System::Exception* AccessorsCannotHaveByRefArgs(::StringW paramName, int index);
    // static System.Exception TypeMustBeDerivedFromSystemDelegate()
    // Offset: 0x15FBD3C
    static System::Exception* TypeMustBeDerivedFromSystemDelegate();
    // static System.Exception NoOrInvalidRuleProduced()
    // Offset: 0x15FBDAC
    static System::Exception* NoOrInvalidRuleProduced();
    // static System.Exception BoundsCannotBeLessThanOne(System.String paramName)
    // Offset: 0x15FBE1C
    static System::Exception* BoundsCannotBeLessThanOne(::StringW paramName);
    // static System.Exception TypeMustNotBeByRef(System.String paramName)
    // Offset: 0x15F4A60
    static System::Exception* TypeMustNotBeByRef(::StringW paramName);
    // static System.Exception TypeMustNotBePointer(System.String paramName)
    // Offset: 0x15F4AE0
    static System::Exception* TypeMustNotBePointer(::StringW paramName);
    // static System.Exception SetterMustBeVoid(System.String paramName)
    // Offset: 0x15FBE9C
    static System::Exception* SetterMustBeVoid(::StringW paramName);
    // static System.Exception PropertyTypeMustMatchGetter(System.String paramName)
    // Offset: 0x15FBF1C
    static System::Exception* PropertyTypeMustMatchGetter(::StringW paramName);
    // static System.Exception PropertyTypeMustMatchSetter(System.String paramName)
    // Offset: 0x15FBF9C
    static System::Exception* PropertyTypeMustMatchSetter(::StringW paramName);
    // static System.Exception BothAccessorsMustBeStatic(System.String paramName)
    // Offset: 0x15FC01C
    static System::Exception* BothAccessorsMustBeStatic(::StringW paramName);
    // static System.Exception OnlyStaticFieldsHaveNullInstance(System.String paramName)
    // Offset: 0x15FC09C
    static System::Exception* OnlyStaticFieldsHaveNullInstance(::StringW paramName);
    // static System.Exception OnlyStaticPropertiesHaveNullInstance(System.String paramName)
    // Offset: 0x15FC11C
    static System::Exception* OnlyStaticPropertiesHaveNullInstance(::StringW paramName);
    // static System.Exception OnlyStaticMethodsHaveNullInstance()
    // Offset: 0x15FC19C
    static System::Exception* OnlyStaticMethodsHaveNullInstance();
    // static System.Exception PropertyTypeCannotBeVoid(System.String paramName)
    // Offset: 0x15FC20C
    static System::Exception* PropertyTypeCannotBeVoid(::StringW paramName);
    // static System.Exception InvalidUnboxType(System.String paramName)
    // Offset: 0x15FC28C
    static System::Exception* InvalidUnboxType(::StringW paramName);
    // static System.Exception ExpressionMustBeWriteable(System.String paramName)
    // Offset: 0x15FC30C
    static System::Exception* ExpressionMustBeWriteable(::StringW paramName);
    // static System.Exception ArgumentMustNotHaveValueType(System.String paramName)
    // Offset: 0x15FC38C
    static System::Exception* ArgumentMustNotHaveValueType(::StringW paramName);
    // static System.Exception MustBeReducible()
    // Offset: 0x15FC40C
    static System::Exception* MustBeReducible();
    // static System.Exception LabelMustBeVoidOrHaveExpression(System.String paramName)
    // Offset: 0x15FC47C
    static System::Exception* LabelMustBeVoidOrHaveExpression(::StringW paramName);
    // static System.Exception LabelTypeMustBeVoid(System.String paramName)
    // Offset: 0x15FC4FC
    static System::Exception* LabelTypeMustBeVoid(::StringW paramName);
    // static System.Exception QuotedExpressionMustBeLambda(System.String paramName)
    // Offset: 0x15FC57C
    static System::Exception* QuotedExpressionMustBeLambda(::StringW paramName);
    // static System.Exception VariableMustNotBeByRef(System.Object p0, System.Object p1, System.String paramName)
    // Offset: 0x15FC5FC
    static System::Exception* VariableMustNotBeByRef(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName);
    // static System.Exception VariableMustNotBeByRef(System.Object p0, System.Object p1, System.String paramName, System.Int32 index)
    // Offset: 0x15FC68C
    static System::Exception* VariableMustNotBeByRef(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName, int index);
    // static private System.Exception DuplicateVariable(System.Object p0, System.String paramName)
    // Offset: 0x15FC6C4
    static System::Exception* DuplicateVariable(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception DuplicateVariable(System.Object p0, System.String paramName, System.Int32 index)
    // Offset: 0x15FC74C
    static System::Exception* DuplicateVariable(::Il2CppObject* p0, ::StringW paramName, int index);
    // static System.Exception FaultCannotHaveCatchOrFinally(System.String paramName)
    // Offset: 0x15FC77C
    static System::Exception* FaultCannotHaveCatchOrFinally(::StringW paramName);
    // static System.Exception TryMustHaveCatchFinallyOrFault()
    // Offset: 0x15FC7FC
    static System::Exception* TryMustHaveCatchFinallyOrFault();
    // static System.Exception BodyOfCatchMustHaveSameTypeAsBodyOfTry()
    // Offset: 0x15FC86C
    static System::Exception* BodyOfCatchMustHaveSameTypeAsBodyOfTry();
    // static System.Exception ExtensionNodeMustOverrideProperty(System.Object p0)
    // Offset: 0x15FC8DC
    static System::Exception* ExtensionNodeMustOverrideProperty(::Il2CppObject* p0);
    // static System.Exception UserDefinedOperatorMustBeStatic(System.Object p0, System.String paramName)
    // Offset: 0x15FC954
    static System::Exception* UserDefinedOperatorMustBeStatic(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception UserDefinedOperatorMustNotBeVoid(System.Object p0, System.String paramName)
    // Offset: 0x15FC9DC
    static System::Exception* UserDefinedOperatorMustNotBeVoid(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception CoercionOperatorNotDefined(System.Object p0, System.Object p1)
    // Offset: 0x15FCA64
    static System::Exception* CoercionOperatorNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception UnaryOperatorNotDefined(System.Object p0, System.Object p1)
    // Offset: 0x15FCAEC
    static System::Exception* UnaryOperatorNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception BinaryOperatorNotDefined(System.Object p0, System.Object p1, System.Object p2)
    // Offset: 0x15FCB74
    static System::Exception* BinaryOperatorNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2);
    // static System.Exception ReferenceEqualityNotDefined(System.Object p0, System.Object p1)
    // Offset: 0x15FCC04
    static System::Exception* ReferenceEqualityNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception OperandTypesDoNotMatchParameters(System.Object p0, System.Object p1)
    // Offset: 0x15FCC8C
    static System::Exception* OperandTypesDoNotMatchParameters(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception OverloadOperatorTypeDoesNotMatchConversionType(System.Object p0, System.Object p1)
    // Offset: 0x15FCD14
    static System::Exception* OverloadOperatorTypeDoesNotMatchConversionType(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception ConversionIsNotSupportedForArithmeticTypes()
    // Offset: 0x15FCD9C
    static System::Exception* ConversionIsNotSupportedForArithmeticTypes();
    // static System.Exception ArgumentMustBeArray(System.String paramName)
    // Offset: 0x15FCE0C
    static System::Exception* ArgumentMustBeArray(::StringW paramName);
    // static System.Exception ArgumentMustBeBoolean(System.String paramName)
    // Offset: 0x15FCE8C
    static System::Exception* ArgumentMustBeBoolean(::StringW paramName);
    // static private System.Exception ArgumentMustBeInteger(System.String paramName)
    // Offset: 0x15FCF0C
    static System::Exception* ArgumentMustBeInteger(::StringW paramName);
    // static System.Exception ArgumentMustBeInteger(System.String paramName, System.Int32 index)
    // Offset: 0x15FCF8C
    static System::Exception* ArgumentMustBeInteger(::StringW paramName, int index);
    // static System.Exception ArgumentMustBeArrayIndexType(System.String paramName)
    // Offset: 0x15FCFA0
    static System::Exception* ArgumentMustBeArrayIndexType(::StringW paramName);
    // static System.Exception ArgumentMustBeSingleDimensionalArrayType(System.String paramName)
    // Offset: 0x15FD020
    static System::Exception* ArgumentMustBeSingleDimensionalArrayType(::StringW paramName);
    // static System.Exception ArgumentTypesMustMatch()
    // Offset: 0x15FD0A0
    static System::Exception* ArgumentTypesMustMatch();
    // static System.Exception CannotAutoInitializeValueTypeMemberThroughProperty(System.Object p0)
    // Offset: 0x15FD110
    static System::Exception* CannotAutoInitializeValueTypeMemberThroughProperty(::Il2CppObject* p0);
    // static System.Exception IncorrectTypeForTypeAs(System.Object p0, System.String paramName)
    // Offset: 0x15FD188
    static System::Exception* IncorrectTypeForTypeAs(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception CoalesceUsedOnNonNullType()
    // Offset: 0x15FD210
    static System::Exception* CoalesceUsedOnNonNullType();
    // static System.Exception ExpressionTypeCannotInitializeArrayType(System.Object p0, System.Object p1)
    // Offset: 0x15FD280
    static System::Exception* ExpressionTypeCannotInitializeArrayType(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception ExpressionTypeDoesNotMatchReturn(System.Object p0, System.Object p1)
    // Offset: 0x15FD308
    static System::Exception* ExpressionTypeDoesNotMatchReturn(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception ExpressionTypeDoesNotMatchAssignment(System.Object p0, System.Object p1)
    // Offset: 0x15FD390
    static System::Exception* ExpressionTypeDoesNotMatchAssignment(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception ExpressionTypeDoesNotMatchLabel(System.Object p0, System.Object p1)
    // Offset: 0x15FD418
    static System::Exception* ExpressionTypeDoesNotMatchLabel(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception ExpressionTypeNotInvocable(System.Object p0, System.String paramName)
    // Offset: 0x15FD4A0
    static System::Exception* ExpressionTypeNotInvocable(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception InstanceFieldNotDefinedForType(System.Object p0, System.Object p1)
    // Offset: 0x15FD528
    static System::Exception* InstanceFieldNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception FieldInfoNotDefinedForType(System.Object p0, System.Object p1, System.Object p2)
    // Offset: 0x15FD5B0
    static System::Exception* FieldInfoNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2);
    // static System.Exception IncorrectNumberOfIndexes()
    // Offset: 0x15FD640
    static System::Exception* IncorrectNumberOfIndexes();
    // static System.Exception IncorrectNumberOfLambdaDeclarationParameters()
    // Offset: 0x15FD6B0
    static System::Exception* IncorrectNumberOfLambdaDeclarationParameters();
    // static System.Exception LambdaTypeMustBeDerivedFromSystemDelegate(System.String paramName)
    // Offset: 0x15FD720
    static System::Exception* LambdaTypeMustBeDerivedFromSystemDelegate(::StringW paramName);
    // static System.Exception MemberNotFieldOrProperty(System.Object p0, System.String paramName)
    // Offset: 0x15FD7A0
    static System::Exception* MemberNotFieldOrProperty(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception MethodContainsGenericParameters(System.Object p0, System.String paramName)
    // Offset: 0x15FD828
    static System::Exception* MethodContainsGenericParameters(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception MethodIsGeneric(System.Object p0, System.String paramName)
    // Offset: 0x15FD8B0
    static System::Exception* MethodIsGeneric(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception PropertyDoesNotHaveAccessor(System.Object p0, System.String paramName)
    // Offset: 0x15FD938
    static System::Exception* PropertyDoesNotHaveAccessor(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception ParameterExpressionNotValidAsDelegate(System.Object p0, System.Object p1)
    // Offset: 0x15FD9C0
    static System::Exception* ParameterExpressionNotValidAsDelegate(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception PropertyNotDefinedForType(System.Object p0, System.Object p1, System.String paramName)
    // Offset: 0x15FDA48
    static System::Exception* PropertyNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName);
    // static System.Exception InstancePropertyNotDefinedForType(System.Object p0, System.Object p1, System.String paramName)
    // Offset: 0x15FDAD8
    static System::Exception* InstancePropertyNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName);
    // static System.Exception InstanceAndMethodTypeMismatch(System.Object p0, System.Object p1, System.Object p2)
    // Offset: 0x15FDB68
    static System::Exception* InstanceAndMethodTypeMismatch(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2);
    // static System.Exception UnhandledBinary(System.Object p0, System.String paramName)
    // Offset: 0x15FDBF8
    static System::Exception* UnhandledBinary(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception UnhandledUnary(System.Object p0, System.String paramName)
    // Offset: 0x15FDC80
    static System::Exception* UnhandledUnary(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception UserDefinedOpMustHaveConsistentTypes(System.Object p0, System.Object p1)
    // Offset: 0x15FDD08
    static System::Exception* UserDefinedOpMustHaveConsistentTypes(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception UserDefinedOpMustHaveValidReturnType(System.Object p0, System.Object p1)
    // Offset: 0x15FDD90
    static System::Exception* UserDefinedOpMustHaveValidReturnType(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception LogicalOperatorMustHaveBooleanOperators(System.Object p0, System.Object p1)
    // Offset: 0x15FDE18
    static System::Exception* LogicalOperatorMustHaveBooleanOperators(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception MethodWithArgsDoesNotExistOnType(System.Object p0, System.Object p1)
    // Offset: 0x15FDEA0
    static System::Exception* MethodWithArgsDoesNotExistOnType(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception GenericMethodWithArgsDoesNotExistOnType(System.Object p0, System.Object p1)
    // Offset: 0x15FDF28
    static System::Exception* GenericMethodWithArgsDoesNotExistOnType(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception MethodWithMoreThanOneMatch(System.Object p0, System.Object p1)
    // Offset: 0x15FDFB0
    static System::Exception* MethodWithMoreThanOneMatch(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception ArgumentCannotBeOfTypeVoid(System.String paramName)
    // Offset: 0x15FE038
    static System::Exception* ArgumentCannotBeOfTypeVoid(::StringW paramName);
    // static System.Exception OutOfRange(System.String paramName, System.Object p1)
    // Offset: 0x15EABEC
    static System::Exception* OutOfRange(::StringW paramName, ::Il2CppObject* p1);
    // static System.Exception LabelTargetAlreadyDefined(System.Object p0)
    // Offset: 0x15FE0B8
    static System::Exception* LabelTargetAlreadyDefined(::Il2CppObject* p0);
    // static System.Exception LabelTargetUndefined(System.Object p0)
    // Offset: 0x15FE130
    static System::Exception* LabelTargetUndefined(::Il2CppObject* p0);
    // static System.Exception ControlCannotLeaveFinally()
    // Offset: 0x15FE1A8
    static System::Exception* ControlCannotLeaveFinally();
    // static System.Exception ControlCannotLeaveFilterTest()
    // Offset: 0x15FE218
    static System::Exception* ControlCannotLeaveFilterTest();
    // static System.Exception AmbiguousJump(System.Object p0)
    // Offset: 0x15FE288
    static System::Exception* AmbiguousJump(::Il2CppObject* p0);
    // static System.Exception ControlCannotEnterTry()
    // Offset: 0x15FE300
    static System::Exception* ControlCannotEnterTry();
    // static System.Exception ControlCannotEnterExpression()
    // Offset: 0x15FE370
    static System::Exception* ControlCannotEnterExpression();
    // static System.Exception NonLocalJumpWithValue(System.Object p0)
    // Offset: 0x15FE3E0
    static System::Exception* NonLocalJumpWithValue(::Il2CppObject* p0);
    // static System.Exception InvalidLvalue(System.Linq.Expressions.ExpressionType p0)
    // Offset: 0x15FE458
    static System::Exception* InvalidLvalue(System::Linq::Expressions::ExpressionType p0);
    // static System.Exception RethrowRequiresCatch()
    // Offset: 0x15FE4EC
    static System::Exception* RethrowRequiresCatch();
    // static System.Exception MustRewriteToSameNode(System.Object p0, System.Object p1, System.Object p2)
    // Offset: 0x15FE55C
    static System::Exception* MustRewriteToSameNode(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2);
    // static System.Exception MustRewriteChildToSameType(System.Object p0, System.Object p1, System.Object p2)
    // Offset: 0x15FE5EC
    static System::Exception* MustRewriteChildToSameType(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2);
    // static System.Exception MustRewriteWithoutMethod(System.Object p0, System.Object p1)
    // Offset: 0x15FE67C
    static System::Exception* MustRewriteWithoutMethod(::Il2CppObject* p0, ::Il2CppObject* p1);
    // static System.Exception ArgumentOutOfRange(System.String paramName)
    // Offset: 0x15F8DAC
    static System::Exception* ArgumentOutOfRange(::StringW paramName);
    // static System.Exception NotSupported()
    // Offset: 0x15FE704
    static System::Exception* NotSupported();
    // static System.Exception NonAbstractConstructorRequired()
    // Offset: 0x15FE760
    static System::Exception* NonAbstractConstructorRequired();
    // static System.Exception InvalidProgram()
    // Offset: 0x15FE7D0
    static System::Exception* InvalidProgram();
    // static System.Exception EnumerationIsDone()
    // Offset: 0x15FE82C
    static System::Exception* EnumerationIsDone();
    // static private System.Exception TypeContainsGenericParameters(System.Object p0, System.String paramName)
    // Offset: 0x15FE89C
    static System::Exception* TypeContainsGenericParameters(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception TypeContainsGenericParameters(System.Object p0, System.String paramName, System.Int32 index)
    // Offset: 0x15F4B60
    static System::Exception* TypeContainsGenericParameters(::Il2CppObject* p0, ::StringW paramName, int index);
    // static System.Exception TypeIsGeneric(System.Object p0, System.String paramName)
    // Offset: 0x15FE924
    static System::Exception* TypeIsGeneric(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception TypeIsGeneric(System.Object p0, System.String paramName, System.Int32 index)
    // Offset: 0x15F4B90
    static System::Exception* TypeIsGeneric(::Il2CppObject* p0, ::StringW paramName, int index);
    // static System.Exception IncorrectNumberOfConstructorArguments()
    // Offset: 0x15F1408
    static System::Exception* IncorrectNumberOfConstructorArguments();
    // static System.Exception ExpressionTypeDoesNotMatchMethodParameter(System.Object p0, System.Object p1, System.Object p2, System.String paramName)
    // Offset: 0x15FE9AC
    static System::Exception* ExpressionTypeDoesNotMatchMethodParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2, ::StringW paramName);
    // static System.Exception ExpressionTypeDoesNotMatchMethodParameter(System.Object p0, System.Object p1, System.Object p2, System.String paramName, System.Int32 index)
    // Offset: 0x15F1930
    static System::Exception* ExpressionTypeDoesNotMatchMethodParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2, ::StringW paramName, int index);
    // static System.Exception ExpressionTypeDoesNotMatchParameter(System.Object p0, System.Object p1, System.String paramName)
    // Offset: 0x15FEA4C
    static System::Exception* ExpressionTypeDoesNotMatchParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName);
    // static System.Exception ExpressionTypeDoesNotMatchParameter(System.Object p0, System.Object p1, System.String paramName, System.Int32 index)
    // Offset: 0x15F18F8
    static System::Exception* ExpressionTypeDoesNotMatchParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName, int index);
    // static System.Exception IncorrectNumberOfLambdaArguments()
    // Offset: 0x15F1478
    static System::Exception* IncorrectNumberOfLambdaArguments();
    // static System.Exception IncorrectNumberOfMethodCallArguments(System.Object p0, System.String paramName)
    // Offset: 0x15F14E8
    static System::Exception* IncorrectNumberOfMethodCallArguments(::Il2CppObject* p0, ::StringW paramName);
    // static System.Exception ExpressionTypeDoesNotMatchConstructorParameter(System.Object p0, System.Object p1, System.String paramName)
    // Offset: 0x15FEADC
    static System::Exception* ExpressionTypeDoesNotMatchConstructorParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName);
    // static System.Exception ExpressionTypeDoesNotMatchConstructorParameter(System.Object p0, System.Object p1, System.String paramName, System.Int32 index)
    // Offset: 0x15F18C0
    static System::Exception* ExpressionTypeDoesNotMatchConstructorParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName, int index);
    // static System.Exception ExpressionMustBeReadable(System.String paramName)
    // Offset: 0x15FEB6C
    static System::Exception* ExpressionMustBeReadable(::StringW paramName);
    // static System.Exception ExpressionMustBeReadable(System.String paramName, System.Int32 index)
    // Offset: 0x15F1980
    static System::Exception* ExpressionMustBeReadable(::StringW paramName, int index);
    // static System.Exception InvalidArgumentValue(System.String paramName)
    // Offset: 0x15F0C7C
    static System::Exception* InvalidArgumentValue(::StringW paramName);
    // static System.Exception InvalidNullValue(System.Type type, System.String paramName)
    // Offset: 0x15FEBEC
    static System::Exception* InvalidNullValue(System::Type* type, ::StringW paramName);
    // static System.Exception InvalidTypeException(System.Object value, System.Type type, System.String paramName)
    // Offset: 0x15FEC74
    static System::Exception* InvalidTypeException(::Il2CppObject* value, System::Type* type, ::StringW paramName);
    // static private System.String GetParamName(System.String paramName, System.Int32 index)
    // Offset: 0x15FBCAC
    static ::StringW GetParamName(::StringW paramName, int index);
  }; // System.Linq.Expressions.Error
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ReducibleMustOverrideReduce
// Il2CppName: ReducibleMustOverrideReduce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::ReducibleMustOverrideReduce)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ReducibleMustOverrideReduce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InvalidMetaObjectCreated
// Il2CppName: InvalidMetaObjectCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::InvalidMetaObjectCreated)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InvalidMetaObjectCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::AmbiguousMatchInExpandoObject
// Il2CppName: AmbiguousMatchInExpandoObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::AmbiguousMatchInExpandoObject)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "AmbiguousMatchInExpandoObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::SameKeyExistsInExpando
// Il2CppName: SameKeyExistsInExpando
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::SameKeyExistsInExpando)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "SameKeyExistsInExpando", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::KeyDoesNotExistInExpando
// Il2CppName: KeyDoesNotExistInExpando
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::KeyDoesNotExistInExpando)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "KeyDoesNotExistInExpando", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::CollectionModifiedWhileEnumerating
// Il2CppName: CollectionModifiedWhileEnumerating
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::CollectionModifiedWhileEnumerating)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "CollectionModifiedWhileEnumerating", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::CollectionReadOnly
// Il2CppName: CollectionReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::CollectionReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "CollectionReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MustReduceToDifferent
// Il2CppName: MustReduceToDifferent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::MustReduceToDifferent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MustReduceToDifferent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::BinderNotCompatibleWithCallSite
// Il2CppName: BinderNotCompatibleWithCallSite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::BinderNotCompatibleWithCallSite)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "BinderNotCompatibleWithCallSite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::DynamicBindingNeedsRestrictions
// Il2CppName: DynamicBindingNeedsRestrictions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::DynamicBindingNeedsRestrictions)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "DynamicBindingNeedsRestrictions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::DynamicObjectResultNotAssignable
// Il2CppName: DynamicObjectResultNotAssignable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::DynamicObjectResultNotAssignable)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p3 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "DynamicObjectResultNotAssignable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2, p3});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::DynamicBinderResultNotAssignable
// Il2CppName: DynamicBinderResultNotAssignable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::DynamicBinderResultNotAssignable)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "DynamicBinderResultNotAssignable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::BindingCannotBeNull
// Il2CppName: BindingCannotBeNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::BindingCannotBeNull)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "BindingCannotBeNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ReducedNotCompatible
// Il2CppName: ReducedNotCompatible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::ReducedNotCompatible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ReducedNotCompatible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::SetterHasNoParams
// Il2CppName: SetterHasNoParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::SetterHasNoParams)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "SetterHasNoParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::PropertyCannotHaveRefType
// Il2CppName: PropertyCannotHaveRefType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::PropertyCannotHaveRefType)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "PropertyCannotHaveRefType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::IndexesOfSetGetMustMatch
// Il2CppName: IndexesOfSetGetMustMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::IndexesOfSetGetMustMatch)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "IndexesOfSetGetMustMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::TypeParameterIsNotDelegate
// Il2CppName: TypeParameterIsNotDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::TypeParameterIsNotDelegate)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "TypeParameterIsNotDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::FirstArgumentMustBeCallSite
// Il2CppName: FirstArgumentMustBeCallSite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::FirstArgumentMustBeCallSite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "FirstArgumentMustBeCallSite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::AccessorsCannotHaveVarArgs
// Il2CppName: AccessorsCannotHaveVarArgs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::AccessorsCannotHaveVarArgs)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "AccessorsCannotHaveVarArgs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::AccessorsCannotHaveByRefArgs
// Il2CppName: AccessorsCannotHaveByRefArgs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::AccessorsCannotHaveByRefArgs)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "AccessorsCannotHaveByRefArgs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::AccessorsCannotHaveByRefArgs
// Il2CppName: AccessorsCannotHaveByRefArgs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW, int)>(&System::Linq::Expressions::Error::AccessorsCannotHaveByRefArgs)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "AccessorsCannotHaveByRefArgs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::TypeMustBeDerivedFromSystemDelegate
// Il2CppName: TypeMustBeDerivedFromSystemDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::TypeMustBeDerivedFromSystemDelegate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "TypeMustBeDerivedFromSystemDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::NoOrInvalidRuleProduced
// Il2CppName: NoOrInvalidRuleProduced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::NoOrInvalidRuleProduced)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "NoOrInvalidRuleProduced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::BoundsCannotBeLessThanOne
// Il2CppName: BoundsCannotBeLessThanOne
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::BoundsCannotBeLessThanOne)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "BoundsCannotBeLessThanOne", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::TypeMustNotBeByRef
// Il2CppName: TypeMustNotBeByRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::TypeMustNotBeByRef)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "TypeMustNotBeByRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::TypeMustNotBePointer
// Il2CppName: TypeMustNotBePointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::TypeMustNotBePointer)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "TypeMustNotBePointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::SetterMustBeVoid
// Il2CppName: SetterMustBeVoid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::SetterMustBeVoid)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "SetterMustBeVoid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::PropertyTypeMustMatchGetter
// Il2CppName: PropertyTypeMustMatchGetter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::PropertyTypeMustMatchGetter)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "PropertyTypeMustMatchGetter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::PropertyTypeMustMatchSetter
// Il2CppName: PropertyTypeMustMatchSetter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::PropertyTypeMustMatchSetter)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "PropertyTypeMustMatchSetter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::BothAccessorsMustBeStatic
// Il2CppName: BothAccessorsMustBeStatic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::BothAccessorsMustBeStatic)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "BothAccessorsMustBeStatic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::OnlyStaticFieldsHaveNullInstance
// Il2CppName: OnlyStaticFieldsHaveNullInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::OnlyStaticFieldsHaveNullInstance)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "OnlyStaticFieldsHaveNullInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::OnlyStaticPropertiesHaveNullInstance
// Il2CppName: OnlyStaticPropertiesHaveNullInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::OnlyStaticPropertiesHaveNullInstance)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "OnlyStaticPropertiesHaveNullInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::OnlyStaticMethodsHaveNullInstance
// Il2CppName: OnlyStaticMethodsHaveNullInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::OnlyStaticMethodsHaveNullInstance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "OnlyStaticMethodsHaveNullInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::PropertyTypeCannotBeVoid
// Il2CppName: PropertyTypeCannotBeVoid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::PropertyTypeCannotBeVoid)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "PropertyTypeCannotBeVoid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InvalidUnboxType
// Il2CppName: InvalidUnboxType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::InvalidUnboxType)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InvalidUnboxType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionMustBeWriteable
// Il2CppName: ExpressionMustBeWriteable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ExpressionMustBeWriteable)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionMustBeWriteable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentMustNotHaveValueType
// Il2CppName: ArgumentMustNotHaveValueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ArgumentMustNotHaveValueType)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentMustNotHaveValueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MustBeReducible
// Il2CppName: MustBeReducible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::MustBeReducible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MustBeReducible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::LabelMustBeVoidOrHaveExpression
// Il2CppName: LabelMustBeVoidOrHaveExpression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::LabelMustBeVoidOrHaveExpression)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "LabelMustBeVoidOrHaveExpression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::LabelTypeMustBeVoid
// Il2CppName: LabelTypeMustBeVoid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::LabelTypeMustBeVoid)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "LabelTypeMustBeVoid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::QuotedExpressionMustBeLambda
// Il2CppName: QuotedExpressionMustBeLambda
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::QuotedExpressionMustBeLambda)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "QuotedExpressionMustBeLambda", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::VariableMustNotBeByRef
// Il2CppName: VariableMustNotBeByRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::VariableMustNotBeByRef)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "VariableMustNotBeByRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::VariableMustNotBeByRef
// Il2CppName: VariableMustNotBeByRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW, int)>(&System::Linq::Expressions::Error::VariableMustNotBeByRef)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "VariableMustNotBeByRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::DuplicateVariable
// Il2CppName: DuplicateVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::DuplicateVariable)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "DuplicateVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::DuplicateVariable
// Il2CppName: DuplicateVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW, int)>(&System::Linq::Expressions::Error::DuplicateVariable)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "DuplicateVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::FaultCannotHaveCatchOrFinally
// Il2CppName: FaultCannotHaveCatchOrFinally
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::FaultCannotHaveCatchOrFinally)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "FaultCannotHaveCatchOrFinally", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::TryMustHaveCatchFinallyOrFault
// Il2CppName: TryMustHaveCatchFinallyOrFault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::TryMustHaveCatchFinallyOrFault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "TryMustHaveCatchFinallyOrFault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::BodyOfCatchMustHaveSameTypeAsBodyOfTry
// Il2CppName: BodyOfCatchMustHaveSameTypeAsBodyOfTry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::BodyOfCatchMustHaveSameTypeAsBodyOfTry)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "BodyOfCatchMustHaveSameTypeAsBodyOfTry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExtensionNodeMustOverrideProperty
// Il2CppName: ExtensionNodeMustOverrideProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::ExtensionNodeMustOverrideProperty)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExtensionNodeMustOverrideProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::UserDefinedOperatorMustBeStatic
// Il2CppName: UserDefinedOperatorMustBeStatic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::UserDefinedOperatorMustBeStatic)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "UserDefinedOperatorMustBeStatic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::UserDefinedOperatorMustNotBeVoid
// Il2CppName: UserDefinedOperatorMustNotBeVoid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::UserDefinedOperatorMustNotBeVoid)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "UserDefinedOperatorMustNotBeVoid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::CoercionOperatorNotDefined
// Il2CppName: CoercionOperatorNotDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::CoercionOperatorNotDefined)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "CoercionOperatorNotDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::UnaryOperatorNotDefined
// Il2CppName: UnaryOperatorNotDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::UnaryOperatorNotDefined)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "UnaryOperatorNotDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::BinaryOperatorNotDefined
// Il2CppName: BinaryOperatorNotDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::BinaryOperatorNotDefined)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "BinaryOperatorNotDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ReferenceEqualityNotDefined
// Il2CppName: ReferenceEqualityNotDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::ReferenceEqualityNotDefined)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ReferenceEqualityNotDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::OperandTypesDoNotMatchParameters
// Il2CppName: OperandTypesDoNotMatchParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::OperandTypesDoNotMatchParameters)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "OperandTypesDoNotMatchParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::OverloadOperatorTypeDoesNotMatchConversionType
// Il2CppName: OverloadOperatorTypeDoesNotMatchConversionType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::OverloadOperatorTypeDoesNotMatchConversionType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "OverloadOperatorTypeDoesNotMatchConversionType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ConversionIsNotSupportedForArithmeticTypes
// Il2CppName: ConversionIsNotSupportedForArithmeticTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::ConversionIsNotSupportedForArithmeticTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ConversionIsNotSupportedForArithmeticTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentMustBeArray
// Il2CppName: ArgumentMustBeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ArgumentMustBeArray)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentMustBeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentMustBeBoolean
// Il2CppName: ArgumentMustBeBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ArgumentMustBeBoolean)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentMustBeBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentMustBeInteger
// Il2CppName: ArgumentMustBeInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ArgumentMustBeInteger)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentMustBeInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentMustBeInteger
// Il2CppName: ArgumentMustBeInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW, int)>(&System::Linq::Expressions::Error::ArgumentMustBeInteger)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentMustBeInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentMustBeArrayIndexType
// Il2CppName: ArgumentMustBeArrayIndexType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ArgumentMustBeArrayIndexType)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentMustBeArrayIndexType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentMustBeSingleDimensionalArrayType
// Il2CppName: ArgumentMustBeSingleDimensionalArrayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ArgumentMustBeSingleDimensionalArrayType)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentMustBeSingleDimensionalArrayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentTypesMustMatch
// Il2CppName: ArgumentTypesMustMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::ArgumentTypesMustMatch)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentTypesMustMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::CannotAutoInitializeValueTypeMemberThroughProperty
// Il2CppName: CannotAutoInitializeValueTypeMemberThroughProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::CannotAutoInitializeValueTypeMemberThroughProperty)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "CannotAutoInitializeValueTypeMemberThroughProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::IncorrectTypeForTypeAs
// Il2CppName: IncorrectTypeForTypeAs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::IncorrectTypeForTypeAs)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "IncorrectTypeForTypeAs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::CoalesceUsedOnNonNullType
// Il2CppName: CoalesceUsedOnNonNullType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::CoalesceUsedOnNonNullType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "CoalesceUsedOnNonNullType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeCannotInitializeArrayType
// Il2CppName: ExpressionTypeCannotInitializeArrayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::ExpressionTypeCannotInitializeArrayType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeCannotInitializeArrayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchReturn
// Il2CppName: ExpressionTypeDoesNotMatchReturn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchReturn)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeDoesNotMatchReturn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchAssignment
// Il2CppName: ExpressionTypeDoesNotMatchAssignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchAssignment)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeDoesNotMatchAssignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchLabel
// Il2CppName: ExpressionTypeDoesNotMatchLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchLabel)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeDoesNotMatchLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeNotInvocable
// Il2CppName: ExpressionTypeNotInvocable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::ExpressionTypeNotInvocable)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeNotInvocable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InstanceFieldNotDefinedForType
// Il2CppName: InstanceFieldNotDefinedForType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::InstanceFieldNotDefinedForType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InstanceFieldNotDefinedForType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::FieldInfoNotDefinedForType
// Il2CppName: FieldInfoNotDefinedForType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::FieldInfoNotDefinedForType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "FieldInfoNotDefinedForType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::IncorrectNumberOfIndexes
// Il2CppName: IncorrectNumberOfIndexes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::IncorrectNumberOfIndexes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "IncorrectNumberOfIndexes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::IncorrectNumberOfLambdaDeclarationParameters
// Il2CppName: IncorrectNumberOfLambdaDeclarationParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::IncorrectNumberOfLambdaDeclarationParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "IncorrectNumberOfLambdaDeclarationParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::LambdaTypeMustBeDerivedFromSystemDelegate
// Il2CppName: LambdaTypeMustBeDerivedFromSystemDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::LambdaTypeMustBeDerivedFromSystemDelegate)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "LambdaTypeMustBeDerivedFromSystemDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MemberNotFieldOrProperty
// Il2CppName: MemberNotFieldOrProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::MemberNotFieldOrProperty)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MemberNotFieldOrProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MethodContainsGenericParameters
// Il2CppName: MethodContainsGenericParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::MethodContainsGenericParameters)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MethodContainsGenericParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MethodIsGeneric
// Il2CppName: MethodIsGeneric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::MethodIsGeneric)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MethodIsGeneric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::PropertyDoesNotHaveAccessor
// Il2CppName: PropertyDoesNotHaveAccessor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::PropertyDoesNotHaveAccessor)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "PropertyDoesNotHaveAccessor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ParameterExpressionNotValidAsDelegate
// Il2CppName: ParameterExpressionNotValidAsDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::ParameterExpressionNotValidAsDelegate)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ParameterExpressionNotValidAsDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::PropertyNotDefinedForType
// Il2CppName: PropertyNotDefinedForType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::PropertyNotDefinedForType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "PropertyNotDefinedForType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InstancePropertyNotDefinedForType
// Il2CppName: InstancePropertyNotDefinedForType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::InstancePropertyNotDefinedForType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InstancePropertyNotDefinedForType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InstanceAndMethodTypeMismatch
// Il2CppName: InstanceAndMethodTypeMismatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::InstanceAndMethodTypeMismatch)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InstanceAndMethodTypeMismatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::UnhandledBinary
// Il2CppName: UnhandledBinary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::UnhandledBinary)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "UnhandledBinary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::UnhandledUnary
// Il2CppName: UnhandledUnary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::UnhandledUnary)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "UnhandledUnary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::UserDefinedOpMustHaveConsistentTypes
// Il2CppName: UserDefinedOpMustHaveConsistentTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::UserDefinedOpMustHaveConsistentTypes)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "UserDefinedOpMustHaveConsistentTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::UserDefinedOpMustHaveValidReturnType
// Il2CppName: UserDefinedOpMustHaveValidReturnType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::UserDefinedOpMustHaveValidReturnType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "UserDefinedOpMustHaveValidReturnType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::LogicalOperatorMustHaveBooleanOperators
// Il2CppName: LogicalOperatorMustHaveBooleanOperators
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::LogicalOperatorMustHaveBooleanOperators)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "LogicalOperatorMustHaveBooleanOperators", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MethodWithArgsDoesNotExistOnType
// Il2CppName: MethodWithArgsDoesNotExistOnType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::MethodWithArgsDoesNotExistOnType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MethodWithArgsDoesNotExistOnType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::GenericMethodWithArgsDoesNotExistOnType
// Il2CppName: GenericMethodWithArgsDoesNotExistOnType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::GenericMethodWithArgsDoesNotExistOnType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "GenericMethodWithArgsDoesNotExistOnType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MethodWithMoreThanOneMatch
// Il2CppName: MethodWithMoreThanOneMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::MethodWithMoreThanOneMatch)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MethodWithMoreThanOneMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentCannotBeOfTypeVoid
// Il2CppName: ArgumentCannotBeOfTypeVoid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ArgumentCannotBeOfTypeVoid)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentCannotBeOfTypeVoid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::OutOfRange
// Il2CppName: OutOfRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW, ::Il2CppObject*)>(&System::Linq::Expressions::Error::OutOfRange)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "OutOfRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::LabelTargetAlreadyDefined
// Il2CppName: LabelTargetAlreadyDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::LabelTargetAlreadyDefined)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "LabelTargetAlreadyDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::LabelTargetUndefined
// Il2CppName: LabelTargetUndefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::LabelTargetUndefined)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "LabelTargetUndefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ControlCannotLeaveFinally
// Il2CppName: ControlCannotLeaveFinally
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::ControlCannotLeaveFinally)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ControlCannotLeaveFinally", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ControlCannotLeaveFilterTest
// Il2CppName: ControlCannotLeaveFilterTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::ControlCannotLeaveFilterTest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ControlCannotLeaveFilterTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::AmbiguousJump
// Il2CppName: AmbiguousJump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::AmbiguousJump)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "AmbiguousJump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ControlCannotEnterTry
// Il2CppName: ControlCannotEnterTry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::ControlCannotEnterTry)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ControlCannotEnterTry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ControlCannotEnterExpression
// Il2CppName: ControlCannotEnterExpression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::ControlCannotEnterExpression)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ControlCannotEnterExpression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::NonLocalJumpWithValue
// Il2CppName: NonLocalJumpWithValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*)>(&System::Linq::Expressions::Error::NonLocalJumpWithValue)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "NonLocalJumpWithValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InvalidLvalue
// Il2CppName: InvalidLvalue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(System::Linq::Expressions::ExpressionType)>(&System::Linq::Expressions::Error::InvalidLvalue)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "ExpressionType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InvalidLvalue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::RethrowRequiresCatch
// Il2CppName: RethrowRequiresCatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::RethrowRequiresCatch)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "RethrowRequiresCatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MustRewriteToSameNode
// Il2CppName: MustRewriteToSameNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::MustRewriteToSameNode)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MustRewriteToSameNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MustRewriteChildToSameType
// Il2CppName: MustRewriteChildToSameType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::MustRewriteChildToSameType)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MustRewriteChildToSameType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::MustRewriteWithoutMethod
// Il2CppName: MustRewriteWithoutMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*)>(&System::Linq::Expressions::Error::MustRewriteWithoutMethod)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "MustRewriteWithoutMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ArgumentOutOfRange
// Il2CppName: ArgumentOutOfRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ArgumentOutOfRange)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ArgumentOutOfRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::NotSupported
// Il2CppName: NotSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::NotSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "NotSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::NonAbstractConstructorRequired
// Il2CppName: NonAbstractConstructorRequired
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::NonAbstractConstructorRequired)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "NonAbstractConstructorRequired", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InvalidProgram
// Il2CppName: InvalidProgram
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::InvalidProgram)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InvalidProgram", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::EnumerationIsDone
// Il2CppName: EnumerationIsDone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::EnumerationIsDone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "EnumerationIsDone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::TypeContainsGenericParameters
// Il2CppName: TypeContainsGenericParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::TypeContainsGenericParameters)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "TypeContainsGenericParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::TypeContainsGenericParameters
// Il2CppName: TypeContainsGenericParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW, int)>(&System::Linq::Expressions::Error::TypeContainsGenericParameters)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "TypeContainsGenericParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::TypeIsGeneric
// Il2CppName: TypeIsGeneric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::TypeIsGeneric)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "TypeIsGeneric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::TypeIsGeneric
// Il2CppName: TypeIsGeneric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW, int)>(&System::Linq::Expressions::Error::TypeIsGeneric)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "TypeIsGeneric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::IncorrectNumberOfConstructorArguments
// Il2CppName: IncorrectNumberOfConstructorArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::IncorrectNumberOfConstructorArguments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "IncorrectNumberOfConstructorArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchMethodParameter
// Il2CppName: ExpressionTypeDoesNotMatchMethodParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchMethodParameter)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeDoesNotMatchMethodParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchMethodParameter
// Il2CppName: ExpressionTypeDoesNotMatchMethodParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::StringW, int)>(&System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchMethodParameter)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeDoesNotMatchMethodParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, p2, paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchParameter
// Il2CppName: ExpressionTypeDoesNotMatchParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchParameter)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeDoesNotMatchParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchParameter
// Il2CppName: ExpressionTypeDoesNotMatchParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW, int)>(&System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchParameter)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeDoesNotMatchParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::IncorrectNumberOfLambdaArguments
// Il2CppName: IncorrectNumberOfLambdaArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&System::Linq::Expressions::Error::IncorrectNumberOfLambdaArguments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "IncorrectNumberOfLambdaArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::IncorrectNumberOfMethodCallArguments
// Il2CppName: IncorrectNumberOfMethodCallArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::IncorrectNumberOfMethodCallArguments)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "IncorrectNumberOfMethodCallArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchConstructorParameter
// Il2CppName: ExpressionTypeDoesNotMatchConstructorParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchConstructorParameter)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeDoesNotMatchConstructorParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchConstructorParameter
// Il2CppName: ExpressionTypeDoesNotMatchConstructorParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW, int)>(&System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchConstructorParameter)> {
  static const MethodInfo* get() {
    static auto* p0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* p1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionTypeDoesNotMatchConstructorParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p0, p1, paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionMustBeReadable
// Il2CppName: ExpressionMustBeReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::ExpressionMustBeReadable)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionMustBeReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::ExpressionMustBeReadable
// Il2CppName: ExpressionMustBeReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW, int)>(&System::Linq::Expressions::Error::ExpressionMustBeReadable)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "ExpressionMustBeReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName, index});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InvalidArgumentValue
// Il2CppName: InvalidArgumentValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::StringW)>(&System::Linq::Expressions::Error::InvalidArgumentValue)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InvalidArgumentValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InvalidNullValue
// Il2CppName: InvalidNullValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(System::Type*, ::StringW)>(&System::Linq::Expressions::Error::InvalidNullValue)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InvalidNullValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::InvalidTypeException
// Il2CppName: InvalidTypeException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)(::Il2CppObject*, System::Type*, ::StringW)>(&System::Linq::Expressions::Error::InvalidTypeException)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "InvalidTypeException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, type, paramName});
  }
};
// Writing MetadataGetter for method: System::Linq::Expressions::Error::GetParamName
// Il2CppName: GetParamName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, int)>(&System::Linq::Expressions::Error::GetParamName)> {
  static const MethodInfo* get() {
    static auto* paramName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Linq::Expressions::Error*), "GetParamName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramName, index});
  }
};
