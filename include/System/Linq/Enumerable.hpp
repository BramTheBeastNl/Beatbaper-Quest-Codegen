// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Linq
namespace System::Linq {
  // Forward declaring type: IOrderedEnumerable`1<TElement>
  template<typename TElement>
  class IOrderedEnumerable_1;
  // Forward declaring type: IGrouping`2<TKey, TElement>
  template<typename TKey, typename TElement>
  class IGrouping_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
  // Forward declaring type: IEqualityComparer`1<T>
  template<typename T>
  class IEqualityComparer_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerable
  class IEnumerable;
}
// Completed forward declares
// Type namespace: System.Linq
namespace System::Linq {
  // Autogenerated type: System.Linq.Enumerable
  class Enumerable : public ::Il2CppObject {
    public:
    // Nested type: System::Linq::Enumerable::Iterator_1<TSource>
    template<typename TSource>
    class Iterator_1;
    // Nested type: System::Linq::Enumerable::WhereEnumerableIterator_1<TSource>
    template<typename TSource>
    class WhereEnumerableIterator_1;
    // Nested type: System::Linq::Enumerable::WhereArrayIterator_1<TSource>
    template<typename TSource>
    class WhereArrayIterator_1;
    // Nested type: System::Linq::Enumerable::WhereListIterator_1<TSource>
    template<typename TSource>
    class WhereListIterator_1;
    // Nested type: System::Linq::Enumerable::WhereSelectEnumerableIterator_2<TSource, TResult>
    template<typename TSource, typename TResult>
    class WhereSelectEnumerableIterator_2;
    // Nested type: System::Linq::Enumerable::WhereSelectArrayIterator_2<TSource, TResult>
    template<typename TSource, typename TResult>
    class WhereSelectArrayIterator_2;
    // Nested type: System::Linq::Enumerable::WhereSelectListIterator_2<TSource, TResult>
    template<typename TSource, typename TResult>
    class WhereSelectListIterator_2;
    // Nested type: System::Linq::Enumerable::$$c__DisplayClass6_0_1<TSource>
    template<typename TSource>
    class $$c__DisplayClass6_0_1;
    // Nested type: System::Linq::Enumerable::$$c__DisplayClass7_0_3<TSource, TMiddle, TResult>
    template<typename TSource, typename TMiddle, typename TResult>
    class $$c__DisplayClass7_0_3;
    // Nested type: System::Linq::Enumerable::$SelectManyIterator$d__17_2<TSource, TResult>
    template<typename TSource, typename TResult>
    class $SelectManyIterator$d__17_2;
    // Nested type: System::Linq::Enumerable::$TakeIterator$d__25_1<TSource>
    template<typename TSource>
    class $TakeIterator$d__25_1;
    // Nested type: System::Linq::Enumerable::$SkipIterator$d__31_1<TSource>
    template<typename TSource>
    class $SkipIterator$d__31_1;
    // Nested type: System::Linq::Enumerable::$ConcatIterator$d__59_1<TSource>
    template<typename TSource>
    class $ConcatIterator$d__59_1;
    // Nested type: System::Linq::Enumerable::$AppendIterator$d__61_1<TSource>
    template<typename TSource>
    class $AppendIterator$d__61_1;
    // Nested type: System::Linq::Enumerable::$DistinctIterator$d__68_1<TSource>
    template<typename TSource>
    class $DistinctIterator$d__68_1;
    // Nested type: System::Linq::Enumerable::$ExceptIterator$d__77_1<TSource>
    template<typename TSource>
    class $ExceptIterator$d__77_1;
    // Nested type: System::Linq::Enumerable::$ReverseIterator$d__79_1<TSource>
    template<typename TSource>
    class $ReverseIterator$d__79_1;
    // Nested type: System::Linq::Enumerable::$DefaultIfEmptyIterator$d__95_1<TSource>
    template<typename TSource>
    class $DefaultIfEmptyIterator$d__95_1;
    // Nested type: System::Linq::Enumerable::$OfTypeIterator$d__97_1<TResult>
    template<typename TResult>
    class $OfTypeIterator$d__97_1;
    // Nested type: System::Linq::Enumerable::$CastIterator$d__99_1<TResult>
    template<typename TResult>
    class $CastIterator$d__99_1;
    // Nested type: System::Linq::Enumerable::$RepeatIterator$d__117_1<TResult>
    template<typename TResult>
    class $RepeatIterator$d__117_1;
    // static public System.Collections.Generic.IEnumerable`1<TSource> Where(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Boolean> predicate)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* Where(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, bool>* predicate) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Where");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "Where", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, predicate))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, predicate);
    }
    // static public System.Collections.Generic.IEnumerable`1<TResult> Select(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,TResult> selector)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* Select(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, TResult>* selector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Select");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "Select", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(source, selector))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, selector);
    }
    // static private System.Func`2<TSource,System.Boolean> CombinePredicates(System.Func`2<TSource,System.Boolean> predicate1, System.Func`2<TSource,System.Boolean> predicate2)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Func_2<TSource, bool>* CombinePredicates(System::Func_2<TSource, bool>* predicate1, System::Func_2<TSource, bool>* predicate2) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("CombinePredicates");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Func_2<TSource, bool>*>(), "CombinePredicates", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(predicate1, predicate2))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Func_2<TSource, bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, predicate1, predicate2);
    }
    // static private System.Func`2<TSource,TResult> CombineSelectors(System.Func`2<TSource,TMiddle> selector1, System.Func`2<TMiddle,TResult> selector2)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TMiddle, class TResult>
    static System::Func_2<TSource, TResult>* CombineSelectors(System::Func_2<TSource, TMiddle>* selector1, System::Func_2<TMiddle, TResult>* selector2) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("CombineSelectors");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Func_2<TSource, TResult>*>(), "CombineSelectors", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TMiddle>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(selector1, selector2))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TMiddle>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Func_2<TSource, TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, selector1, selector2);
    }
    // static public System.Collections.Generic.IEnumerable`1<TResult> SelectMany(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Collections.Generic.IEnumerable`1<TResult>> selector)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* SelectMany(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, System::Collections::Generic::IEnumerable_1<TResult>*>* selector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("SelectMany");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "SelectMany", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(source, selector))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, selector);
    }
    // static private System.Collections.Generic.IEnumerable`1<TResult> SelectManyIterator(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Collections.Generic.IEnumerable`1<TResult>> selector)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* SelectManyIterator(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, System::Collections::Generic::IEnumerable_1<TResult>*>* selector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("SelectManyIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "SelectManyIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(source, selector))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, selector);
    }
    // static public System.Collections.Generic.IEnumerable`1<TSource> Take(System.Collections.Generic.IEnumerable`1<TSource> source, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* Take(System::Collections::Generic::IEnumerable_1<TSource>* source, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Take");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "Take", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, count))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, count);
    }
    // static private System.Collections.Generic.IEnumerable`1<TSource> TakeIterator(System.Collections.Generic.IEnumerable`1<TSource> source, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* TakeIterator(System::Collections::Generic::IEnumerable_1<TSource>* source, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("TakeIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "TakeIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, count))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, count);
    }
    // static public System.Collections.Generic.IEnumerable`1<TSource> Skip(System.Collections.Generic.IEnumerable`1<TSource> source, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* Skip(System::Collections::Generic::IEnumerable_1<TSource>* source, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Skip");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "Skip", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, count))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, count);
    }
    // static private System.Collections.Generic.IEnumerable`1<TSource> SkipIterator(System.Collections.Generic.IEnumerable`1<TSource> source, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* SkipIterator(System::Collections::Generic::IEnumerable_1<TSource>* source, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("SkipIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "SkipIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, count))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, count);
    }
    // static public System.Linq.IOrderedEnumerable`1<TSource> OrderBy(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,TKey> keySelector)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TKey>
    static System::Linq::IOrderedEnumerable_1<TSource>* OrderBy(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, TKey>* keySelector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("OrderBy");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Linq::IOrderedEnumerable_1<TSource>*>(), "OrderBy", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get()}, ::il2cpp_utils::ExtractTypes(source, keySelector))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Linq::IOrderedEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, keySelector);
    }
    // static public System.Linq.IOrderedEnumerable`1<TSource> OrderByDescending(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,TKey> keySelector)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TKey>
    static System::Linq::IOrderedEnumerable_1<TSource>* OrderByDescending(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, TKey>* keySelector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("OrderByDescending");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Linq::IOrderedEnumerable_1<TSource>*>(), "OrderByDescending", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get()}, ::il2cpp_utils::ExtractTypes(source, keySelector))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Linq::IOrderedEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, keySelector);
    }
    // static public System.Linq.IOrderedEnumerable`1<TSource> ThenBy(System.Linq.IOrderedEnumerable`1<TSource> source, System.Func`2<TSource,TKey> keySelector)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TKey>
    static System::Linq::IOrderedEnumerable_1<TSource>* ThenBy(System::Linq::IOrderedEnumerable_1<TSource>* source, System::Func_2<TSource, TKey>* keySelector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("ThenBy");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Linq::IOrderedEnumerable_1<TSource>*>(), "ThenBy", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get()}, ::il2cpp_utils::ExtractTypes(source, keySelector))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Linq::IOrderedEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, keySelector);
    }
    // static public System.Collections.Generic.IEnumerable`1<System.Linq.IGrouping`2<TKey,TSource>> GroupBy(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,TKey> keySelector)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TKey>
    static System::Collections::Generic::IEnumerable_1<System::Linq::IGrouping_2<TKey, TSource>*>* GroupBy(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, TKey>* keySelector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("GroupBy");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<System::Linq::IGrouping_2<TKey, TSource>*>*>(), "GroupBy", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get()}, ::il2cpp_utils::ExtractTypes(source, keySelector))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Linq::IGrouping_2<TKey, TSource>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, keySelector);
    }
    // static public System.Collections.Generic.IEnumerable`1<TSource> Concat(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* Concat(System::Collections::Generic::IEnumerable_1<TSource>* first, System::Collections::Generic::IEnumerable_1<TSource>* second) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Concat");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "Concat", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(first, second))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second);
    }
    // static private System.Collections.Generic.IEnumerable`1<TSource> ConcatIterator(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* ConcatIterator(System::Collections::Generic::IEnumerable_1<TSource>* first, System::Collections::Generic::IEnumerable_1<TSource>* second) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("ConcatIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "ConcatIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(first, second))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second);
    }
    // static public System.Collections.Generic.IEnumerable`1<TSource> Append(System.Collections.Generic.IEnumerable`1<TSource> source, TSource element)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* Append(System::Collections::Generic::IEnumerable_1<TSource>* source, TSource element) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Append");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "Append", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, element))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, element);
    }
    // static private System.Collections.Generic.IEnumerable`1<TSource> AppendIterator(System.Collections.Generic.IEnumerable`1<TSource> source, TSource element)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* AppendIterator(System::Collections::Generic::IEnumerable_1<TSource>* source, TSource element) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("AppendIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "AppendIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, element))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, element);
    }
    // static public System.Collections.Generic.IEnumerable`1<TSource> Distinct(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* Distinct(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Distinct");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "Distinct", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static private System.Collections.Generic.IEnumerable`1<TSource> DistinctIterator(System.Collections.Generic.IEnumerable`1<TSource> source, System.Collections.Generic.IEqualityComparer`1<TSource> comparer)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* DistinctIterator(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Collections::Generic::IEqualityComparer_1<TSource>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("DistinctIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "DistinctIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, comparer))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, comparer);
    }
    // static public System.Collections.Generic.IEnumerable`1<TSource> Except(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* Except(System::Collections::Generic::IEnumerable_1<TSource>* first, System::Collections::Generic::IEnumerable_1<TSource>* second) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Except");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "Except", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(first, second))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second);
    }
    // static private System.Collections.Generic.IEnumerable`1<TSource> ExceptIterator(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second, System.Collections.Generic.IEqualityComparer`1<TSource> comparer)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* ExceptIterator(System::Collections::Generic::IEnumerable_1<TSource>* first, System::Collections::Generic::IEnumerable_1<TSource>* second, System::Collections::Generic::IEqualityComparer_1<TSource>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("ExceptIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "ExceptIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(first, second, comparer))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second, comparer);
    }
    // static public System.Collections.Generic.IEnumerable`1<TSource> Reverse(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* Reverse(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Reverse");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "Reverse", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static private System.Collections.Generic.IEnumerable`1<TSource> ReverseIterator(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* ReverseIterator(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("ReverseIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "ReverseIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public System.Boolean SequenceEqual(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static bool SequenceEqual(System::Collections::Generic::IEnumerable_1<TSource>* first, System::Collections::Generic::IEnumerable_1<TSource>* second) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("SequenceEqual");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<bool>(), "SequenceEqual", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(first, second))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second);
    }
    // static public System.Boolean SequenceEqual(System.Collections.Generic.IEnumerable`1<TSource> first, System.Collections.Generic.IEnumerable`1<TSource> second, System.Collections.Generic.IEqualityComparer`1<TSource> comparer)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static bool SequenceEqual(System::Collections::Generic::IEnumerable_1<TSource>* first, System::Collections::Generic::IEnumerable_1<TSource>* second, System::Collections::Generic::IEqualityComparer_1<TSource>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("SequenceEqual");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<bool>(), "SequenceEqual", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(first, second, comparer))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second, comparer);
    }
    // static public TSource[] ToArray(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static ::Array<TSource>* ToArray(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("ToArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<::Array<TSource>*>(), "ToArray", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<::Array<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public System.Collections.Generic.List`1<TSource> ToList(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::List_1<TSource>* ToList(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("ToList");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::List_1<TSource>*>(), "ToList", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public System.Collections.Generic.Dictionary`2<TKey,TElement> ToDictionary(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,TKey> keySelector, System.Func`2<TSource,TElement> elementSelector)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TKey, class TElement>
    static System::Collections::Generic::Dictionary_2<TKey, TElement>* ToDictionary(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, TKey>* keySelector, System::Func_2<TSource, TElement>* elementSelector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("ToDictionary");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::Dictionary_2<TKey, TElement>*>(), "ToDictionary", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TElement>::get()}, ::il2cpp_utils::ExtractTypes(source, keySelector, elementSelector))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TElement>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<TKey, TElement>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, keySelector, elementSelector);
    }
    // static public System.Collections.Generic.Dictionary`2<TKey,TElement> ToDictionary(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,TKey> keySelector, System.Func`2<TSource,TElement> elementSelector, System.Collections.Generic.IEqualityComparer`1<TKey> comparer)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TKey, class TElement>
    static System::Collections::Generic::Dictionary_2<TKey, TElement>* ToDictionary(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, TKey>* keySelector, System::Func_2<TSource, TElement>* elementSelector, System::Collections::Generic::IEqualityComparer_1<TKey>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("ToDictionary");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::Dictionary_2<TKey, TElement>*>(), "ToDictionary", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TElement>::get()}, ::il2cpp_utils::ExtractTypes(source, keySelector, elementSelector, comparer))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TElement>::get()})));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<TKey, TElement>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, keySelector, elementSelector, comparer);
    }
    // static public System.Collections.Generic.IEnumerable`1<TSource> DefaultIfEmpty(System.Collections.Generic.IEnumerable`1<TSource> source, TSource defaultValue)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* DefaultIfEmpty(System::Collections::Generic::IEnumerable_1<TSource>* source, TSource defaultValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("DefaultIfEmpty");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "DefaultIfEmpty", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, defaultValue))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, defaultValue);
    }
    // static private System.Collections.Generic.IEnumerable`1<TSource> DefaultIfEmptyIterator(System.Collections.Generic.IEnumerable`1<TSource> source, TSource defaultValue)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static System::Collections::Generic::IEnumerable_1<TSource>* DefaultIfEmptyIterator(System::Collections::Generic::IEnumerable_1<TSource>* source, TSource defaultValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("DefaultIfEmptyIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TSource>*>(), "DefaultIfEmptyIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, defaultValue))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TSource>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, defaultValue);
    }
    // static public System.Collections.Generic.IEnumerable`1<TResult> OfType(System.Collections.IEnumerable source)
    // Offset: 0xFFFFFFFF
    template<class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* OfType(System::Collections::IEnumerable* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("OfType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "OfType", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static private System.Collections.Generic.IEnumerable`1<TResult> OfTypeIterator(System.Collections.IEnumerable source)
    // Offset: 0xFFFFFFFF
    template<class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* OfTypeIterator(System::Collections::IEnumerable* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("OfTypeIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "OfTypeIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public System.Collections.Generic.IEnumerable`1<TResult> Cast(System.Collections.IEnumerable source)
    // Offset: 0xFFFFFFFF
    template<class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* Cast(System::Collections::IEnumerable* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Cast");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "Cast", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static private System.Collections.Generic.IEnumerable`1<TResult> CastIterator(System.Collections.IEnumerable source)
    // Offset: 0xFFFFFFFF
    template<class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* CastIterator(System::Collections::IEnumerable* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("CastIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "CastIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public TSource First(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource First(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("First");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "First", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public TSource First(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Boolean> predicate)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource First(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, bool>* predicate) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("First");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "First", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, predicate))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, predicate);
    }
    // static public TSource FirstOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource FirstOrDefault(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("FirstOrDefault");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "FirstOrDefault", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public TSource FirstOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Boolean> predicate)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource FirstOrDefault(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, bool>* predicate) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("FirstOrDefault");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "FirstOrDefault", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, predicate))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, predicate);
    }
    // static public TSource Last(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource Last(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Last");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "Last", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public TSource LastOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource LastOrDefault(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("LastOrDefault");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "LastOrDefault", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public TSource Single(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource Single(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Single");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "Single", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public TSource SingleOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource SingleOrDefault(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("SingleOrDefault");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "SingleOrDefault", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public TSource SingleOrDefault(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Boolean> predicate)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource SingleOrDefault(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, bool>* predicate) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("SingleOrDefault");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "SingleOrDefault", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, predicate))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, predicate);
    }
    // static public TSource ElementAt(System.Collections.Generic.IEnumerable`1<TSource> source, System.Int32 index)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static TSource ElementAt(System::Collections::Generic::IEnumerable_1<TSource>* source, int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("ElementAt");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TSource>(), "ElementAt", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, index))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<TSource, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, index);
    }
    // static public System.Collections.Generic.IEnumerable`1<TResult> Repeat(TResult element, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* Repeat(TResult element, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Repeat");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "Repeat", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(element, count))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, count);
    }
    // static private System.Collections.Generic.IEnumerable`1<TResult> RepeatIterator(TResult element, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* RepeatIterator(TResult element, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("RepeatIterator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "RepeatIterator", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes(element, count))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element, count);
    }
    // static public System.Collections.Generic.IEnumerable`1<TResult> Empty()
    // Offset: 0xFFFFFFFF
    template<class TResult>
    static System::Collections::Generic::IEnumerable_1<TResult>* Empty() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Empty");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerable_1<TResult>*>(), "Empty", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::il2cpp_utils::ExtractTypes())));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<TResult>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
    }
    // static public System.Boolean Any(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static bool Any(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Any");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<bool>(), "Any", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public System.Boolean Any(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Boolean> predicate)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static bool Any(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, bool>* predicate) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Any");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<bool>(), "Any", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, predicate))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, predicate);
    }
    // static public System.Boolean All(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Boolean> predicate)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static bool All(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, bool>* predicate) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("All");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<bool>(), "All", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, predicate))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, predicate);
    }
    // static public System.Int32 Count(System.Collections.Generic.IEnumerable`1<TSource> source)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static int Count(System::Collections::Generic::IEnumerable_1<TSource>* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Count");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<int>(), "Count", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
    }
    // static public System.Boolean Contains(System.Collections.Generic.IEnumerable`1<TSource> source, TSource value)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static bool Contains(System::Collections::Generic::IEnumerable_1<TSource>* source, TSource value) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Contains");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<bool>(), "Contains", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, value))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, value);
    }
    // static public System.Boolean Contains(System.Collections.Generic.IEnumerable`1<TSource> source, TSource value, System.Collections.Generic.IEqualityComparer`1<TSource> comparer)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static bool Contains(System::Collections::Generic::IEnumerable_1<TSource>* source, TSource value, System::Collections::Generic::IEqualityComparer_1<TSource>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Contains");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<bool>(), "Contains", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, value, comparer))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, value, comparer);
    }
    // static public TAccumulate Aggregate(System.Collections.Generic.IEnumerable`1<TSource> source, TAccumulate seed, System.Func`3<TAccumulate,TSource,TAccumulate> func)
    // Offset: 0xFFFFFFFF
    template<class TSource, class TAccumulate>
    static TAccumulate Aggregate(System::Collections::Generic::IEnumerable_1<TSource>* source, TAccumulate seed, System::Func_3<TAccumulate, TSource, TAccumulate>* func) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Aggregate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<TAccumulate>(), "Aggregate", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TAccumulate>::get()}, ::il2cpp_utils::ExtractTypes(source, seed, func))));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TAccumulate>::get()})));
      return ::il2cpp_utils::RunMethodThrow<TAccumulate, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, seed, func);
    }
    // static public System.Int32 Sum(System.Collections.Generic.IEnumerable`1<System.Int32> source)
    // Offset: 0x19B201C
    static int Sum(System::Collections::Generic::IEnumerable_1<int>* source);
    // static public System.Int32 Sum(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Int32> selector)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static int Sum(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, int>* selector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Sum");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<int>(), "Sum", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, selector))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, selector);
    }
    // static public System.Single Min(System.Collections.Generic.IEnumerable`1<System.Single> source)
    // Offset: 0x19B2320
    static float Min(System::Collections::Generic::IEnumerable_1<float>* source);
    // static public System.Int32 Max(System.Collections.Generic.IEnumerable`1<System.Int32> source)
    // Offset: 0x19B2660
    static int Max(System::Collections::Generic::IEnumerable_1<int>* source);
    // static public System.Single Max(System.Collections.Generic.IEnumerable`1<System.Single> source)
    // Offset: 0x19B290C
    static float Max(System::Collections::Generic::IEnumerable_1<float>* source);
    // static public System.Int32 Max(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource,System.Int32> selector)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static int Max(System::Collections::Generic::IEnumerable_1<TSource>* source, System::Func_2<TSource, int>* selector) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Linq").WithContext("Enumerable").WithContext("Max");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", il2cpp_utils::NoArgClass<int>(), "Max", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, ::il2cpp_utils::ExtractTypes(source, selector))));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}));
      return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, selector);
    }
  }; // System.Linq.Enumerable
}
DEFINE_IL2CPP_ARG_TYPE(System::Linq::Enumerable*, "System.Linq", "Enumerable");
#pragma pack(pop)
