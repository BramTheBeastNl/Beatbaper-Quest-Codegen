// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Type namespace: System
namespace System {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: System.IDisposable
  // [ComVisibleAttribute] Offset: D7A864
  class IDisposable {
    public:
    // Creating value type constructor for type: IDisposable
    IDisposable() noexcept {}
    // public System.Void Dispose()
    // Offset: 0xFFFFFFFF
    void Dispose();
  }; // System.IDisposable
  #pragma pack(pop)
  // Writing MetadataGetter for method: IDisposable::Dispose
  // Il2CppName: Dispose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IDisposable::*)()>(&IDisposable::Dispose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IDisposable*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::IDisposable*, "System", "IDisposable");
