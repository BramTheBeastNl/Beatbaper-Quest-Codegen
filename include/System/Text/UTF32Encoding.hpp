// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: EncoderNLS
  class EncoderNLS;
  // Forward declaring type: DecoderNLS
  class DecoderNLS;
  // Forward declaring type: Decoder
  class Decoder;
  // Forward declaring type: Encoder
  class Encoder;
}
// Completed forward declares
// Type namespace: System.Text
namespace System::Text {
  // Size: 0x3B
  #pragma pack(push, 1)
  // Autogenerated type: System.Text.UTF32Encoding
  class UTF32Encoding : public System::Text::Encoding {
    public:
    // Nested type: System::Text::UTF32Encoding::UTF32Decoder
    class UTF32Decoder;
    // private System.Boolean emitUTF32ByteOrderMark
    // Size: 0x1
    // Offset: 0x38
    bool emitUTF32ByteOrderMark;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean isThrowException
    // Size: 0x1
    // Offset: 0x39
    bool isThrowException;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean bigEndian
    // Size: 0x1
    // Offset: 0x3A
    bool bigEndian;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: UTF32Encoding
    UTF32Encoding(bool emitUTF32ByteOrderMark_ = {}, bool isThrowException_ = {}, bool bigEndian_ = {}) noexcept : emitUTF32ByteOrderMark{emitUTF32ByteOrderMark_}, isThrowException{isThrowException_}, bigEndian{bigEndian_} {}
    // public System.Void .ctor(System.Boolean bigEndian, System.Boolean byteOrderMark)
    // Offset: 0x1CF70EC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UTF32Encoding* New_ctor(bool bigEndian, bool byteOrderMark) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UTF32Encoding*, creationType>(bigEndian, byteOrderMark)));
    }
    // public System.Void .ctor(System.Boolean bigEndian, System.Boolean byteOrderMark, System.Boolean throwOnInvalidCharacters)
    // Offset: 0x1D02C64
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UTF32Encoding* New_ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UTF32Encoding*, creationType>(bigEndian, byteOrderMark, throwOnInvalidCharacters)));
    }
    // private System.UInt32 GetSurrogate(System.Char cHigh, System.Char cLow)
    // Offset: 0x1D04810
    uint GetSurrogate(::Il2CppChar cHigh, ::Il2CppChar cLow);
    // private System.Char GetHighSurrogate(System.UInt32 iChar)
    // Offset: 0x1D04FE0
    ::Il2CppChar GetHighSurrogate(uint iChar);
    // private System.Char GetLowSurrogate(System.UInt32 iChar)
    // Offset: 0x1D04FF4
    ::Il2CppChar GetLowSurrogate(uint iChar);
    // public System.Void .ctor()
    // Offset: 0x1D02C2C
    // Implemented from: System.Text.Encoding
    // Base method: System.Void Encoding::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UTF32Encoding* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Text::UTF32Encoding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UTF32Encoding*, creationType>()));
    }
    // override System.Void SetDefaultFallbacks()
    // Offset: 0x1D02CE4
    // Implemented from: System.Text.Encoding
    // Base method: System.Void Encoding::SetDefaultFallbacks()
    void SetDefaultFallbacks();
    // public override System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)
    // Offset: 0x1D02D9C
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)
    int GetByteCount(::Array<::Il2CppChar>* chars, int index, int count);
    // public override System.Int32 GetByteCount(System.String s)
    // Offset: 0x1D02F70
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetByteCount(System.String s)
    int GetByteCount(::Il2CppString* s);
    // public override System.Int32 GetByteCount(System.Char* chars, System.Int32 count)
    // Offset: 0x1D03020
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetByteCount(System.Char* chars, System.Int32 count)
    int GetByteCount(::Il2CppChar* chars, int count);
    // public override System.Int32 GetBytes(System.String s, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)
    // Offset: 0x1D0313C
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetBytes(System.String s, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)
    int GetBytes(::Il2CppString* s, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex);
    // public override System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)
    // Offset: 0x1D033AC
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)
    int GetBytes(::Array<::Il2CppChar>* chars, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex);
    // public override System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount)
    // Offset: 0x1D0364C
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount)
    int GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount);
    // public override System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    // Offset: 0x1D037B0
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    int GetCharCount(::Array<uint8_t>* bytes, int index, int count);
    // public override System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count)
    // Offset: 0x1D03984
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetCharCount(System.Byte* bytes, System.Int32 count)
    int GetCharCount(uint8_t* bytes, int count);
    // public override System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)
    // Offset: 0x1D03AA0
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)
    int GetChars(::Array<uint8_t>* bytes, int byteIndex, int byteCount, ::Array<::Il2CppChar>* chars, int charIndex);
    // public override System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount)
    // Offset: 0x1D03D40
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount)
    int GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount);
    // public override System.String GetString(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    // Offset: 0x1D03EA4
    // Implemented from: System.Text.Encoding
    // Base method: System.String Encoding::GetString(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    ::Il2CppString* GetString(::Array<uint8_t>* bytes, int index, int count);
    // override System.Int32 GetByteCount(System.Char* chars, System.Int32 count, System.Text.EncoderNLS encoder)
    // Offset: 0x1D0407C
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetByteCount(System.Char* chars, System.Int32 count, System.Text.EncoderNLS encoder)
    int GetByteCount(::Il2CppChar* chars, int count, System::Text::EncoderNLS* encoder);
    // override System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Text.EncoderNLS encoder)
    // Offset: 0x1D043B4
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Text.EncoderNLS encoder)
    int GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, System::Text::EncoderNLS* encoder);
    // override System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Text.DecoderNLS baseDecoder)
    // Offset: 0x1D0482C
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetCharCount(System.Byte* bytes, System.Int32 count, System.Text.DecoderNLS baseDecoder)
    int GetCharCount(uint8_t* bytes, int count, System::Text::DecoderNLS* baseDecoder);
    // override System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Text.DecoderNLS baseDecoder)
    // Offset: 0x1D04BB4
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Text.DecoderNLS baseDecoder)
    int GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, System::Text::DecoderNLS* baseDecoder);
    // public override System.Text.Decoder GetDecoder()
    // Offset: 0x1D05000
    // Implemented from: System.Text.Encoding
    // Base method: System.Text.Decoder Encoding::GetDecoder()
    System::Text::Decoder* GetDecoder();
    // public override System.Text.Encoder GetEncoder()
    // Offset: 0x1D0506C
    // Implemented from: System.Text.Encoding
    // Base method: System.Text.Encoder Encoding::GetEncoder()
    System::Text::Encoder* GetEncoder();
    // public override System.Int32 GetMaxByteCount(System.Int32 charCount)
    // Offset: 0x1D050CC
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetMaxByteCount(System.Int32 charCount)
    int GetMaxByteCount(int charCount);
    // public override System.Int32 GetMaxCharCount(System.Int32 byteCount)
    // Offset: 0x1D051D8
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetMaxCharCount(System.Int32 byteCount)
    int GetMaxCharCount(int byteCount);
    // public override System.Byte[] GetPreamble()
    // Offset: 0x1D052D4
    // Implemented from: System.Text.Encoding
    // Base method: System.Byte[] Encoding::GetPreamble()
    ::Array<uint8_t>* GetPreamble();
    // public override System.Boolean Equals(System.Object value)
    // Offset: 0x1D053C0
    // Implemented from: System.Text.Encoding
    // Base method: System.Boolean Encoding::Equals(System.Object value)
    bool Equals(::Il2CppObject* value);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1D054B8
    // Implemented from: System.Text.Encoding
    // Base method: System.Int32 Encoding::GetHashCode()
    int GetHashCode();
  }; // System.Text.UTF32Encoding
  #pragma pack(pop)
  static check_size<sizeof(UTF32Encoding), 58 + sizeof(bool)> __System_Text_UTF32EncodingSizeCheck;
  static_assert(sizeof(UTF32Encoding) == 0x3B);
}
DEFINE_IL2CPP_ARG_TYPE(System::Text::UTF32Encoding*, "System.Text", "UTF32Encoding");
// Writing MetadataGetter for method: System::Text::UTF32Encoding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetSurrogate
// Il2CppName: GetSurrogate
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetHighSurrogate
// Il2CppName: GetHighSurrogate
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetLowSurrogate
// Il2CppName: GetLowSurrogate
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::SetDefaultFallbacks
// Il2CppName: SetDefaultFallbacks
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetByteCount
// Il2CppName: GetByteCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetByteCount
// Il2CppName: GetByteCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetByteCount
// Il2CppName: GetByteCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetBytes
// Il2CppName: GetBytes
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetBytes
// Il2CppName: GetBytes
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetBytes
// Il2CppName: GetBytes
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetCharCount
// Il2CppName: GetCharCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetCharCount
// Il2CppName: GetCharCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetChars
// Il2CppName: GetChars
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetChars
// Il2CppName: GetChars
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetString
// Il2CppName: GetString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetByteCount
// Il2CppName: GetByteCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetBytes
// Il2CppName: GetBytes
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetCharCount
// Il2CppName: GetCharCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetChars
// Il2CppName: GetChars
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetDecoder
// Il2CppName: GetDecoder
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetEncoder
// Il2CppName: GetEncoder
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetMaxByteCount
// Il2CppName: GetMaxByteCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetMaxCharCount
// Il2CppName: GetMaxCharCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetPreamble
// Il2CppName: GetPreamble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::Equals
// Il2CppName: Equals
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Text::UTF32Encoding::GetHashCode
// Il2CppName: GetHashCode
// Cannot perform method pointer template specialization from operators!
