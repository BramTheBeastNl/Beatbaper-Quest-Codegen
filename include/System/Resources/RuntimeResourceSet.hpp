// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.ResourceSet
#include "System/Resources/ResourceSet.hpp"
// Including type: System.Resources.ResourceLocator
#include "System/Resources/ResourceLocator.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Resources
namespace System::Resources {
  // Forward declaring type: ResourceReader
  class ResourceReader;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IDictionaryEnumerator
  class IDictionaryEnumerator;
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Resources
namespace System::Resources {
  // Autogenerated type: System.Resources.RuntimeResourceSet
  class RuntimeResourceSet : public System::Resources::ResourceSet, public System::Collections::IEnumerable {
    public:
    // static field const value: static System.Int32 Version
    static constexpr const int Version = 2;
    // Get static field: static System.Int32 Version
    static int _get_Version();
    // Set static field: static System.Int32 Version
    static void _set_Version(int value);
    // private System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceLocator> _resCache
    // Offset: 0x28
    System::Collections::Generic::Dictionary_2<::CsString*, System::Resources::ResourceLocator>* resCache;
    // private System.Resources.ResourceReader _defaultReader
    // Offset: 0x30
    System::Resources::ResourceReader* defaultReader;
    // private System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceLocator> _caseInsensitiveTable
    // Offset: 0x38
    System::Collections::Generic::Dictionary_2<::CsString*, System::Resources::ResourceLocator>* caseInsensitiveTable;
    // private System.Boolean _haveReadFromReader
    // Offset: 0x40
    bool haveReadFromReader;
    // System.Void .ctor(System.String fileName)
    // Offset: 0x1155248
    static RuntimeResourceSet* New_ctor(::CsString* fileName);
    // System.Void .ctor(System.IO.Stream stream)
    // Offset: 0x1156F74
    static RuntimeResourceSet* New_ctor(System::IO::Stream* stream);
    // private System.Object GetObject(System.String key, System.Boolean ignoreCase, System.Boolean isString)
    // Offset: 0x115F11C
    ::CsObject* GetObject(::CsString* key, bool ignoreCase, bool isString);
    // private System.Object ResolveResourceLocator(System.Resources.ResourceLocator resLocation, System.String key, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceLocator> copyOfCache, System.Boolean keyInWrongCase)
    // Offset: 0x115FB24
    ::CsObject* ResolveResourceLocator(System::Resources::ResourceLocator resLocation, ::CsString* key, System::Collections::Generic::Dictionary_2<::CsString*, System::Resources::ResourceLocator>* copyOfCache, bool keyInWrongCase);
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x115EE40
    // Implemented from: System.Resources.ResourceSet
    // Base method: System.Void ResourceSet::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
    // public override System.Collections.IDictionaryEnumerator GetEnumerator()
    // Offset: 0x115EF80
    // Implemented from: System.Resources.ResourceSet
    // Base method: System.Collections.IDictionaryEnumerator ResourceSet::GetEnumerator()
    System::Collections::IDictionaryEnumerator* GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x115F098
    // Implemented from: System.Collections.IEnumerable
    // Base method: System.Collections.IEnumerator IEnumerable::GetEnumerator()
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // private System.Collections.IDictionaryEnumerator GetEnumeratorHelper()
    // Offset: 0x115EF84
    // Implemented from: System.Resources.ResourceSet
    // Base method: System.Collections.IDictionaryEnumerator ResourceSet::GetEnumeratorHelper()
    System::Collections::IDictionaryEnumerator* GetEnumeratorHelper();
    // public override System.String GetString(System.String key)
    // Offset: 0x115F09C
    // Implemented from: System.Resources.ResourceSet
    // Base method: System.String ResourceSet::GetString(System.String key)
    ::CsString* GetString(::CsString* key);
    // public override System.String GetString(System.String key, System.Boolean ignoreCase)
    // Offset: 0x115FA88
    // Implemented from: System.Resources.ResourceSet
    // Base method: System.String ResourceSet::GetString(System.String key, System.Boolean ignoreCase)
    ::CsString* GetString(::CsString* key, bool ignoreCase);
    // public override System.Object GetObject(System.String key)
    // Offset: 0x115FB0C
    // Implemented from: System.Resources.ResourceSet
    // Base method: System.Object ResourceSet::GetObject(System.String key)
    ::CsObject* GetObject(::CsString* key);
    // public override System.Object GetObject(System.String key, System.Boolean ignoreCase)
    // Offset: 0x115FB18
    // Implemented from: System.Resources.ResourceSet
    // Base method: System.Object ResourceSet::GetObject(System.String key, System.Boolean ignoreCase)
    ::CsObject* GetObject(::CsString* key, bool ignoreCase);
  }; // System.Resources.RuntimeResourceSet
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Resources::RuntimeResourceSet*, "System.Resources", "RuntimeResourceSet");
#pragma pack(pop)
