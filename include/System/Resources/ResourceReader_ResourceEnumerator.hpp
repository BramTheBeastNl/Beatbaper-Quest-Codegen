// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Resources.ResourceReader
#include "System/Resources/ResourceReader.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: DictionaryEntry
  struct DictionaryEntry;
}
// Completed forward declares
// Type namespace: System.Resources
namespace System::Resources {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: System.Resources.ResourceReader/ResourceEnumerator
  class ResourceReader::ResourceEnumerator : public ::Il2CppObject/*, public System::Collections::IDictionaryEnumerator*/ {
    public:
    // private System.Resources.ResourceReader _reader
    // Size: 0x8
    // Offset: 0x10
    System::Resources::ResourceReader* reader;
    // Field size check
    static_assert(sizeof(System::Resources::ResourceReader*) == 0x8);
    // private System.Boolean _currentIsValid
    // Size: 0x1
    // Offset: 0x18
    bool currentIsValid;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: currentIsValid and: currentName
    char __padding1[0x3] = {};
    // private System.Int32 _currentName
    // Size: 0x4
    // Offset: 0x1C
    int currentName;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _dataPosition
    // Size: 0x4
    // Offset: 0x20
    int dataPosition;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: ResourceEnumerator
    ResourceEnumerator(System::Resources::ResourceReader* reader_ = {}, bool currentIsValid_ = {}, int currentName_ = {}, int dataPosition_ = {}) noexcept : reader{reader_}, currentIsValid{currentIsValid_}, currentName{currentName_}, dataPosition{dataPosition_} {}
    // Creating interface conversion operator: operator System::Collections::IDictionaryEnumerator
    operator System::Collections::IDictionaryEnumerator() noexcept {
      return *reinterpret_cast<System::Collections::IDictionaryEnumerator*>(this);
    }
    // System.Void .ctor(System.Resources.ResourceReader reader)
    // Offset: 0x1415F04
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ResourceReader::ResourceEnumerator* New_ctor(System::Resources::ResourceReader* reader) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::ResourceReader::ResourceEnumerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ResourceReader::ResourceEnumerator*, creationType>(reader)));
    }
    // public System.Boolean MoveNext()
    // Offset: 0x14190B8
    bool MoveNext();
    // public System.Object get_Key()
    // Offset: 0x1419114
    ::Il2CppObject* get_Key();
    // public System.Object get_Current()
    // Offset: 0x14191EC
    ::Il2CppObject* get_Current();
    // System.Int32 get_DataPosition()
    // Offset: 0x14194FC
    int get_DataPosition();
    // public System.Collections.DictionaryEntry get_Entry()
    // Offset: 0x1419258
    System::Collections::DictionaryEntry get_Entry();
    // public System.Object get_Value()
    // Offset: 0x1419504
    ::Il2CppObject* get_Value();
    // public System.Void Reset()
    // Offset: 0x14195D8
    void Reset();
  }; // System.Resources.ResourceReader/ResourceEnumerator
  #pragma pack(pop)
  static check_size<sizeof(ResourceReader::ResourceEnumerator), 32 + sizeof(int)> __System_Resources_ResourceReader_ResourceEnumeratorSizeCheck;
  static_assert(sizeof(ResourceReader::ResourceEnumerator) == 0x24);
}
DEFINE_IL2CPP_ARG_TYPE(System::Resources::ResourceReader::ResourceEnumerator*, "System.Resources", "ResourceReader/ResourceEnumerator");
// Writing MetadataGetter for method: System::Resources::ResourceReader::ResourceEnumerator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Resources::ResourceReader::ResourceEnumerator::MoveNext
// Il2CppName: MoveNext
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Resources::ResourceReader::ResourceEnumerator::get_Key
// Il2CppName: get_Key
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Resources::ResourceReader::ResourceEnumerator::get_Current
// Il2CppName: get_Current
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Resources::ResourceReader::ResourceEnumerator::get_DataPosition
// Il2CppName: get_DataPosition
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Resources::ResourceReader::ResourceEnumerator::get_Entry
// Il2CppName: get_Entry
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Resources::ResourceReader::ResourceEnumerator::get_Value
// Il2CppName: get_Value
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Resources::ResourceReader::ResourceEnumerator::Reset
// Il2CppName: Reset
// Cannot perform method pointer template specialization from operators!
