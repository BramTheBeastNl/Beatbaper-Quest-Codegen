// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Diagnostics
namespace System::Diagnostics {
  // Forward declaring type: StackFrame
  class StackFrame;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodBase
  class MethodBase;
}
// Completed forward declares
// Type namespace: System.Diagnostics
namespace System::Diagnostics {
  // Autogenerated type: System.Diagnostics.StackTrace
  class StackTrace : public ::CsObject {
    public:
    // Nested type: System::Diagnostics::StackTrace::TraceFormat
    struct TraceFormat;
    // static field const value: static public System.Int32 METHODS_TO_SKIP
    static constexpr const int METHODS_TO_SKIP = 0;
    // Get static field: static public System.Int32 METHODS_TO_SKIP
    static int _get_METHODS_TO_SKIP();
    // Set static field: static public System.Int32 METHODS_TO_SKIP
    static void _set_METHODS_TO_SKIP(int value);
    // private System.Diagnostics.StackFrame[] frames
    // Offset: 0x10
    ::Array<System::Diagnostics::StackFrame*>* frames;
    // private readonly System.Diagnostics.StackTrace[] captured_traces
    // Offset: 0x18
    ::Array<System::Diagnostics::StackTrace*>* captured_traces;
    // private System.Boolean debug_info
    // Offset: 0x20
    bool debug_info;
    // Get static field: static private System.Boolean isAotidSet
    static bool _get_isAotidSet();
    // Set static field: static private System.Boolean isAotidSet
    static void _set_isAotidSet(bool value);
    // Get static field: static private System.String aotid
    static ::CsString* _get_aotid();
    // Set static field: static private System.String aotid
    static void _set_aotid(::CsString* value);
    // public System.Void .ctor(System.Boolean fNeedFileInfo)
    // Offset: 0xC92660
    static StackTrace* New_ctor(bool fNeedFileInfo);
    // public System.Void .ctor(System.Int32 skipFrames, System.Boolean fNeedFileInfo)
    // Offset: 0xC92694
    static StackTrace* New_ctor(int skipFrames, bool fNeedFileInfo);
    // private System.Void init_frames(System.Int32 skipFrames, System.Boolean fNeedFileInfo)
    // Offset: 0xC924C4
    void init_frames(int skipFrames, bool fNeedFileInfo);
    // static private System.Diagnostics.StackFrame[] get_trace(System.Exception e, System.Int32 skipFrames, System.Boolean fNeedFileInfo)
    // Offset: 0xC926D4
    static ::Array<System::Diagnostics::StackFrame*>* get_trace(System::Exception* e, int skipFrames, bool fNeedFileInfo);
    // public System.Void .ctor(System.Exception e, System.Boolean fNeedFileInfo)
    // Offset: 0xC926DC
    static StackTrace* New_ctor(System::Exception* e, bool fNeedFileInfo);
    // public System.Void .ctor(System.Exception e, System.Int32 skipFrames, System.Boolean fNeedFileInfo)
    // Offset: 0xC926E8
    static StackTrace* New_ctor(System::Exception* e, int skipFrames, bool fNeedFileInfo);
    // public System.Int32 get_FrameCount()
    // Offset: 0xC927F8
    int get_FrameCount();
    // public System.Diagnostics.StackFrame GetFrame(System.Int32 index)
    // Offset: 0xC92810
    System::Diagnostics::StackFrame* GetFrame(int index);
    // static private System.String GetAotId()
    // Offset: 0xC9287C
    static ::CsString* GetAotId();
    // private System.Boolean AddFrames(System.Text.StringBuilder sb)
    // Offset: 0xC92970
    bool AddFrames(System::Text::StringBuilder* sb);
    // System.Void GetFullNameForStackTrace(System.Text.StringBuilder sb, System.Reflection.MethodBase mi)
    // Offset: 0xC92DFC
    void GetFullNameForStackTrace(System::Text::StringBuilder* sb, System::Reflection::MethodBase* mi);
    // System.String ToString(System.Diagnostics.StackTrace/TraceFormat traceFormat)
    // Offset: 0xC93340
    ::CsString* ToString(System::Diagnostics::StackTrace::TraceFormat traceFormat);
    // public System.Void .ctor()
    // Offset: 0xC92494
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static StackTrace* New_ctor();
    // public override System.String ToString()
    // Offset: 0xC93214
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::CsString* ToString();
  }; // System.Diagnostics.StackTrace
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::StackTrace*, "System.Diagnostics", "StackTrace");
#pragma pack(pop)
