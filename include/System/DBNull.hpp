// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
// Including type: System.IConvertible
#include "System/IConvertible.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
  // Forward declaring type: TypeCode
  struct TypeCode;
  // Forward declaring type: Decimal
  struct Decimal;
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.DBNull
  // [ComVisibleAttribute] Offset: D7A558
  class DBNull : public ::Il2CppObject/*, public System::Runtime::Serialization::ISerializable, public System::IConvertible*/ {
    public:
    // Creating value type constructor for type: DBNull
    DBNull() noexcept {}
    // Creating interface conversion operator: operator System::Runtime::Serialization::ISerializable
    operator System::Runtime::Serialization::ISerializable() noexcept {
      return *reinterpret_cast<System::Runtime::Serialization::ISerializable*>(this);
    }
    // Creating interface conversion operator: operator System::IConvertible
    operator System::IConvertible() noexcept {
      return *reinterpret_cast<System::IConvertible*>(this);
    }
    // Get static field: static public readonly System.DBNull Value
    static System::DBNull* _get_Value();
    // Set static field: static public readonly System.DBNull Value
    static void _set_Value(System::DBNull* value);
    // private System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1984F50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DBNull* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::DBNull::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DBNull*, creationType>(info, context)));
    }
    // public System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1984FE0
    void GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // public System.String ToString(System.IFormatProvider provider)
    // Offset: 0x1985048
    ::Il2CppString* ToString(System::IFormatProvider* provider);
    // public System.TypeCode GetTypeCode()
    // Offset: 0x1985098
    System::TypeCode GetTypeCode();
    // private System.Boolean System.IConvertible.ToBoolean(System.IFormatProvider provider)
    // Offset: 0x19850A0
    bool System_IConvertible_ToBoolean(System::IFormatProvider* provider);
    // private System.Char System.IConvertible.ToChar(System.IFormatProvider provider)
    // Offset: 0x1985120
    ::Il2CppChar System_IConvertible_ToChar(System::IFormatProvider* provider);
    // private System.SByte System.IConvertible.ToSByte(System.IFormatProvider provider)
    // Offset: 0x19851A0
    int8_t System_IConvertible_ToSByte(System::IFormatProvider* provider);
    // private System.Byte System.IConvertible.ToByte(System.IFormatProvider provider)
    // Offset: 0x1985220
    uint8_t System_IConvertible_ToByte(System::IFormatProvider* provider);
    // private System.Int16 System.IConvertible.ToInt16(System.IFormatProvider provider)
    // Offset: 0x19852A0
    int16_t System_IConvertible_ToInt16(System::IFormatProvider* provider);
    // private System.UInt16 System.IConvertible.ToUInt16(System.IFormatProvider provider)
    // Offset: 0x1985320
    uint16_t System_IConvertible_ToUInt16(System::IFormatProvider* provider);
    // private System.Int32 System.IConvertible.ToInt32(System.IFormatProvider provider)
    // Offset: 0x19853A0
    int System_IConvertible_ToInt32(System::IFormatProvider* provider);
    // private System.UInt32 System.IConvertible.ToUInt32(System.IFormatProvider provider)
    // Offset: 0x1985420
    uint System_IConvertible_ToUInt32(System::IFormatProvider* provider);
    // private System.Int64 System.IConvertible.ToInt64(System.IFormatProvider provider)
    // Offset: 0x19854A0
    int64_t System_IConvertible_ToInt64(System::IFormatProvider* provider);
    // private System.UInt64 System.IConvertible.ToUInt64(System.IFormatProvider provider)
    // Offset: 0x1985520
    uint64_t System_IConvertible_ToUInt64(System::IFormatProvider* provider);
    // private System.Single System.IConvertible.ToSingle(System.IFormatProvider provider)
    // Offset: 0x19855A0
    float System_IConvertible_ToSingle(System::IFormatProvider* provider);
    // private System.Double System.IConvertible.ToDouble(System.IFormatProvider provider)
    // Offset: 0x1985620
    double System_IConvertible_ToDouble(System::IFormatProvider* provider);
    // private System.Decimal System.IConvertible.ToDecimal(System.IFormatProvider provider)
    // Offset: 0x19856A0
    System::Decimal System_IConvertible_ToDecimal(System::IFormatProvider* provider);
    // private System.DateTime System.IConvertible.ToDateTime(System.IFormatProvider provider)
    // Offset: 0x1985720
    System::DateTime System_IConvertible_ToDateTime(System::IFormatProvider* provider);
    // private System.Object System.IConvertible.ToType(System.Type type, System.IFormatProvider provider)
    // Offset: 0x19857A0
    ::Il2CppObject* System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider);
    // static private System.Void .cctor()
    // Offset: 0x198581C
    static void _cctor();
    // private System.Void .ctor()
    // Offset: 0x1984F48
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DBNull* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::DBNull::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DBNull*, creationType>()));
    }
    // public override System.String ToString()
    // Offset: 0x1984FF8
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // System.DBNull
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::DBNull*, "System", "DBNull");
// Writing MetadataGetter for method: System::DBNull::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::DBNull::GetObjectData
// Il2CppName: GetObjectData
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::GetTypeCode
// Il2CppName: GetTypeCode
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToBoolean
// Il2CppName: System.IConvertible.ToBoolean
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToChar
// Il2CppName: System.IConvertible.ToChar
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToSByte
// Il2CppName: System.IConvertible.ToSByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToByte
// Il2CppName: System.IConvertible.ToByte
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToInt16
// Il2CppName: System.IConvertible.ToInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToUInt16
// Il2CppName: System.IConvertible.ToUInt16
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToInt32
// Il2CppName: System.IConvertible.ToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToUInt32
// Il2CppName: System.IConvertible.ToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToInt64
// Il2CppName: System.IConvertible.ToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToUInt64
// Il2CppName: System.IConvertible.ToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToSingle
// Il2CppName: System.IConvertible.ToSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToDouble
// Il2CppName: System.IConvertible.ToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToDecimal
// Il2CppName: System.IConvertible.ToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToDateTime
// Il2CppName: System.IConvertible.ToDateTime
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::System_IConvertible_ToType
// Il2CppName: System.IConvertible.ToType
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::_cctor
// Il2CppName: .cctor
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::DBNull::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::DBNull::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
