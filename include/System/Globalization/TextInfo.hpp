// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Including type: System.Runtime.Serialization.IDeserializationCallback
#include "System/Runtime/Serialization/IDeserializationCallback.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureData
  class CultureData;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: StreamingContext
  struct StreamingContext;
}
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // Autogenerated type: System.Globalization.TextInfo
  class TextInfo : public ::CsObject, public System::ICloneable, public System::Runtime::Serialization::IDeserializationCallback {
    public:
    // private System.String m_listSeparator
    // Offset: 0x10
    ::CsString* m_listSeparator;
    // private System.Boolean m_isReadOnly
    // Offset: 0x18
    bool m_isReadOnly;
    // private System.String m_cultureName
    // Offset: 0x20
    ::CsString* m_cultureName;
    // private System.Globalization.CultureData m_cultureData
    // Offset: 0x28
    System::Globalization::CultureData* m_cultureData;
    // private System.String m_textInfoName
    // Offset: 0x30
    ::CsString* m_textInfoName;
    // private System.Nullable`1<System.Boolean> m_IsAsciiCasingSameAsInvariant
    // Offset: 0x38
    System::Nullable_1<bool> m_IsAsciiCasingSameAsInvariant;
    // Get static field: static System.Globalization.TextInfo s_Invariant
    static System::Globalization::TextInfo* _get_s_Invariant();
    // Set static field: static System.Globalization.TextInfo s_Invariant
    static void _set_s_Invariant(System::Globalization::TextInfo* value);
    // private System.String customCultureName
    // Offset: 0x40
    ::CsString* customCultureName;
    // System.Int32 m_nDataItem
    // Offset: 0x48
    int m_nDataItem;
    // System.Boolean m_useUserOverride
    // Offset: 0x4C
    bool m_useUserOverride;
    // System.Int32 m_win32LangID
    // Offset: 0x50
    int m_win32LangID;
    // static field const value: static private System.Int32 wordSeparatorMask
    static constexpr const int wordSeparatorMask = 536672256;
    // Get static field: static private System.Int32 wordSeparatorMask
    static int _get_wordSeparatorMask();
    // Set static field: static private System.Int32 wordSeparatorMask
    static void _set_wordSeparatorMask(int value);
    // static System.Globalization.TextInfo get_Invariant()
    // Offset: 0x110FBEC
    static System::Globalization::TextInfo* get_Invariant();
    // System.Void .ctor(System.Globalization.CultureData cultureData)
    // Offset: 0x110FC9C
    static TextInfo* New_ctor(System::Globalization::CultureData* cultureData);
    // private System.Void OnDeserializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x110FD14
    void OnDeserializing(System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnDeserialized()
    // Offset: 0x110FD48
    void OnDeserialized();
    // private System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x110FE7C
    void OnDeserialized(System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnSerializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x110FE80
    void OnSerializing(System::Runtime::Serialization::StreamingContext ctx);
    // static System.Int32 GetHashCodeOrdinalIgnoreCase(System.String s)
    // Offset: 0x110FF1C
    static int GetHashCodeOrdinalIgnoreCase(::CsString* s);
    // static System.Int32 GetHashCodeOrdinalIgnoreCase(System.String s, System.Boolean forceRandomizedHashing, System.Int64 additionalEntropy)
    // Offset: 0x110FF28
    static int GetHashCodeOrdinalIgnoreCase(::CsString* s, bool forceRandomizedHashing, int64_t additionalEntropy);
    // static System.Int32 CompareOrdinalIgnoreCase(System.String str1, System.String str2)
    // Offset: 0x1110054
    static int CompareOrdinalIgnoreCase(::CsString* str1, ::CsString* str2);
    // static System.Int32 CompareOrdinalIgnoreCaseEx(System.String strA, System.Int32 indexA, System.String strB, System.Int32 indexB, System.Int32 lengthA, System.Int32 lengthB)
    // Offset: 0x1110248
    static int CompareOrdinalIgnoreCaseEx(::CsString* strA, int indexA, ::CsString* strB, int indexB, int lengthA, int lengthB);
    // static System.Int32 IndexOfStringOrdinalIgnoreCase(System.String source, System.String value, System.Int32 startIndex, System.Int32 count)
    // Offset: 0x111024C
    static int IndexOfStringOrdinalIgnoreCase(::CsString* source, ::CsString* value, int startIndex, int count);
    // static System.Int32 LastIndexOfStringOrdinalIgnoreCase(System.String source, System.String value, System.Int32 startIndex, System.Int32 count)
    // Offset: 0x11102F4
    static int LastIndexOfStringOrdinalIgnoreCase(::CsString* source, ::CsString* value, int startIndex, int count);
    // public System.String get_CultureName()
    // Offset: 0x1110388
    ::CsString* get_CultureName();
    // System.Void SetReadOnlyState(System.Boolean readOnly)
    // Offset: 0x1110420
    void SetReadOnlyState(bool readOnly);
    // public System.Char ToLower(System.Char c)
    // Offset: 0x111042C
    ::Il2CppChar ToLower(::Il2CppChar c);
    // public System.String ToLower(System.String str)
    // Offset: 0x1110A88
    ::CsString* ToLower(::CsString* str);
    // static private System.Char ToLowerAsciiInvariant(System.Char c)
    // Offset: 0x1110588
    static ::Il2CppChar ToLowerAsciiInvariant(::Il2CppChar c);
    // public System.Char ToUpper(System.Char c)
    // Offset: 0x1110C08
    ::Il2CppChar ToUpper(::Il2CppChar c);
    // public System.String ToUpper(System.String str)
    // Offset: 0x111117C
    ::CsString* ToUpper(::CsString* str);
    // static private System.Char ToUpperAsciiInvariant(System.Char c)
    // Offset: 0x1110C70
    static ::Il2CppChar ToUpperAsciiInvariant(::Il2CppChar c);
    // static private System.Boolean IsAscii(System.Char c)
    // Offset: 0x1110494
    static bool IsAscii(::Il2CppChar c);
    // private System.Boolean get_IsAsciiCasingSameAsInvariant()
    // Offset: 0x11104A4
    bool get_IsAsciiCasingSameAsInvariant();
    // System.Int32 GetCaseInsensitiveHashCode(System.String str)
    // Offset: 0x1111434
    int GetCaseInsensitiveHashCode(::CsString* str);
    // System.Int32 GetCaseInsensitiveHashCode(System.String str, System.Boolean forceRandomizedHashing, System.Int64 additionalEntropy)
    // Offset: 0x110FF58
    int GetCaseInsensitiveHashCode(::CsString* str, bool forceRandomizedHashing, int64_t additionalEntropy);
    // private System.Int32 GetInvariantCaseInsensitiveHashCode(System.String str)
    // Offset: 0x111143C
    int GetInvariantCaseInsensitiveHashCode(::CsString* str);
    // private System.String ToUpperInternal(System.String str)
    // Offset: 0x1111210
    ::CsString* ToUpperInternal(::CsString* str);
    // private System.String ToLowerInternal(System.String str)
    // Offset: 0x1110B1C
    ::CsString* ToLowerInternal(::CsString* str);
    // private System.Char ToUpperInternal(System.Char c)
    // Offset: 0x1110C8C
    ::Il2CppChar ToUpperInternal(::Il2CppChar c);
    // private System.Char ToLowerInternal(System.Char c)
    // Offset: 0x11105A4
    ::Il2CppChar ToLowerInternal(::Il2CppChar c);
    // static private System.Int32 InternalCompareStringOrdinalIgnoreCase(System.String strA, System.Int32 indexA, System.String strB, System.Int32 indexB, System.Int32 lenA, System.Int32 lenB)
    // Offset: 0x1110084
    static int InternalCompareStringOrdinalIgnoreCase(::CsString* strA, int indexA, ::CsString* strB, int indexB, int lenA, int lenB);
    // public System.Object Clone()
    // Offset: 0x1110390
    // Implemented from: System.ICloneable
    // Base method: System.Object ICloneable::Clone()
    ::CsObject* Clone();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x11112FC
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::CsObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x11113B0
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x11113D0
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::CsString* ToString();
    // private System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)
    // Offset: 0x1111430
    // Implemented from: System.Runtime.Serialization.IDeserializationCallback
    // Base method: System.Void IDeserializationCallback::OnDeserialization(System.Object sender)
    void System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::CsObject* sender);
    // System.Void .ctor()
    // Offset: 0x1111584
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static TextInfo* New_ctor();
  }; // System.Globalization.TextInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Globalization::TextInfo*, "System.Globalization", "TextInfo");
#pragma pack(pop)
