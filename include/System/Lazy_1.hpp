// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.LazyThreadSafetyMode
#include "System/Threading/LazyThreadSafetyMode.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: Boxed because it is already included!
  // Skipping declaration: LazyInternalExceptionHolder because it is already included!
  // Skipping declaration: <>c because it is already included!
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Runtime::ExceptionServices
namespace System::Runtime::ExceptionServices {
  // Forward declaring type: ExceptionDispatchInfo
  class ExceptionDispatchInfo;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.Lazy`1
  template<typename T>
  class Lazy_1 : public ::Il2CppObject {
    public:
    // Nested type: System::Lazy_1::Boxed<T>
    class Boxed;
    // Nested type: System::Lazy_1::LazyInternalExceptionHolder<T>
    class LazyInternalExceptionHolder;
    // Nested type: System::Lazy_1::$$c<T>
    class $$c;
    // Autogenerated type: System.Lazy`1/Boxed
    class Boxed : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = Lazy_1<T>*;
      static constexpr std::string_view NESTED_NAME = "Boxed";
      // T m_value
      // Offset: 0x0
      T m_value;
      // System.Void .ctor(T value)
      // Offset: 0xFFFFFFFF
      static typename Lazy_1<T>::Boxed* New_ctor(T value) {
        static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Boxed").WithContext(".ctor");
        return THROW_UNLESS(::il2cpp_utils::New<typename Lazy_1<T>::Boxed*>(value));
      }
    }; // System.Lazy`1/Boxed
    // Could not write size check! Type: System.Lazy`1/Boxed is generic!
    // Autogenerated type: System.Lazy`1/LazyInternalExceptionHolder
    class LazyInternalExceptionHolder : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = Lazy_1<T>*;
      static constexpr std::string_view NESTED_NAME = "LazyInternalExceptionHolder";
      // System.Runtime.ExceptionServices.ExceptionDispatchInfo m_edi
      // Offset: 0x0
      System::Runtime::ExceptionServices::ExceptionDispatchInfo* m_edi;
      // Creating conversion operator: operator System::Runtime::ExceptionServices::ExceptionDispatchInfo*
      constexpr operator System::Runtime::ExceptionServices::ExceptionDispatchInfo*() const noexcept {
        return m_edi;
      }
      // System.Void .ctor(System.Exception ex)
      // Offset: 0xFFFFFFFF
      static typename Lazy_1<T>::LazyInternalExceptionHolder* New_ctor(System::Exception* ex) {
        static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("LazyInternalExceptionHolder").WithContext(".ctor");
        return THROW_UNLESS(::il2cpp_utils::New<typename Lazy_1<T>::LazyInternalExceptionHolder*>(ex));
      }
    }; // System.Lazy`1/LazyInternalExceptionHolder
    // Could not write size check! Type: System.Lazy`1/LazyInternalExceptionHolder is generic!
    // Autogenerated type: System.Lazy`1/<>c
    class $$c : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = Lazy_1<T>*;
      static constexpr std::string_view NESTED_NAME = "$$c";
      // Autogenerated static field getter
      // Get static field: static public readonly System.Lazy`1/<>c<T> <>9
      static typename System::Lazy_1<T>::$$c* _get_$$9() {
        static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("$$c").WithContext("_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename System::Lazy_1<T>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Lazy_1<T>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly System.Lazy`1/<>c<T> <>9
      static void _set_$$9(typename System::Lazy_1<T>::$$c* value) {
        static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("$$c").WithContext("_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Lazy_1<T>::$$c*>::get(), "<>9", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("$$c").WithContext(".cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Lazy_1<T>::$$c*>::get(), il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes())));
        ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
      }
      // T <.cctor>b__27_0()
      // Offset: 0xFFFFFFFF
      T $_cctor$b__27_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("$$c").WithContext("<.cctor>b__27_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<T>(), "<.cctor>b__27_0", {}, ::il2cpp_utils::ExtractTypes())));
        return ::il2cpp_utils::RunMethodThrow<T, false>(this, ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      static typename Lazy_1<T>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("$$c").WithContext(".ctor");
        return THROW_UNLESS(::il2cpp_utils::New<typename Lazy_1<T>::$$c*>());
      }
    }; // System.Lazy`1/<>c
    // Could not write size check! Type: System.Lazy`1/<>c is generic!
    // private System.Object m_boxed
    // Offset: 0x0
    ::Il2CppObject* m_boxed;
    // private System.Func`1<T> m_valueFactory
    // Offset: 0x0
    System::Func_1<T>* m_valueFactory;
    // private System.Object m_threadSafeObj
    // Offset: 0x0
    ::Il2CppObject* m_threadSafeObj;
    // Autogenerated static field getter
    // Get static field: static private readonly System.Func`1<T> ALREADY_INVOKED_SENTINEL
    static System::Func_1<T>* _get_ALREADY_INVOKED_SENTINEL() {
      static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("_get_ALREADY_INVOKED_SENTINEL");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Func_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Lazy_1<T>*>::get(), "ALREADY_INVOKED_SENTINEL"));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Func`1<T> ALREADY_INVOKED_SENTINEL
    static void _set_ALREADY_INVOKED_SENTINEL(System::Func_1<T>* value) {
      static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("_set_ALREADY_INVOKED_SENTINEL");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Lazy_1<T>*>::get(), "ALREADY_INVOKED_SENTINEL", value));
    }
    // public System.Void .ctor(System.Func`1<T> valueFactory)
    // Offset: 0xFFFFFFFF
    static Lazy_1<T>* New_ctor(System::Func_1<T>* valueFactory) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext(".ctor");
      return THROW_UNLESS(::il2cpp_utils::New<Lazy_1<T>*>(valueFactory));
    }
    // public System.Void .ctor(System.Threading.LazyThreadSafetyMode mode)
    // Offset: 0xFFFFFFFF
    static Lazy_1<T>* New_ctor(System::Threading::LazyThreadSafetyMode mode) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext(".ctor");
      return THROW_UNLESS(::il2cpp_utils::New<Lazy_1<T>*>(mode));
    }
    // public System.Void .ctor(System.Func`1<T> valueFactory, System.Threading.LazyThreadSafetyMode mode)
    // Offset: 0xFFFFFFFF
    static Lazy_1<T>* New_ctor(System::Func_1<T>* valueFactory, System::Threading::LazyThreadSafetyMode mode) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext(".ctor");
      return THROW_UNLESS(::il2cpp_utils::New<Lazy_1<T>*>(valueFactory, mode));
    }
    // static private System.Object GetObjectFromMode(System.Threading.LazyThreadSafetyMode mode)
    // Offset: 0xFFFFFFFF
    static ::Il2CppObject* GetObjectFromMode(System::Threading::LazyThreadSafetyMode mode) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("GetObjectFromMode");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Lazy_1<T>*>::get(), il2cpp_utils::NoArgClass<::Il2CppObject*>(), "GetObjectFromMode", {}, ::il2cpp_utils::ExtractTypes(mode))));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode);
    }
    // private System.Void OnSerializing(System.Runtime.Serialization.StreamingContext context)
    // Offset: 0xFFFFFFFF
    void OnSerializing(System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("OnSerializing");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnSerializing", {}, ::il2cpp_utils::ExtractTypes(context)));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
    }
    // System.Threading.LazyThreadSafetyMode get_Mode()
    // Offset: 0xFFFFFFFF
    System::Threading::LazyThreadSafetyMode get_Mode() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("get_Mode");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::LazyThreadSafetyMode>(), "get_Mode", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<System::Threading::LazyThreadSafetyMode, false>(this, ___internal__method);
    }
    // public System.Boolean get_IsValueCreated()
    // Offset: 0xFFFFFFFF
    bool get_IsValueCreated() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("get_IsValueCreated");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_IsValueCreated", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
    }
    // public T get_Value()
    // Offset: 0xFFFFFFFF
    T get_Value() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("get_Value");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<T>(), "get_Value", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<T, false>(this, ___internal__method);
    }
    // private T LazyInitValue()
    // Offset: 0xFFFFFFFF
    T LazyInitValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("LazyInitValue");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<T>(), "LazyInitValue", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<T, false>(this, ___internal__method);
    }
    // private System.Lazy`1/Boxed<T> CreateValue()
    // Offset: 0xFFFFFFFF
    typename System::Lazy_1<T>::Boxed* CreateValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("CreateValue");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<typename System::Lazy_1<T>::Boxed*>(), "CreateValue", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<typename System::Lazy_1<T>::Boxed*, false>(this, ___internal__method);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext(".cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Lazy_1<T>*>::get(), il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes())));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static Lazy_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext(".ctor");
      return THROW_UNLESS(::il2cpp_utils::New<Lazy_1<T>*>());
    }
    // public override System.String ToString()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Lazy_1").WithContext("ToString");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "ToString", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
    }
  }; // System.Lazy`1
  // Could not write size check! Type: System.Lazy`1 is generic!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Lazy_1, "System", "Lazy`1");
#pragma pack(pop)
