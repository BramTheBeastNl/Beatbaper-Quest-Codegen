// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ContextBoundObject
#include "System/ContextBoundObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting::Contexts
namespace System::Runtime::Remoting::Contexts {
  // Forward declaring type: CrossContextDelegate
  class CrossContextDelegate;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Contexts
namespace System::Runtime::Remoting::Contexts {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.Contexts.ContextCallbackObject
  class ContextCallbackObject : public System::ContextBoundObject {
    public:
    // Creating value type constructor for type: ContextCallbackObject
    ContextCallbackObject() noexcept {}
    // public System.Void DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate deleg)
    // Offset: 0x1A32654
    void DoCallBack(System::Runtime::Remoting::Contexts::CrossContextDelegate* deleg);
    // public System.Void .ctor()
    // Offset: 0x1A32658
    // Implemented from: System.ContextBoundObject
    // Base method: System.Void ContextBoundObject::.ctor()
    // Base method: System.Void MarshalByRefObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ContextCallbackObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::ContextCallbackObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ContextCallbackObject*, creationType>()));
    }
  }; // System.Runtime.Remoting.Contexts.ContextCallbackObject
  #pragma pack(pop)
  // Writing MetadataGetter for method: ContextCallbackObject::DoCallBack
  // Il2CppName: DoCallBack
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContextCallbackObject::*)(System::Runtime::Remoting::Contexts::CrossContextDelegate*)>(&ContextCallbackObject::DoCallBack)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ContextCallbackObject*), "DoCallBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Contexts::CrossContextDelegate*>()});
    }
  };
  // Writing MetadataGetter for method: ContextCallbackObject::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContextCallbackObject::*)()>(&ContextCallbackObject::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ContextCallbackObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContextCallbackObject::*)()>(&ContextCallbackObject::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ContextCallbackObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Contexts::ContextCallbackObject*, "System.Runtime.Remoting.Contexts", "ContextCallbackObject");
