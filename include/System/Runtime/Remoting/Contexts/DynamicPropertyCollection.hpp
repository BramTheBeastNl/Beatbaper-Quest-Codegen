// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting::Contexts
namespace System::Runtime::Remoting::Contexts {
  // Forward declaring type: IDynamicProperty
  class IDynamicProperty;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: IMessage
  class IMessage;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Contexts
namespace System::Runtime::Remoting::Contexts {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.Contexts.DynamicPropertyCollection
  class DynamicPropertyCollection : public ::Il2CppObject {
    public:
    // Nested type: System::Runtime::Remoting::Contexts::DynamicPropertyCollection::DynamicPropertyReg
    class DynamicPropertyReg;
    // private System.Collections.ArrayList _properties
    // Size: 0x8
    // Offset: 0x10
    System::Collections::ArrayList* properties;
    // Field size check
    static_assert(sizeof(System::Collections::ArrayList*) == 0x8);
    // Creating value type constructor for type: DynamicPropertyCollection
    DynamicPropertyCollection(System::Collections::ArrayList* properties_ = {}) noexcept : properties{properties_} {}
    // Creating conversion operator: operator System::Collections::ArrayList*
    constexpr operator System::Collections::ArrayList*() const noexcept {
      return properties;
    }
    // public System.Boolean get_HasProperties()
    // Offset: 0x18A3E28
    bool get_HasProperties();
    // public System.Boolean RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty prop)
    // Offset: 0x18A3E5C
    bool RegisterDynamicProperty(System::Runtime::Remoting::Contexts::IDynamicProperty* prop);
    // public System.Boolean UnregisterDynamicProperty(System.String name)
    // Offset: 0x18A425C
    bool UnregisterDynamicProperty(::Il2CppString* name);
    // public System.Void NotifyMessage(System.Boolean start, System.Runtime.Remoting.Messaging.IMessage msg, System.Boolean client_site, System.Boolean async)
    // Offset: 0x18A43B4
    void NotifyMessage(bool start, System::Runtime::Remoting::Messaging::IMessage* msg, bool client_site, bool async);
    // private System.Int32 FindProperty(System.String name)
    // Offset: 0x18A40EC
    int FindProperty(::Il2CppString* name);
    // public System.Void .ctor()
    // Offset: 0x18A4960
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DynamicPropertyCollection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::DynamicPropertyCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DynamicPropertyCollection*, creationType>()));
    }
  }; // System.Runtime.Remoting.Contexts.DynamicPropertyCollection
  #pragma pack(pop)
  static check_size<sizeof(DynamicPropertyCollection), 16 + sizeof(System::Collections::ArrayList*)> __System_Runtime_Remoting_Contexts_DynamicPropertyCollectionSizeCheck;
  static_assert(sizeof(DynamicPropertyCollection) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Contexts::DynamicPropertyCollection*, "System.Runtime.Remoting.Contexts", "DynamicPropertyCollection");
