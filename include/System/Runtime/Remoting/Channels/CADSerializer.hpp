// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: IMessage
  class IMessage;
  // Forward declaring type: IMethodCallMessage
  class IMethodCallMessage;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: MemoryStream
  class MemoryStream;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Channels
namespace System::Runtime::Remoting::Channels {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.Channels.CADSerializer
  class CADSerializer : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: CADSerializer
    CADSerializer() noexcept {}
    // static System.Runtime.Remoting.Messaging.IMessage DeserializeMessage(System.IO.MemoryStream mem, System.Runtime.Remoting.Messaging.IMethodCallMessage msg)
    // Offset: 0x1423448
    static System::Runtime::Remoting::Messaging::IMessage* DeserializeMessage(System::IO::MemoryStream* mem, System::Runtime::Remoting::Messaging::IMethodCallMessage* msg);
    // static System.IO.MemoryStream SerializeMessage(System.Runtime.Remoting.Messaging.IMessage msg)
    // Offset: 0x14234A8
    static System::IO::MemoryStream* SerializeMessage(System::Runtime::Remoting::Messaging::IMessage* msg);
    // static System.Object DeserializeObjectSafe(System.Byte[] mem)
    // Offset: 0x1423580
    static ::Il2CppObject* DeserializeObjectSafe(::Array<uint8_t>* mem);
    // static System.IO.MemoryStream SerializeObject(System.Object obj)
    // Offset: 0x14236A4
    static System::IO::MemoryStream* SerializeObject(::Il2CppObject* obj);
    // static System.Object DeserializeObject(System.IO.MemoryStream mem)
    // Offset: 0x1423618
    static ::Il2CppObject* DeserializeObject(System::IO::MemoryStream* mem);
  }; // System.Runtime.Remoting.Channels.CADSerializer
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Channels::CADSerializer*, "System.Runtime.Remoting.Channels", "CADSerializer");
// Writing MetadataGetter for method: CADSerializer::DeserializeMessage
// Il2CppName: DeserializeMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessage* (*)(System::IO::MemoryStream*, System::Runtime::Remoting::Messaging::IMethodCallMessage*)>(&CADSerializer::DeserializeMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CADSerializer*), "DeserializeMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::MemoryStream*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Messaging::IMethodCallMessage*>()});
  }
};
// Writing MetadataGetter for method: CADSerializer::SerializeMessage
// Il2CppName: SerializeMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IO::MemoryStream* (*)(System::Runtime::Remoting::Messaging::IMessage*)>(&CADSerializer::SerializeMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CADSerializer*), "SerializeMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Messaging::IMessage*>()});
  }
};
// Writing MetadataGetter for method: CADSerializer::DeserializeObjectSafe
// Il2CppName: DeserializeObjectSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::Array<uint8_t>*)>(&CADSerializer::DeserializeObjectSafe)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CADSerializer*), "DeserializeObjectSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: CADSerializer::SerializeObject
// Il2CppName: SerializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IO::MemoryStream* (*)(::Il2CppObject*)>(&CADSerializer::SerializeObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CADSerializer*), "SerializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CADSerializer::DeserializeObject
// Il2CppName: DeserializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(System::IO::MemoryStream*)>(&CADSerializer::DeserializeObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CADSerializer*), "DeserializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::MemoryStream*>()});
  }
};
