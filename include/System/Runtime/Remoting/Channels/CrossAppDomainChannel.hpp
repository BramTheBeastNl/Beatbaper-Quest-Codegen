// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.IChannelSender
#include "System/Runtime/Remoting/Channels/IChannelSender.hpp"
// Including type: System.Runtime.Remoting.Channels.IChannelReceiver
#include "System/Runtime/Remoting/Channels/IChannelReceiver.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: IMessageSink
  class IMessageSink;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Channels
namespace System::Runtime::Remoting::Channels {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.Channels.CrossAppDomainChannel
  class CrossAppDomainChannel : public ::Il2CppObject/*, public System::Runtime::Remoting::Channels::IChannelSender, public System::Runtime::Remoting::Channels::IChannelReceiver*/ {
    public:
    // Creating value type constructor for type: CrossAppDomainChannel
    CrossAppDomainChannel() noexcept {}
    // Creating interface conversion operator: operator System::Runtime::Remoting::Channels::IChannelSender
    operator System::Runtime::Remoting::Channels::IChannelSender() noexcept {
      return *reinterpret_cast<System::Runtime::Remoting::Channels::IChannelSender*>(this);
    }
    // Creating interface conversion operator: operator System::Runtime::Remoting::Channels::IChannelReceiver
    operator System::Runtime::Remoting::Channels::IChannelReceiver() noexcept {
      return *reinterpret_cast<System::Runtime::Remoting::Channels::IChannelReceiver*>(this);
    }
    // Get static field: static private System.Object s_lock
    static ::Il2CppObject* _get_s_lock();
    // Set static field: static private System.Object s_lock
    static void _set_s_lock(::Il2CppObject* value);
    // static System.Void RegisterCrossAppDomainChannel()
    // Offset: 0x1425FA4
    static void RegisterCrossAppDomainChannel();
    // public System.String get_ChannelName()
    // Offset: 0x14260B8
    ::Il2CppString* get_ChannelName();
    // public System.Int32 get_ChannelPriority()
    // Offset: 0x1426100
    int get_ChannelPriority();
    // public System.Object get_ChannelData()
    // Offset: 0x1426108
    ::Il2CppObject* get_ChannelData();
    // public System.Void StartListening(System.Object data)
    // Offset: 0x1426218
    void StartListening(::Il2CppObject* data);
    // public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(System.String url, System.Object data, out System.String uri)
    // Offset: 0x142621C
    System::Runtime::Remoting::Messaging::IMessageSink* CreateMessageSink(::Il2CppString* url, ::Il2CppObject* data, ::Il2CppString*& uri);
    // static private System.Void .cctor()
    // Offset: 0x1426604
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x14260B0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CrossAppDomainChannel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CrossAppDomainChannel*, creationType>()));
    }
  }; // System.Runtime.Remoting.Channels.CrossAppDomainChannel
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Channels::CrossAppDomainChannel*, "System.Runtime.Remoting.Channels", "CrossAppDomainChannel");
// Writing MetadataGetter for method: System::Runtime::Remoting::Channels::CrossAppDomainChannel::RegisterCrossAppDomainChannel
// Il2CppName: RegisterCrossAppDomainChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Runtime::Remoting::Channels::CrossAppDomainChannel::RegisterCrossAppDomainChannel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Channels::CrossAppDomainChannel*), "RegisterCrossAppDomainChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelName
// Il2CppName: get_ChannelName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Runtime::Remoting::Channels::CrossAppDomainChannel::*)()>(&System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Channels::CrossAppDomainChannel*), "get_ChannelName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelPriority
// Il2CppName: get_ChannelPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Runtime::Remoting::Channels::CrossAppDomainChannel::*)()>(&System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Channels::CrossAppDomainChannel*), "get_ChannelPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelData
// Il2CppName: get_ChannelData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Runtime::Remoting::Channels::CrossAppDomainChannel::*)()>(&System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Channels::CrossAppDomainChannel*), "get_ChannelData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Channels::CrossAppDomainChannel::StartListening
// Il2CppName: StartListening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Channels::CrossAppDomainChannel::*)(::Il2CppObject*)>(&System::Runtime::Remoting::Channels::CrossAppDomainChannel::StartListening)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Channels::CrossAppDomainChannel*), "StartListening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Channels::CrossAppDomainChannel::CreateMessageSink
// Il2CppName: CreateMessageSink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessageSink* (System::Runtime::Remoting::Channels::CrossAppDomainChannel::*)(::Il2CppString*, ::Il2CppObject*, ::Il2CppString*&)>(&System::Runtime::Remoting::Channels::CrossAppDomainChannel::CreateMessageSink)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Channels::CrossAppDomainChannel*), "CreateMessageSink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Channels::CrossAppDomainChannel::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Runtime::Remoting::Channels::CrossAppDomainChannel::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Channels::CrossAppDomainChannel*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Channels::CrossAppDomainChannel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Channels::CrossAppDomainChannel::*)()>(&System::Runtime::Remoting::Channels::CrossAppDomainChannel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Channels::CrossAppDomainChannel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Channels::CrossAppDomainChannel::*)()>(&System::Runtime::Remoting::Channels::CrossAppDomainChannel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Channels::CrossAppDomainChannel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
