// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
  // Forward declaring type: IList
  class IList;
}
// Forward declaring namespace: System::Runtime::Remoting::Contexts
namespace System::Runtime::Remoting::Contexts {
  // Forward declaring type: CrossContextChannel
  class CrossContextChannel;
}
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: IMessageSink
  class IMessageSink;
  // Forward declaring type: IMessage
  class IMessage;
  // Forward declaring type: ReturnMessage
  class ReturnMessage;
}
// Forward declaring namespace: System::Runtime::Remoting::Channels
namespace System::Runtime::Remoting::Channels {
  // Forward declaring type: IChannelSender
  class IChannelSender;
  // Forward declaring type: IChannel
  class IChannel;
}
// Forward declaring namespace: System::Runtime::Remoting
namespace System::Runtime::Remoting {
  // Forward declaring type: ChannelData
  class ChannelData;
  // Forward declaring type: ProviderData
  class ProviderData;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Channels
namespace System::Runtime::Remoting::Channels {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.Channels.ChannelServices
  // [ComVisibleAttribute] Offset: D7E328
  class ChannelServices : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: ChannelServices
    ChannelServices() noexcept {}
    // Get static field: static private System.Collections.ArrayList registeredChannels
    static System::Collections::ArrayList* _get_registeredChannels();
    // Set static field: static private System.Collections.ArrayList registeredChannels
    static void _set_registeredChannels(System::Collections::ArrayList* value);
    // Get static field: static private System.Collections.ArrayList delayedClientChannels
    static System::Collections::ArrayList* _get_delayedClientChannels();
    // Set static field: static private System.Collections.ArrayList delayedClientChannels
    static void _set_delayedClientChannels(System::Collections::ArrayList* value);
    // Get static field: static private System.Runtime.Remoting.Contexts.CrossContextChannel _crossContextSink
    static System::Runtime::Remoting::Contexts::CrossContextChannel* _get__crossContextSink();
    // Set static field: static private System.Runtime.Remoting.Contexts.CrossContextChannel _crossContextSink
    static void _set__crossContextSink(System::Runtime::Remoting::Contexts::CrossContextChannel* value);
    // Get static field: static System.String CrossContextUrl
    static ::Il2CppString* _get_CrossContextUrl();
    // Set static field: static System.String CrossContextUrl
    static void _set_CrossContextUrl(::Il2CppString* value);
    // Get static field: static private System.Collections.IList oldStartModeTypes
    static System::Collections::IList* _get_oldStartModeTypes();
    // Set static field: static private System.Collections.IList oldStartModeTypes
    static void _set_oldStartModeTypes(System::Collections::IList* value);
    // static System.Runtime.Remoting.Contexts.CrossContextChannel get_CrossContextChannel()
    // Offset: 0x142377C
    static System::Runtime::Remoting::Contexts::CrossContextChannel* get_CrossContextChannel();
    // static System.Runtime.Remoting.Messaging.IMessageSink CreateClientChannelSinkChain(System.String url, System.Object remoteChannelData, out System.String objectUri)
    // Offset: 0x14237E4
    static System::Runtime::Remoting::Messaging::IMessageSink* CreateClientChannelSinkChain(::Il2CppString* url, ::Il2CppObject* remoteChannelData, ::Il2CppString*& objectUri);
    // static System.Runtime.Remoting.Messaging.IMessageSink CreateClientChannelSinkChain(System.Runtime.Remoting.Channels.IChannelSender sender, System.String url, System.Object[] channelDataArray, out System.String objectUri)
    // Offset: 0x1423FD8
    static System::Runtime::Remoting::Messaging::IMessageSink* CreateClientChannelSinkChain(System::Runtime::Remoting::Channels::IChannelSender* sender, ::Il2CppString* url, ::Array<::Il2CppObject*>* channelDataArray, ::Il2CppString*& objectUri);
    // static public System.Void RegisterChannel(System.Runtime.Remoting.Channels.IChannel chnl)
    // Offset: 0x1424204
    static void RegisterChannel(System::Runtime::Remoting::Channels::IChannel* chnl);
    // static public System.Void RegisterChannel(System.Runtime.Remoting.Channels.IChannel chnl, System.Boolean ensureSecurity)
    // Offset: 0x142426C
    static void RegisterChannel(System::Runtime::Remoting::Channels::IChannel* chnl, bool ensureSecurity);
    // static System.Void RegisterChannelConfig(System.Runtime.Remoting.ChannelData channel)
    // Offset: 0x1424AA8
    static void RegisterChannelConfig(System::Runtime::Remoting::ChannelData* channel);
    // static private System.Object CreateProvider(System.Runtime.Remoting.ProviderData prov)
    // Offset: 0x14255F8
    static ::Il2CppObject* CreateProvider(System::Runtime::Remoting::ProviderData* prov);
    // static public System.Runtime.Remoting.Messaging.IMessage SyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage msg)
    // Offset: 0x142591C
    static System::Runtime::Remoting::Messaging::IMessage* SyncDispatchMessage(System::Runtime::Remoting::Messaging::IMessage* msg);
    // static private System.Runtime.Remoting.Messaging.ReturnMessage CheckIncomingMessage(System.Runtime.Remoting.Messaging.IMessage msg)
    // Offset: 0x14259F8
    static System::Runtime::Remoting::Messaging::ReturnMessage* CheckIncomingMessage(System::Runtime::Remoting::Messaging::IMessage* msg);
    // static System.Runtime.Remoting.Messaging.IMessage CheckReturnMessage(System.Runtime.Remoting.Messaging.IMessage callMsg, System.Runtime.Remoting.Messaging.IMessage retMsg)
    // Offset: 0x1425C84
    static System::Runtime::Remoting::Messaging::IMessage* CheckReturnMessage(System::Runtime::Remoting::Messaging::IMessage* callMsg, System::Runtime::Remoting::Messaging::IMessage* retMsg);
    // static private System.Boolean IsLocalCall(System.Runtime.Remoting.Messaging.IMessage callMsg)
    // Offset: 0x1425E24
    static bool IsLocalCall(System::Runtime::Remoting::Messaging::IMessage* callMsg);
    // static System.Object[] GetCurrentChannelInfo()
    // Offset: 0x1422F94
    static ::Array<::Il2CppObject*>* GetCurrentChannelInfo();
    // static private System.Void .cctor()
    // Offset: 0x1425E2C
    static void _cctor();
  }; // System.Runtime.Remoting.Channels.ChannelServices
  #pragma pack(pop)
  // Writing MetadataGetter for method: ChannelServices::get_CrossContextChannel
  // Il2CppName: get_CrossContextChannel
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Contexts::CrossContextChannel* (*)()>(&ChannelServices::get_CrossContextChannel)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "get_CrossContextChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::CreateClientChannelSinkChain
  // Il2CppName: CreateClientChannelSinkChain
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessageSink* (*)(::Il2CppString*, ::Il2CppObject*, ::Il2CppString*&)>(&ChannelServices::CreateClientChannelSinkChain)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "CreateClientChannelSinkChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::CreateClientChannelSinkChain
  // Il2CppName: CreateClientChannelSinkChain
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessageSink* (*)(System::Runtime::Remoting::Channels::IChannelSender*, ::Il2CppString*, ::Array<::Il2CppObject*>*, ::Il2CppString*&)>(&ChannelServices::CreateClientChannelSinkChain)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "CreateClientChannelSinkChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Channels::IChannelSender*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::RegisterChannel
  // Il2CppName: RegisterChannel
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Runtime::Remoting::Channels::IChannel*)>(&ChannelServices::RegisterChannel)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "RegisterChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Channels::IChannel*>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::RegisterChannel
  // Il2CppName: RegisterChannel
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Runtime::Remoting::Channels::IChannel*, bool)>(&ChannelServices::RegisterChannel)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "RegisterChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Channels::IChannel*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::RegisterChannelConfig
  // Il2CppName: RegisterChannelConfig
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Runtime::Remoting::ChannelData*)>(&ChannelServices::RegisterChannelConfig)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "RegisterChannelConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::ChannelData*>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::CreateProvider
  // Il2CppName: CreateProvider
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(System::Runtime::Remoting::ProviderData*)>(&ChannelServices::CreateProvider)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "CreateProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::ProviderData*>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::SyncDispatchMessage
  // Il2CppName: SyncDispatchMessage
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessage* (*)(System::Runtime::Remoting::Messaging::IMessage*)>(&ChannelServices::SyncDispatchMessage)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "SyncDispatchMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Messaging::IMessage*>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::CheckIncomingMessage
  // Il2CppName: CheckIncomingMessage
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::ReturnMessage* (*)(System::Runtime::Remoting::Messaging::IMessage*)>(&ChannelServices::CheckIncomingMessage)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "CheckIncomingMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Messaging::IMessage*>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::CheckReturnMessage
  // Il2CppName: CheckReturnMessage
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessage* (*)(System::Runtime::Remoting::Messaging::IMessage*, System::Runtime::Remoting::Messaging::IMessage*)>(&ChannelServices::CheckReturnMessage)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "CheckReturnMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Messaging::IMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Messaging::IMessage*>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::IsLocalCall
  // Il2CppName: IsLocalCall
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Runtime::Remoting::Messaging::IMessage*)>(&ChannelServices::IsLocalCall)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "IsLocalCall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Messaging::IMessage*>()});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::GetCurrentChannelInfo
  // Il2CppName: GetCurrentChannelInfo
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppObject*>* (*)()>(&ChannelServices::GetCurrentChannelInfo)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), "GetCurrentChannelInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ChannelServices::_cctor
  // Il2CppName: .cctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ChannelServices::_cctor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ChannelServices*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Channels::ChannelServices*, "System.Runtime.Remoting.Channels", "ChannelServices");
