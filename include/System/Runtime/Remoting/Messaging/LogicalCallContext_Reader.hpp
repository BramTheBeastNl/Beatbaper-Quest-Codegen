// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: System.Runtime.Remoting.Messaging
namespace System::Runtime::Remoting::Messaging {
  // Autogenerated type: System.Runtime.Remoting.Messaging.LogicalCallContext/Reader
  struct LogicalCallContext::Reader : public System::ValueType {
    public:
    // private System.Runtime.Remoting.Messaging.LogicalCallContext m_ctx
    // Offset: 0x0
    System::Runtime::Remoting::Messaging::LogicalCallContext* m_ctx;
    // Creating value type constructor for type: Reader
    Reader(System::Runtime::Remoting::Messaging::LogicalCallContext* m_ctx_ = {}) : m_ctx{m_ctx_} {}
    // public System.Void .ctor(System.Runtime.Remoting.Messaging.LogicalCallContext ctx)
    // Offset: 0xA3C804
    static LogicalCallContext::Reader* New_ctor(System::Runtime::Remoting::Messaging::LogicalCallContext* ctx);
    // public System.Boolean get_IsNull()
    // Offset: 0xA3C80C
    bool get_IsNull();
    // public System.Boolean get_HasInfo()
    // Offset: 0xA3C81C
    bool get_HasInfo();
    // public System.Runtime.Remoting.Messaging.LogicalCallContext Clone()
    // Offset: 0xA3C82C
    System::Runtime::Remoting::Messaging::LogicalCallContext* Clone();
    // public System.Object GetData(System.String name)
    // Offset: 0xA3C834
    ::CsObject* GetData(::CsString* name);
  }; // System.Runtime.Remoting.Messaging.LogicalCallContext/Reader
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Messaging::LogicalCallContext::Reader, "System.Runtime.Remoting.Messaging", "LogicalCallContext/Reader");
#pragma pack(pop)
