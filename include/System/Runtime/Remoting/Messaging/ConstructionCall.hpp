// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.MethodCall
#include "System/Runtime/Remoting/Messaging/MethodCall.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting::Activation
namespace System::Runtime::Remoting::Activation {
  // Forward declaring type: IActivator
  class IActivator;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
  // Forward declaring type: IDictionary
  class IDictionary;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Runtime::Remoting::Proxies
namespace System::Runtime::Remoting::Proxies {
  // Forward declaring type: RemotingProxy
  class RemotingProxy;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Messaging
namespace System::Runtime::Remoting::Messaging {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.Messaging.ConstructionCall
  // [ComVisibleAttribute] Offset: D7E5DC
  // [CLSCompliantAttribute] Offset: D7E5DC
  class ConstructionCall : public System::Runtime::Remoting::Messaging::MethodCall/*, public System::Runtime::Remoting::Activation::IConstructionCallMessage*/ {
    public:
    // private System.Runtime.Remoting.Activation.IActivator _activator
    // Size: 0x8
    // Offset: 0x68
    System::Runtime::Remoting::Activation::IActivator* activator;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Activation::IActivator*) == 0x8);
    // private System.Object[] _activationAttributes
    // Size: 0x8
    // Offset: 0x70
    ::Array<::Il2CppObject*>* activationAttributes;
    // Field size check
    static_assert(sizeof(::Array<::Il2CppObject*>*) == 0x8);
    // private System.Collections.IList _contextProperties
    // Size: 0x8
    // Offset: 0x78
    System::Collections::IList* contextProperties;
    // Field size check
    static_assert(sizeof(System::Collections::IList*) == 0x8);
    // private System.Type _activationType
    // Size: 0x8
    // Offset: 0x80
    System::Type* activationType;
    // Field size check
    static_assert(sizeof(System::Type*) == 0x8);
    // private System.String _activationTypeName
    // Size: 0x8
    // Offset: 0x88
    ::Il2CppString* activationTypeName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Boolean _isContextOk
    // Size: 0x1
    // Offset: 0x90
    bool isContextOk;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isContextOk and: sourceProxy
    char __padding5[0x7] = {};
    // private System.Runtime.Remoting.Proxies.RemotingProxy _sourceProxy
    // Size: 0x8
    // Offset: 0x98
    System::Runtime::Remoting::Proxies::RemotingProxy* sourceProxy;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Proxies::RemotingProxy*) == 0x8);
    // Creating value type constructor for type: ConstructionCall
    ConstructionCall(System::Runtime::Remoting::Activation::IActivator* activator_ = {}, ::Array<::Il2CppObject*>* activationAttributes_ = {}, System::Collections::IList* contextProperties_ = {}, System::Type* activationType_ = {}, ::Il2CppString* activationTypeName_ = {}, bool isContextOk_ = {}, System::Runtime::Remoting::Proxies::RemotingProxy* sourceProxy_ = {}) noexcept : activator{activator_}, activationAttributes{activationAttributes_}, contextProperties{contextProperties_}, activationType{activationType_}, activationTypeName{activationTypeName_}, isContextOk{isContextOk_}, sourceProxy{sourceProxy_} {}
    // Creating interface conversion operator: operator System::Runtime::Remoting::Activation::IConstructionCallMessage
    operator System::Runtime::Remoting::Activation::IConstructionCallMessage() noexcept {
      return *reinterpret_cast<System::Runtime::Remoting::Activation::IConstructionCallMessage*>(this);
    }
    // System.Void .ctor(System.Type type)
    // Offset: 0x1A3AD58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConstructionCall* New_ctor(System::Type* type) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConstructionCall*, creationType>(type)));
    }
    // System.Boolean get_IsContextOk()
    // Offset: 0x1A3AFA8
    bool get_IsContextOk();
    // System.Void set_IsContextOk(System.Boolean value)
    // Offset: 0x1A3AFB0
    void set_IsContextOk(bool value);
    // public System.Type get_ActivationType()
    // Offset: 0x1A3AFBC
    System::Type* get_ActivationType();
    // public System.String get_ActivationTypeName()
    // Offset: 0x1A3B08C
    ::Il2CppString* get_ActivationTypeName();
    // public System.Runtime.Remoting.Activation.IActivator get_Activator()
    // Offset: 0x1A3B094
    System::Runtime::Remoting::Activation::IActivator* get_Activator();
    // public System.Void set_Activator(System.Runtime.Remoting.Activation.IActivator value)
    // Offset: 0x1A3B09C
    void set_Activator(System::Runtime::Remoting::Activation::IActivator* value);
    // public System.Object[] get_CallSiteActivationAttributes()
    // Offset: 0x1A3B0A4
    ::Array<::Il2CppObject*>* get_CallSiteActivationAttributes();
    // System.Void SetActivationAttributes(System.Object[] attributes)
    // Offset: 0x1A3B0AC
    void SetActivationAttributes(::Array<::Il2CppObject*>* attributes);
    // public System.Collections.IList get_ContextProperties()
    // Offset: 0x1A3B0B4
    System::Collections::IList* get_ContextProperties();
    // System.Runtime.Remoting.Proxies.RemotingProxy get_SourceProxy()
    // Offset: 0x1A3BC00
    System::Runtime::Remoting::Proxies::RemotingProxy* get_SourceProxy();
    // System.Void set_SourceProxy(System.Runtime.Remoting.Proxies.RemotingProxy value)
    // Offset: 0x1A3BC08
    void set_SourceProxy(System::Runtime::Remoting::Proxies::RemotingProxy* value);
    // System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1A3ADB4
    // Implemented from: System.Runtime.Remoting.Messaging.MethodCall
    // Base method: System.Void MethodCall::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConstructionCall* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConstructionCall*, creationType>(info, context)));
    }
    // override System.Void InitDictionary()
    // Offset: 0x1A3AE54
    // Implemented from: System.Runtime.Remoting.Messaging.MethodCall
    // Base method: System.Void MethodCall::InitDictionary()
    void InitDictionary();
    // override System.Void InitMethodProperty(System.String key, System.Object value)
    // Offset: 0x1A3B120
    // Implemented from: System.Runtime.Remoting.Messaging.MethodCall
    // Base method: System.Void MethodCall::InitMethodProperty(System.String key, System.Object value)
    void InitMethodProperty(::Il2CppString* key, ::Il2CppObject* value);
    // public override System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1A3B688
    // Implemented from: System.Runtime.Remoting.Messaging.MethodCall
    // Base method: System.Void MethodCall::GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    void GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // public override System.Collections.IDictionary get_Properties()
    // Offset: 0x1A3BB88
    // Implemented from: System.Runtime.Remoting.Messaging.MethodCall
    // Base method: System.Collections.IDictionary MethodCall::get_Properties()
    System::Collections::IDictionary* get_Properties();
  }; // System.Runtime.Remoting.Messaging.ConstructionCall
  #pragma pack(pop)
  static check_size<sizeof(ConstructionCall), 152 + sizeof(System::Runtime::Remoting::Proxies::RemotingProxy*)> __System_Runtime_Remoting_Messaging_ConstructionCallSizeCheck;
  static_assert(sizeof(ConstructionCall) == 0xA0);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Messaging::ConstructionCall*, "System.Runtime.Remoting.Messaging", "ConstructionCall");
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::get_IsContextOk
// Il2CppName: get_IsContextOk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Runtime::Remoting::Messaging::ConstructionCall::*)()>(&System::Runtime::Remoting::Messaging::ConstructionCall::get_IsContextOk)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "get_IsContextOk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::set_IsContextOk
// Il2CppName: set_IsContextOk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Messaging::ConstructionCall::*)(bool)>(&System::Runtime::Remoting::Messaging::ConstructionCall::set_IsContextOk)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "set_IsContextOk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::get_ActivationType
// Il2CppName: get_ActivationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (System::Runtime::Remoting::Messaging::ConstructionCall::*)()>(&System::Runtime::Remoting::Messaging::ConstructionCall::get_ActivationType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "get_ActivationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::get_ActivationTypeName
// Il2CppName: get_ActivationTypeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Runtime::Remoting::Messaging::ConstructionCall::*)()>(&System::Runtime::Remoting::Messaging::ConstructionCall::get_ActivationTypeName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "get_ActivationTypeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::get_Activator
// Il2CppName: get_Activator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Activation::IActivator* (System::Runtime::Remoting::Messaging::ConstructionCall::*)()>(&System::Runtime::Remoting::Messaging::ConstructionCall::get_Activator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "get_Activator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::set_Activator
// Il2CppName: set_Activator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Messaging::ConstructionCall::*)(System::Runtime::Remoting::Activation::IActivator*)>(&System::Runtime::Remoting::Messaging::ConstructionCall::set_Activator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "set_Activator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Activation::IActivator*>()});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::get_CallSiteActivationAttributes
// Il2CppName: get_CallSiteActivationAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppObject*>* (System::Runtime::Remoting::Messaging::ConstructionCall::*)()>(&System::Runtime::Remoting::Messaging::ConstructionCall::get_CallSiteActivationAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "get_CallSiteActivationAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::SetActivationAttributes
// Il2CppName: SetActivationAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Messaging::ConstructionCall::*)(::Array<::Il2CppObject*>*)>(&System::Runtime::Remoting::Messaging::ConstructionCall::SetActivationAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "SetActivationAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::get_ContextProperties
// Il2CppName: get_ContextProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IList* (System::Runtime::Remoting::Messaging::ConstructionCall::*)()>(&System::Runtime::Remoting::Messaging::ConstructionCall::get_ContextProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "get_ContextProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::get_SourceProxy
// Il2CppName: get_SourceProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Proxies::RemotingProxy* (System::Runtime::Remoting::Messaging::ConstructionCall::*)()>(&System::Runtime::Remoting::Messaging::ConstructionCall::get_SourceProxy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "get_SourceProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::set_SourceProxy
// Il2CppName: set_SourceProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Messaging::ConstructionCall::*)(System::Runtime::Remoting::Proxies::RemotingProxy*)>(&System::Runtime::Remoting::Messaging::ConstructionCall::set_SourceProxy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "set_SourceProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Remoting::Proxies::RemotingProxy*>()});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::InitDictionary
// Il2CppName: InitDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Messaging::ConstructionCall::*)()>(&System::Runtime::Remoting::Messaging::ConstructionCall::InitDictionary)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "InitDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::InitMethodProperty
// Il2CppName: InitMethodProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Messaging::ConstructionCall::*)(::Il2CppString*, ::Il2CppObject*)>(&System::Runtime::Remoting::Messaging::ConstructionCall::InitMethodProperty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "InitMethodProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Messaging::ConstructionCall::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&System::Runtime::Remoting::Messaging::ConstructionCall::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Messaging::ConstructionCall::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IDictionary* (System::Runtime::Remoting::Messaging::ConstructionCall::*)()>(&System::Runtime::Remoting::Messaging::ConstructionCall::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Messaging::ConstructionCall*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
