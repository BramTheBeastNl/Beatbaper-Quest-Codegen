// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
// Including type: Mono.Xml.SmallXmlParser/IContentHandler
#include "Mono/Xml/SmallXmlParser_IContentHandler.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
  // Forward declaring type: Stack
  class Stack;
}
// Forward declaring namespace: System::Runtime::Remoting
namespace System::Runtime::Remoting {
  // Forward declaring type: ChannelData
  class ChannelData;
  // Forward declaring type: ProviderData
  class ProviderData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: TimeSpan
  struct TimeSpan;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting
namespace System::Runtime::Remoting {
  // Autogenerated type: System.Runtime.Remoting.ConfigHandler
  class ConfigHandler : public ::Il2CppObject/*, public Mono::Xml::SmallXmlParser::IContentHandler*/ {
    public:
    // private System.Collections.ArrayList typeEntries
    // Offset: 0x10
    System::Collections::ArrayList* typeEntries;
    // private System.Collections.ArrayList channelInstances
    // Offset: 0x18
    System::Collections::ArrayList* channelInstances;
    // private System.Runtime.Remoting.ChannelData currentChannel
    // Offset: 0x20
    System::Runtime::Remoting::ChannelData* currentChannel;
    // private System.Collections.Stack currentProviderData
    // Offset: 0x28
    System::Collections::Stack* currentProviderData;
    // private System.String currentClientUrl
    // Offset: 0x30
    ::Il2CppString* currentClientUrl;
    // private System.String appName
    // Offset: 0x38
    ::Il2CppString* appName;
    // private System.String currentXmlPath
    // Offset: 0x40
    ::Il2CppString* currentXmlPath;
    // private System.Boolean onlyDelayedChannels
    // Offset: 0x48
    bool onlyDelayedChannels;
    // Creating interface conversion operator: operator Mono::Xml::SmallXmlParser::IContentHandler
    operator Mono::Xml::SmallXmlParser::IContentHandler() noexcept {
      return *reinterpret_cast<Mono::Xml::SmallXmlParser::IContentHandler*>(this);
    }
    // public System.Void .ctor(System.Boolean onlyDelayedChannels)
    // Offset: 0x1098194
    static ConfigHandler* New_ctor(bool onlyDelayedChannels);
    // private System.Void ValidatePath(System.String element, params System.String[] paths)
    // Offset: 0x109825C
    void ValidatePath(::Il2CppString* element, ::Array<::Il2CppString*>* paths);
    // Creating initializer_list -> params proxy for: System.Void ValidatePath(System.String element, params System.String[] paths)
    void ValidatePath(::Il2CppString* element, std::initializer_list<::Il2CppString*> paths);
    // Creating TArgs -> initializer_list proxy for: System.Void ValidatePath(System.String element, params System.String[] paths)
    template<class ...TParams>
    void ValidatePath(::Il2CppString* element, TParams&&... paths) {
      ValidatePath(element, {paths...});
    }
    // private System.Boolean CheckPath(System.String path)
    // Offset: 0x1098368
    bool CheckPath(::Il2CppString* path);
    // public System.Void ParseElement(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x1098608
    void ParseElement(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // private System.Void ReadCustomProviderData(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x109965C
    void ReadCustomProviderData(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // private System.Void ReadLifetine(Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x10999CC
    void ReadLifetine(Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // private System.TimeSpan ParseTime(System.String s)
    // Offset: 0x109B070
    System::TimeSpan ParseTime(::Il2CppString* s);
    // private System.Void ReadChannel(Mono.Xml.SmallXmlParser/IAttrList attrs, System.Boolean isTemplate)
    // Offset: 0x1099F80
    void ReadChannel(Mono::Xml::SmallXmlParser::IAttrList* attrs, bool isTemplate);
    // private System.Runtime.Remoting.ProviderData ReadProvider(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs, System.Boolean isTemplate)
    // Offset: 0x109A350
    System::Runtime::Remoting::ProviderData* ReadProvider(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs, bool isTemplate);
    // private System.Void ReadClientActivated(Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x109A9B0
    void ReadClientActivated(Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // private System.Void ReadServiceActivated(Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x109AAD8
    void ReadServiceActivated(Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // private System.Void ReadClientWellKnown(Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x109A724
    void ReadClientWellKnown(Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // private System.Void ReadServiceWellKnown(Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x109A808
    void ReadServiceWellKnown(Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // private System.Void ReadInteropXml(Mono.Xml.SmallXmlParser/IAttrList attrs, System.Boolean isElement)
    // Offset: 0x109AB9C
    void ReadInteropXml(Mono::Xml::SmallXmlParser::IAttrList* attrs, bool isElement);
    // private System.Void ReadPreload(Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x109AD68
    void ReadPreload(Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // private System.String GetNotNull(Mono.Xml.SmallXmlParser/IAttrList attrs, System.String name)
    // Offset: 0x109B4D0
    ::Il2CppString* GetNotNull(Mono::Xml::SmallXmlParser::IAttrList* attrs, ::Il2CppString* name);
    // private System.String ExtractAssembly(ref System.String type)
    // Offset: 0x109B60C
    ::Il2CppString* ExtractAssembly(::Il2CppString*& type);
    // public System.Void OnStartParsing(Mono.Xml.SmallXmlParser parser)
    // Offset: 0x109844C
    // Implemented from: Mono.Xml.SmallXmlParser/IContentHandler
    // Base method: System.Void IContentHandler::OnStartParsing(Mono.Xml.SmallXmlParser parser)
    void OnStartParsing(Mono::Xml::SmallXmlParser* parser);
    // public System.Void OnProcessingInstruction(System.String name, System.String text)
    // Offset: 0x1098450
    // Implemented from: Mono.Xml.SmallXmlParser/IContentHandler
    // Base method: System.Void IContentHandler::OnProcessingInstruction(System.String name, System.String text)
    void OnProcessingInstruction(::Il2CppString* name, ::Il2CppString* text);
    // public System.Void OnIgnorableWhitespace(System.String s)
    // Offset: 0x1098454
    // Implemented from: Mono.Xml.SmallXmlParser/IContentHandler
    // Base method: System.Void IContentHandler::OnIgnorableWhitespace(System.String s)
    void OnIgnorableWhitespace(::Il2CppString* s);
    // public System.Void OnStartElement(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs)
    // Offset: 0x1098458
    // Implemented from: Mono.Xml.SmallXmlParser/IContentHandler
    // Base method: System.Void IContentHandler::OnStartElement(System.String name, Mono.Xml.SmallXmlParser/IAttrList attrs)
    void OnStartElement(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs);
    // public System.Void OnEndElement(System.String name)
    // Offset: 0x109AFCC
    // Implemented from: Mono.Xml.SmallXmlParser/IContentHandler
    // Base method: System.Void IContentHandler::OnEndElement(System.String name)
    void OnEndElement(::Il2CppString* name);
    // public System.Void OnChars(System.String ch)
    // Offset: 0x109B6E8
    // Implemented from: Mono.Xml.SmallXmlParser/IContentHandler
    // Base method: System.Void IContentHandler::OnChars(System.String ch)
    void OnChars(::Il2CppString* ch);
    // public System.Void OnEndParsing(Mono.Xml.SmallXmlParser parser)
    // Offset: 0x109B6EC
    // Implemented from: Mono.Xml.SmallXmlParser/IContentHandler
    // Base method: System.Void IContentHandler::OnEndParsing(Mono.Xml.SmallXmlParser parser)
    void OnEndParsing(Mono::Xml::SmallXmlParser* parser);
  }; // System.Runtime.Remoting.ConfigHandler
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::ConfigHandler*, "System.Runtime.Remoting", "ConfigHandler");
#pragma pack(pop)
