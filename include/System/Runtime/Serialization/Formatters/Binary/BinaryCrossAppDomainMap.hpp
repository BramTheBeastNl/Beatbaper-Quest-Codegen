// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization::Formatters::Binary
namespace System::Runtime::Serialization::Formatters::Binary {
  // Forward declaring type: __BinaryParser
  class __BinaryParser;
}
// Completed forward declares
// Type namespace: System.Runtime.Serialization.Formatters.Binary
namespace System::Runtime::Serialization::Formatters::Binary {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainMap
  class BinaryCrossAppDomainMap : public ::Il2CppObject {
    public:
    // System.Int32 crossAppDomainArrayIndex
    // Size: 0x4
    // Offset: 0x10
    int crossAppDomainArrayIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: BinaryCrossAppDomainMap
    BinaryCrossAppDomainMap(int crossAppDomainArrayIndex_ = {}) noexcept : crossAppDomainArrayIndex{crossAppDomainArrayIndex_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return crossAppDomainArrayIndex;
    }
    // public System.Void Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser input)
    // Offset: 0x1607FC0
    void Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input);
    // public System.Void Dump()
    // Offset: 0x1608000
    void Dump();
    // System.Void .ctor()
    // Offset: 0x1607FB8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BinaryCrossAppDomainMap* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainMap::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BinaryCrossAppDomainMap*, creationType>()));
    }
  }; // System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainMap
  #pragma pack(pop)
  static check_size<sizeof(BinaryCrossAppDomainMap), 16 + sizeof(int)> __System_Runtime_Serialization_Formatters_Binary_BinaryCrossAppDomainMapSizeCheck;
  static_assert(sizeof(BinaryCrossAppDomainMap) == 0x14);
  // Writing MetadataGetter for method: BinaryCrossAppDomainMap::Read
  // Il2CppName: Read
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainMap::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryCrossAppDomainMap::Read)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainMap*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
    }
  };
  // Writing MetadataGetter for method: BinaryCrossAppDomainMap::Dump
  // Il2CppName: Dump
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainMap::*)()>(&BinaryCrossAppDomainMap::Dump)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainMap*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: BinaryCrossAppDomainMap::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainMap::*)()>(&BinaryCrossAppDomainMap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainMap::*)()>(&BinaryCrossAppDomainMap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainMap*, "System.Runtime.Serialization.Formatters.Binary", "BinaryCrossAppDomainMap");
