// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Runtime.Serialization.Formatters.Binary
namespace System::Runtime::Serialization::Formatters::Binary {
  // Size: 0x24
  // Autogenerated type: System.Runtime.Serialization.Formatters.Binary.SerStack
  // [] Offset: FFFFFFFF
  class SerStack : public ::Il2CppObject {
    public:
    // System.Object[] objects
    // Size: 0x8
    // Offset: 0x10
    ::Array<::Il2CppObject*>* objects;
    // Field size check
    static_assert(sizeof(::Array<::Il2CppObject*>*) == 0x8);
    // System.String stackId
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* stackId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // System.Int32 top
    // Size: 0x4
    // Offset: 0x20
    int top;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: SerStack
    SerStack(::Array<::Il2CppObject*>* objects_ = {}, ::Il2CppString* stackId_ = {}, int top_ = {}) noexcept : objects{objects_}, stackId{stackId_}, top{top_} {}
    // System.Void .ctor(System.String stackId)
    // Offset: 0x12F4D84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SerStack* New_ctor(::Il2CppString* stackId) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::SerStack::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SerStack*, creationType>(stackId)));
    }
    // System.Void Push(System.Object obj)
    // Offset: 0x12F6E6C
    void Push(::Il2CppObject* obj);
    // System.Object Pop()
    // Offset: 0x12F6F28
    ::Il2CppObject* Pop();
    // System.Void IncreaseCapacity()
    // Offset: 0x12FEC60
    void IncreaseCapacity();
    // System.Object Peek()
    // Offset: 0x12F7694
    ::Il2CppObject* Peek();
    // System.Object PeekPeek()
    // Offset: 0x12FECF8
    ::Il2CppObject* PeekPeek();
    // System.Boolean IsEmpty()
    // Offset: 0x12FDDE8
    bool IsEmpty();
  }; // System.Runtime.Serialization.Formatters.Binary.SerStack
  static check_size<sizeof(SerStack), 32 + sizeof(int)> __System_Runtime_Serialization_Formatters_Binary_SerStackSizeCheck;
  static_assert(sizeof(SerStack) == 0x24);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Serialization::Formatters::Binary::SerStack*, "System.Runtime.Serialization.Formatters.Binary", "SerStack");
#pragma pack(pop)
