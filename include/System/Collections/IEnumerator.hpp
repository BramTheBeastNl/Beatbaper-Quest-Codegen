// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: System.Collections
namespace System::Collections {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: System.Collections.IEnumerator
  // [GuidAttribute] Offset: D7FE38
  // [ComVisibleAttribute] Offset: D7FE38
  class IEnumerator {
    public:
    // Creating value type constructor for type: IEnumerator
    IEnumerator() noexcept {}
    // public System.Boolean MoveNext()
    // Offset: 0xFFFFFFFF
    bool MoveNext();
    // public System.Object get_Current()
    // Offset: 0xFFFFFFFF
    ::Il2CppObject* get_Current();
    // public System.Void Reset()
    // Offset: 0xFFFFFFFF
    void Reset();
  }; // System.Collections.IEnumerator
  #pragma pack(pop)
  // Writing MetadataGetter for method: IEnumerator::MoveNext
  // Il2CppName: MoveNext
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IEnumerator::*)()>(&IEnumerator::MoveNext)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IEnumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: IEnumerator::get_Current
  // Il2CppName: get_Current
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (IEnumerator::*)()>(&IEnumerator::get_Current)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IEnumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: IEnumerator::Reset
  // Il2CppName: Reset
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IEnumerator::*)()>(&IEnumerator::Reset)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IEnumerator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Collections::IEnumerator*, "System.Collections", "IEnumerator");
