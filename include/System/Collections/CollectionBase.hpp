// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Completed forward declares
// Type namespace: System.Collections
namespace System::Collections {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Collections.CollectionBase
  // [ComVisibleAttribute] Offset: CAAA10
  class CollectionBase : public ::Il2CppObject/*, public System::Collections::IList*/ {
    public:
    // private System.Collections.ArrayList list
    // Size: 0x8
    // Offset: 0x10
    System::Collections::ArrayList* list;
    // Field size check
    static_assert(sizeof(System::Collections::ArrayList*) == 0x8);
    // Creating value type constructor for type: CollectionBase
    CollectionBase(System::Collections::ArrayList* list_ = {}) noexcept : list{list_} {}
    // Creating interface conversion operator: operator System::Collections::IList
    operator System::Collections::IList() noexcept {
      return *reinterpret_cast<System::Collections::IList*>(this);
    }
    // Creating conversion operator: operator System::Collections::ArrayList*
    constexpr operator System::Collections::ArrayList*() const noexcept {
      return list;
    }
    // protected System.Collections.ArrayList get_InnerList()
    // Offset: 0x164D690
    System::Collections::ArrayList* get_InnerList();
    // public System.Int32 get_Count()
    // Offset: 0x164D6F8
    int get_Count();
    // public System.Void Clear()
    // Offset: 0x164D714
    void Clear();
    // public System.Void RemoveAt(System.Int32 index)
    // Offset: 0x164D770
    void RemoveAt(int index);
    // private System.Boolean System.Collections.IList.get_IsReadOnly()
    // Offset: 0x164D984
    bool System_Collections_IList_get_IsReadOnly();
    // private System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x164D9AC
    void System_Collections_ICollection_CopyTo(System::Array* array, int index);
    // private System.Object System.Collections.IList.get_Item(System.Int32 index)
    // Offset: 0x164D9EC
    ::Il2CppObject* System_Collections_IList_get_Item(int index);
    // private System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)
    // Offset: 0x164DAD4
    void System_Collections_IList_set_Item(int index, ::Il2CppObject* value);
    // private System.Boolean System.Collections.IList.Contains(System.Object value)
    // Offset: 0x164DCF8
    bool System_Collections_IList_Contains(::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.Add(System.Object value)
    // Offset: 0x164DD30
    int System_Collections_IList_Add(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Remove(System.Object value)
    // Offset: 0x164DEBC
    void System_Collections_IList_Remove(::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.IndexOf(System.Object value)
    // Offset: 0x164E0A4
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)
    // Offset: 0x164E0DC
    void System_Collections_IList_Insert(int index, ::Il2CppObject* value);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x164E2C8
    System::Collections::IEnumerator* GetEnumerator();
    // protected System.Void OnSet(System.Int32 index, System.Object oldValue, System.Object newValue)
    // Offset: 0x164E2F0
    void OnSet(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue);
    // protected System.Void OnInsert(System.Int32 index, System.Object value)
    // Offset: 0x164E2F4
    void OnInsert(int index, ::Il2CppObject* value);
    // protected System.Void OnClear()
    // Offset: 0x164E2F8
    void OnClear();
    // protected System.Void OnRemove(System.Int32 index, System.Object value)
    // Offset: 0x164E2FC
    void OnRemove(int index, ::Il2CppObject* value);
    // protected System.Void OnValidate(System.Object value)
    // Offset: 0x164E300
    void OnValidate(::Il2CppObject* value);
    // protected System.Void OnSetComplete(System.Int32 index, System.Object oldValue, System.Object newValue)
    // Offset: 0x164E37C
    void OnSetComplete(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue);
    // protected System.Void OnInsertComplete(System.Int32 index, System.Object value)
    // Offset: 0x164E380
    void OnInsertComplete(int index, ::Il2CppObject* value);
    // protected System.Void OnClearComplete()
    // Offset: 0x164E384
    void OnClearComplete();
    // protected System.Void OnRemoveComplete(System.Int32 index, System.Object value)
    // Offset: 0x164E388
    void OnRemoveComplete(int index, ::Il2CppObject* value);
    // protected System.Void .ctor()
    // Offset: 0x164D628
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CollectionBase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CollectionBase*, creationType>()));
    }
  }; // System.Collections.CollectionBase
  #pragma pack(pop)
  static check_size<sizeof(CollectionBase), 16 + sizeof(System::Collections::ArrayList*)> __System_Collections_CollectionBaseSizeCheck;
  static_assert(sizeof(CollectionBase) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(System::Collections::CollectionBase*, "System.Collections", "CollectionBase");
