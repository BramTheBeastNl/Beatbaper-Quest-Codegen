// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Collections
namespace System::Collections {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Collections.SortedList/ValueList
  // [] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: C989D8
  class SortedList::ValueList : public ::Il2CppObject/*, public System::Collections::IList*/ {
    public:
    // private System.Collections.SortedList sortedList
    // Size: 0x8
    // Offset: 0x10
    System::Collections::SortedList* sortedList;
    // Field size check
    static_assert(sizeof(System::Collections::SortedList*) == 0x8);
    // Creating value type constructor for type: ValueList
    ValueList(System::Collections::SortedList* sortedList_ = {}) noexcept : sortedList{sortedList_} {}
    // Creating interface conversion operator: operator System::Collections::IList
    operator System::Collections::IList() noexcept {
      return *reinterpret_cast<System::Collections::IList*>(this);
    }
    // Creating conversion operator: operator System::Collections::SortedList*
    constexpr operator System::Collections::SortedList*() const noexcept {
      return sortedList;
    }
    // System.Void .ctor(System.Collections.SortedList sortedList)
    // Offset: 0x1816A3C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SortedList::ValueList* New_ctor(System::Collections::SortedList* sortedList) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SortedList::ValueList*, creationType>(sortedList)));
    }
    // public System.Int32 get_Count()
    // Offset: 0x1818848
    int get_Count_NEW();
    // public System.Boolean get_IsReadOnly()
    // Offset: 0x1818864
    bool get_IsReadOnly_NEW();
    // public System.Int32 Add(System.Object key)
    // Offset: 0x181886C
    int Add_NEW(::Il2CppObject* key);
    // public System.Void Clear()
    // Offset: 0x18188EC
    void Clear_NEW();
    // public System.Boolean Contains(System.Object value)
    // Offset: 0x181896C
    bool Contains_NEW(::Il2CppObject* value);
    // public System.Void CopyTo(System.Array array, System.Int32 arrayIndex)
    // Offset: 0x1818990
    void CopyTo_NEW(System::Array* array, int arrayIndex);
    // public System.Void Insert(System.Int32 index, System.Object value)
    // Offset: 0x1818A80
    void Insert_NEW(int index, ::Il2CppObject* value);
    // public System.Object get_Item(System.Int32 index)
    // Offset: 0x1818B00
    ::Il2CppObject* get_Item_NEW(int index);
    // public System.Void set_Item(System.Int32 index, System.Object value)
    // Offset: 0x1818B24
    void set_Item_NEW(int index, ::Il2CppObject* value);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x1818BA4
    System::Collections::IEnumerator* GetEnumerator_NEW();
    // public System.Int32 IndexOf(System.Object value)
    // Offset: 0x1818C40
    int IndexOf_NEW(::Il2CppObject* value);
    // public System.Void Remove(System.Object value)
    // Offset: 0x1818CC8
    void Remove_NEW(::Il2CppObject* value);
    // public System.Void RemoveAt(System.Int32 index)
    // Offset: 0x1818D48
    void RemoveAt_NEW(int index);
  }; // System.Collections.SortedList/ValueList
  #pragma pack(pop)
  static check_size<sizeof(SortedList::ValueList), 16 + sizeof(System::Collections::SortedList*)> __System_Collections_SortedList_ValueListSizeCheck;
  static_assert(sizeof(SortedList::ValueList) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(System::Collections::SortedList::ValueList*, "System.Collections", "SortedList/ValueList");
