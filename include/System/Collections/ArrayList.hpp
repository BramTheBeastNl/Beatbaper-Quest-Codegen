// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: ICollection because it is already included!
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Collections
namespace System::Collections {
  // Autogenerated type: System.Collections.ArrayList
  class ArrayList : public ::Il2CppObject, public System::Collections::IList, public System::ICloneable {
    public:
    // Nested type: System::Collections::ArrayList::ReadOnlyArrayList
    class ReadOnlyArrayList;
    // Nested type: System::Collections::ArrayList::ArrayListEnumeratorSimple
    class ArrayListEnumeratorSimple;
    // Nested type: System::Collections::ArrayList::ArrayListDebugView
    class ArrayListDebugView;
    // private System.Object[] _items
    // Offset: 0x10
    ::Array<::Il2CppObject*>* items;
    // private System.Int32 _size
    // Offset: 0x18
    int size;
    // private System.Int32 _version
    // Offset: 0x1C
    int version;
    // private System.Object _syncRoot
    // Offset: 0x20
    ::Il2CppObject* syncRoot;
    // Get static field: static private readonly System.Object[] emptyArray
    static ::Array<::Il2CppObject*>* _get_emptyArray();
    // Set static field: static private readonly System.Object[] emptyArray
    static void _set_emptyArray(::Array<::Il2CppObject*>* value);
    // public System.Void .ctor(System.Int32 capacity)
    // Offset: 0x15D1BD4
    static ArrayList* New_ctor(int capacity);
    // public System.Void .ctor(System.Collections.ICollection c)
    // Offset: 0x15D1D1C
    static ArrayList* New_ctor(System::Collections::ICollection* c);
    // public System.Void set_Capacity(System.Int32 value)
    // Offset: 0x15D1EBC
    void set_Capacity(int value);
    // public System.Object get_SyncRoot()
    // Offset: 0x15D200C
    ::Il2CppObject* get_SyncRoot();
    // public System.Void AddRange(System.Collections.ICollection c)
    // Offset: 0x15D2394
    void AddRange(System::Collections::ICollection* c);
    // public System.Void CopyTo(System.Array array)
    // Offset: 0x15D2564
    void CopyTo(System::Array* array);
    // public System.Void CopyTo(System.Int32 index, System.Array array, System.Int32 arrayIndex, System.Int32 count)
    // Offset: 0x15D263C
    void CopyTo(int index, System::Array* array, int arrayIndex, int count);
    // private System.Void EnsureCapacity(System.Int32 min)
    // Offset: 0x15D233C
    void EnsureCapacity(int min);
    // public System.Void InsertRange(System.Int32 index, System.Collections.ICollection c)
    // Offset: 0x15D2A1C
    void InsertRange(int index, System::Collections::ICollection* c);
    // static public System.Collections.ArrayList ReadOnly(System.Collections.ArrayList list)
    // Offset: 0x15D2C78
    static System::Collections::ArrayList* ReadOnly(System::Collections::ArrayList* list);
    // public System.Void RemoveRange(System.Int32 index, System.Int32 count)
    // Offset: 0x15D2F00
    void RemoveRange(int index, int count);
    // public System.Void Reverse()
    // Offset: 0x15D30B8
    void Reverse();
    // public System.Void Reverse(System.Int32 index, System.Int32 count)
    // Offset: 0x15D30FC
    void Reverse(int index, int count);
    // public System.Object[] ToArray()
    // Offset: 0x15D3258
    ::Array<::Il2CppObject*>* ToArray();
    // public System.Array ToArray(System.Type type)
    // Offset: 0x15D32D0
    System::Array* ToArray(System::Type* type);
    // static private System.Void .cctor()
    // Offset: 0x15D33F0
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x15D1B54
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static ArrayList* New_ctor();
    // public System.Int32 get_Count()
    // Offset: 0x15D1FFC
    // Implemented from: System.Collections.ICollection
    // Base method: System.Int32 ICollection::get_Count()
    int get_Count();
    // Creating proxy method: System_Collections_ICollection_get_Count
    // Maps to method: get_Count
    int System_Collections_ICollection_get_Count();
    // public System.Boolean get_IsReadOnly()
    // Offset: 0x15D2004
    // Implemented from: System.Collections.IList
    // Base method: System.Boolean IList::get_IsReadOnly()
    bool get_IsReadOnly();
    // Creating proxy method: System_Collections_IList_get_IsReadOnly
    // Maps to method: get_IsReadOnly
    bool System_Collections_IList_get_IsReadOnly();
    // public System.Object get_Item(System.Int32 index)
    // Offset: 0x15D2084
    // Implemented from: System.Collections.IList
    // Base method: System.Object IList::get_Item(System.Int32 index)
    ::Il2CppObject* get_Item(int index);
    // Creating proxy method: System_Collections_IList_get_Item
    // Maps to method: get_Item
    ::Il2CppObject* System_Collections_IList_get_Item(int index);
    // public System.Void set_Item(System.Int32 index, System.Object value)
    // Offset: 0x15D2164
    // Implemented from: System.Collections.IList
    // Base method: System.Void IList::set_Item(System.Int32 index, System.Object value)
    void set_Item(int index, ::Il2CppObject* value);
    // Creating proxy method: System_Collections_IList_set_Item
    // Maps to method: set_Item
    void System_Collections_IList_set_Item(int index, ::Il2CppObject* value);
    // public System.Int32 Add(System.Object value)
    // Offset: 0x15D2280
    // Implemented from: System.Collections.IList
    // Base method: System.Int32 IList::Add(System.Object value)
    int Add(::Il2CppObject* value);
    // Creating proxy method: System_Collections_IList_Add
    // Maps to method: Add
    int System_Collections_IList_Add(::Il2CppObject* value);
    // public System.Void Clear()
    // Offset: 0x15D23B0
    // Implemented from: System.Collections.IList
    // Base method: System.Void IList::Clear()
    void Clear();
    // Creating proxy method: System_Collections_IList_Clear
    // Maps to method: Clear
    void System_Collections_IList_Clear();
    // public System.Object Clone()
    // Offset: 0x15D23F4
    // Implemented from: System.ICloneable
    // Base method: System.Object ICloneable::Clone()
    ::Il2CppObject* Clone();
    // Creating proxy method: System_ICloneable_Clone
    // Maps to method: Clone
    ::Il2CppObject* System_ICloneable_Clone();
    // public System.Boolean Contains(System.Object item)
    // Offset: 0x15D2490
    // Implemented from: System.Collections.IList
    // Base method: System.Boolean IList::Contains(System.Object item)
    bool Contains(::Il2CppObject* item);
    // Creating proxy method: System_Collections_IList_Contains
    // Maps to method: Contains
    bool System_Collections_IList_Contains(::Il2CppObject* item);
    // public System.Void CopyTo(System.Array array, System.Int32 arrayIndex)
    // Offset: 0x15D2578
    // Implemented from: System.Collections.ICollection
    // Base method: System.Void ICollection::CopyTo(System.Array array, System.Int32 arrayIndex)
    void CopyTo(System::Array* array, int arrayIndex);
    // Creating proxy method: System_Collections_ICollection_CopyTo
    // Maps to method: CopyTo
    void System_Collections_ICollection_CopyTo(System::Array* array, int arrayIndex);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x15D272C
    // Implemented from: System.Collections.IEnumerable
    // Base method: System.Collections.IEnumerator IEnumerable::GetEnumerator()
    System::Collections::IEnumerator* GetEnumerator();
    // Creating proxy method: System_Collections_IEnumerable_GetEnumerator
    // Maps to method: GetEnumerator
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public System.Int32 IndexOf(System.Object value)
    // Offset: 0x15D28A8
    // Implemented from: System.Collections.IList
    // Base method: System.Int32 IList::IndexOf(System.Object value)
    int IndexOf(::Il2CppObject* value);
    // Creating proxy method: System_Collections_IList_IndexOf
    // Maps to method: IndexOf
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // public System.Void Insert(System.Int32 index, System.Object value)
    // Offset: 0x15D28BC
    // Implemented from: System.Collections.IList
    // Base method: System.Void IList::Insert(System.Int32 index, System.Object value)
    void Insert(int index, ::Il2CppObject* value);
    // Creating proxy method: System_Collections_IList_Insert
    // Maps to method: Insert
    void System_Collections_IList_Insert(int index, ::Il2CppObject* value);
    // public System.Void Remove(System.Object obj)
    // Offset: 0x15D2D94
    // Implemented from: System.Collections.IList
    // Base method: System.Void IList::Remove(System.Object obj)
    void Remove(::Il2CppObject* obj);
    // Creating proxy method: System_Collections_IList_Remove
    // Maps to method: Remove
    void System_Collections_IList_Remove(::Il2CppObject* obj);
    // public System.Void RemoveAt(System.Int32 index)
    // Offset: 0x15D2DE4
    // Implemented from: System.Collections.IList
    // Base method: System.Void IList::RemoveAt(System.Int32 index)
    void RemoveAt(int index);
    // Creating proxy method: System_Collections_IList_RemoveAt
    // Maps to method: RemoveAt
    void System_Collections_IList_RemoveAt(int index);
  }; // System.Collections.ArrayList
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Collections::ArrayList*, "System.Collections", "ArrayList");
#pragma pack(pop)
