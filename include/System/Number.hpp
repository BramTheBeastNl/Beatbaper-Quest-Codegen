// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Decimal
  struct Decimal;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: NumberFormatInfo
  class NumberFormatInfo;
  // Forward declaring type: NumberStyles
  struct NumberStyles;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Number
  // [FriendAccessAllowedAttribute] Offset: D7AA60
  class Number : public ::Il2CppObject {
    public:
    // Nested type: System::Number::NumberBuffer
    struct NumberBuffer;
    // Creating value type constructor for type: Number
    Number() noexcept {}
    // static public System.Boolean NumberBufferToDecimal(System.Byte* number, ref System.Decimal value)
    // Offset: 0x1825C1C
    static bool NumberBufferToDecimal(uint8_t* number, System::Decimal& value);
    // static System.Boolean NumberBufferToDouble(System.Byte* number, ref System.Double value)
    // Offset: 0x1825C20
    static bool NumberBufferToDouble(uint8_t* number, double& value);
    // static public System.String FormatDecimal(System.Decimal value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1825C24
    static ::Il2CppString* FormatDecimal(System::Decimal value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatDouble(System.Double value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1825D88
    static ::Il2CppString* FormatDouble(double value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatInt32(System.Int32 value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x181D82C
    static ::Il2CppString* FormatInt32(int value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatUInt32(System.UInt32 value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x181D9BC
    static ::Il2CppString* FormatUInt32(uint value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatInt64(System.Int64 value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x181F254
    static ::Il2CppString* FormatInt64(int64_t value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatUInt64(System.UInt64 value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x182614C
    static ::Il2CppString* FormatUInt64(uint64_t value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatSingle(System.Single value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1826278
    static ::Il2CppString* FormatSingle(float value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info);
    // static private System.Boolean HexNumberToInt32(ref System.Number/NumberBuffer number, ref System.Int32 value)
    // Offset: 0x1826424
    static bool HexNumberToInt32(System::Number::NumberBuffer& number, int& value);
    // static private System.Boolean HexNumberToInt64(ref System.Number/NumberBuffer number, ref System.Int64 value)
    // Offset: 0x18264F0
    static bool HexNumberToInt64(System::Number::NumberBuffer& number, int64_t& value);
    // static private System.Boolean HexNumberToUInt32(ref System.Number/NumberBuffer number, ref System.UInt32 value)
    // Offset: 0x1826458
    static bool HexNumberToUInt32(System::Number::NumberBuffer& number, uint& value);
    // static private System.Boolean HexNumberToUInt64(ref System.Number/NumberBuffer number, ref System.UInt64 value)
    // Offset: 0x1826524
    static bool HexNumberToUInt64(System::Number::NumberBuffer& number, uint64_t& value);
    // static private System.Boolean IsWhite(System.Char ch)
    // Offset: 0x18265C0
    static bool IsWhite(::Il2CppChar ch);
    // static private System.Boolean NumberToInt32(ref System.Number/NumberBuffer number, ref System.Int32 value)
    // Offset: 0x18265E8
    static bool NumberToInt32(System::Number::NumberBuffer& number, int& value);
    // static private System.Boolean NumberToInt64(ref System.Number/NumberBuffer number, ref System.Int64 value)
    // Offset: 0x1826674
    static bool NumberToInt64(System::Number::NumberBuffer& number, int64_t& value);
    // static private System.Boolean NumberToUInt32(ref System.Number/NumberBuffer number, ref System.UInt32 value)
    // Offset: 0x18266F8
    static bool NumberToUInt32(System::Number::NumberBuffer& number, uint& value);
    // static private System.Boolean NumberToUInt64(ref System.Number/NumberBuffer number, ref System.UInt64 value)
    // Offset: 0x182677C
    static bool NumberToUInt64(System::Number::NumberBuffer& number, uint64_t& value);
    // static private System.Char* MatchChars(System.Char* p, System.String str)
    // Offset: 0x1826800
    static ::Il2CppChar* MatchChars(::Il2CppChar* p, ::Il2CppString* str);
    // static private System.Char* MatchChars(System.Char* p, System.Char* str)
    // Offset: 0x1826874
    static ::Il2CppChar* MatchChars(::Il2CppChar* p, ::Il2CppChar* str);
    // static System.Decimal ParseDecimal(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x18268C0
    static System::Decimal ParseDecimal(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt);
    // static System.Double ParseDouble(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x1826BAC
    static double ParseDouble(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt);
    // static System.Int32 ParseInt32(System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info)
    // Offset: 0x181DC3C
    static int ParseInt32(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info);
    // static System.Int64 ParseInt64(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x181F3A0
    static int64_t ParseInt64(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt);
    // static private System.Boolean ParseNumber(ref System.Char* str, System.Globalization.NumberStyles options, ref System.Number/NumberBuffer number, System.Text.StringBuilder sb, System.Globalization.NumberFormatInfo numfmt, System.Boolean parseDecimal)
    // Offset: 0x1826E20
    static bool ParseNumber(::Il2CppChar*& str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Text::StringBuilder* sb, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal);
    // static System.Single ParseSingle(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x1827348
    static float ParseSingle(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt);
    // static System.UInt32 ParseUInt32(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x18275C4
    static uint ParseUInt32(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt);
    // static System.UInt64 ParseUInt64(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x1827710
    static uint64_t ParseUInt64(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt);
    // static private System.Void StringToNumber(System.String str, System.Globalization.NumberStyles options, ref System.Number/NumberBuffer number, System.Globalization.NumberFormatInfo info, System.Boolean parseDecimal)
    // Offset: 0x1826A30
    static void StringToNumber(::Il2CppString* str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Globalization::NumberFormatInfo* info, bool parseDecimal);
    // static private System.Boolean TrailingZeros(System.String s, System.Int32 index)
    // Offset: 0x182785C
    static bool TrailingZeros(::Il2CppString* s, int index);
    // static System.Boolean TryParseDouble(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt, out System.Double result)
    // Offset: 0x18278C4
    static bool TryParseDouble(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt, double& result);
    // static System.Boolean TryParseInt32(System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info, out System.Int32 result)
    // Offset: 0x181E834
    static bool TryParseInt32(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, int& result);
    // static System.Boolean TryParseInt64(System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info, out System.Int64 result)
    // Offset: 0x181F5C8
    static bool TryParseInt64(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, int64_t& result);
    // static System.Boolean TryParseSingle(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt, out System.Single result)
    // Offset: 0x18279E4
    static bool TryParseSingle(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt, float& result);
    // static System.Boolean TryParseUInt32(System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info, out System.UInt32 result)
    // Offset: 0x1827B3C
    static bool TryParseUInt32(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, uint& result);
    // static System.Boolean TryStringToNumber(System.String str, System.Globalization.NumberStyles options, ref System.Number/NumberBuffer number, System.Globalization.NumberFormatInfo numfmt, System.Boolean parseDecimal)
    // Offset: 0x1826E0C
    static bool TryStringToNumber(::Il2CppString* str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal);
    // static System.Boolean TryStringToNumber(System.String str, System.Globalization.NumberStyles options, ref System.Number/NumberBuffer number, System.Text.StringBuilder sb, System.Globalization.NumberFormatInfo numfmt, System.Boolean parseDecimal)
    // Offset: 0x1827C58
    static bool TryStringToNumber(::Il2CppString* str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Text::StringBuilder* sb, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal);
  }; // System.Number
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Number*, "System", "Number");
// Writing MetadataGetter for method: System::Number::NumberBufferToDecimal
// Il2CppName: NumberBufferToDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::NumberBufferToDouble
// Il2CppName: NumberBufferToDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::FormatDecimal
// Il2CppName: FormatDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::FormatDouble
// Il2CppName: FormatDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::FormatInt32
// Il2CppName: FormatInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::FormatUInt32
// Il2CppName: FormatUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::FormatInt64
// Il2CppName: FormatInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::FormatUInt64
// Il2CppName: FormatUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::FormatSingle
// Il2CppName: FormatSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::HexNumberToInt32
// Il2CppName: HexNumberToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::HexNumberToInt64
// Il2CppName: HexNumberToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::HexNumberToUInt32
// Il2CppName: HexNumberToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::HexNumberToUInt64
// Il2CppName: HexNumberToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::IsWhite
// Il2CppName: IsWhite
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::NumberToInt32
// Il2CppName: NumberToInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::NumberToInt64
// Il2CppName: NumberToInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::NumberToUInt32
// Il2CppName: NumberToUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::NumberToUInt64
// Il2CppName: NumberToUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::MatchChars
// Il2CppName: MatchChars
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::MatchChars
// Il2CppName: MatchChars
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::ParseDecimal
// Il2CppName: ParseDecimal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::ParseDouble
// Il2CppName: ParseDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::ParseInt32
// Il2CppName: ParseInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::ParseInt64
// Il2CppName: ParseInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::ParseNumber
// Il2CppName: ParseNumber
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::ParseSingle
// Il2CppName: ParseSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::ParseUInt32
// Il2CppName: ParseUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::ParseUInt64
// Il2CppName: ParseUInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::StringToNumber
// Il2CppName: StringToNumber
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::TrailingZeros
// Il2CppName: TrailingZeros
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::TryParseDouble
// Il2CppName: TryParseDouble
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::TryParseInt32
// Il2CppName: TryParseInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::TryParseInt64
// Il2CppName: TryParseInt64
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::TryParseSingle
// Il2CppName: TryParseSingle
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::TryParseUInt32
// Il2CppName: TryParseUInt32
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::TryStringToNumber
// Il2CppName: TryStringToNumber
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Number::TryStringToNumber
// Il2CppName: TryStringToNumber
// Cannot perform method pointer template specialization from operators!
