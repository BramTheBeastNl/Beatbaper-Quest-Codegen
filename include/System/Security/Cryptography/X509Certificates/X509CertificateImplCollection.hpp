// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Security::Cryptography::X509Certificates
namespace System::Security::Cryptography::X509Certificates {
  // Forward declaring type: X509CertificateImpl
  class X509CertificateImpl;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography.X509Certificates
namespace System::Security::Cryptography::X509Certificates {
  // Autogenerated type: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
  class X509CertificateImplCollection : public ::Il2CppObject, public System::IDisposable {
    public:
    // private System.Collections.Generic.List`1<System.Security.Cryptography.X509Certificates.X509CertificateImpl> list
    // Offset: 0x10
    System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>* list;
    // Creating conversion operator: operator System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>*
    constexpr operator System::Collections::Generic::List_1<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>*() const noexcept {
      return list;
    }
    // private System.Void .ctor(System.Security.Cryptography.X509Certificates.X509CertificateImplCollection other)
    // Offset: 0x16C0000
    static X509CertificateImplCollection* New_ctor(System::Security::Cryptography::X509Certificates::X509CertificateImplCollection* other);
    // public System.Int32 get_Count()
    // Offset: 0x16C0178
    int get_Count();
    // public System.Security.Cryptography.X509Certificates.X509CertificateImpl get_Item(System.Int32 index)
    // Offset: 0x16C01C8
    System::Security::Cryptography::X509Certificates::X509CertificateImpl* get_Item(int index);
    // public System.Void Add(System.Security.Cryptography.X509Certificates.X509CertificateImpl impl, System.Boolean takeOwnership)
    // Offset: 0x16BEA1C
    void Add(System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl, bool takeOwnership);
    // public System.Security.Cryptography.X509Certificates.X509CertificateImplCollection Clone()
    // Offset: 0x16BC8FC
    System::Security::Cryptography::X509Certificates::X509CertificateImplCollection* Clone();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x16C0240
    void Dispose(bool disposing);
    // public System.Void .ctor()
    // Offset: 0x16BE9A0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static X509CertificateImplCollection* New_ctor();
    // public System.Void Dispose()
    // Offset: 0x16BEDC4
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose();
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose();
    // protected override System.Void Finalize()
    // Offset: 0x16C03F4
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*, "System.Security.Cryptography.X509Certificates", "X509CertificateImplCollection");
#pragma pack(pop)
