// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509RevocationFlag
#include "System/Security/Cryptography/X509Certificates/X509RevocationFlag.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509RevocationMode
#include "System/Security/Cryptography/X509Certificates/X509RevocationMode.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509VerificationFlags
#include "System/Security/Cryptography/X509Certificates/X509VerificationFlags.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: OidCollection
  class OidCollection;
}
// Forward declaring namespace: System::Security::Cryptography::X509Certificates
namespace System::Security::Cryptography::X509Certificates {
  // Forward declaring type: X509CertificateCollection
  class X509CertificateCollection;
  // Forward declaring type: X509Certificate2Collection
  class X509Certificate2Collection;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography.X509Certificates
namespace System::Security::Cryptography::X509Certificates {
  // Autogenerated type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  class X509ChainPolicy : public ::Il2CppObject {
    public:
    // private System.Security.Cryptography.OidCollection apps
    // Offset: 0x10
    System::Security::Cryptography::OidCollection* apps;
    // private System.Security.Cryptography.OidCollection cert
    // Offset: 0x18
    System::Security::Cryptography::OidCollection* cert;
    // private System.Security.Cryptography.X509Certificates.X509CertificateCollection store
    // Offset: 0x20
    System::Security::Cryptography::X509Certificates::X509CertificateCollection* store;
    // private System.Security.Cryptography.X509Certificates.X509Certificate2Collection store2
    // Offset: 0x28
    System::Security::Cryptography::X509Certificates::X509Certificate2Collection* store2;
    // private System.Security.Cryptography.X509Certificates.X509RevocationFlag rflag
    // Offset: 0x30
    System::Security::Cryptography::X509Certificates::X509RevocationFlag rflag;
    // private System.Security.Cryptography.X509Certificates.X509RevocationMode mode
    // Offset: 0x34
    System::Security::Cryptography::X509Certificates::X509RevocationMode mode;
    // private System.TimeSpan timeout
    // Offset: 0x38
    System::TimeSpan timeout;
    // private System.Security.Cryptography.X509Certificates.X509VerificationFlags vflags
    // Offset: 0x40
    System::Security::Cryptography::X509Certificates::X509VerificationFlags vflags;
    // private System.DateTime vtime
    // Offset: 0x48
    System::DateTime vtime;
    // System.Void .ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection store)
    // Offset: 0x147FA40
    static X509ChainPolicy* New_ctor(System::Security::Cryptography::X509Certificates::X509CertificateCollection* store);
    // public System.Security.Cryptography.X509Certificates.X509Certificate2Collection get_ExtraStore()
    // Offset: 0x147D808
    System::Security::Cryptography::X509Certificates::X509Certificate2Collection* get_ExtraStore();
    // public System.Security.Cryptography.X509Certificates.X509RevocationFlag get_RevocationFlag()
    // Offset: 0x147FA7C
    System::Security::Cryptography::X509Certificates::X509RevocationFlag get_RevocationFlag();
    // public System.Void set_RevocationFlag(System.Security.Cryptography.X509Certificates.X509RevocationFlag value)
    // Offset: 0x147FA84
    void set_RevocationFlag(System::Security::Cryptography::X509Certificates::X509RevocationFlag value);
    // public System.Security.Cryptography.X509Certificates.X509RevocationMode get_RevocationMode()
    // Offset: 0x147FB18
    System::Security::Cryptography::X509Certificates::X509RevocationMode get_RevocationMode();
    // public System.Void set_RevocationMode(System.Security.Cryptography.X509Certificates.X509RevocationMode value)
    // Offset: 0x147FB20
    void set_RevocationMode(System::Security::Cryptography::X509Certificates::X509RevocationMode value);
    // public System.Void set_UrlRetrievalTimeout(System.TimeSpan value)
    // Offset: 0x147FBB4
    void set_UrlRetrievalTimeout(System::TimeSpan value);
    // public System.Security.Cryptography.X509Certificates.X509VerificationFlags get_VerificationFlags()
    // Offset: 0x147FBBC
    System::Security::Cryptography::X509Certificates::X509VerificationFlags get_VerificationFlags();
    // public System.Void set_VerificationFlags(System.Security.Cryptography.X509Certificates.X509VerificationFlags value)
    // Offset: 0x147FBC4
    void set_VerificationFlags(System::Security::Cryptography::X509Certificates::X509VerificationFlags value);
    // public System.DateTime get_VerificationTime()
    // Offset: 0x147FC58
    System::DateTime get_VerificationTime();
    // public System.Void set_VerificationTime(System.DateTime value)
    // Offset: 0x147FC60
    void set_VerificationTime(System::DateTime value);
    // public System.Void Reset()
    // Offset: 0x147F930
    void Reset();
    // public System.Void .ctor()
    // Offset: 0x147C270
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static X509ChainPolicy* New_ctor();
  }; // System.Security.Cryptography.X509Certificates.X509ChainPolicy
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Security::Cryptography::X509Certificates::X509ChainPolicy*, "System.Security.Cryptography.X509Certificates", "X509ChainPolicy");
#pragma pack(pop)
