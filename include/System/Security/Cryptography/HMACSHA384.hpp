// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.HMAC
#include "System/Security/Cryptography/HMAC.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x62
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.HMACSHA384
  // [ComVisibleAttribute] Offset: D7D90C
  class HMACSHA384 : public System::Security::Cryptography::HMAC {
    public:
    // private System.Boolean m_useLegacyBlockSize
    // Size: 0x1
    // Offset: 0x61
    bool m_useLegacyBlockSize;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: HMACSHA384
    HMACSHA384(bool m_useLegacyBlockSize_ = {}) noexcept : m_useLegacyBlockSize{m_useLegacyBlockSize_} {}
    // public System.Void .ctor(System.Byte[] key)
    // Offset: 0x196AD78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HMACSHA384* New_ctor(::Array<uint8_t>* key) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::HMACSHA384::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HMACSHA384*, creationType>(key)));
    }
    // private System.Int32 get_BlockSize()
    // Offset: 0x196AE5C
    int get_BlockSize();
    // public System.Void .ctor()
    // Offset: 0x1962BD4
    // Implemented from: System.Security.Cryptography.HMAC
    // Base method: System.Void HMAC::.ctor()
    // Base method: System.Void KeyedHashAlgorithm::.ctor()
    // Base method: System.Void HashAlgorithm::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HMACSHA384* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::HMACSHA384::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HMACSHA384*, creationType>()));
    }
  }; // System.Security.Cryptography.HMACSHA384
  #pragma pack(pop)
  static check_size<sizeof(HMACSHA384), 97 + sizeof(bool)> __System_Security_Cryptography_HMACSHA384SizeCheck;
  static_assert(sizeof(HMACSHA384) == 0x62);
}
DEFINE_IL2CPP_ARG_TYPE(System::Security::Cryptography::HMACSHA384*, "System.Security.Cryptography", "HMACSHA384");
// Writing MetadataGetter for method: HMACSHA384::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HMACSHA384::*)(::Array<uint8_t>*)>(&HMACSHA384::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HMACSHA384*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HMACSHA384::*)(::Array<uint8_t>*)>(&HMACSHA384::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HMACSHA384*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: HMACSHA384::get_BlockSize
// Il2CppName: get_BlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HMACSHA384::*)()>(&HMACSHA384::get_BlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HMACSHA384*), "get_BlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HMACSHA384::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HMACSHA384::*)()>(&HMACSHA384::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HMACSHA384*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HMACSHA384::*)()>(&HMACSHA384::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HMACSHA384*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
