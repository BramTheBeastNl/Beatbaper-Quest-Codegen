// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: MasterServer
namespace MasterServer {
  // Forward declaring type: DedicatedServerMasterServerMessageType
  struct DedicatedServerMasterServerMessageType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MasterServer::DedicatedServerMasterServerMessageType, "MasterServer", "DedicatedServerMasterServerMessageType");
// Type namespace: MasterServer
namespace MasterServer {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: MasterServer.DedicatedServerMasterServerMessageType
  // [TokenAttribute] Offset: FFFFFFFF
  struct DedicatedServerMasterServerMessageType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: DedicatedServerMasterServerMessageType
    constexpr DedicatedServerMasterServerMessageType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating interface conversion operator: i_Enum
    inline ::System::Enum* i_Enum() noexcept {
      return reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerRequest
    static constexpr const int AuthenticateDedicatedServerRequest = 0;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerRequest
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_AuthenticateDedicatedServerRequest();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerRequest
    static void _set_AuthenticateDedicatedServerRequest(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerResponse
    static constexpr const int AuthenticateDedicatedServerResponse = 1;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerResponse
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_AuthenticateDedicatedServerResponse();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerResponse
    static void _set_AuthenticateDedicatedServerResponse(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceRequest
    static constexpr const int CreateDedicatedServerInstanceRequest = 4;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceRequest
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_CreateDedicatedServerInstanceRequest();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceRequest
    static void _set_CreateDedicatedServerInstanceRequest(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceResponse
    static constexpr const int CreateDedicatedServerInstanceResponse = 5;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceResponse
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_CreateDedicatedServerInstanceResponse();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceResponse
    static void _set_CreateDedicatedServerInstanceResponse(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceNoLongerAvailableRequest
    static constexpr const int DedicatedServerInstanceNoLongerAvailableRequest = 6;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceNoLongerAvailableRequest
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_DedicatedServerInstanceNoLongerAvailableRequest();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceNoLongerAvailableRequest
    static void _set_DedicatedServerInstanceNoLongerAvailableRequest(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatRequest
    static constexpr const int DedicatedServerHeartbeatRequest = 7;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatRequest
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_DedicatedServerHeartbeatRequest();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatRequest
    static void _set_DedicatedServerHeartbeatRequest(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatResponse
    static constexpr const int DedicatedServerHeartbeatResponse = 8;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatResponse
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_DedicatedServerHeartbeatResponse();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatResponse
    static void _set_DedicatedServerHeartbeatResponse(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceStatusUpdateRequest
    static constexpr const int DedicatedServerInstanceStatusUpdateRequest = 10;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceStatusUpdateRequest
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_DedicatedServerInstanceStatusUpdateRequest();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceStatusUpdateRequest
    static void _set_DedicatedServerInstanceStatusUpdateRequest(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerShutDownRequest
    static constexpr const int DedicatedServerShutDownRequest = 11;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerShutDownRequest
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_DedicatedServerShutDownRequest();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerShutDownRequest
    static void _set_DedicatedServerShutDownRequest(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionRequest
    static constexpr const int DedicatedServerPrepareForConnectionRequest = 12;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionRequest
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_DedicatedServerPrepareForConnectionRequest();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionRequest
    static void _set_DedicatedServerPrepareForConnectionRequest(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType MessageReceivedAcknowledge
    static constexpr const int MessageReceivedAcknowledge = 13;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType MessageReceivedAcknowledge
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_MessageReceivedAcknowledge();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType MessageReceivedAcknowledge
    static void _set_MessageReceivedAcknowledge(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType MultipartMessage
    static constexpr const int MultipartMessage = 14;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType MultipartMessage
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_MultipartMessage();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType MultipartMessage
    static void _set_MultipartMessage(::MasterServer::DedicatedServerMasterServerMessageType value);
    // static field const value: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionResponse
    static constexpr const int DedicatedServerPrepareForConnectionResponse = 15;
    // Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionResponse
    static ::MasterServer::DedicatedServerMasterServerMessageType _get_DedicatedServerPrepareForConnectionResponse();
    // Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionResponse
    static void _set_DedicatedServerPrepareForConnectionResponse(::MasterServer::DedicatedServerMasterServerMessageType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // MasterServer.DedicatedServerMasterServerMessageType
  #pragma pack(pop)
  static check_size<sizeof(DedicatedServerMasterServerMessageType), 0 + sizeof(int)> __MasterServer_DedicatedServerMasterServerMessageTypeSizeCheck;
  static_assert(sizeof(DedicatedServerMasterServerMessageType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
