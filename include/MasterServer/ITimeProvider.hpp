// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Completed forward declares
// Type namespace: MasterServer
namespace MasterServer {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: MasterServer.ITimeProvider
  class ITimeProvider {
    public:
    // Creating value type constructor for type: ITimeProvider
    ITimeProvider() noexcept {}
    // public System.Int64 GetTimeMs()
    // Offset: 0xFFFFFFFF
    int64_t GetTimeMs();
    // public System.Threading.Tasks.Task DelayMs(System.Int32 millis, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFF
    System::Threading::Tasks::Task* DelayMs(int millis, System::Threading::CancellationToken cancellationToken);
  }; // MasterServer.ITimeProvider
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(MasterServer::ITimeProvider*, "MasterServer", "ITimeProvider");
// Writing MetadataGetter for method: MasterServer::ITimeProvider::GetTimeMs
// Il2CppName: GetTimeMs
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: MasterServer::ITimeProvider::DelayMs
// Il2CppName: DelayMs
// Cannot perform method pointer template specialization from operators!
