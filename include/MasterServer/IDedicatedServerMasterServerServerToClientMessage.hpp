// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MasterServer.IDedicatedServerMasterServerMessage
#include "MasterServer/IDedicatedServerMasterServerMessage.hpp"
// Completed includes
// Type namespace: MasterServer
namespace MasterServer {
  // Forward declaring type: IDedicatedServerMasterServerServerToClientMessage
  class IDedicatedServerMasterServerServerToClientMessage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MasterServer::IDedicatedServerMasterServerServerToClientMessage);
DEFINE_IL2CPP_ARG_TYPE(::MasterServer::IDedicatedServerMasterServerServerToClientMessage*, "MasterServer", "IDedicatedServerMasterServerServerToClientMessage");
// Type namespace: MasterServer
namespace MasterServer {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: MasterServer.IDedicatedServerMasterServerServerToClientMessage
  // [TokenAttribute] Offset: FFFFFFFF
  class IDedicatedServerMasterServerServerToClientMessage/*, public ::MasterServer::IDedicatedServerMasterServerMessage*/ {
    public:
    // Creating interface conversion operator: operator ::MasterServer::IDedicatedServerMasterServerMessage
    operator ::MasterServer::IDedicatedServerMasterServerMessage() noexcept {
      return *reinterpret_cast<::MasterServer::IDedicatedServerMasterServerMessage*>(this);
    }
    // Creating interface conversion operator: i_IDedicatedServerMasterServerMessage
    inline ::MasterServer::IDedicatedServerMasterServerMessage* i_IDedicatedServerMasterServerMessage() noexcept {
      return reinterpret_cast<::MasterServer::IDedicatedServerMasterServerMessage*>(this);
    }
  }; // MasterServer.IDedicatedServerMasterServerServerToClientMessage
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
