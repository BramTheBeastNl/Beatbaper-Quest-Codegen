// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseAnalyticsManager
#include "MasterServer/BaseAnalyticsManager.hpp"
// Including type: MasterServer.BaseAnalyticsManager/IMetric
#include "MasterServer/BaseAnalyticsManager_IMetric.hpp"
// Including type: MasterServer.AnalyticsMetricUnit
#include "MasterServer/AnalyticsMetricUnit.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IReadOnlyDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IReadOnlyDictionary_2;
}
// Completed forward declares
// Type namespace: MasterServer
namespace MasterServer {
  // Autogenerated type: MasterServer.BaseAnalyticsManager/AnalyticsMetric
  class BaseAnalyticsManager::AnalyticsMetric : public ::Il2CppObject/*, public MasterServer::BaseAnalyticsManager::IMetric*/ {
    public:
    // private readonly System.String <metricName>k__BackingField
    // Offset: 0x10
    ::Il2CppString* metricName;
    // private readonly System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.String> <tags>k__BackingField
    // Offset: 0x18
    System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, ::Il2CppString*>* tags;
    // private readonly MasterServer.AnalyticsMetricUnit <unit>k__BackingField
    // Offset: 0x20
    MasterServer::AnalyticsMetricUnit unit;
    // Creating interface conversion operator: operator MasterServer::BaseAnalyticsManager::IMetric
    operator MasterServer::BaseAnalyticsManager::IMetric() noexcept {
      return *reinterpret_cast<MasterServer::BaseAnalyticsManager::IMetric*>(this);
    }
    // protected System.Void .ctor(System.String metricName, System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.String> tags, MasterServer.AnalyticsMetricUnit unit)
    // Offset: 0x2165C9C
    static BaseAnalyticsManager::AnalyticsMetric* New_ctor(::Il2CppString* metricName, System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, ::Il2CppString*>* tags, MasterServer::AnalyticsMetricUnit unit);
    // public System.String get_metricName()
    // Offset: 0x2165C84
    // Implemented from: MasterServer.BaseAnalyticsManager/IMetric
    // Base method: System.String IMetric::get_metricName()
    ::Il2CppString* get_metricName();
    // public System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.String> get_tags()
    // Offset: 0x2165C8C
    // Implemented from: MasterServer.BaseAnalyticsManager/IMetric
    // Base method: System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.String> IMetric::get_tags()
    System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, ::Il2CppString*>* get_tags();
    // public MasterServer.AnalyticsMetricUnit get_unit()
    // Offset: 0x2165C94
    // Implemented from: MasterServer.BaseAnalyticsManager/IMetric
    // Base method: MasterServer.AnalyticsMetricUnit IMetric::get_unit()
    MasterServer::AnalyticsMetricUnit get_unit();
    // public System.Double GetValueAndReset()
    // Offset: 0xFFFFFFFF
    // Implemented from: MasterServer.BaseAnalyticsManager/IMetric
    // Base method: System.Double IMetric::GetValueAndReset()
    double GetValueAndReset();
  }; // MasterServer.BaseAnalyticsManager/AnalyticsMetric
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(MasterServer::BaseAnalyticsManager::AnalyticsMetric*, "MasterServer", "BaseAnalyticsManager/AnalyticsMetric");
#pragma pack(pop)
