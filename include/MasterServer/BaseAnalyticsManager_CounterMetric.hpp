// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseAnalyticsManager
#include "MasterServer/BaseAnalyticsManager.hpp"
// Including type: MasterServer.BaseAnalyticsManager/AnalyticsMetric
#include "MasterServer/BaseAnalyticsManager_AnalyticsMetric.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IReadOnlyDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IReadOnlyDictionary_2;
}
// Completed forward declares
// Type namespace: MasterServer
namespace MasterServer {
  // Autogenerated type: MasterServer.BaseAnalyticsManager/CounterMetric
  class BaseAnalyticsManager::CounterMetric : public MasterServer::BaseAnalyticsManager::AnalyticsMetric {
    public:
    // private System.Int64 _count
    // Offset: 0x28
    int64_t count;
    // Creating conversion operator: operator int64_t
    constexpr operator int64_t() const noexcept {
      return count;
    }
    // public System.Void .ctor(System.String metricName, System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.String> tags)
    // Offset: 0x1169A3C
    static BaseAnalyticsManager::CounterMetric* New_ctor(::Il2CppString* metricName, System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, ::Il2CppString*>* tags);
    // public System.Void Increment()
    // Offset: 0x1169A44
    void Increment();
    // public override System.Double GetValueAndReset()
    // Offset: 0x116B320
    // Implemented from: MasterServer.BaseAnalyticsManager/AnalyticsMetric
    // Base method: System.Double AnalyticsMetric::GetValueAndReset()
    double GetValueAndReset();
  }; // MasterServer.BaseAnalyticsManager/CounterMetric
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(MasterServer::BaseAnalyticsManager::CounterMetric*, "MasterServer", "BaseAnalyticsManager/CounterMetric");
#pragma pack(pop)
