// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MasterServer
namespace MasterServer {
  // Forward declaring type: IMasterServerUnreliableMessage
  class IMasterServerUnreliableMessage;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: MasterServer
namespace MasterServer {
  // Autogenerated type: MasterServer.MessageHandler/<>c__DisplayClass75_0`1
  template<typename T>
  class MessageHandler::$$c__DisplayClass75_0_1 : public ::Il2CppObject {
    public:
    // public MasterServer.MessageHandler <>4__this
    // Offset: 0x0
    MasterServer::MessageHandler* $$4__this;
    // public System.Action`2<T,MasterServer.MessageHandler/MessageOrigin> customHandler
    // Offset: 0x0
    System::Action_2<T, MasterServer::MessageHandler::MessageOrigin>* customHandler;
    // System.Void <CustomUnreliableResponseHandler>b__0(T packet, MasterServer.MessageHandler/MessageOrigin origin)
    // Offset: 0xFFFFFFFF
    void $CustomUnreliableResponseHandler$b__0(T packet, MasterServer::MessageHandler::MessageOrigin origin) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("$$c__DisplayClass75_0_1").WithContext("<CustomUnreliableResponseHandler>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "<CustomUnreliableResponseHandler>b__0", {}, ::il2cpp_utils::ExtractTypes(packet, origin))));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static MessageHandler::$$c__DisplayClass75_0_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("$$c__DisplayClass75_0_1").WithContext(".ctor");
      return THROW_UNLESS(::il2cpp_utils::New<MessageHandler::$$c__DisplayClass75_0_1<T>*>());
    }
  }; // MasterServer.MessageHandler/<>c__DisplayClass75_0`1
  // Could not write size check! Type: MasterServer.MessageHandler/<>c__DisplayClass75_0`1 is generic!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(MasterServer::MessageHandler::$$c__DisplayClass75_0_1, "MasterServer", "MessageHandler/<>c__DisplayClass75_0`1");
#pragma pack(pop)
