// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityAction`1<T0>
  template<typename T0>
  class UnityAction_1;
}
// Completed forward declares
// Type namespace: TMPro
namespace TMPro {
  // Autogenerated type: TMPro.TMP_ObjectPool`1
  template<typename T>
  class TMP_ObjectPool_1 : public ::Il2CppObject {
    public:
    // private readonly System.Collections.Generic.Stack`1<T> m_Stack
    // Offset: 0x0
    System::Collections::Generic::Stack_1<T>* m_Stack;
    // private readonly UnityEngine.Events.UnityAction`1<T> m_ActionOnGet
    // Offset: 0x0
    UnityEngine::Events::UnityAction_1<T>* m_ActionOnGet;
    // private readonly UnityEngine.Events.UnityAction`1<T> m_ActionOnRelease
    // Offset: 0x0
    UnityEngine::Events::UnityAction_1<T>* m_ActionOnRelease;
    // private System.Int32 <countAll>k__BackingField
    // Offset: 0x0
    int countAll;
    // public System.Int32 get_countAll()
    // Offset: 0xFFFFFFFF
    int get_countAll() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_ObjectPool_1").WithContext("get_countAll");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_countAll", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
    }
    // private System.Void set_countAll(System.Int32 value)
    // Offset: 0xFFFFFFFF
    void set_countAll(int value) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_ObjectPool_1").WithContext("set_countAll");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_countAll", {}, ::il2cpp_utils::ExtractTypes(value)));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // public System.Int32 get_countActive()
    // Offset: 0xFFFFFFFF
    int get_countActive() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_ObjectPool_1").WithContext("get_countActive");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_countActive", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
    }
    // public System.Int32 get_countInactive()
    // Offset: 0xFFFFFFFF
    int get_countInactive() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_ObjectPool_1").WithContext("get_countInactive");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_countInactive", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
    }
    // public System.Void .ctor(UnityEngine.Events.UnityAction`1<T> actionOnGet, UnityEngine.Events.UnityAction`1<T> actionOnRelease)
    // Offset: 0xFFFFFFFF
    static TMP_ObjectPool_1<T>* New_ctor(UnityEngine::Events::UnityAction_1<T>* actionOnGet, UnityEngine::Events::UnityAction_1<T>* actionOnRelease) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_ObjectPool_1").WithContext(".ctor");
      return THROW_UNLESS(::il2cpp_utils::New<TMP_ObjectPool_1<T>*>(actionOnGet, actionOnRelease));
    }
    // public T Get()
    // Offset: 0xFFFFFFFF
    T Get() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_ObjectPool_1").WithContext("Get");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<T>(), "Get", {}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<T, false>(this, ___internal__method);
    }
    // public System.Void Release(T element)
    // Offset: 0xFFFFFFFF
    void Release(T element) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("TMPro").WithContext("TMP_ObjectPool_1").WithContext("Release");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Release", {}, ::il2cpp_utils::ExtractTypes(element)));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
    }
  }; // TMPro.TMP_ObjectPool`1
  // Could not write size check! Type: TMPro.TMP_ObjectPool`1 is generic!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(TMPro::TMP_ObjectPool_1, "TMPro", "TMP_ObjectPool`1");
#pragma pack(pop)
