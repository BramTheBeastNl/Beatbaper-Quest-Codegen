// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
// Including type: TMPro.MaskingTypes
#include "TMPro/MaskingTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Skipping declaration: Vector4 because it is already included!
  // Forward declaring type: Material
  class Material;
  // Skipping declaration: Color32 because it is already included!
  // Forward declaring type: Bounds
  struct Bounds;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Mesh
  class Mesh;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TMP_SubMesh
  class TMP_SubMesh;
  // Forward declaring type: TextContainer
  class TextContainer;
  // Forward declaring type: TMP_TextInfo
  class TMP_TextInfo;
  // Forward declaring type: TMP_VertexDataUpdateFlags
  struct TMP_VertexDataUpdateFlags;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: CanvasUpdate
  struct CanvasUpdate;
}
// Completed forward declares
// Type namespace: TMPro
namespace TMPro {
  // WARNING Size may be invalid!
  // Autogenerated type: TMPro.TextMeshPro
  // [DisallowMultipleComponent] Offset: DD56C8
  // [RequireComponent] Offset: DD56C8
  // [RequireComponent] Offset: DD56C8
  // [AddComponentMenu] Offset: DD56C8
  // [ExecuteAlways] Offset: DD56C8
  class TextMeshPro : public TMPro::TMP_Text/*, public UnityEngine::UI::ILayoutElement*/ {
    public:
    // private System.Boolean m_hasFontAssetChanged
    // Size: 0x1
    // Offset: 0xB30
    bool m_hasFontAssetChanged;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Single m_previousLossyScaleY
    // Size: 0x4
    // Offset: 0xB34
    float m_previousLossyScaleY;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Renderer m_renderer
    // Size: 0x8
    // Offset: 0xB38
    UnityEngine::Renderer* m_renderer;
    // Field size check
    static_assert(sizeof(UnityEngine::Renderer*) == 0x8);
    // private UnityEngine.MeshFilter m_meshFilter
    // Size: 0x8
    // Offset: 0xB40
    UnityEngine::MeshFilter* m_meshFilter;
    // Field size check
    static_assert(sizeof(UnityEngine::MeshFilter*) == 0x8);
    // private System.Boolean m_isFirstAllocation
    // Size: 0x1
    // Offset: 0xB48
    bool m_isFirstAllocation;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Int32 m_max_characters
    // Size: 0x4
    // Offset: 0xB4C
    int m_max_characters;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_max_numberOfLines
    // Size: 0x4
    // Offset: 0xB50
    int m_max_numberOfLines;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected TMPro.TMP_SubMesh[] m_subTextObjects
    // Size: 0x8
    // Offset: 0xB58
    ::Array<TMPro::TMP_SubMesh*>* m_subTextObjects;
    // Field size check
    static_assert(sizeof(::Array<TMPro::TMP_SubMesh*>*) == 0x8);
    // private System.Boolean m_isMaskingEnabled
    // Size: 0x1
    // Offset: 0xB60
    bool m_isMaskingEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean isMaskUpdateRequired
    // Size: 0x1
    // Offset: 0xB61
    bool isMaskUpdateRequired;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private TMPro.MaskingTypes m_maskType
    // Size: 0x4
    // Offset: 0xB64
    TMPro::MaskingTypes m_maskType;
    // Field size check
    static_assert(sizeof(TMPro::MaskingTypes) == 0x4);
    // private UnityEngine.Matrix4x4 m_EnvMapMatrix
    // Size: 0x40
    // Offset: 0xB68
    UnityEngine::Matrix4x4 m_EnvMapMatrix;
    // Field size check
    static_assert(sizeof(UnityEngine::Matrix4x4) == 0x40);
    // private UnityEngine.Vector3[] m_RectTransformCorners
    // Size: 0x8
    // Offset: 0xBA8
    ::Array<UnityEngine::Vector3>* m_RectTransformCorners;
    // Field size check
    static_assert(sizeof(::Array<UnityEngine::Vector3>*) == 0x8);
    // private System.Boolean m_isRegisteredForEvents
    // Size: 0x1
    // Offset: 0xBB0
    bool m_isRegisteredForEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Int32 loopCountA
    // Size: 0x4
    // Offset: 0xBB4
    int loopCountA;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_currentAutoSizeMode
    // Size: 0x1
    // Offset: 0xBB8
    bool m_currentAutoSizeMode;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: TextMeshPro
    TextMeshPro(bool m_hasFontAssetChanged_ = {}, float m_previousLossyScaleY_ = {}, UnityEngine::Renderer* m_renderer_ = {}, UnityEngine::MeshFilter* m_meshFilter_ = {}, bool m_isFirstAllocation_ = {}, int m_max_characters_ = {}, int m_max_numberOfLines_ = {}, ::Array<TMPro::TMP_SubMesh*>* m_subTextObjects_ = {}, bool m_isMaskingEnabled_ = {}, bool isMaskUpdateRequired_ = {}, TMPro::MaskingTypes m_maskType_ = {}, UnityEngine::Matrix4x4 m_EnvMapMatrix_ = {}, ::Array<UnityEngine::Vector3>* m_RectTransformCorners_ = {}, bool m_isRegisteredForEvents_ = {}, int loopCountA_ = {}, bool m_currentAutoSizeMode_ = {}) noexcept : m_hasFontAssetChanged{m_hasFontAssetChanged_}, m_previousLossyScaleY{m_previousLossyScaleY_}, m_renderer{m_renderer_}, m_meshFilter{m_meshFilter_}, m_isFirstAllocation{m_isFirstAllocation_}, m_max_characters{m_max_characters_}, m_max_numberOfLines{m_max_numberOfLines_}, m_subTextObjects{m_subTextObjects_}, m_isMaskingEnabled{m_isMaskingEnabled_}, isMaskUpdateRequired{isMaskUpdateRequired_}, m_maskType{m_maskType_}, m_EnvMapMatrix{m_EnvMapMatrix_}, m_RectTransformCorners{m_RectTransformCorners_}, m_isRegisteredForEvents{m_isRegisteredForEvents_}, loopCountA{loopCountA_}, m_currentAutoSizeMode{m_currentAutoSizeMode_} {}
    // Creating interface conversion operator: operator UnityEngine::UI::ILayoutElement
    operator UnityEngine::UI::ILayoutElement() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ILayoutElement*>(this);
    }
    // private System.Void UpdateEnvMapMatrix()
    // Offset: 0x1403DF8
    void UpdateEnvMapMatrix();
    // private System.Void SetMask(TMPro.MaskingTypes maskType)
    // Offset: 0x14040EC
    void SetMask(TMPro::MaskingTypes maskType);
    // private System.Void SetMaskCoordinates(UnityEngine.Vector4 coords)
    // Offset: 0x1404270
    void SetMaskCoordinates(UnityEngine::Vector4 coords);
    // private System.Void SetMaskCoordinates(UnityEngine.Vector4 coords, System.Single softX, System.Single softY)
    // Offset: 0x1404320
    void SetMaskCoordinates(UnityEngine::Vector4 coords, float softX, float softY);
    // private System.Void EnableMasking()
    // Offset: 0x1404428
    void EnableMasking();
    // private System.Void DisableMasking()
    // Offset: 0x14045D4
    void DisableMasking();
    // private System.Void UpdateMask()
    // Offset: 0x1404544
    void UpdateMask();
    // private System.Void CreateMaterialInstance()
    // Offset: 0x14046EC
    void CreateMaterialInstance();
    // private System.Void SetPerspectiveCorrection()
    // Offset: 0x1405764
    void SetPerspectiveCorrection();
    // private System.Void OnPreRenderObject()
    // Offset: 0x1407B10
    void OnPreRenderObject();
    // private System.Void SetMeshFilters(System.Boolean state)
    // Offset: 0x140FDBC
    void SetMeshFilters(bool state);
    // private System.Void UpdateSDFScale(System.Single scaleDelta)
    // Offset: 0x1407918
    void UpdateSDFScale(float scaleDelta);
    // public System.Int32 get_sortingLayerID()
    // Offset: 0x1410984
    int get_sortingLayerID();
    // public System.Void set_sortingLayerID(System.Int32 value)
    // Offset: 0x14109A0
    void set_sortingLayerID(int value);
    // public System.Int32 get_sortingOrder()
    // Offset: 0x14109BC
    int get_sortingOrder();
    // public System.Void set_sortingOrder(System.Int32 value)
    // Offset: 0x14109D8
    void set_sortingOrder(int value);
    // public TMPro.TextContainer get_textContainer()
    // Offset: 0x1410A5C
    TMPro::TextContainer* get_textContainer();
    // public UnityEngine.Renderer get_renderer()
    // Offset: 0x1410A64
    UnityEngine::Renderer* get_renderer();
    // public UnityEngine.MeshFilter get_meshFilter()
    // Offset: 0x1403720
    UnityEngine::MeshFilter* get_meshFilter();
    // public TMPro.MaskingTypes get_maskType()
    // Offset: 0x1410BC8
    TMPro::MaskingTypes get_maskType();
    // public System.Void set_maskType(TMPro.MaskingTypes value)
    // Offset: 0x1410BD0
    void set_maskType(TMPro::MaskingTypes value);
    // public System.Void SetMask(TMPro.MaskingTypes type, UnityEngine.Vector4 maskCoords)
    // Offset: 0x1410BD8
    void SetMask(TMPro::MaskingTypes type, UnityEngine::Vector4 maskCoords);
    // public System.Void SetMask(TMPro.MaskingTypes type, UnityEngine.Vector4 maskCoords, System.Single softnessX, System.Single softnessY)
    // Offset: 0x1410C2C
    void SetMask(TMPro::MaskingTypes type, UnityEngine::Vector4 maskCoords, float softnessX, float softnessY);
    // public System.Void UpdateFontAsset()
    // Offset: 0x141164C
    void UpdateFontAsset();
    // public System.Void CalculateLayoutInputHorizontal()
    // Offset: 0x141165C
    void CalculateLayoutInputHorizontal();
    // public System.Void CalculateLayoutInputVertical()
    // Offset: 0x141178C
    void CalculateLayoutInputVertical();
    // protected override System.Void Awake()
    // Offset: 0x1403164
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::Awake()
    void Awake();
    // protected override System.Void OnEnable()
    // Offset: 0x1403654
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x14037B8
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnDisable()
    void OnDisable();
    // protected override System.Void OnDestroy()
    // Offset: 0x1403820
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::OnDestroy()
    void OnDestroy();
    // protected override System.Void LoadFontAsset()
    // Offset: 0x14038D8
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::LoadFontAsset()
    void LoadFontAsset();
    // protected override UnityEngine.Material GetMaterial(UnityEngine.Material mat)
    // Offset: 0x14047B4
    // Implemented from: TMPro.TMP_Text
    // Base method: UnityEngine.Material TMP_Text::GetMaterial(UnityEngine.Material mat)
    UnityEngine::Material* GetMaterial(UnityEngine::Material* mat);
    // protected override UnityEngine.Material[] GetMaterials(UnityEngine.Material[] mats)
    // Offset: 0x14048D4
    // Implemented from: TMPro.TMP_Text
    // Base method: UnityEngine.Material[] TMP_Text::GetMaterials(UnityEngine.Material[] mats)
    ::Array<UnityEngine::Material*>* GetMaterials(::Array<UnityEngine::Material*>* mats);
    // protected override System.Void SetSharedMaterial(UnityEngine.Material mat)
    // Offset: 0x1404A84
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::SetSharedMaterial(UnityEngine.Material mat)
    void SetSharedMaterial(UnityEngine::Material* mat);
    // protected override UnityEngine.Material[] GetSharedMaterials()
    // Offset: 0x1404AC8
    // Implemented from: TMPro.TMP_Text
    // Base method: UnityEngine.Material[] TMP_Text::GetSharedMaterials()
    ::Array<UnityEngine::Material*>* GetSharedMaterials();
    // protected override System.Void SetSharedMaterials(UnityEngine.Material[] materials)
    // Offset: 0x1404C60
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::SetSharedMaterials(UnityEngine.Material[] materials)
    void SetSharedMaterials(::Array<UnityEngine::Material*>* materials);
    // protected override System.Void SetOutlineThickness(System.Single thickness)
    // Offset: 0x1404FF8
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::SetOutlineThickness(System.Single thickness)
    void SetOutlineThickness(float thickness);
    // protected override System.Void SetFaceColor(UnityEngine.Color32 color)
    // Offset: 0x1405154
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::SetFaceColor(UnityEngine.Color32 color)
    void SetFaceColor(UnityEngine::Color32 color);
    // protected override System.Void SetOutlineColor(UnityEngine.Color32 color)
    // Offset: 0x1405260
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::SetOutlineColor(UnityEngine.Color32 color)
    void SetOutlineColor(UnityEngine::Color32 color);
    // protected override System.Void SetShaderDepth()
    // Offset: 0x140536C
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::SetShaderDepth()
    void SetShaderDepth();
    // protected override System.Void SetCulling()
    // Offset: 0x1405484
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::SetCulling()
    void SetCulling();
    // protected override System.Single GetPaddingForMaterial(UnityEngine.Material mat)
    // Offset: 0x1405810
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Single TMP_Text::GetPaddingForMaterial(UnityEngine.Material mat)
    float GetPaddingForMaterial(UnityEngine::Material* mat);
    // protected override System.Single GetPaddingForMaterial()
    // Offset: 0x14058EC
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Single TMP_Text::GetPaddingForMaterial()
    float GetPaddingForMaterial();
    // protected override System.Int32 SetArraySizes(TMPro.TMP_Text/UnicodeChar[] chars)
    // Offset: 0x1405A28
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Int32 TMP_Text::SetArraySizes(TMPro.TMP_Text/UnicodeChar[] chars)
    int SetArraySizes(::Array<TMPro::TMP_Text::UnicodeChar>* chars);
    // public override System.Void ComputeMarginSize()
    // Offset: 0x1407678
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::ComputeMarginSize()
    void ComputeMarginSize();
    // protected override System.Void OnDidApplyAnimationProperties()
    // Offset: 0x1407798
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::OnDidApplyAnimationProperties()
    void OnDidApplyAnimationProperties();
    // protected override System.Void OnTransformParentChanged()
    // Offset: 0x14077B4
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnTransformParentChanged()
    void OnTransformParentChanged();
    // protected override System.Void OnRectTransformDimensionsChange()
    // Offset: 0x14077F0
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::OnRectTransformDimensionsChange()
    void OnRectTransformDimensionsChange();
    // override System.Void InternalUpdate()
    // Offset: 0x1407840
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::InternalUpdate()
    void InternalUpdate();
    // protected override System.Void GenerateTextMesh()
    // Offset: 0x1407CA0
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::GenerateTextMesh()
    void GenerateTextMesh();
    // protected override UnityEngine.Vector3[] GetTextContainerLocalCorners()
    // Offset: 0x140FD10
    // Implemented from: TMPro.TMP_Text
    // Base method: UnityEngine.Vector3[] TMP_Text::GetTextContainerLocalCorners()
    ::Array<UnityEngine::Vector3>* GetTextContainerLocalCorners();
    // protected override System.Void SetActiveSubMeshes(System.Boolean state)
    // Offset: 0x140FFA8
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::SetActiveSubMeshes(System.Boolean state)
    void SetActiveSubMeshes(bool state);
    // protected override System.Void ClearSubMeshObjects()
    // Offset: 0x14100C8
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::ClearSubMeshObjects()
    void ClearSubMeshObjects();
    // protected override UnityEngine.Bounds GetCompoundBounds()
    // Offset: 0x1410254
    // Implemented from: TMPro.TMP_Text
    // Base method: UnityEngine.Bounds TMP_Text::GetCompoundBounds()
    UnityEngine::Bounds GetCompoundBounds();
    // protected override System.Void AdjustLineOffset(System.Int32 startIndex, System.Int32 endIndex, System.Single offset)
    // Offset: 0x141056C
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::AdjustLineOffset(System.Int32 startIndex, System.Int32 endIndex, System.Single offset)
    void AdjustLineOffset(int startIndex, int endIndex, float offset);
    // public override System.Boolean get_autoSizeTextContainer()
    // Offset: 0x14109F4
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Boolean TMP_Text::get_autoSizeTextContainer()
    bool get_autoSizeTextContainer();
    // public override System.Void set_autoSizeTextContainer(System.Boolean value)
    // Offset: 0x14109FC
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::set_autoSizeTextContainer(System.Boolean value)
    void set_autoSizeTextContainer(bool value);
    // public UnityEngine.Transform get_transform()
    // Offset: 0x14035BC
    // Implemented from: TMPro.TMP_Text
    // Base method: UnityEngine.Transform TMP_Text::get_transform()
    // Base method: UnityEngine.Transform Graphic::UnityEngine.UI.ICanvasElement.get_transform()
    // Base method: UnityEngine.Transform Component::get_transform()
    // Base method: UnityEngine.Transform ICanvasElement::get_transform()
    UnityEngine::Transform* get_transform();
    // public override UnityEngine.Mesh get_mesh()
    // Offset: 0x1410AFC
    // Implemented from: TMPro.TMP_Text
    // Base method: UnityEngine.Mesh TMP_Text::get_mesh()
    UnityEngine::Mesh* get_mesh();
    // public override System.Void SetVerticesDirty()
    // Offset: 0x1410C98
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::SetVerticesDirty()
    void SetVerticesDirty();
    // public override System.Void SetLayoutDirty()
    // Offset: 0x1410D38
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::SetLayoutDirty()
    void SetLayoutDirty();
    // public override System.Void SetMaterialDirty()
    // Offset: 0x1410DE0
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::SetMaterialDirty()
    void SetMaterialDirty();
    // public override System.Void SetAllDirty()
    // Offset: 0x1410DF0
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::SetAllDirty()
    void SetAllDirty();
    // public override System.Void Rebuild(UnityEngine.UI.CanvasUpdate update)
    // Offset: 0x1410E48
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::Rebuild(UnityEngine.UI.CanvasUpdate update)
    void Rebuild(UnityEngine::UI::CanvasUpdate update);
    // protected override System.Void UpdateMaterial()
    // Offset: 0x1410F44
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::UpdateMaterial()
    void UpdateMaterial();
    // public override System.Void UpdateMeshPadding()
    // Offset: 0x1411068
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::UpdateMeshPadding()
    void UpdateMeshPadding();
    // public override System.Void ForceMeshUpdate()
    // Offset: 0x1411180
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::ForceMeshUpdate()
    void ForceMeshUpdate();
    // public override System.Void ForceMeshUpdate(System.Boolean ignoreInactive)
    // Offset: 0x141118C
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::ForceMeshUpdate(System.Boolean ignoreInactive)
    void ForceMeshUpdate(bool ignoreInactive);
    // public override TMPro.TMP_TextInfo GetTextInfo(System.String text)
    // Offset: 0x141119C
    // Implemented from: TMPro.TMP_Text
    // Base method: TMPro.TMP_TextInfo TMP_Text::GetTextInfo(System.String text)
    TMPro::TMP_TextInfo* GetTextInfo(::Il2CppString* text);
    // public override System.Void ClearMesh(System.Boolean updateMesh)
    // Offset: 0x1411214
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::ClearMesh(System.Boolean updateMesh)
    void ClearMesh(bool updateMesh);
    // public override System.Void UpdateGeometry(UnityEngine.Mesh mesh, System.Int32 index)
    // Offset: 0x14112EC
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::UpdateGeometry(UnityEngine.Mesh mesh, System.Int32 index)
    void UpdateGeometry(UnityEngine::Mesh* mesh, int index);
    // public override System.Void UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags flags)
    // Offset: 0x1411308
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags flags)
    void UpdateVertexData(TMPro::TMP_VertexDataUpdateFlags flags);
    // public override System.Void UpdateVertexData()
    // Offset: 0x14114AC
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::UpdateVertexData()
    void UpdateVertexData();
    // public System.Void .ctor()
    // Offset: 0x1411898
    // Implemented from: TMPro.TMP_Text
    // Base method: System.Void TMP_Text::.ctor()
    // Base method: System.Void MaskableGraphic::.ctor()
    // Base method: System.Void Graphic::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextMeshPro* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextMeshPro*, creationType>()));
    }
  }; // TMPro.TextMeshPro
  // WARNING Not writing size check since size may be invalid!
}
DEFINE_IL2CPP_ARG_TYPE(TMPro::TextMeshPro*, "TMPro", "TextMeshPro");
// Writing MetadataGetter for method: TMPro::TextMeshPro::UpdateEnvMapMatrix
// Il2CppName: UpdateEnvMapMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::UpdateEnvMapMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "UpdateEnvMapMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetMask
// Il2CppName: SetMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(TMPro::MaskingTypes)>(&TMPro::TextMeshPro::SetMask)> {
  const MethodInfo* get() {
    static auto* maskType = &::il2cpp_utils::GetClassFromName("TMPro", "MaskingTypes")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{maskType});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetMaskCoordinates
// Il2CppName: SetMaskCoordinates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(UnityEngine::Vector4)>(&TMPro::TextMeshPro::SetMaskCoordinates)> {
  const MethodInfo* get() {
    static auto* coords = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetMaskCoordinates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{coords});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetMaskCoordinates
// Il2CppName: SetMaskCoordinates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(UnityEngine::Vector4, float, float)>(&TMPro::TextMeshPro::SetMaskCoordinates)> {
  const MethodInfo* get() {
    static auto* coords = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* softX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* softY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetMaskCoordinates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{coords, softX, softY});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::EnableMasking
// Il2CppName: EnableMasking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::EnableMasking)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "EnableMasking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::DisableMasking
// Il2CppName: DisableMasking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::DisableMasking)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "DisableMasking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::UpdateMask
// Il2CppName: UpdateMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::UpdateMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "UpdateMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::CreateMaterialInstance
// Il2CppName: CreateMaterialInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::CreateMaterialInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "CreateMaterialInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetPerspectiveCorrection
// Il2CppName: SetPerspectiveCorrection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::SetPerspectiveCorrection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetPerspectiveCorrection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::OnPreRenderObject
// Il2CppName: OnPreRenderObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::OnPreRenderObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "OnPreRenderObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetMeshFilters
// Il2CppName: SetMeshFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(bool)>(&TMPro::TextMeshPro::SetMeshFilters)> {
  const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetMeshFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::UpdateSDFScale
// Il2CppName: UpdateSDFScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(float)>(&TMPro::TextMeshPro::UpdateSDFScale)> {
  const MethodInfo* get() {
    static auto* scaleDelta = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "UpdateSDFScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scaleDelta});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::get_sortingLayerID
// Il2CppName: get_sortingLayerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::get_sortingLayerID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "get_sortingLayerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::set_sortingLayerID
// Il2CppName: set_sortingLayerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(int)>(&TMPro::TextMeshPro::set_sortingLayerID)> {
  const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "set_sortingLayerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::get_sortingOrder
// Il2CppName: get_sortingOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::get_sortingOrder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "get_sortingOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::set_sortingOrder
// Il2CppName: set_sortingOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(int)>(&TMPro::TextMeshPro::set_sortingOrder)> {
  const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "set_sortingOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::get_textContainer
// Il2CppName: get_textContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<TMPro::TextContainer* (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::get_textContainer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "get_textContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::get_renderer
// Il2CppName: get_renderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Renderer* (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::get_renderer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "get_renderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::get_meshFilter
// Il2CppName: get_meshFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::MeshFilter* (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::get_meshFilter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "get_meshFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::get_maskType
// Il2CppName: get_maskType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<TMPro::MaskingTypes (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::get_maskType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "get_maskType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::set_maskType
// Il2CppName: set_maskType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(TMPro::MaskingTypes)>(&TMPro::TextMeshPro::set_maskType)> {
  const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("TMPro", "MaskingTypes")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "set_maskType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetMask
// Il2CppName: SetMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(TMPro::MaskingTypes, UnityEngine::Vector4)>(&TMPro::TextMeshPro::SetMask)> {
  const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("TMPro", "MaskingTypes")->byval_arg;
    static auto* maskCoords = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, maskCoords});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetMask
// Il2CppName: SetMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(TMPro::MaskingTypes, UnityEngine::Vector4, float, float)>(&TMPro::TextMeshPro::SetMask)> {
  const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("TMPro", "MaskingTypes")->byval_arg;
    static auto* maskCoords = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* softnessX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* softnessY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, maskCoords, softnessX, softnessY});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::UpdateFontAsset
// Il2CppName: UpdateFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::UpdateFontAsset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "UpdateFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::LoadFontAsset
// Il2CppName: LoadFontAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::LoadFontAsset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "LoadFontAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::GetMaterial
// Il2CppName: GetMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (TMPro::TextMeshPro::*)(UnityEngine::Material*)>(&TMPro::TextMeshPro::GetMaterial)> {
  const MethodInfo* get() {
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "GetMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mat});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::GetMaterials
// Il2CppName: GetMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Material*>* (TMPro::TextMeshPro::*)(::Array<UnityEngine::Material*>*)>(&TMPro::TextMeshPro::GetMaterials)> {
  const MethodInfo* get() {
    static auto* mats = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Material"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "GetMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mats});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetSharedMaterial
// Il2CppName: SetSharedMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(UnityEngine::Material*)>(&TMPro::TextMeshPro::SetSharedMaterial)> {
  const MethodInfo* get() {
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetSharedMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mat});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::GetSharedMaterials
// Il2CppName: GetSharedMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Material*>* (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::GetSharedMaterials)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "GetSharedMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetSharedMaterials
// Il2CppName: SetSharedMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(::Array<UnityEngine::Material*>*)>(&TMPro::TextMeshPro::SetSharedMaterials)> {
  const MethodInfo* get() {
    static auto* materials = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Material"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetSharedMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{materials});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetOutlineThickness
// Il2CppName: SetOutlineThickness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(float)>(&TMPro::TextMeshPro::SetOutlineThickness)> {
  const MethodInfo* get() {
    static auto* thickness = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetOutlineThickness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thickness});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetFaceColor
// Il2CppName: SetFaceColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(UnityEngine::Color32)>(&TMPro::TextMeshPro::SetFaceColor)> {
  const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetFaceColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetOutlineColor
// Il2CppName: SetOutlineColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(UnityEngine::Color32)>(&TMPro::TextMeshPro::SetOutlineColor)> {
  const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetOutlineColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetShaderDepth
// Il2CppName: SetShaderDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::SetShaderDepth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetShaderDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetCulling
// Il2CppName: SetCulling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::SetCulling)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetCulling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::GetPaddingForMaterial
// Il2CppName: GetPaddingForMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (TMPro::TextMeshPro::*)(UnityEngine::Material*)>(&TMPro::TextMeshPro::GetPaddingForMaterial)> {
  const MethodInfo* get() {
    static auto* mat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "GetPaddingForMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mat});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::GetPaddingForMaterial
// Il2CppName: GetPaddingForMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::GetPaddingForMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "GetPaddingForMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetArraySizes
// Il2CppName: SetArraySizes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TMPro::TextMeshPro::*)(::Array<TMPro::TMP_Text::UnicodeChar>*)>(&TMPro::TextMeshPro::SetArraySizes)> {
  const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("TMPro", "TMP_Text/UnicodeChar"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetArraySizes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::ComputeMarginSize
// Il2CppName: ComputeMarginSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::ComputeMarginSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "ComputeMarginSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::OnTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "OnTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::InternalUpdate
// Il2CppName: InternalUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::InternalUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "InternalUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::GenerateTextMesh
// Il2CppName: GenerateTextMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::GenerateTextMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "GenerateTextMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::GetTextContainerLocalCorners
// Il2CppName: GetTextContainerLocalCorners
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector3>* (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::GetTextContainerLocalCorners)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "GetTextContainerLocalCorners", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetActiveSubMeshes
// Il2CppName: SetActiveSubMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(bool)>(&TMPro::TextMeshPro::SetActiveSubMeshes)> {
  const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetActiveSubMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::ClearSubMeshObjects
// Il2CppName: ClearSubMeshObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::ClearSubMeshObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "ClearSubMeshObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::GetCompoundBounds
// Il2CppName: GetCompoundBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::GetCompoundBounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "GetCompoundBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::AdjustLineOffset
// Il2CppName: AdjustLineOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(int, int, float)>(&TMPro::TextMeshPro::AdjustLineOffset)> {
  const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* endIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "AdjustLineOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex, endIndex, offset});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::get_autoSizeTextContainer
// Il2CppName: get_autoSizeTextContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::get_autoSizeTextContainer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "get_autoSizeTextContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::set_autoSizeTextContainer
// Il2CppName: set_autoSizeTextContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(bool)>(&TMPro::TextMeshPro::set_autoSizeTextContainer)> {
  const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "set_autoSizeTextContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::get_transform
// Il2CppName: get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::get_transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::get_mesh
// Il2CppName: get_mesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::get_mesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "get_mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetVerticesDirty
// Il2CppName: SetVerticesDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::SetVerticesDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetVerticesDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetLayoutDirty
// Il2CppName: SetLayoutDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::SetLayoutDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetLayoutDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetMaterialDirty
// Il2CppName: SetMaterialDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::SetMaterialDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetMaterialDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::SetAllDirty
// Il2CppName: SetAllDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::SetAllDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "SetAllDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(UnityEngine::UI::CanvasUpdate)>(&TMPro::TextMeshPro::Rebuild)> {
  const MethodInfo* get() {
    static auto* update = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "CanvasUpdate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{update});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::UpdateMaterial
// Il2CppName: UpdateMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::UpdateMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "UpdateMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::UpdateMeshPadding
// Il2CppName: UpdateMeshPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::UpdateMeshPadding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "UpdateMeshPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::ForceMeshUpdate
// Il2CppName: ForceMeshUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::ForceMeshUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "ForceMeshUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::ForceMeshUpdate
// Il2CppName: ForceMeshUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(bool)>(&TMPro::TextMeshPro::ForceMeshUpdate)> {
  const MethodInfo* get() {
    static auto* ignoreInactive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "ForceMeshUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ignoreInactive});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::GetTextInfo
// Il2CppName: GetTextInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<TMPro::TMP_TextInfo* (TMPro::TextMeshPro::*)(::Il2CppString*)>(&TMPro::TextMeshPro::GetTextInfo)> {
  const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "GetTextInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::ClearMesh
// Il2CppName: ClearMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(bool)>(&TMPro::TextMeshPro::ClearMesh)> {
  const MethodInfo* get() {
    static auto* updateMesh = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "ClearMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateMesh});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::UpdateGeometry
// Il2CppName: UpdateGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(UnityEngine::Mesh*, int)>(&TMPro::TextMeshPro::UpdateGeometry)> {
  const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "UpdateGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, index});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::UpdateVertexData
// Il2CppName: UpdateVertexData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)(TMPro::TMP_VertexDataUpdateFlags)>(&TMPro::TextMeshPro::UpdateVertexData)> {
  const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("TMPro", "TMP_VertexDataUpdateFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "UpdateVertexData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::UpdateVertexData
// Il2CppName: UpdateVertexData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMPro::TextMeshPro::*)()>(&TMPro::TextMeshPro::UpdateVertexData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TMPro::TextMeshPro*), "UpdateVertexData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TMPro::TextMeshPro::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
