// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextElement_Legacy
#include "TMPro/TMP_TextElement_Legacy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: TMPro
namespace TMPro {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: TMPro.TMP_Glyph
  class TMP_Glyph : public TMPro::TMP_TextElement_Legacy {
    public:
    // Creating value type constructor for type: TMP_Glyph
    TMP_Glyph() noexcept {}
    // static public TMPro.TMP_Glyph Clone(TMPro.TMP_Glyph source)
    // Offset: 0x10F3658
    static TMPro::TMP_Glyph* Clone(TMPro::TMP_Glyph* source);
    // public System.Void .ctor()
    // Offset: 0x10F370C
    // Implemented from: TMPro.TMP_TextElement_Legacy
    // Base method: System.Void TMP_TextElement_Legacy::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TMP_Glyph* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Glyph::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TMP_Glyph*, creationType>()));
    }
  }; // TMPro.TMP_Glyph
  #pragma pack(pop)
  // Writing MetadataGetter for method: TMP_Glyph::Clone
  // Il2CppName: Clone
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<TMPro::TMP_Glyph* (*)(TMPro::TMP_Glyph*)>(&TMP_Glyph::Clone)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(TMP_Glyph*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<TMPro::TMP_Glyph*>()});
    }
  };
  // Writing MetadataGetter for method: TMP_Glyph::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMP_Glyph::*)()>(&TMP_Glyph::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(TMP_Glyph*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TMP_Glyph::*)()>(&TMP_Glyph::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(TMP_Glyph*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(TMPro::TMP_Glyph*, "TMPro", "TMP_Glyph");
