// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: ModestTree::Util
namespace ModestTree::Util {
  // Forward declaring type: ValuePair`2<T1, T2>
  template<typename T1, typename T2>
  class ValuePair_2;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.DisposableManager/<>c
  // [CompilerGeneratedAttribute] Offset: DDE5DC
  class DisposableManager::$$c : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: $$c
    $$c() noexcept {}
    // Get static field: static public readonly Zenject.DisposableManager/<>c <>9
    static Zenject::DisposableManager::$$c* _get_$$9();
    // Set static field: static public readonly Zenject.DisposableManager/<>c <>9
    static void _set_$$9(Zenject::DisposableManager::$$c* value);
    // Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_1
    static System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* _get_$$9__4_1();
    // Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_1
    static void _set_$$9__4_1(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value);
    // Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_3
    static System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* _get_$$9__4_3();
    // Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_3
    static void _set_$$9__4_3(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value);
    // Get static field: static public System.Func`2<Zenject.DisposableManager/LateDisposableInfo,System.Int32> <>9__10_0
    static System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>* _get_$$9__10_0();
    // Set static field: static public System.Func`2<Zenject.DisposableManager/LateDisposableInfo,System.Int32> <>9__10_0
    static void _set_$$9__10_0(System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>* value);
    // Get static field: static public System.Func`2<Zenject.DisposableManager/DisposableInfo,System.Int32> <>9__11_0
    static System::Func_2<Zenject::DisposableManager::DisposableInfo, int>* _get_$$9__11_0();
    // Set static field: static public System.Func`2<Zenject.DisposableManager/DisposableInfo,System.Int32> <>9__11_0
    static void _set_$$9__11_0(System::Func_2<Zenject::DisposableManager::DisposableInfo, int>* value);
    // static private System.Void .cctor()
    // Offset: 0x1634348
    static void _cctor();
    // System.Nullable`1<System.Int32> <.ctor>b__4_1(ModestTree.Util.ValuePair`2<System.Type,System.Int32> x)
    // Offset: 0x16343B4
    System::Nullable_1<int> $_ctor$b__4_1(ModestTree::Util::ValuePair_2<System::Type*, int>* x);
    // System.Nullable`1<System.Int32> <.ctor>b__4_3(ModestTree.Util.ValuePair`2<System.Type,System.Int32> x)
    // Offset: 0x1634424
    System::Nullable_1<int> $_ctor$b__4_3(ModestTree::Util::ValuePair_2<System::Type*, int>* x);
    // System.Int32 <LateDispose>b__10_0(Zenject.DisposableManager/LateDisposableInfo x)
    // Offset: 0x1634494
    int $LateDispose$b__10_0(Zenject::DisposableManager::LateDisposableInfo* x);
    // System.Int32 <Dispose>b__11_0(Zenject.DisposableManager/DisposableInfo x)
    // Offset: 0x16344AC
    int $Dispose$b__11_0(Zenject::DisposableManager::DisposableInfo x);
    // public System.Void .ctor()
    // Offset: 0x16343AC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DisposableManager::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DisposableManager::$$c*, creationType>()));
    }
  }; // Zenject.DisposableManager/<>c
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::DisposableManager::$$c*, "Zenject", "DisposableManager/<>c");
// Writing MetadataGetter for method: DisposableManager::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DisposableManager::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisposableManager::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DisposableManager::$$c::$_ctor$b__4_1
// Il2CppName: <.ctor>b__4_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<int> (DisposableManager::$$c::*)(ModestTree::Util::ValuePair_2<System::Type*, int>*)>(&DisposableManager::$$c::$_ctor$b__4_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisposableManager::$$c*), "<.ctor>b__4_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<ModestTree::Util::ValuePair_2<System::Type*, int>*>()});
  }
};
// Writing MetadataGetter for method: DisposableManager::$$c::$_ctor$b__4_3
// Il2CppName: <.ctor>b__4_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<int> (DisposableManager::$$c::*)(ModestTree::Util::ValuePair_2<System::Type*, int>*)>(&DisposableManager::$$c::$_ctor$b__4_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisposableManager::$$c*), "<.ctor>b__4_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<ModestTree::Util::ValuePair_2<System::Type*, int>*>()});
  }
};
// Writing MetadataGetter for method: DisposableManager::$$c::$LateDispose$b__10_0
// Il2CppName: <LateDispose>b__10_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DisposableManager::$$c::*)(Zenject::DisposableManager::LateDisposableInfo*)>(&DisposableManager::$$c::$LateDispose$b__10_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisposableManager::$$c*), "<LateDispose>b__10_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DisposableManager::LateDisposableInfo*>()});
  }
};
// Writing MetadataGetter for method: DisposableManager::$$c::$Dispose$b__11_0
// Il2CppName: <Dispose>b__11_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DisposableManager::$$c::*)(Zenject::DisposableManager::DisposableInfo)>(&DisposableManager::$$c::$Dispose$b__11_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisposableManager::$$c*), "<Dispose>b__11_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DisposableManager::DisposableInfo>()});
  }
};
// Writing MetadataGetter for method: DisposableManager::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisposableManager::$$c::*)()>(&DisposableManager::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisposableManager::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisposableManager::$$c::*)()>(&DisposableManager::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisposableManager::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
