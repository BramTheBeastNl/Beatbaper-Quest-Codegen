// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerPrefabBindingFinalizer
#include "Zenject/SubContainerPrefabBindingFinalizer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: DiContainer
  class DiContainer;
  // Forward declaring type: IProvider
  class IProvider;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.SubContainerPrefabBindingFinalizer/<>c__DisplayClass6_0
  // [CompilerGeneratedAttribute] Offset: DDE2AC
  class SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0 : public ::Il2CppObject {
    public:
    // public Zenject.SubContainerPrefabBindingFinalizer <>4__this
    // Size: 0x8
    // Offset: 0x10
    Zenject::SubContainerPrefabBindingFinalizer* $$4__this;
    // Field size check
    static_assert(sizeof(Zenject::SubContainerPrefabBindingFinalizer*) == 0x8);
    // public Zenject.DiContainer container
    // Size: 0x8
    // Offset: 0x18
    Zenject::DiContainer* container;
    // Field size check
    static_assert(sizeof(Zenject::DiContainer*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass6_0
    $$c__DisplayClass6_0(Zenject::SubContainerPrefabBindingFinalizer* $$4__this_ = {}, Zenject::DiContainer* container_ = {}) noexcept : $$4__this{$$4__this_}, container{container_} {}
    // Zenject.IProvider <FinalizeBindingSelf>b__0(Zenject.DiContainer _, System.Type contractType)
    // Offset: 0x16EB93C
    Zenject::IProvider* $FinalizeBindingSelf$b__0(Zenject::DiContainer* _, System::Type* contractType);
    // public System.Void .ctor()
    // Offset: 0x16EB7D0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0*, creationType>()));
    }
  }; // Zenject.SubContainerPrefabBindingFinalizer/<>c__DisplayClass6_0
  #pragma pack(pop)
  static check_size<sizeof(SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0), 24 + sizeof(Zenject::DiContainer*)> __Zenject_SubContainerPrefabBindingFinalizer_$$c__DisplayClass6_0SizeCheck;
  static_assert(sizeof(SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0*, "Zenject", "SubContainerPrefabBindingFinalizer/<>c__DisplayClass6_0");
// Writing MetadataGetter for method: SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0
// Il2CppName: <FinalizeBindingSelf>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::IProvider* (SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::*)(Zenject::DiContainer*, System::Type*)>(&SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0*), "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::*)()>(&SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::*)()>(&SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
