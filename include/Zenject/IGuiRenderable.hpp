// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: Zenject
namespace Zenject {
  // Forward declaring type: IGuiRenderable
  class IGuiRenderable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Zenject::IGuiRenderable);
DEFINE_IL2CPP_ARG_TYPE(::Zenject::IGuiRenderable*, "Zenject", "IGuiRenderable");
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.IGuiRenderable
  // [TokenAttribute] Offset: FFFFFFFF
  class IGuiRenderable {
    public:
    // public System.Void GuiRender()
    // Offset: 0xFFFFFFFF
    void GuiRender();
  }; // Zenject.IGuiRenderable
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Zenject::IGuiRenderable::GuiRender
// Il2CppName: GuiRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Zenject::IGuiRenderable::*)()>(&Zenject::IGuiRenderable::GuiRender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Zenject::IGuiRenderable*), "GuiRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
