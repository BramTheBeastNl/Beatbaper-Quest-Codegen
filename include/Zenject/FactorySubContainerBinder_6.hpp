// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: Zenject.FactorySubContainerBinderWithParams`1
#include "Zenject/FactorySubContainerBinderWithParams_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Skipping declaration: <>c__DisplayClass1_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass2_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass3_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass4_0 because it is already included!
  // Forward declaring type: ScopeConcreteIdArgConditionCopyNonLazyBinder
  class ScopeConcreteIdArgConditionCopyNonLazyBinder;
  // Forward declaring type: DiContainer
  class DiContainer;
  // Forward declaring type: NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
  class NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder;
  // Forward declaring type: BindInfo
  class BindInfo;
  // Forward declaring type: FactoryBindInfo
  class FactoryBindInfo;
  // Forward declaring type: SubContainerCreatorBindInfo
  class SubContainerCreatorBindInfo;
  // Forward declaring type: IProvider
  class IProvider;
  // Forward declaring type: GameObjectCreationParameters
  class GameObjectCreationParameters;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`6<T1, T2, T3, T4, T5, T6>
  template<typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
  class Action_6;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // WARNING Size may be invalid!
  // Autogenerated type: Zenject.FactorySubContainerBinder`6
  // [TokenAttribute] Offset: FFFFFFFF
  // [NoReflectionBakingAttribute] Offset: FFFFFFFF
  template<typename TParam1, typename TParam2, typename TParam3, typename TParam4, typename TParam5, typename TContract>
  class FactorySubContainerBinder_6 : public Zenject::FactorySubContainerBinderWithParams_1<TContract> {
    public:
    // Nested type: Zenject::FactorySubContainerBinder_6::$$c__DisplayClass1_0<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>
    class $$c__DisplayClass1_0;
    // Nested type: Zenject::FactorySubContainerBinder_6::$$c__DisplayClass2_0<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>
    class $$c__DisplayClass2_0;
    // Nested type: Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>
    class $$c__DisplayClass3_0;
    // Nested type: Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>
    class $$c__DisplayClass4_0;
    // WARNING Size may be invalid!
    // Autogenerated type: Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass1_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass1_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass1_0";
      // public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      // Size: 0x8
      // Offset: 0x0
      Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* $$4__this;
      // Field size check
      static_assert(sizeof(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*) == 0x8);
      // public Zenject.SubContainerCreatorBindInfo subcontainerBindInfo
      // Size: 0x8
      // Offset: 0x0
      Zenject::SubContainerCreatorBindInfo* subcontainerBindInfo;
      // Field size check
      static_assert(sizeof(Zenject::SubContainerCreatorBindInfo*) == 0x8);
      // public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      // Size: 0x8
      // Offset: 0x0
      System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod;
      // Field size check
      static_assert(sizeof(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>*) == 0x8);
      // Creating value type constructor for type: $$c__DisplayClass1_0
      $$c__DisplayClass1_0(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* $$4__this_ = {}, Zenject::SubContainerCreatorBindInfo* subcontainerBindInfo_ = {}, System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod_ = {}) noexcept : $$4__this{$$4__this_}, subcontainerBindInfo{subcontainerBindInfo_}, installerMethod{installerMethod_} {}
      // Autogenerated instance field getter
      // Get instance field: public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* _get_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass1_0::_get_$$4__this");
        static auto ___internal__instance = this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*>(___internal__instance, "<>4__this")));
      }
      // Autogenerated instance field setter
      // Set instance field: public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      void _set_$$4__this(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass1_0::_set_$$4__this");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public Zenject.SubContainerCreatorBindInfo subcontainerBindInfo
      Zenject::SubContainerCreatorBindInfo* _get_subcontainerBindInfo() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass1_0::_get_subcontainerBindInfo");
        static auto ___internal__instance = this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SubContainerCreatorBindInfo*>(___internal__instance, "subcontainerBindInfo"));
      }
      // Autogenerated instance field setter
      // Set instance field: public Zenject.SubContainerCreatorBindInfo subcontainerBindInfo
      void _set_subcontainerBindInfo(Zenject::SubContainerCreatorBindInfo* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass1_0::_set_subcontainerBindInfo");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "subcontainerBindInfo", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* _get_installerMethod() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass1_0::_get_installerMethod");
        static auto ___internal__instance = this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>*>(___internal__instance, "installerMethod")));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      void _set_installerMethod(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass1_0::_set_installerMethod");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "installerMethod", value));
      }
      // Zenject.IProvider <ByMethod>b__0(Zenject.DiContainer container)
      // Offset: 0xFFFFFFFF
      Zenject::IProvider* $ByMethod$b__0(Zenject::DiContainer* container) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass1_0::<ByMethod>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
        return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, container);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>::$$c__DisplayClass1_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass1_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>::$$c__DisplayClass1_0*, creationType>()));
      }
    }; // Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass1_0
    // Could not write size check! Type: Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass1_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass2_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass2_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass2_0";
      // public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      // Size: 0x8
      // Offset: 0x0
      Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* $$4__this;
      // Field size check
      static_assert(sizeof(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*) == 0x8);
      // public Zenject.GameObjectCreationParameters gameObjectInfo
      // Size: 0x8
      // Offset: 0x0
      Zenject::GameObjectCreationParameters* gameObjectInfo;
      // Field size check
      static_assert(sizeof(Zenject::GameObjectCreationParameters*) == 0x8);
      // public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      // Size: 0x8
      // Offset: 0x0
      System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod;
      // Field size check
      static_assert(sizeof(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>*) == 0x8);
      // Creating value type constructor for type: $$c__DisplayClass2_0
      $$c__DisplayClass2_0(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* $$4__this_ = {}, Zenject::GameObjectCreationParameters* gameObjectInfo_ = {}, System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod_ = {}) noexcept : $$4__this{$$4__this_}, gameObjectInfo{gameObjectInfo_}, installerMethod{installerMethod_} {}
      // Autogenerated instance field getter
      // Get instance field: public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* _get_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass2_0::_get_$$4__this");
        static auto ___internal__instance = this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*>(___internal__instance, "<>4__this")));
      }
      // Autogenerated instance field setter
      // Set instance field: public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      void _set_$$4__this(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass2_0::_set_$$4__this");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
      Zenject::GameObjectCreationParameters* _get_gameObjectInfo() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass2_0::_get_gameObjectInfo");
        static auto ___internal__instance = this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::GameObjectCreationParameters*>(___internal__instance, "gameObjectInfo"));
      }
      // Autogenerated instance field setter
      // Set instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
      void _set_gameObjectInfo(Zenject::GameObjectCreationParameters* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass2_0::_set_gameObjectInfo");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gameObjectInfo", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* _get_installerMethod() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass2_0::_get_installerMethod");
        static auto ___internal__instance = this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>*>(___internal__instance, "installerMethod")));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      void _set_installerMethod(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass2_0::_set_installerMethod");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "installerMethod", value));
      }
      // Zenject.IProvider <ByNewGameObjectMethod>b__0(Zenject.DiContainer container)
      // Offset: 0xFFFFFFFF
      Zenject::IProvider* $ByNewGameObjectMethod$b__0(Zenject::DiContainer* container) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass2_0::<ByNewGameObjectMethod>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewGameObjectMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
        return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, container);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>::$$c__DisplayClass2_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass2_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>::$$c__DisplayClass2_0*, creationType>()));
      }
    }; // Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass2_0
    // Could not write size check! Type: Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass2_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass3_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass3_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass3_0";
      // public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      // Size: 0x8
      // Offset: 0x0
      Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* $$4__this;
      // Field size check
      static_assert(sizeof(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*) == 0x8);
      // public UnityEngine.Object prefab
      // Size: 0x8
      // Offset: 0x0
      UnityEngine::Object* prefab;
      // Field size check
      static_assert(sizeof(UnityEngine::Object*) == 0x8);
      // public Zenject.GameObjectCreationParameters gameObjectInfo
      // Size: 0x8
      // Offset: 0x0
      Zenject::GameObjectCreationParameters* gameObjectInfo;
      // Field size check
      static_assert(sizeof(Zenject::GameObjectCreationParameters*) == 0x8);
      // public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      // Size: 0x8
      // Offset: 0x0
      System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod;
      // Field size check
      static_assert(sizeof(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>*) == 0x8);
      // Creating value type constructor for type: $$c__DisplayClass3_0
      $$c__DisplayClass3_0(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* $$4__this_ = {}, UnityEngine::Object* prefab_ = {}, Zenject::GameObjectCreationParameters* gameObjectInfo_ = {}, System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod_ = {}) noexcept : $$4__this{$$4__this_}, prefab{prefab_}, gameObjectInfo{gameObjectInfo_}, installerMethod{installerMethod_} {}
      // Autogenerated instance field getter
      // Get instance field: public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* _get_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::_get_$$4__this");
        static auto ___internal__instance = this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*>(___internal__instance, "<>4__this")));
      }
      // Autogenerated instance field setter
      // Set instance field: public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      void _set_$$4__this(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::_set_$$4__this");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public UnityEngine.Object prefab
      UnityEngine::Object* _get_prefab() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::_get_prefab");
        static auto ___internal__instance = this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Object*>(___internal__instance, "prefab"));
      }
      // Autogenerated instance field setter
      // Set instance field: public UnityEngine.Object prefab
      void _set_prefab(UnityEngine::Object* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::_set_prefab");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "prefab", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
      Zenject::GameObjectCreationParameters* _get_gameObjectInfo() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::_get_gameObjectInfo");
        static auto ___internal__instance = this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::GameObjectCreationParameters*>(___internal__instance, "gameObjectInfo"));
      }
      // Autogenerated instance field setter
      // Set instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
      void _set_gameObjectInfo(Zenject::GameObjectCreationParameters* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::_set_gameObjectInfo");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gameObjectInfo", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* _get_installerMethod() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::_get_installerMethod");
        static auto ___internal__instance = this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>*>(___internal__instance, "installerMethod")));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      void _set_installerMethod(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::_set_installerMethod");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "installerMethod", value));
      }
      // Zenject.IProvider <ByNewPrefabMethod>b__0(Zenject.DiContainer container)
      // Offset: 0xFFFFFFFF
      Zenject::IProvider* $ByNewPrefabMethod$b__0(Zenject::DiContainer* container) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::<ByNewPrefabMethod>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
        return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, container);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>::$$c__DisplayClass3_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass3_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>::$$c__DisplayClass3_0*, creationType>()));
      }
    }; // Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass3_0
    // Could not write size check! Type: Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass3_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass4_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass4_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass4_0";
      // public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      // Size: 0x8
      // Offset: 0x0
      Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* $$4__this;
      // Field size check
      static_assert(sizeof(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*) == 0x8);
      // public System.String resourcePath
      // Size: 0x8
      // Offset: 0x0
      ::Il2CppString* resourcePath;
      // Field size check
      static_assert(sizeof(::Il2CppString*) == 0x8);
      // public Zenject.GameObjectCreationParameters gameObjectInfo
      // Size: 0x8
      // Offset: 0x0
      Zenject::GameObjectCreationParameters* gameObjectInfo;
      // Field size check
      static_assert(sizeof(Zenject::GameObjectCreationParameters*) == 0x8);
      // public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      // Size: 0x8
      // Offset: 0x0
      System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod;
      // Field size check
      static_assert(sizeof(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>*) == 0x8);
      // Creating value type constructor for type: $$c__DisplayClass4_0
      $$c__DisplayClass4_0(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* $$4__this_ = {}, ::Il2CppString* resourcePath_ = {}, Zenject::GameObjectCreationParameters* gameObjectInfo_ = {}, System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod_ = {}) noexcept : $$4__this{$$4__this_}, resourcePath{resourcePath_}, gameObjectInfo{gameObjectInfo_}, installerMethod{installerMethod_} {}
      // Autogenerated instance field getter
      // Get instance field: public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* _get_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::_get_$$4__this");
        static auto ___internal__instance = this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*>(___internal__instance, "<>4__this")));
      }
      // Autogenerated instance field setter
      // Set instance field: public Zenject.FactorySubContainerBinder`6<TParam1,TParam2,TParam3,TParam4,TParam5,TContract> <>4__this
      void _set_$$4__this(Zenject::FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::_set_$$4__this");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.String resourcePath
      ::Il2CppString* _get_resourcePath() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::_get_resourcePath");
        static auto ___internal__instance = this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "resourcePath"));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.String resourcePath
      void _set_resourcePath(::Il2CppString* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::_set_resourcePath");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "resourcePath", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
      Zenject::GameObjectCreationParameters* _get_gameObjectInfo() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::_get_gameObjectInfo");
        static auto ___internal__instance = this;
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::GameObjectCreationParameters*>(___internal__instance, "gameObjectInfo"));
      }
      // Autogenerated instance field setter
      // Set instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
      void _set_gameObjectInfo(Zenject::GameObjectCreationParameters* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::_set_gameObjectInfo");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gameObjectInfo", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* _get_installerMethod() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::_get_installerMethod");
        static auto ___internal__instance = this;
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>*>(___internal__instance, "installerMethod")));
      }
      // Autogenerated instance field setter
      // Set instance field: public System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod
      void _set_installerMethod(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::_set_installerMethod");
        static auto ___internal__instance = this;
        THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "installerMethod", value));
      }
      // Zenject.IProvider <ByNewPrefabResourceMethod>b__0(Zenject.DiContainer container)
      // Offset: 0xFFFFFFFF
      Zenject::IProvider* $ByNewPrefabResourceMethod$b__0(Zenject::DiContainer* container) {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::<ByNewPrefabResourceMethod>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabResourceMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
        return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, container);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>::$$c__DisplayClass4_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::$$c__DisplayClass4_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>::$$c__DisplayClass4_0*, creationType>()));
      }
    }; // Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass4_0
    // Could not write size check! Type: Zenject.FactorySubContainerBinder`6/Zenject.<>c__DisplayClass4_0 is generic, or has no fields that are valid for size checks!
    // Creating value type constructor for type: FactorySubContainerBinder_6
    FactorySubContainerBinder_6() noexcept {}
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder ByMethod(System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod)
    // Offset: 0xFFFFFFFF
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* ByMethod(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::ByMethod");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerMethod)})));
      return ::il2cpp_utils::RunMethodThrow<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerMethod);
    }
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder ByNewGameObjectMethod(System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod)
    // Offset: 0xFFFFFFFF
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* ByNewGameObjectMethod(System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::ByNewGameObjectMethod");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewGameObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerMethod)})));
      return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerMethod);
    }
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder ByNewPrefabMethod(UnityEngine.Object prefab, System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod)
    // Offset: 0xFFFFFFFF
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* ByNewPrefabMethod(UnityEngine::Object* prefab, System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::ByNewPrefabMethod");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(installerMethod)})));
      return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, installerMethod);
    }
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder ByNewPrefabResourceMethod(System.String resourcePath, System.Action`6<Zenject.DiContainer,TParam1,TParam2,TParam3,TParam4,TParam5> installerMethod)
    // Offset: 0xFFFFFFFF
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* ByNewPrefabResourceMethod(::Il2CppString* resourcePath, System::Action_6<Zenject::DiContainer*, TParam1, TParam2, TParam3, TParam4, TParam5>* installerMethod) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::ByNewPrefabResourceMethod");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabResourceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(installerMethod)})));
      return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, installerMethod);
    }
    // public System.Void .ctor(Zenject.DiContainer bindContainer, Zenject.BindInfo bindInfo, Zenject.FactoryBindInfo factoryBindInfo, System.Object subIdentifier)
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.FactorySubContainerBinderWithParams`1
    // Base method: System.Void FactorySubContainerBinderWithParams_1::.ctor(Zenject.DiContainer bindContainer, Zenject.BindInfo bindInfo, Zenject.FactoryBindInfo factoryBindInfo, System.Object subIdentifier)
    // Base method: System.Void FactorySubContainerBinderBase_1::.ctor(Zenject.DiContainer bindContainer, Zenject.BindInfo bindInfo, Zenject.FactoryBindInfo factoryBindInfo, System.Object subIdentifier)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>* New_ctor(Zenject::DiContainer* bindContainer, Zenject::BindInfo* bindInfo, Zenject::FactoryBindInfo* factoryBindInfo, ::Il2CppObject* subIdentifier) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FactorySubContainerBinder_6::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FactorySubContainerBinder_6<TParam1, TParam2, TParam3, TParam4, TParam5, TContract>*, creationType>(bindContainer, bindInfo, factoryBindInfo, subIdentifier)));
    }
  }; // Zenject.FactorySubContainerBinder`6
  // Could not write size check! Type: Zenject.FactorySubContainerBinder`6 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::FactorySubContainerBinder_6, "Zenject", "FactorySubContainerBinder`6");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
