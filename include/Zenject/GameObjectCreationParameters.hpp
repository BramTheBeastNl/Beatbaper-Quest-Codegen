// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: InjectContext
  class InjectContext;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // WARNING Size may be invalid!
  // Autogenerated type: Zenject.GameObjectCreationParameters
  // [NoReflectionBakingAttribute] Offset: DDC524
  class GameObjectCreationParameters : public ::Il2CppObject {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xDDE89C
    // private System.String <Name>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* Name;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xDDE8AC
    // private System.String <GroupName>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* GroupName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xDDE8BC
    // private UnityEngine.Transform <ParentTransform>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::Transform* ParentTransform;
    // Field size check
    static_assert(sizeof(UnityEngine::Transform*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xDDE8CC
    // private System.Func`2<Zenject.InjectContext,UnityEngine.Transform> <ParentTransformGetter>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>* ParentTransformGetter;
    // Field size check
    static_assert(sizeof(System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xDDE8DC
    // private System.Nullable`1<UnityEngine.Vector3> <Position>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x30
    System::Nullable_1<UnityEngine::Vector3> Position;
    // [CompilerGeneratedAttribute] Offset: 0xDDE8EC
    // private System.Nullable`1<UnityEngine.Quaternion> <Rotation>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x40
    System::Nullable_1<UnityEngine::Quaternion> Rotation;
    // Creating value type constructor for type: GameObjectCreationParameters
    GameObjectCreationParameters(::Il2CppString* Name_ = {}, ::Il2CppString* GroupName_ = {}, UnityEngine::Transform* ParentTransform_ = {}, System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>* ParentTransformGetter_ = {}, System::Nullable_1<UnityEngine::Vector3> Position_ = {}, System::Nullable_1<UnityEngine::Quaternion> Rotation_ = {}) noexcept : Name{Name_}, GroupName{GroupName_}, ParentTransform{ParentTransform_}, ParentTransformGetter{ParentTransformGetter_}, Position{Position_}, Rotation{Rotation_} {}
    // Get static field: static public readonly Zenject.GameObjectCreationParameters Default
    static Zenject::GameObjectCreationParameters* _get_Default();
    // Set static field: static public readonly Zenject.GameObjectCreationParameters Default
    static void _set_Default(Zenject::GameObjectCreationParameters* value);
    // public System.String get_Name()
    // Offset: 0x163D540
    ::Il2CppString* get_Name();
    // public System.Void set_Name(System.String value)
    // Offset: 0x163D548
    void set_Name(::Il2CppString* value);
    // public System.String get_GroupName()
    // Offset: 0x163D550
    ::Il2CppString* get_GroupName();
    // public System.Void set_GroupName(System.String value)
    // Offset: 0x163D558
    void set_GroupName(::Il2CppString* value);
    // public UnityEngine.Transform get_ParentTransform()
    // Offset: 0x163D560
    UnityEngine::Transform* get_ParentTransform();
    // public System.Void set_ParentTransform(UnityEngine.Transform value)
    // Offset: 0x163D568
    void set_ParentTransform(UnityEngine::Transform* value);
    // public System.Func`2<Zenject.InjectContext,UnityEngine.Transform> get_ParentTransformGetter()
    // Offset: 0x163D570
    System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>* get_ParentTransformGetter();
    // public System.Void set_ParentTransformGetter(System.Func`2<Zenject.InjectContext,UnityEngine.Transform> value)
    // Offset: 0x163D578
    void set_ParentTransformGetter(System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>* value);
    // public System.Nullable`1<UnityEngine.Vector3> get_Position()
    // Offset: 0x163D580
    System::Nullable_1<UnityEngine::Vector3> get_Position();
    // public System.Void set_Position(System.Nullable`1<UnityEngine.Vector3> value)
    // Offset: 0x163D58C
    void set_Position(System::Nullable_1<UnityEngine::Vector3> value);
    // public System.Nullable`1<UnityEngine.Quaternion> get_Rotation()
    // Offset: 0x163D594
    System::Nullable_1<UnityEngine::Quaternion> get_Rotation();
    // public System.Void set_Rotation(System.Nullable`1<UnityEngine.Quaternion> value)
    // Offset: 0x163D5A8
    void set_Rotation(System::Nullable_1<UnityEngine::Quaternion> value);
    // public System.Boolean Equals(Zenject.GameObjectCreationParameters that)
    // Offset: 0x163D8F0
    bool Equals(Zenject::GameObjectCreationParameters* that);
    // static private System.Void .cctor()
    // Offset: 0x163D988
    static void _cctor();
    // public override System.Int32 GetHashCode()
    // Offset: 0x163D5BC
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object other)
    // Offset: 0x163D7A8
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object other)
    bool Equals(::Il2CppObject* other);
    // public System.Void .ctor()
    // Offset: 0x163587C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameObjectCreationParameters* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectCreationParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameObjectCreationParameters*, creationType>()));
    }
  }; // Zenject.GameObjectCreationParameters
  // WARNING Not writing size check since size may be invalid!
  // static public System.Boolean op_Equality(Zenject.GameObjectCreationParameters left, Zenject.GameObjectCreationParameters right)
  // Offset: 0x163D894
  bool operator ==(Zenject::GameObjectCreationParameters* left, Zenject::GameObjectCreationParameters& right);
  // static public System.Boolean op_Inequality(Zenject.GameObjectCreationParameters left, Zenject.GameObjectCreationParameters right)
  // Offset: 0x163D964
  bool operator !=(Zenject::GameObjectCreationParameters* left, Zenject::GameObjectCreationParameters& right);
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::GameObjectCreationParameters*, "Zenject", "GameObjectCreationParameters");
// Writing MetadataGetter for method: GameObjectCreationParameters::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GameObjectCreationParameters::*)()>(&GameObjectCreationParameters::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameObjectCreationParameters::*)(::Il2CppString*)>(&GameObjectCreationParameters::set_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::get_GroupName
// Il2CppName: get_GroupName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GameObjectCreationParameters::*)()>(&GameObjectCreationParameters::get_GroupName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "get_GroupName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::set_GroupName
// Il2CppName: set_GroupName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameObjectCreationParameters::*)(::Il2CppString*)>(&GameObjectCreationParameters::set_GroupName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "set_GroupName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::get_ParentTransform
// Il2CppName: get_ParentTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (GameObjectCreationParameters::*)()>(&GameObjectCreationParameters::get_ParentTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "get_ParentTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::set_ParentTransform
// Il2CppName: set_ParentTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameObjectCreationParameters::*)(UnityEngine::Transform*)>(&GameObjectCreationParameters::set_ParentTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "set_ParentTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::get_ParentTransformGetter
// Il2CppName: get_ParentTransformGetter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>* (GameObjectCreationParameters::*)()>(&GameObjectCreationParameters::get_ParentTransformGetter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "get_ParentTransformGetter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::set_ParentTransformGetter
// Il2CppName: set_ParentTransformGetter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameObjectCreationParameters::*)(System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>*)>(&GameObjectCreationParameters::set_ParentTransformGetter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "set_ParentTransformGetter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_2<Zenject::InjectContext*, UnityEngine::Transform*>*>()});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<UnityEngine::Vector3> (GameObjectCreationParameters::*)()>(&GameObjectCreationParameters::get_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::set_Position
// Il2CppName: set_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameObjectCreationParameters::*)(System::Nullable_1<UnityEngine::Vector3>)>(&GameObjectCreationParameters::set_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "set_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<UnityEngine::Vector3>>()});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::get_Rotation
// Il2CppName: get_Rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<UnityEngine::Quaternion> (GameObjectCreationParameters::*)()>(&GameObjectCreationParameters::get_Rotation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "get_Rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::set_Rotation
// Il2CppName: set_Rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameObjectCreationParameters::*)(System::Nullable_1<UnityEngine::Quaternion>)>(&GameObjectCreationParameters::set_Rotation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "set_Rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<UnityEngine::Quaternion>>()});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GameObjectCreationParameters::*)(Zenject::GameObjectCreationParameters*)>(&GameObjectCreationParameters::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters*>()});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GameObjectCreationParameters::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GameObjectCreationParameters::*)()>(&GameObjectCreationParameters::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GameObjectCreationParameters::*)(::Il2CppObject*)>(&GameObjectCreationParameters::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameObjectCreationParameters::*)()>(&GameObjectCreationParameters::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameObjectCreationParameters::*)()>(&GameObjectCreationParameters::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Zenject::GameObjectCreationParameters*, Zenject::GameObjectCreationParameters&)>(&GameObjectCreationParameters::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters&>()});
  }
};
// Writing MetadataGetter for method: GameObjectCreationParameters::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Zenject::GameObjectCreationParameters*, Zenject::GameObjectCreationParameters&)>(&GameObjectCreationParameters::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameObjectCreationParameters*), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters&>()});
  }
};
