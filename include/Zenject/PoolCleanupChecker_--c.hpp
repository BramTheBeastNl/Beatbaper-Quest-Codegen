// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PoolCleanupChecker
#include "Zenject/PoolCleanupChecker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.PoolCleanupChecker/<>c
  // [CompilerGeneratedAttribute] Offset: DDE35C
  class PoolCleanupChecker::$$c : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: $$c
    $$c() noexcept {}
    // Get static field: static public readonly Zenject.PoolCleanupChecker/<>c <>9
    static Zenject::PoolCleanupChecker::$$c* _get_$$9();
    // Set static field: static public readonly Zenject.PoolCleanupChecker/<>c <>9
    static void _set_$$9(Zenject::PoolCleanupChecker::$$c* value);
    // Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__2_0
    static System::Func_2<System::Type*, bool>* _get_$$9__2_0();
    // Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__2_0
    static void _set_$$9__2_0(System::Func_2<System::Type*, bool>* value);
    // static private System.Void .cctor()
    // Offset: 0x16DD83C
    static void _cctor();
    // System.Boolean <.ctor>b__2_0(System.Type x)
    // Offset: 0x16DD8A8
    bool $_ctor$b__2_0(System::Type* x);
    // public System.Void .ctor()
    // Offset: 0x16DD8A0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PoolCleanupChecker::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PoolCleanupChecker::$$c*, creationType>()));
    }
  }; // Zenject.PoolCleanupChecker/<>c
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::PoolCleanupChecker::$$c*, "Zenject", "PoolCleanupChecker/<>c");
// Writing MetadataGetter for method: PoolCleanupChecker::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PoolCleanupChecker::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PoolCleanupChecker::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PoolCleanupChecker::$$c::$_ctor$b__2_0
// Il2CppName: <.ctor>b__2_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PoolCleanupChecker::$$c::*)(System::Type*)>(&PoolCleanupChecker::$$c::$_ctor$b__2_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PoolCleanupChecker::$$c*), "<.ctor>b__2_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: PoolCleanupChecker::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PoolCleanupChecker::$$c::*)()>(&PoolCleanupChecker::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PoolCleanupChecker::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PoolCleanupChecker::$$c::*)()>(&PoolCleanupChecker::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PoolCleanupChecker::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
