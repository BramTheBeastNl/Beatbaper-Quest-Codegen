// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: DiContainer
  class DiContainer;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.StaticContext
  class StaticContext : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: StaticContext
    StaticContext() noexcept {}
    // Get static field: static private Zenject.DiContainer _container
    static Zenject::DiContainer* _get__container();
    // Set static field: static private Zenject.DiContainer _container
    static void _set__container(Zenject::DiContainer* value);
    // static public System.Void Clear()
    // Offset: 0x16E7318
    static void Clear();
    // static public System.Boolean get_HasContainer()
    // Offset: 0x16E7368
    static bool get_HasContainer();
    // static public Zenject.DiContainer get_Container()
    // Offset: 0x16E1D34
    static Zenject::DiContainer* get_Container();
  }; // Zenject.StaticContext
  #pragma pack(pop)
  // Writing MetadataGetter for method: StaticContext::Clear
  // Il2CppName: Clear
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&StaticContext::Clear)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(StaticContext*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: StaticContext::get_HasContainer
  // Il2CppName: get_HasContainer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&StaticContext::get_HasContainer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(StaticContext*), "get_HasContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: StaticContext::get_Container
  // Il2CppName: get_Container
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::DiContainer* (*)()>(&StaticContext::get_Container)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(StaticContext*), "get_Container", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::StaticContext*, "Zenject", "StaticContext");
