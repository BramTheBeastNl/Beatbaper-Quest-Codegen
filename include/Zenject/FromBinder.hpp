// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.InjectSources
#include "Zenject/InjectSources.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: DiContainer
  class DiContainer;
  // Forward declaring type: BindStatement
  class BindStatement;
  // Forward declaring type: BindInfo
  class BindInfo;
  // Forward declaring type: IBindingFinalizer
  class IBindingFinalizer;
  // Forward declaring type: IProvider
  class IProvider;
  // Forward declaring type: SubContainerBinder
  class SubContainerBinder;
  // Forward declaring type: ConcreteBinderGeneric`1<TContract>
  template<typename TContract>
  class ConcreteBinderGeneric_1;
  // Forward declaring type: IFactory`1<TValue>
  template<typename TValue>
  class IFactory_1;
  // Forward declaring type: InjectContext
  class InjectContext;
  // Forward declaring type: NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
  class NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder;
  // Forward declaring type: GameObjectCreationParameters
  class GameObjectCreationParameters;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Object
  class Object;
  // Forward declaring type: ScriptableObject
  class ScriptableObject;
  // Forward declaring type: Component
  class Component;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.FromBinder
  class FromBinder : public Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder {
    public:
    // Nested type: Zenject::FromBinder::$$c__DisplayClass22_0
    class $$c__DisplayClass22_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass28_0_1<TContract>
    template<typename TContract>
    class $$c__DisplayClass28_0_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass29_0
    class $$c__DisplayClass29_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass30_0
    class $$c__DisplayClass30_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass31_0
    class $$c__DisplayClass31_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass32_0
    class $$c__DisplayClass32_0;
    // Nested type: Zenject::FromBinder::$$c
    class $$c;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass35_0
    class $$c__DisplayClass35_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass36_0
    class $$c__DisplayClass36_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass53_0
    class $$c__DisplayClass53_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass56_0
    class $$c__DisplayClass56_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass57_0
    class $$c__DisplayClass57_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass58_0
    class $$c__DisplayClass58_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass59_0
    class $$c__DisplayClass59_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass59_1
    class $$c__DisplayClass59_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass60_0
    class $$c__DisplayClass60_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass60_1
    class $$c__DisplayClass60_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass60_2
    class $$c__DisplayClass60_2;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass61_0
    class $$c__DisplayClass61_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass61_1
    class $$c__DisplayClass61_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass61_2
    class $$c__DisplayClass61_2;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass62_0
    class $$c__DisplayClass62_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass62_1
    class $$c__DisplayClass62_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass62_2
    class $$c__DisplayClass62_2;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass63_0
    class $$c__DisplayClass63_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass64_0
    class $$c__DisplayClass64_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass64_1
    class $$c__DisplayClass64_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass65_0
    class $$c__DisplayClass65_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass65_1
    class $$c__DisplayClass65_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass65_2
    class $$c__DisplayClass65_2;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass66_0
    class $$c__DisplayClass66_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass66_1
    class $$c__DisplayClass66_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass66_2
    class $$c__DisplayClass66_2;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass67_0
    class $$c__DisplayClass67_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass68_0
    class $$c__DisplayClass68_0;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass69_0_1<TConcrete>
    template<typename TConcrete>
    class $$c__DisplayClass69_0_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass70_0_1<TConcrete>
    template<typename TConcrete>
    class $$c__DisplayClass70_0_1;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass71_0_2<TObj, TResult>
    template<typename TObj, typename TResult>
    class $$c__DisplayClass71_0_2;
    // Nested type: Zenject::FromBinder::$$c__DisplayClass72_0
    class $$c__DisplayClass72_0;
    // [CompilerGeneratedAttribute] Offset: 0xDDE9CC
    // private Zenject.DiContainer <BindContainer>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    Zenject::DiContainer* BindContainer;
    // Field size check
    static_assert(sizeof(Zenject::DiContainer*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xDDE9DC
    // private Zenject.BindStatement <BindStatement>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    Zenject::BindStatement* BindStatement;
    // Field size check
    static_assert(sizeof(Zenject::BindStatement*) == 0x8);
    // Creating value type constructor for type: FromBinder
    FromBinder(Zenject::DiContainer* BindContainer_ = {}, Zenject::BindStatement* BindStatement_ = {}) noexcept : BindContainer{BindContainer_}, BindStatement{BindStatement_} {}
    // public System.Void .ctor(Zenject.DiContainer bindContainer, Zenject.BindInfo bindInfo, Zenject.BindStatement bindStatement)
    // Offset: 0x16371B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FromBinder* New_ctor(Zenject::DiContainer* bindContainer, Zenject::BindInfo* bindInfo, Zenject::BindStatement* bindStatement) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FromBinder*, creationType>(bindContainer, bindInfo, bindStatement)));
    }
    // protected Zenject.DiContainer get_BindContainer()
    // Offset: 0x16371F0
    Zenject::DiContainer* get_BindContainer();
    // private System.Void set_BindContainer(Zenject.DiContainer value)
    // Offset: 0x16371F8
    void set_BindContainer(Zenject::DiContainer* value);
    // protected Zenject.BindStatement get_BindStatement()
    // Offset: 0x1637200
    Zenject::BindStatement* get_BindStatement();
    // private System.Void set_BindStatement(Zenject.BindStatement value)
    // Offset: 0x1637208
    void set_BindStatement(Zenject::BindStatement* value);
    // protected System.Void set_SubFinalizer(Zenject.IBindingFinalizer value)
    // Offset: 0x1637210
    void set_SubFinalizer(Zenject::IBindingFinalizer* value);
    // protected System.Collections.Generic.IEnumerable`1<System.Type> get_AllParentTypes()
    // Offset: 0x163722C
    System::Collections::Generic::IEnumerable_1<System::Type*>* get_AllParentTypes();
    // protected System.Collections.Generic.IEnumerable`1<System.Type> get_ConcreteTypes()
    // Offset: 0x163728C
    System::Collections::Generic::IEnumerable_1<System::Type*>* get_ConcreteTypes();
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromNew()
    // Offset: 0x1637318
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromNew();
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResolve()
    // Offset: 0x1637354
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResolve();
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResolve(System.Object subIdentifier)
    // Offset: 0x1637364
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResolve(::Il2CppObject* subIdentifier);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResolve(System.Object subIdentifier, Zenject.InjectSources source)
    // Offset: 0x1637370
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResolve(::Il2CppObject* subIdentifier, Zenject::InjectSources source);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResolveAll()
    // Offset: 0x16374B4
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResolveAll();
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResolveAll(System.Object subIdentifier)
    // Offset: 0x16374C4
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResolveAll(::Il2CppObject* subIdentifier);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResolveAll(System.Object subIdentifier, Zenject.InjectSources source)
    // Offset: 0x16374D0
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResolveAll(::Il2CppObject* subIdentifier, Zenject::InjectSources source);
    // private Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResolveInternal(System.Object subIdentifier, System.Boolean matchAll, Zenject.InjectSources source)
    // Offset: 0x163737C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResolveInternal(::Il2CppObject* subIdentifier, bool matchAll, Zenject::InjectSources source);
    // public Zenject.SubContainerBinder FromSubContainerResolveAll()
    // Offset: 0x16374E4
    Zenject::SubContainerBinder* FromSubContainerResolveAll();
    // public Zenject.SubContainerBinder FromSubContainerResolveAll(System.Object subIdentifier)
    // Offset: 0x16374F0
    Zenject::SubContainerBinder* FromSubContainerResolveAll(::Il2CppObject* subIdentifier);
    // public Zenject.SubContainerBinder FromSubContainerResolve()
    // Offset: 0x16375A8
    Zenject::SubContainerBinder* FromSubContainerResolve();
    // public Zenject.SubContainerBinder FromSubContainerResolve(System.Object subIdentifier)
    // Offset: 0x16375B4
    Zenject::SubContainerBinder* FromSubContainerResolve(::Il2CppObject* subIdentifier);
    // private Zenject.SubContainerBinder FromSubContainerResolveInternal(System.Object subIdentifier, System.Boolean resolveAll)
    // Offset: 0x16374F8
    Zenject::SubContainerBinder* FromSubContainerResolveInternal(::Il2CppObject* subIdentifier, bool resolveAll);
    // protected Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromIFactoryBase(System.Action`1<Zenject.ConcreteBinderGeneric`1<Zenject.IFactory`1<TContract>>> factoryBindGenerator)
    // Offset: 0xFFFFFFFF
    template<class TContract>
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromIFactoryBase(System::Action_1<Zenject::ConcreteBinderGeneric_1<Zenject::IFactory_1<TContract>*>*>* factoryBindGenerator) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinder::FromIFactoryBase");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromIFactoryBase", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TContract>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(factoryBindGenerator)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TContract>::get()}));
      return ::il2cpp_utils::RunMethodThrow<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___generic__method, factoryBindGenerator);
    }
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsOn(UnityEngine.GameObject gameObject)
    // Offset: 0x16375BC
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsOn(UnityEngine::GameObject* gameObject);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentOn(UnityEngine.GameObject gameObject)
    // Offset: 0x1637704
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentOn(UnityEngine::GameObject* gameObject);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsOn(System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> gameObjectGetter)
    // Offset: 0x163784C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsOn(System::Func_2<Zenject::InjectContext*, UnityEngine::GameObject*>* gameObjectGetter);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentOn(System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> gameObjectGetter)
    // Offset: 0x1637984
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentOn(System::Func_2<Zenject::InjectContext*, UnityEngine::GameObject*>* gameObjectGetter);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsOnRoot()
    // Offset: 0x1637ABC
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsOnRoot();
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentOnRoot()
    // Offset: 0x1637BA4
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentOnRoot();
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromNewComponentOn(UnityEngine.GameObject gameObject)
    // Offset: 0x1637C8C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewComponentOn(UnityEngine::GameObject* gameObject);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromNewComponentOn(System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> gameObjectGetter)
    // Offset: 0x1637DD4
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewComponentOn(System::Func_2<Zenject::InjectContext*, UnityEngine::GameObject*>* gameObjectGetter);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromNewComponentSibling()
    // Offset: 0x1637F10
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewComponentSibling();
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromNewComponentOnRoot()
    // Offset: 0x163801C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewComponentOnRoot();
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromNewComponentOnNewPrefabResource(System.String resourcePath)
    // Offset: 0x1638104
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewComponentOnNewPrefabResource(::Il2CppString* resourcePath);
    // Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromNewComponentOnNewPrefabResource(System.String resourcePath, Zenject.GameObjectCreationParameters gameObjectInfo)
    // Offset: 0x1638178
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewComponentOnNewPrefabResource(::Il2CppString* resourcePath, Zenject::GameObjectCreationParameters* gameObjectInfo);
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromNewComponentOnNewPrefab(UnityEngine.Object prefab)
    // Offset: 0x1638310
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewComponentOnNewPrefab(UnityEngine::Object* prefab);
    // Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromNewComponentOnNewPrefab(UnityEngine.Object prefab, Zenject.GameObjectCreationParameters gameObjectInfo)
    // Offset: 0x1638384
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewComponentOnNewPrefab(UnityEngine::Object* prefab, Zenject::GameObjectCreationParameters* gameObjectInfo);
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentInNewPrefab(UnityEngine.Object prefab)
    // Offset: 0x163851C
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentInNewPrefab(UnityEngine::Object* prefab);
    // Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentInNewPrefab(UnityEngine.Object prefab, Zenject.GameObjectCreationParameters gameObjectInfo)
    // Offset: 0x1638590
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentInNewPrefab(UnityEngine::Object* prefab, Zenject::GameObjectCreationParameters* gameObjectInfo);
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsInNewPrefab(UnityEngine.Object prefab)
    // Offset: 0x1638718
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsInNewPrefab(UnityEngine::Object* prefab);
    // Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsInNewPrefab(UnityEngine.Object prefab, Zenject.GameObjectCreationParameters gameObjectInfo)
    // Offset: 0x163878C
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsInNewPrefab(UnityEngine::Object* prefab, Zenject::GameObjectCreationParameters* gameObjectInfo);
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentInNewPrefabResource(System.String resourcePath)
    // Offset: 0x1638914
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentInNewPrefabResource(::Il2CppString* resourcePath);
    // Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentInNewPrefabResource(System.String resourcePath, Zenject.GameObjectCreationParameters gameObjectInfo)
    // Offset: 0x1638988
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentInNewPrefabResource(::Il2CppString* resourcePath, Zenject::GameObjectCreationParameters* gameObjectInfo);
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsInNewPrefabResource(System.String resourcePath)
    // Offset: 0x1638B10
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsInNewPrefabResource(::Il2CppString* resourcePath);
    // Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsInNewPrefabResource(System.String resourcePath, Zenject.GameObjectCreationParameters gameObjectInfo)
    // Offset: 0x1638B84
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsInNewPrefabResource(::Il2CppString* resourcePath, Zenject::GameObjectCreationParameters* gameObjectInfo);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromNewScriptableObject(UnityEngine.ScriptableObject resource)
    // Offset: 0x1638D0C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewScriptableObject(UnityEngine::ScriptableObject* resource);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromScriptableObject(UnityEngine.ScriptableObject resource)
    // Offset: 0x1638E44
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromScriptableObject(UnityEngine::ScriptableObject* resource);
    // private Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromScriptableObjectInternal(UnityEngine.ScriptableObject resource, System.Boolean createNew)
    // Offset: 0x1638D14
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromScriptableObjectInternal(UnityEngine::ScriptableObject* resource, bool createNew);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromNewScriptableObjectResource(System.String resourcePath)
    // Offset: 0x1638E54
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromNewScriptableObjectResource(::Il2CppString* resourcePath);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromScriptableObjectResource(System.String resourcePath)
    // Offset: 0x1638F98
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromScriptableObjectResource(::Il2CppString* resourcePath);
    // private Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromScriptableObjectResourceInternal(System.String resourcePath, System.Boolean createNew)
    // Offset: 0x1638E5C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromScriptableObjectResourceInternal(::Il2CppString* resourcePath, bool createNew);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResource(System.String resourcePath)
    // Offset: 0x1638FA8
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResource(::Il2CppString* resourcePath);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResources(System.String resourcePath)
    // Offset: 0x16390D0
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResources(::Il2CppString* resourcePath);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentInChildren(System.Boolean includeInactive)
    // Offset: 0x16391F8
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentInChildren(bool includeInactive);
    // protected Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsInChildrenBase(System.Boolean excludeSelf, System.Func`2<UnityEngine.Component,System.Boolean> predicate, System.Boolean includeInactive)
    // Offset: 0x163930C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsInChildrenBase(bool excludeSelf, System::Func_2<UnityEngine::Component*, bool>* predicate, bool includeInactive);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentInParents(System.Boolean excludeSelf, System.Boolean includeInactive)
    // Offset: 0x163943C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentInParents(bool excludeSelf, bool includeInactive);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsInParents(System.Boolean excludeSelf, System.Boolean includeInactive)
    // Offset: 0x163955C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsInParents(bool excludeSelf, bool includeInactive);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentSibling()
    // Offset: 0x163967C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentSibling();
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsSibling()
    // Offset: 0x16397C0
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsSibling();
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentInHierarchy(System.Boolean includeInactive)
    // Offset: 0x1639904
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentInHierarchy(bool includeInactive);
    // protected Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromComponentsInHierarchyBase(System.Func`2<UnityEngine.Component,System.Boolean> predicate, System.Boolean includeInactive)
    // Offset: 0x1639A1C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromComponentsInHierarchyBase(System::Func_2<UnityEngine::Component*, bool>* predicate, bool includeInactive);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromMethodUntyped(System.Func`2<Zenject.InjectContext,System.Object> method)
    // Offset: 0x1639B3C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromMethodUntyped(System::Func_2<Zenject::InjectContext*, ::Il2CppObject*>* method);
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromMethodMultipleUntyped(System.Func`2<Zenject.InjectContext,System.Collections.Generic.IEnumerable`1<System.Object>> method)
    // Offset: 0x1639C3C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromMethodMultipleUntyped(System::Func_2<Zenject::InjectContext*, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>* method);
    // protected Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromMethodBase(System.Func`2<Zenject.InjectContext,TConcrete> method)
    // Offset: 0xFFFFFFFF
    template<class TConcrete>
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromMethodBase(System::Func_2<Zenject::InjectContext*, TConcrete>* method) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinder::FromMethodBase");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromMethodBase", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TConcrete>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TConcrete>::get()}));
      return ::il2cpp_utils::RunMethodThrow<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___generic__method, method);
    }
    // protected Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromMethodMultipleBase(System.Func`2<Zenject.InjectContext,System.Collections.Generic.IEnumerable`1<TConcrete>> method)
    // Offset: 0xFFFFFFFF
    template<class TConcrete>
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromMethodMultipleBase(System::Func_2<Zenject::InjectContext*, System::Collections::Generic::IEnumerable_1<TConcrete>*>* method) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinder::FromMethodMultipleBase");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromMethodMultipleBase", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TConcrete>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TConcrete>::get()}));
      return ::il2cpp_utils::RunMethodThrow<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___generic__method, method);
    }
    // protected Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromResolveGetterBase(System.Object identifier, System.Func`2<TObj,TResult> method, Zenject.InjectSources source, System.Boolean matchMultiple)
    // Offset: 0xFFFFFFFF
    template<class TObj, class TResult>
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromResolveGetterBase(::Il2CppObject* identifier, System::Func_2<TObj, TResult>* method, Zenject::InjectSources source, bool matchMultiple) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinder::FromResolveGetterBase");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolveGetterBase", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObj>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(matchMultiple)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObj>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TResult>::get()})));
      return ::il2cpp_utils::RunMethodThrow<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___generic__method, identifier, method, source, matchMultiple);
    }
    // protected Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder FromInstanceBase(System.Object instance)
    // Offset: 0x1639D3C
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* FromInstanceBase(::Il2CppObject* instance);
    // private Zenject.IProvider <FromNewComponentSibling>b__37_0(Zenject.DiContainer container, System.Type type)
    // Offset: 0x1639E78
    Zenject::IProvider* $FromNewComponentSibling$b__37_0(Zenject::DiContainer* container, System::Type* type);
  }; // Zenject.FromBinder
  #pragma pack(pop)
  static check_size<sizeof(FromBinder), 40 + sizeof(Zenject::BindStatement*)> __Zenject_FromBinderSizeCheck;
  static_assert(sizeof(FromBinder) == 0x30);
  // Writing MetadataGetter for method: FromBinder::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FromBinder::*)(Zenject::DiContainer*, Zenject::BindInfo*, Zenject::BindStatement*)>(&FromBinder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::BindInfo*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::BindStatement*>()});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FromBinder::*)(Zenject::DiContainer*, Zenject::BindInfo*, Zenject::BindStatement*)>(&FromBinder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::BindInfo*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::BindStatement*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::get_BindContainer
  // Il2CppName: get_BindContainer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::DiContainer* (FromBinder::*)()>(&FromBinder::get_BindContainer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "get_BindContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::set_BindContainer
  // Il2CppName: set_BindContainer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FromBinder::*)(Zenject::DiContainer*)>(&FromBinder::set_BindContainer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "set_BindContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::get_BindStatement
  // Il2CppName: get_BindStatement
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::BindStatement* (FromBinder::*)()>(&FromBinder::get_BindStatement)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "get_BindStatement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::set_BindStatement
  // Il2CppName: set_BindStatement
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FromBinder::*)(Zenject::BindStatement*)>(&FromBinder::set_BindStatement)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "set_BindStatement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::BindStatement*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::set_SubFinalizer
  // Il2CppName: set_SubFinalizer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FromBinder::*)(Zenject::IBindingFinalizer*)>(&FromBinder::set_SubFinalizer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "set_SubFinalizer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::IBindingFinalizer*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::get_AllParentTypes
  // Il2CppName: get_AllParentTypes
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerable_1<System::Type*>* (FromBinder::*)()>(&FromBinder::get_AllParentTypes)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "get_AllParentTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::get_ConcreteTypes
  // Il2CppName: get_ConcreteTypes
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerable_1<System::Type*>* (FromBinder::*)()>(&FromBinder::get_ConcreteTypes)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "get_ConcreteTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNew
  // Il2CppName: FromNew
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)()>(&FromBinder::FromNew)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromResolve
  // Il2CppName: FromResolve
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)()>(&FromBinder::FromResolve)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromResolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromResolve
  // Il2CppName: FromResolve
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppObject*)>(&FromBinder::FromResolve)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromResolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromResolve
  // Il2CppName: FromResolve
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppObject*, Zenject::InjectSources)>(&FromBinder::FromResolve)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromResolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::InjectSources>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromResolveAll
  // Il2CppName: FromResolveAll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)()>(&FromBinder::FromResolveAll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromResolveAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromResolveAll
  // Il2CppName: FromResolveAll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppObject*)>(&FromBinder::FromResolveAll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromResolveAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromResolveAll
  // Il2CppName: FromResolveAll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppObject*, Zenject::InjectSources)>(&FromBinder::FromResolveAll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromResolveAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::InjectSources>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromResolveInternal
  // Il2CppName: FromResolveInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppObject*, bool, Zenject::InjectSources)>(&FromBinder::FromResolveInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromResolveInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Zenject::InjectSources>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromSubContainerResolveAll
  // Il2CppName: FromSubContainerResolveAll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::SubContainerBinder* (FromBinder::*)()>(&FromBinder::FromSubContainerResolveAll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromSubContainerResolveAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromSubContainerResolveAll
  // Il2CppName: FromSubContainerResolveAll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::SubContainerBinder* (FromBinder::*)(::Il2CppObject*)>(&FromBinder::FromSubContainerResolveAll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromSubContainerResolveAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromSubContainerResolve
  // Il2CppName: FromSubContainerResolve
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::SubContainerBinder* (FromBinder::*)()>(&FromBinder::FromSubContainerResolve)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromSubContainerResolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromSubContainerResolve
  // Il2CppName: FromSubContainerResolve
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::SubContainerBinder* (FromBinder::*)(::Il2CppObject*)>(&FromBinder::FromSubContainerResolve)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromSubContainerResolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromSubContainerResolveInternal
  // Il2CppName: FromSubContainerResolveInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::SubContainerBinder* (FromBinder::*)(::Il2CppObject*, bool)>(&FromBinder::FromSubContainerResolveInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromSubContainerResolveInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromIFactoryBase
  // Il2CppName: FromIFactoryBase
  // Cannot write MetadataGetter for generic methods!
  // Writing MetadataGetter for method: FromBinder::FromComponentsOn
  // Il2CppName: FromComponentsOn
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::GameObject*)>(&FromBinder::FromComponentsOn)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentOn
  // Il2CppName: FromComponentOn
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::GameObject*)>(&FromBinder::FromComponentOn)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsOn
  // Il2CppName: FromComponentsOn
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(System::Func_2<Zenject::InjectContext*, UnityEngine::GameObject*>*)>(&FromBinder::FromComponentsOn)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_2<Zenject::InjectContext*, UnityEngine::GameObject*>*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentOn
  // Il2CppName: FromComponentOn
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(System::Func_2<Zenject::InjectContext*, UnityEngine::GameObject*>*)>(&FromBinder::FromComponentOn)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_2<Zenject::InjectContext*, UnityEngine::GameObject*>*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsOnRoot
  // Il2CppName: FromComponentsOnRoot
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)()>(&FromBinder::FromComponentsOnRoot)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsOnRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentOnRoot
  // Il2CppName: FromComponentOnRoot
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)()>(&FromBinder::FromComponentOnRoot)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentOnRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewComponentOn
  // Il2CppName: FromNewComponentOn
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::GameObject*)>(&FromBinder::FromNewComponentOn)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewComponentOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewComponentOn
  // Il2CppName: FromNewComponentOn
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(System::Func_2<Zenject::InjectContext*, UnityEngine::GameObject*>*)>(&FromBinder::FromNewComponentOn)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewComponentOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_2<Zenject::InjectContext*, UnityEngine::GameObject*>*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewComponentSibling
  // Il2CppName: FromNewComponentSibling
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)()>(&FromBinder::FromNewComponentSibling)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewComponentSibling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewComponentOnRoot
  // Il2CppName: FromNewComponentOnRoot
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)()>(&FromBinder::FromNewComponentOnRoot)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewComponentOnRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewComponentOnNewPrefabResource
  // Il2CppName: FromNewComponentOnNewPrefabResource
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*)>(&FromBinder::FromNewComponentOnNewPrefabResource)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewComponentOnNewPrefabResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewComponentOnNewPrefabResource
  // Il2CppName: FromNewComponentOnNewPrefabResource
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*, Zenject::GameObjectCreationParameters*)>(&FromBinder::FromNewComponentOnNewPrefabResource)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewComponentOnNewPrefabResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewComponentOnNewPrefab
  // Il2CppName: FromNewComponentOnNewPrefab
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::Object*)>(&FromBinder::FromNewComponentOnNewPrefab)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewComponentOnNewPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewComponentOnNewPrefab
  // Il2CppName: FromNewComponentOnNewPrefab
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::Object*, Zenject::GameObjectCreationParameters*)>(&FromBinder::FromNewComponentOnNewPrefab)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewComponentOnNewPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentInNewPrefab
  // Il2CppName: FromComponentInNewPrefab
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::Object*)>(&FromBinder::FromComponentInNewPrefab)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentInNewPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentInNewPrefab
  // Il2CppName: FromComponentInNewPrefab
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::Object*, Zenject::GameObjectCreationParameters*)>(&FromBinder::FromComponentInNewPrefab)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentInNewPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsInNewPrefab
  // Il2CppName: FromComponentsInNewPrefab
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::Object*)>(&FromBinder::FromComponentsInNewPrefab)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsInNewPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsInNewPrefab
  // Il2CppName: FromComponentsInNewPrefab
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::Object*, Zenject::GameObjectCreationParameters*)>(&FromBinder::FromComponentsInNewPrefab)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsInNewPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentInNewPrefabResource
  // Il2CppName: FromComponentInNewPrefabResource
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*)>(&FromBinder::FromComponentInNewPrefabResource)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentInNewPrefabResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentInNewPrefabResource
  // Il2CppName: FromComponentInNewPrefabResource
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*, Zenject::GameObjectCreationParameters*)>(&FromBinder::FromComponentInNewPrefabResource)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentInNewPrefabResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsInNewPrefabResource
  // Il2CppName: FromComponentsInNewPrefabResource
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*)>(&FromBinder::FromComponentsInNewPrefabResource)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsInNewPrefabResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsInNewPrefabResource
  // Il2CppName: FromComponentsInNewPrefabResource
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*, Zenject::GameObjectCreationParameters*)>(&FromBinder::FromComponentsInNewPrefabResource)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsInNewPrefabResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::GameObjectCreationParameters*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewScriptableObject
  // Il2CppName: FromNewScriptableObject
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::ScriptableObject*)>(&FromBinder::FromNewScriptableObject)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewScriptableObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ScriptableObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromScriptableObject
  // Il2CppName: FromScriptableObject
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::ScriptableObject*)>(&FromBinder::FromScriptableObject)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromScriptableObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ScriptableObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromScriptableObjectInternal
  // Il2CppName: FromScriptableObjectInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(UnityEngine::ScriptableObject*, bool)>(&FromBinder::FromScriptableObjectInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromScriptableObjectInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ScriptableObject*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromNewScriptableObjectResource
  // Il2CppName: FromNewScriptableObjectResource
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*)>(&FromBinder::FromNewScriptableObjectResource)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromNewScriptableObjectResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromScriptableObjectResource
  // Il2CppName: FromScriptableObjectResource
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*)>(&FromBinder::FromScriptableObjectResource)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromScriptableObjectResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromScriptableObjectResourceInternal
  // Il2CppName: FromScriptableObjectResourceInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*, bool)>(&FromBinder::FromScriptableObjectResourceInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromScriptableObjectResourceInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromResource
  // Il2CppName: FromResource
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*)>(&FromBinder::FromResource)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromResource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromResources
  // Il2CppName: FromResources
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppString*)>(&FromBinder::FromResources)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentInChildren
  // Il2CppName: FromComponentInChildren
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(bool)>(&FromBinder::FromComponentInChildren)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentInChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsInChildrenBase
  // Il2CppName: FromComponentsInChildrenBase
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(bool, System::Func_2<UnityEngine::Component*, bool>*, bool)>(&FromBinder::FromComponentsInChildrenBase)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsInChildrenBase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Func_2<UnityEngine::Component*, bool>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentInParents
  // Il2CppName: FromComponentInParents
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(bool, bool)>(&FromBinder::FromComponentInParents)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentInParents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsInParents
  // Il2CppName: FromComponentsInParents
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(bool, bool)>(&FromBinder::FromComponentsInParents)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsInParents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentSibling
  // Il2CppName: FromComponentSibling
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)()>(&FromBinder::FromComponentSibling)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentSibling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsSibling
  // Il2CppName: FromComponentsSibling
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)()>(&FromBinder::FromComponentsSibling)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsSibling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentInHierarchy
  // Il2CppName: FromComponentInHierarchy
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(bool)>(&FromBinder::FromComponentInHierarchy)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentInHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromComponentsInHierarchyBase
  // Il2CppName: FromComponentsInHierarchyBase
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(System::Func_2<UnityEngine::Component*, bool>*, bool)>(&FromBinder::FromComponentsInHierarchyBase)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromComponentsInHierarchyBase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_2<UnityEngine::Component*, bool>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromMethodUntyped
  // Il2CppName: FromMethodUntyped
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(System::Func_2<Zenject::InjectContext*, ::Il2CppObject*>*)>(&FromBinder::FromMethodUntyped)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromMethodUntyped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_2<Zenject::InjectContext*, ::Il2CppObject*>*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromMethodMultipleUntyped
  // Il2CppName: FromMethodMultipleUntyped
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(System::Func_2<Zenject::InjectContext*, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>*)>(&FromBinder::FromMethodMultipleUntyped)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromMethodMultipleUntyped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_2<Zenject::InjectContext*, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::FromMethodBase
  // Il2CppName: FromMethodBase
  // Cannot write MetadataGetter for generic methods!
  // Writing MetadataGetter for method: FromBinder::FromMethodMultipleBase
  // Il2CppName: FromMethodMultipleBase
  // Cannot write MetadataGetter for generic methods!
  // Writing MetadataGetter for method: FromBinder::FromResolveGetterBase
  // Il2CppName: FromResolveGetterBase
  // Cannot write MetadataGetter for generic methods!
  // Writing MetadataGetter for method: FromBinder::FromInstanceBase
  // Il2CppName: FromInstanceBase
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* (FromBinder::*)(::Il2CppObject*)>(&FromBinder::FromInstanceBase)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "FromInstanceBase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: FromBinder::$FromNewComponentSibling$b__37_0
  // Il2CppName: <FromNewComponentSibling>b__37_0
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Zenject::IProvider* (FromBinder::*)(Zenject::DiContainer*, System::Type*)>(&FromBinder::$FromNewComponentSibling$b__37_0)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(FromBinder*), "<FromNewComponentSibling>b__37_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::FromBinder*, "Zenject", "FromBinder");
