// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: HoudiniEngineUnity.HAPI_AttributeInfo
#include "HoudiniEngineUnity/HAPI_AttributeInfo.hpp"
// Including type: HoudiniEngineUnity.TransformData
#include "HoudiniEngineUnity/TransformData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_SessionBase
  class HEU_SessionBase;
  // Forward declaring type: HEU_OutputAttribute
  class HEU_OutputAttribute;
  // Forward declaring type: HEU_HoudiniAssetRoot
  class HEU_HoudiniAssetRoot;
  // Forward declaring type: HEU_Handle
  class HEU_Handle;
  // Forward declaring type: HAPI_AssetInfo
  struct HAPI_AssetInfo;
  // Forward declaring type: HEU_Parameters
  class HEU_Parameters;
  // Forward declaring type: HAPI_Transform
  struct HAPI_Transform;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Component
  class Component;
  // Forward declaring type: Object
  class Object;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: MeshCollider
  class MeshCollider;
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: Rect
  struct Rect;
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_GeneralUtility
  class HEU_GeneralUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(HoudiniEngineUnity::HEU_GeneralUtility);
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_GeneralUtility*, "HoudiniEngineUnity", "HEU_GeneralUtility");
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_GeneralUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_GeneralUtility : public ::Il2CppObject {
    public:
    // Nested type: HoudiniEngineUnity::HEU_GeneralUtility::GetArray1ArgDel_1<T>
    template<typename T>
    class GetArray1ArgDel_1;
    // Nested type: HoudiniEngineUnity::HEU_GeneralUtility::GetArray2ArgDel_2<ARG2, T>
    template<typename ARG2, typename T>
    class GetArray2ArgDel_2;
    // Nested type: HoudiniEngineUnity::HEU_GeneralUtility::GetArray3ArgDel_3<ARG3, ARG2, T>
    template<typename ARG3, typename ARG2, typename T>
    class GetArray3ArgDel_3;
    // Nested type: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeArrayInputFunc_1<T>
    template<typename T>
    class GetAttributeArrayInputFunc_1;
    // Nested type: HoudiniEngineUnity::HEU_GeneralUtility::SetAttributeArrayFunc_1<T>
    template<typename T>
    class SetAttributeArrayFunc_1;
    // static public System.Boolean GetArray1Arg(System.Int32 arg1, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray1ArgDel`1<T> func, out T[] data, System.Int32 start, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool GetArray1Arg(int arg1, HoudiniEngineUnity::HEU_GeneralUtility::GetArray1ArgDel_1<T>* func, ByRef<::ArrayW<T>> data, int start, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::GetArray1Arg");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "GetArray1Arg", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(func), ::il2cpp_utils::ExtractIndependentType<::ArrayW<T>&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, arg1, func, byref(data), start, count)));
    }
    // static public System.Boolean GetArray2Arg(System.Int32 arg1, ARG2 arg2, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray2ArgDel`2<ARG2,T> func, out T[] data, System.Int32 start, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class ARG2, class T>
    static bool GetArray2Arg(int arg1, ARG2 arg2, HoudiniEngineUnity::HEU_GeneralUtility::GetArray2ArgDel_2<ARG2, T>* func, ByRef<::ArrayW<T>> data, int start, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::GetArray2Arg");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "GetArray2Arg", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(func), ::il2cpp_utils::ExtractIndependentType<::ArrayW<T>&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, arg1, arg2, func, byref(data), start, count)));
    }
    // static public System.Boolean GetArray3Arg(System.Int32 arg1, ARG2 arg2, ARG3 arg3, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray3ArgDel`3<ARG3,ARG2,T> func, out T[] data, System.Int32 start, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class ARG3, class ARG2, class T>
    static bool GetArray3Arg(int arg1, ARG2 arg2, ARG3 arg3, HoudiniEngineUnity::HEU_GeneralUtility::GetArray3ArgDel_3<ARG3, ARG2, T>* func, ByRef<::ArrayW<T>> data, int start, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::GetArray3Arg");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "GetArray3Arg", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(func), ::il2cpp_utils::ExtractIndependentType<::ArrayW<T>&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, arg1, arg2, arg3, func, byref(data), start, count)));
    }
    // static private System.Boolean GetArray(System.Int32 arg1, ARG2 arg2, ARG3 arg3, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray1ArgDel`1<T> func1, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray2ArgDel`2<ARG2,T> func2, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray3ArgDel`3<ARG3,ARG2,T> func3, out T[] data, System.Int32 start, System.Int32 count, System.Int32 tupleSize)
    // Offset: 0xFFFFFFFF
    template<class ARG3, class ARG2, class T>
    static bool GetArray(int arg1, ARG2 arg2, ARG3 arg3, HoudiniEngineUnity::HEU_GeneralUtility::GetArray1ArgDel_1<T>* func1, HoudiniEngineUnity::HEU_GeneralUtility::GetArray2ArgDel_2<ARG2, T>* func2, HoudiniEngineUnity::HEU_GeneralUtility::GetArray3ArgDel_3<ARG3, ARG2, T>* func3, ByRef<::ArrayW<T>> data, int start, int count, int tupleSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::GetArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "GetArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(func1), ::il2cpp_utils::ExtractType(func2), ::il2cpp_utils::ExtractType(func3), ::il2cpp_utils::ExtractIndependentType<::ArrayW<T>&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(tupleSize)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, arg1, arg2, arg3, func1, func2, func3, byref(data), start, count, tupleSize)));
    }
    // static public System.Boolean SetArray1Arg(System.Int32 arg1, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray1ArgDel`1<T> func, out T[] data, System.Int32 start, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool SetArray1Arg(int arg1, HoudiniEngineUnity::HEU_GeneralUtility::GetArray1ArgDel_1<T>* func, ByRef<::ArrayW<T>> data, int start, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::SetArray1Arg");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "SetArray1Arg", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(func), ::il2cpp_utils::ExtractIndependentType<::ArrayW<T>&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, arg1, func, byref(data), start, count)));
    }
    // static public System.Boolean SetArray2Arg(System.Int32 arg1, ARG2 arg2, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray2ArgDel`2<ARG2,T> func, out T[] data, System.Int32 start, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class ARG2, class T>
    static bool SetArray2Arg(int arg1, ARG2 arg2, HoudiniEngineUnity::HEU_GeneralUtility::GetArray2ArgDel_2<ARG2, T>* func, ByRef<::ArrayW<T>> data, int start, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::SetArray2Arg");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "SetArray2Arg", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(func), ::il2cpp_utils::ExtractIndependentType<::ArrayW<T>&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, arg1, arg2, func, byref(data), start, count)));
    }
    // static public System.Boolean SetArray(System.Int32 arg1, ARG2 arg2, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray1ArgDel`1<T> func1, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetArray2ArgDel`2<ARG2,T> func2, out T[] data, System.Int32 start, System.Int32 count, System.Int32 tupleSize)
    // Offset: 0xFFFFFFFF
    template<class ARG2, class T>
    static bool SetArray(int arg1, ARG2 arg2, HoudiniEngineUnity::HEU_GeneralUtility::GetArray1ArgDel_1<T>* func1, HoudiniEngineUnity::HEU_GeneralUtility::GetArray2ArgDel_2<ARG2, T>* func2, ByRef<::ArrayW<T>> data, int start, int count, int tupleSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::SetArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "SetArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(func1), ::il2cpp_utils::ExtractType(func2), ::il2cpp_utils::ExtractIndependentType<::ArrayW<T>&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(tupleSize)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ARG2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, arg1, arg2, func1, func2, byref(data), start, count, tupleSize)));
    }
    // static public System.Boolean DoArrayElementsMatch(T[] array1, T[] array2)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool DoArrayElementsMatch(::ArrayW<T> array1, ::ArrayW<T> array2) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::DoArrayElementsMatch");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "DoArrayElementsMatch", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, array1, array2)));
    }
    // static public System.Boolean DoArrayElementsMatch(T[] array1, System.Int32 startOffset1, T[] array2, System.Int32 startOffset2, System.Int32 length)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool DoArrayElementsMatch(::ArrayW<T> array1, int startOffset1, ::ArrayW<T> array2, int startOffset2, int length) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::DoArrayElementsMatch");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "DoArrayElementsMatch", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(startOffset1), ::il2cpp_utils::ExtractType(array2), ::il2cpp_utils::ExtractType(startOffset2), ::il2cpp_utils::ExtractType(length)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, array1, startOffset1, array2, startOffset2, length)));
    }
    // static public System.Boolean GetAttributeArray(System.Int32 geoID, System.Int32 partID, System.String name, ref HoudiniEngineUnity.HAPI_AttributeInfo info, T[] items, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetAttributeArrayInputFunc`1<T> getFunc, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool GetAttributeArray(int geoID, int partID, ::Il2CppString* name, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> info, ::ArrayW<T> items, HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeArrayInputFunc_1<T>* getFunc, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "GetAttributeArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geoID), ::il2cpp_utils::ExtractType(partID), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(getFunc), ::il2cpp_utils::ExtractType(count)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, geoID, partID, name, byref(info), items, getFunc, count)));
    }
    // static public System.Boolean GetAttribute(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String name, ref HoudiniEngineUnity.HAPI_AttributeInfo info, ref T[] data, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetAttributeArrayInputFunc`1<T> getFunc)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool GetAttribute(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* name, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> info, ByRef<::ArrayW<T>> data, HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeArrayInputFunc_1<T>* getFunc) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::GetAttribute");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "GetAttribute", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(session), ::il2cpp_utils::ExtractType(geoID), ::il2cpp_utils::ExtractType(partID), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(getFunc)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, session, geoID, partID, name, byref(info), byref(data), getFunc)));
    }
    // static public System.Boolean GetAttributeStrict(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, HoudiniEngineUnity.HAPI_AttributeOwner attrOwner, System.String name, ref HoudiniEngineUnity.HAPI_AttributeInfo info, ref T[] data, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.GetAttributeArrayInputFunc`1<T> getFunc)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool GetAttributeStrict(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, HoudiniEngineUnity::HAPI_AttributeOwner attrOwner, ::Il2CppString* name, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> info, ByRef<::ArrayW<T>> data, HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeArrayInputFunc_1<T>* getFunc) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStrict");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "GetAttributeStrict", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(session), ::il2cpp_utils::ExtractType(geoID), ::il2cpp_utils::ExtractType(partID), ::il2cpp_utils::ExtractType(attrOwner), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(getFunc)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, session, geoID, partID, attrOwner, name, byref(info), byref(data), getFunc)));
    }
    // static public System.Void GetAttributeStringDataHelper(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String name, ref HoudiniEngineUnity.HAPI_AttributeInfo info, ref System.Int32[] data)
    // Offset: 0x14D736C
    static void GetAttributeStringDataHelper(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* name, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> info, ByRef<::ArrayW<int>> data);
    // static public System.String[] GetAttributeStringData(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String name, ref HoudiniEngineUnity.HAPI_AttributeInfo attrInfo)
    // Offset: 0x14D752C
    static ::ArrayW<::Il2CppString*> GetAttributeStringData(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* name, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> attrInfo);
    // static public System.Boolean SetAttributeArray(System.Int32 geoID, System.Int32 partID, System.String attrName, ref HoudiniEngineUnity.HAPI_AttributeInfo attrInfo, T[] items, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.SetAttributeArrayFunc`1<T> setFunc, System.Int32 count)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool SetAttributeArray(int geoID, int partID, ::Il2CppString* attrName, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> attrInfo, ::ArrayW<T> items, HoudiniEngineUnity::HEU_GeneralUtility::SetAttributeArrayFunc_1<T>* setFunc, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::SetAttributeArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "SetAttributeArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geoID), ::il2cpp_utils::ExtractType(partID), ::il2cpp_utils::ExtractType(attrName), ::il2cpp_utils::ExtractType(attrInfo), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(setFunc), ::il2cpp_utils::ExtractType(count)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, geoID, partID, attrName, byref(attrInfo), items, setFunc, count)));
    }
    // static public System.Boolean SetAttribute(System.Int32 geoID, System.Int32 partID, System.String attrName, ref HoudiniEngineUnity.HAPI_AttributeInfo attrInfo, T[] items, HoudiniEngineUnity.HEU_GeneralUtility/HoudiniEngineUnity.SetAttributeArrayFunc`1<T> setFunc)
    // Offset: 0xFFFFFFFF
    template<class T>
    static bool SetAttribute(int geoID, int partID, ::Il2CppString* attrName, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> attrInfo, ::ArrayW<T> items, HoudiniEngineUnity::HEU_GeneralUtility::SetAttributeArrayFunc_1<T>* setFunc) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::SetAttribute");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "SetAttribute", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geoID), ::il2cpp_utils::ExtractType(partID), ::il2cpp_utils::ExtractType(attrName), ::il2cpp_utils::ExtractType(attrInfo), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(setFunc)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, geoID, partID, attrName, byref(attrInfo), items, setFunc)));
    }
    // static public System.Boolean CheckAttributeExists(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attribName, HoudiniEngineUnity.HAPI_AttributeOwner attribOwner)
    // Offset: 0x14D7650
    static bool CheckAttributeExists(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attribName, HoudiniEngineUnity::HAPI_AttributeOwner attribOwner);
    // static public System.Boolean GetAttributeInfo(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attribName, ref HoudiniEngineUnity.HAPI_AttributeInfo attribInfo)
    // Offset: 0x14D76A4
    static bool GetAttributeInfo(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attribName, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> attribInfo);
    // static public System.Boolean HasValidInstanceAttribute(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attribName)
    // Offset: 0x14D773C
    static bool HasValidInstanceAttribute(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attribName);
    // static public System.Void UpdateGeneratedAttributeStore(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, UnityEngine.GameObject go)
    // Offset: 0x14D7788
    static void UpdateGeneratedAttributeStore(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, UnityEngine::GameObject* go);
    // static public HoudiniEngineUnity.HEU_OutputAttribute CreateOutputAttributeHelper(System.String attrName, ref HoudiniEngineUnity.HAPI_AttributeInfo attrInfo)
    // Offset: 0x14D7C14
    static HoudiniEngineUnity::HEU_OutputAttribute* CreateOutputAttributeHelper(::Il2CppString* attrName, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> attrInfo);
    // static public HoudiniEngineUnity.HEU_OutputAttribute CreateOutputAttribute(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attrName, ref HoudiniEngineUnity.HAPI_AttributeInfo attrInfo)
    // Offset: 0x14D7988
    static HoudiniEngineUnity::HEU_OutputAttribute* CreateOutputAttribute(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attrName, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo> attrInfo);
    // static public System.Void CopyWorldTransformValues(UnityEngine.Transform src, UnityEngine.Transform dest)
    // Offset: 0x14D7CAC
    static void CopyWorldTransformValues(UnityEngine::Transform* src, UnityEngine::Transform* dest);
    // static public System.Void ApplyTransformTo(UnityEngine.Transform src, UnityEngine.Transform target)
    // Offset: 0x14D7D18
    static void ApplyTransformTo(UnityEngine::Transform* src, UnityEngine::Transform* target);
    // static public System.Void CopyLocalTransformValues(UnityEngine.Transform src, UnityEngine.Transform dest)
    // Offset: 0x14D7E18
    static void CopyLocalTransformValues(UnityEngine::Transform* src, UnityEngine::Transform* dest);
    // static public System.Collections.Generic.List`1<UnityEngine.GameObject> GetChildGameObjects(UnityEngine.GameObject parentGO)
    // Offset: 0x14D7E84
    static System::Collections::Generic::List_1<UnityEngine::GameObject*>* GetChildGameObjects(UnityEngine::GameObject* parentGO);
    // static public System.Collections.Generic.List`1<UnityEngine.GameObject> GetChildGameObjectsWithNamePattern(UnityEngine.GameObject parentGO, System.String pattern, System.Boolean bExclude)
    // Offset: 0x14D8134
    static System::Collections::Generic::List_1<UnityEngine::GameObject*>* GetChildGameObjectsWithNamePattern(UnityEngine::GameObject* parentGO, ::Il2CppString* pattern, bool bExclude);
    // static public System.Collections.Generic.List`1<UnityEngine.GameObject> GetInstanceChildObjects(UnityEngine.GameObject parentGO)
    // Offset: 0x14D845C
    static System::Collections::Generic::List_1<UnityEngine::GameObject*>* GetInstanceChildObjects(UnityEngine::GameObject* parentGO);
    // static public System.Collections.Generic.List`1<UnityEngine.GameObject> GetNonInstanceChildObjects(UnityEngine.GameObject parentGO)
    // Offset: 0x14D84B0
    static System::Collections::Generic::List_1<UnityEngine::GameObject*>* GetNonInstanceChildObjects(UnityEngine::GameObject* parentGO);
    // static public UnityEngine.GameObject GetGameObjectByName(System.Collections.Generic.List`1<UnityEngine.GameObject> goList, System.String name)
    // Offset: 0x14D8504
    static UnityEngine::GameObject* GetGameObjectByName(System::Collections::Generic::List_1<UnityEngine::GameObject*>* goList, ::Il2CppString* name);
    // static public UnityEngine.GameObject GetGameObjectByNameInProjectOnly(System.String name)
    // Offset: 0x14D863C
    static UnityEngine::GameObject* GetGameObjectByNameInProjectOnly(::Il2CppString* name);
    // static public System.Boolean IsGameObjectInProject(UnityEngine.GameObject go)
    // Offset: 0x14D8724
    static bool IsGameObjectInProject(UnityEngine::GameObject* go);
    // static public UnityEngine.GameObject GetGameObjectByNameInScene(System.String name)
    // Offset: 0x14D872C
    static UnityEngine::GameObject* GetGameObjectByNameInScene(::Il2CppString* name);
    // static public HoudiniEngineUnity.HEU_HoudiniAssetRoot GetHDAByGameObjectNameInScene(System.String name)
    // Offset: 0x14D8780
    static HoudiniEngineUnity::HEU_HoudiniAssetRoot* GetHDAByGameObjectNameInScene(::Il2CppString* name);
    // static public T GetOrCreateComponent(UnityEngine.GameObject gameObject)
    // Offset: 0xFFFFFFFF
    template<class T>
    static T GetOrCreateComponent(UnityEngine::GameObject* gameObject) {
      static_assert(std::is_convertible_v<T, UnityEngine::Component*>);
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::GetOrCreateComponent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "GetOrCreateComponent", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return THROW_UNLESS((::il2cpp_utils::RunMethod<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, gameObject)));
    }
    // static public System.Void DestroyGeneratedComponents(UnityEngine.GameObject gameObject)
    // Offset: 0x14D87D4
    static void DestroyGeneratedComponents(UnityEngine::GameObject* gameObject);
    // static public System.Void DestroyGeneratedMeshComponents(UnityEngine.GameObject gameObject)
    // Offset: 0x14D889C
    static void DestroyGeneratedMeshComponents(UnityEngine::GameObject* gameObject);
    // static public System.Void DestroyTerrainComponents(UnityEngine.GameObject gameObject)
    // Offset: 0x14D8928
    static void DestroyTerrainComponents(UnityEngine::GameObject* gameObject);
    // static public System.Void DestroyComponent(UnityEngine.GameObject gameObject)
    // Offset: 0xFFFFFFFF
    template<class T>
    static void DestroyComponent(UnityEngine::GameObject* gameObject) {
      static_assert(std::is_convertible_v<T, UnityEngine::Component*>);
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::DestroyComponent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HoudiniEngineUnity", "HEU_GeneralUtility", "DestroyComponent", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      THROW_UNLESS((::il2cpp_utils::RunMethod<Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, gameObject)));
    }
    // static public System.Void DestroyImmediate(UnityEngine.Object obj, System.Boolean bAllowDestroyingAssets, System.Boolean bRegisterUndo)
    // Offset: 0x14D8AA0
    static void DestroyImmediate(UnityEngine::Object* obj, bool bAllowDestroyingAssets, bool bRegisterUndo);
    // static public System.Void DestroyBakedGameObjects(System.Collections.Generic.List`1<UnityEngine.GameObject> gameObjectsToDestroy)
    // Offset: 0x14D8AEC
    static void DestroyBakedGameObjects(System::Collections::Generic::List_1<UnityEngine::GameObject*>* gameObjectsToDestroy);
    // static public System.Void DestroyBakedGameObjectsWithEndName(System.Collections.Generic.List`1<UnityEngine.GameObject> gameObjectsToDestroy, System.String endName)
    // Offset: 0x14D8AF4
    static void DestroyBakedGameObjectsWithEndName(System::Collections::Generic::List_1<UnityEngine::GameObject*>* gameObjectsToDestroy, ::Il2CppString* endName);
    // static public System.Void DestroyLODGroup(UnityEngine.GameObject targetGO, System.Boolean bDontDeletePersistantResources)
    // Offset: 0x14D8E60
    static void DestroyLODGroup(UnityEngine::GameObject* targetGO, bool bDontDeletePersistantResources);
    // static public System.Collections.Generic.List`1<UnityEngine.Transform> GetLODTransforms(UnityEngine.GameObject targetGO)
    // Offset: 0x14D900C
    static System::Collections::Generic::List_1<UnityEngine::Transform*>* GetLODTransforms(UnityEngine::GameObject* targetGO);
    // static public System.Void SetLODTransformValues(UnityEngine.GameObject targetGO, System.Collections.Generic.List`1<HoudiniEngineUnity.TransformData> transformData)
    // Offset: 0x14D9148
    static void SetLODTransformValues(UnityEngine::GameObject* targetGO, System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData>* transformData);
    // static public System.Void DestroyGeneratedMeshMaterialsLODGroups(UnityEngine.GameObject targetGO, System.Boolean bDontDeletePersistantResources)
    // Offset: 0x14D8BFC
    static void DestroyGeneratedMeshMaterialsLODGroups(UnityEngine::GameObject* targetGO, bool bDontDeletePersistantResources);
    // static public System.Void DestroyGeneratedMaterial(UnityEngine.Material material)
    // Offset: 0x14D92A8
    static void DestroyGeneratedMaterial(UnityEngine::Material* material);
    // static public System.Void DestroyMeshCollider(UnityEngine.MeshCollider meshCollider, System.Boolean bDontDeletePersistantResources)
    // Offset: 0x14D93DC
    static void DestroyMeshCollider(UnityEngine::MeshCollider* meshCollider, bool bDontDeletePersistantResources);
    // static public System.Void SetGameObjectRenderVisiblity(UnityEngine.GameObject gameObject, System.Boolean bVisible)
    // Offset: 0x14D94E4
    static void SetGameObjectRenderVisiblity(UnityEngine::GameObject* gameObject, bool bVisible);
    // static public System.Void SetGameObjectChildrenRenderVisibility(UnityEngine.GameObject gameObject, System.Boolean bVisible)
    // Offset: 0x14D95D4
    static void SetGameObjectChildrenRenderVisibility(UnityEngine::GameObject* gameObject, bool bVisible);
    // static public System.Void SetGameObjectColliderState(UnityEngine.GameObject gameObject, System.Boolean bEnabled)
    // Offset: 0x14D96C8
    static void SetGameObjectColliderState(UnityEngine::GameObject* gameObject, bool bEnabled);
    // static public System.Void SetGameObjectChildrenColliderState(UnityEngine.GameObject gameObject, System.Boolean bVisible)
    // Offset: 0x14D97B8
    static void SetGameObjectChildrenColliderState(UnityEngine::GameObject* gameObject, bool bVisible);
    // static public System.String ColorToString(UnityEngine.Color c)
    // Offset: 0x14D98AC
    static ::Il2CppString* ColorToString(UnityEngine::Color c);
    // static public UnityEngine.Color StringToColor(System.String colorString)
    // Offset: 0x14D9AB8
    static UnityEngine::Color StringToColor(::Il2CppString* colorString);
    // static public System.Boolean DoesUnityTagExist(System.String tagName)
    // Offset: 0x14D9C3C
    static bool DoesUnityTagExist(::Il2CppString* tagName);
    // static public System.Void SetLayer(UnityEngine.GameObject rootGO, System.Int32 layer, System.Boolean bIncludeChildren)
    // Offset: 0x14D9C44
    static void SetLayer(UnityEngine::GameObject* rootGO, int layer, bool bIncludeChildren);
    // static public System.Void SetTag(UnityEngine.GameObject rootGO, System.String tag, System.Boolean bIncludeChildren)
    // Offset: 0x14D9D34
    static void SetTag(UnityEngine::GameObject* rootGO, ::Il2CppString* tag, bool bIncludeChildren);
    // static public System.Void CopyFlags(UnityEngine.GameObject srcGO, UnityEngine.GameObject dstGO, System.Boolean bIncludeChildren)
    // Offset: 0x14D9E24
    static void CopyFlags(UnityEngine::GameObject* srcGO, UnityEngine::GameObject* dstGO, bool bIncludeChildren);
    // static public System.Boolean IsMouseWithinSceneView(UnityEngine.Camera camera, UnityEngine.Vector2 mousePosition)
    // Offset: 0x14D9E98
    static bool IsMouseWithinSceneView(UnityEngine::Camera* camera, UnityEngine::Vector2 mousePosition);
    // static public System.Boolean IsMouseOverRect(UnityEngine.Camera camera, UnityEngine.Vector2 mousePosition, ref UnityEngine.Rect rect)
    // Offset: 0x14D9F14
    static bool IsMouseOverRect(UnityEngine::Camera* camera, UnityEngine::Vector2 mousePosition, ByRef<UnityEngine::Rect> rect);
    // static public System.Type GetSystemTypeByName(System.String typeName)
    // Offset: 0x14D9F64
    static System::Type* GetSystemTypeByName(::Il2CppString* typeName);
    // static public System.Void AssignUnityTag(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, UnityEngine.GameObject gameObject)
    // Offset: 0x14D9FB8
    static void AssignUnityTag(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, UnityEngine::GameObject* gameObject);
    // static public System.Void AssignUnityLayer(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, UnityEngine.GameObject gameObject)
    // Offset: 0x14DA288
    static void AssignUnityLayer(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, UnityEngine::GameObject* gameObject);
    // static public System.Void MakeStaticIfHasAttribute(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, UnityEngine.GameObject gameObject)
    // Offset: 0x14DA4C4
    static void MakeStaticIfHasAttribute(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, UnityEngine::GameObject* gameObject);
    // static public System.String GetUnityScriptAttributeValue(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID)
    // Offset: 0x14DA634
    static ::Il2CppString* GetUnityScriptAttributeValue(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID);
    // static public System.String GetAttributeStringValueSingle(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attrName, HoudiniEngineUnity.HAPI_AttributeOwner attrOwner)
    // Offset: 0x14DA794
    static ::Il2CppString* GetAttributeStringValueSingle(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attrName, HoudiniEngineUnity::HAPI_AttributeOwner attrOwner);
    // static public System.String GetAttributeStringValueSingleStrict(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attrName, HoudiniEngineUnity.HAPI_AttributeOwner attrOwner)
    // Offset: 0x14DAA10
    static ::Il2CppString* GetAttributeStringValueSingleStrict(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attrName, HoudiniEngineUnity::HAPI_AttributeOwner attrOwner);
    // static public System.Boolean GetAttributeFloatSingle(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attrName, out System.Single value)
    // Offset: 0x14DAD70
    static bool GetAttributeFloatSingle(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attrName, ByRef<float> value);
    // static public System.Boolean GetAttributeIntSingle(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attrName, out System.Int32 value)
    // Offset: 0x14DAED4
    static bool GetAttributeIntSingle(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attrName, ByRef<int> value);
    // static public System.Boolean GetAttributeColorSingle(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attrName, ref UnityEngine.Color value)
    // Offset: 0x14DB038
    static bool GetAttributeColorSingle(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attrName, ByRef<UnityEngine::Color> value);
    // static public System.Boolean HasAttribute(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID, System.String attrName, HoudiniEngineUnity.HAPI_AttributeOwner attrOwner)
    // Offset: 0x14DB258
    static bool HasAttribute(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::Il2CppString* attrName, HoudiniEngineUnity::HAPI_AttributeOwner attrOwner);
    // static public System.Void AttachScriptWithInvokeFunction(System.String scriptSet, UnityEngine.GameObject gameObject)
    // Offset: 0x14DB310
    static void AttachScriptWithInvokeFunction(::Il2CppString* scriptSet, UnityEngine::GameObject* gameObject);
    // static public System.Boolean IsInCameraView(UnityEngine.Camera camera, UnityEngine.Vector3 point)
    // Offset: 0x14DB86C
    static bool IsInCameraView(UnityEngine::Camera* camera, UnityEngine::Vector3 point);
    // static public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_Handle> FindOrGenerateHandles(HoudiniEngineUnity.HEU_SessionBase session, ref HoudiniEngineUnity.HAPI_AssetInfo assetInfo, System.Int32 assetID, System.String assetName, HoudiniEngineUnity.HEU_Parameters parameters, System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_Handle> currentHandles)
    // Offset: 0x14DB908
    static System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>* FindOrGenerateHandles(HoudiniEngineUnity::HEU_SessionBase* session, ByRef<HoudiniEngineUnity::HAPI_AssetInfo> assetInfo, int assetID, ::Il2CppString* assetName, HoudiniEngineUnity::HEU_Parameters* parameters, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>* currentHandles);
    // static public System.Void CopyComponents(UnityEngine.GameObject srcGO, UnityEngine.GameObject destGO)
    // Offset: 0x14DBCCC
    static void CopyComponents(UnityEngine::GameObject* srcGO, UnityEngine::GameObject* destGO);
    // static public UnityEngine.Texture LoadTextureFromFile(System.String filePath)
    // Offset: 0x14DBCD0
    static UnityEngine::Texture* LoadTextureFromFile(::Il2CppString* filePath);
    // static public UnityEngine.Texture2D MakeTexture(System.Int32 width, System.Int32 height, UnityEngine.Color color)
    // Offset: 0x14DBEC8
    static UnityEngine::Texture2D* MakeTexture(int width, int height, UnityEngine::Color color);
    // static public System.String ReplaceFirstOccurrence(System.String srcStr, System.String searchStr, System.String replaceStr)
    // Offset: 0x14DC000
    static ::Il2CppString* ReplaceFirstOccurrence(::Il2CppString* srcStr, ::Il2CppString* searchStr, ::Il2CppString* replaceStr);
    // static public System.Void SetParentWithCleanTransform(UnityEngine.Transform parentTransform, UnityEngine.Transform childTransform)
    // Offset: 0x14DC0A4
    static void SetParentWithCleanTransform(UnityEngine::Transform* parentTransform, UnityEngine::Transform* childTransform);
    // static public System.Void CopyHAPITransform(ref HoudiniEngineUnity.HAPI_Transform src, ref HoudiniEngineUnity.HAPI_Transform dest)
    // Offset: 0x14DC180
    static void CopyHAPITransform(ByRef<HoudiniEngineUnity::HAPI_Transform> src, ByRef<HoudiniEngineUnity::HAPI_Transform> dest);
    // static public System.String GetMaterialAttributeValueFromPart(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partID)
    // Offset: 0x14DC21C
    static ::Il2CppString* GetMaterialAttributeValueFromPart(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID);
    // static public System.Void ReplaceColliderMeshFromMeshFilter(UnityEngine.GameObject targetGO, UnityEngine.GameObject sourceColliderGO)
    // Offset: 0x14DC38C
    static void ReplaceColliderMeshFromMeshFilter(UnityEngine::GameObject* targetGO, UnityEngine::GameObject* sourceColliderGO);
    // static public System.Void ReplaceColliderMeshFromMeshCollider(UnityEngine.GameObject targetGO, UnityEngine.GameObject sourceColliderGO)
    // Offset: 0x14DC4D8
    static void ReplaceColliderMeshFromMeshCollider(UnityEngine::GameObject* targetGO, UnityEngine::GameObject* sourceColliderGO);
    // static public System.Single BiLerpf(System.Single p00, System.Single p10, System.Single p01, System.Single p11, System.Single fracX, System.Single fracY)
    // Offset: 0x14DC61C
    static float BiLerpf(float p00, float p10, float p01, float p11, float fracX, float fracY);
    // static public System.Single Fractionalf(System.Single value)
    // Offset: 0x14DC6E4
    static float Fractionalf(float value);
    // static public System.String LongestCommonPrefix(System.Collections.Generic.List`1<System.String> list)
    // Offset: 0x14DC754
    static ::Il2CppString* LongestCommonPrefix(System::Collections::Generic::List_1<::Il2CppString*>* list);
    // static public System.String GetRawOperatorName(System.String assetOpName)
    // Offset: 0x14DC8D8
    static ::Il2CppString* GetRawOperatorName(::Il2CppString* assetOpName);
    // static public UnityEngine.GameObject GetPrefabFromPath(System.String path)
    // Offset: 0x14DC940
    static UnityEngine::GameObject* GetPrefabFromPath(::Il2CppString* path);
    // public System.Void .ctor()
    // Offset: 0x14DCB4C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_GeneralUtility* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeneralUtility::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_GeneralUtility*, creationType>()));
    }
  }; // HoudiniEngineUnity.HEU_GeneralUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetArray1Arg
// Il2CppName: GetArray1Arg
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetArray2Arg
// Il2CppName: GetArray2Arg
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetArray3Arg
// Il2CppName: GetArray3Arg
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetArray
// Il2CppName: GetArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetArray1Arg
// Il2CppName: SetArray1Arg
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetArray2Arg
// Il2CppName: SetArray2Arg
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetArray
// Il2CppName: SetArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DoArrayElementsMatch
// Il2CppName: DoArrayElementsMatch
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DoArrayElementsMatch
// Il2CppName: DoArrayElementsMatch
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeArray
// Il2CppName: GetAttributeArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttribute
// Il2CppName: GetAttribute
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStrict
// Il2CppName: GetAttributeStrict
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStringDataHelper
// Il2CppName: GetAttributeStringDataHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo>, ByRef<::ArrayW<int>>)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStringDataHelper)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AttributeInfo")->this_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetAttributeStringDataHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, name, info, data});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStringData
// Il2CppName: GetAttributeStringData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppString*> (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo>)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStringData)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attrInfo = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AttributeInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetAttributeStringData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, name, attrInfo});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetAttributeArray
// Il2CppName: SetAttributeArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetAttribute
// Il2CppName: SetAttribute
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::CheckAttributeExists
// Il2CppName: CheckAttributeExists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, HoudiniEngineUnity::HAPI_AttributeOwner)>(&HoudiniEngineUnity::HEU_GeneralUtility::CheckAttributeExists)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attribName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attribOwner = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AttributeOwner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "CheckAttributeExists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attribName, attribOwner});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeInfo
// Il2CppName: GetAttributeInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo>)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeInfo)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attribName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attribInfo = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AttributeInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetAttributeInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attribName, attribInfo});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::HasValidInstanceAttribute
// Il2CppName: HasValidInstanceAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::HasValidInstanceAttribute)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attribName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "HasValidInstanceAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attribName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::UpdateGeneratedAttributeStore
// Il2CppName: UpdateGeneratedAttributeStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::UpdateGeneratedAttributeStore)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "UpdateGeneratedAttributeStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, go});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::CreateOutputAttributeHelper
// Il2CppName: CreateOutputAttributeHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_OutputAttribute* (*)(::Il2CppString*, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo>)>(&HoudiniEngineUnity::HEU_GeneralUtility::CreateOutputAttributeHelper)> {
  static const MethodInfo* get() {
    static auto* attrName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attrInfo = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AttributeInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "CreateOutputAttributeHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attrName, attrInfo});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::CreateOutputAttribute
// Il2CppName: CreateOutputAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_OutputAttribute* (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, ByRef<HoudiniEngineUnity::HAPI_AttributeInfo>)>(&HoudiniEngineUnity::HEU_GeneralUtility::CreateOutputAttribute)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attrName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attrInfo = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AttributeInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "CreateOutputAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attrName, attrInfo});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::CopyWorldTransformValues
// Il2CppName: CopyWorldTransformValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Transform*, UnityEngine::Transform*)>(&HoudiniEngineUnity::HEU_GeneralUtility::CopyWorldTransformValues)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "CopyWorldTransformValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, dest});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::ApplyTransformTo
// Il2CppName: ApplyTransformTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Transform*, UnityEngine::Transform*)>(&HoudiniEngineUnity::HEU_GeneralUtility::ApplyTransformTo)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "ApplyTransformTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, target});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::CopyLocalTransformValues
// Il2CppName: CopyLocalTransformValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Transform*, UnityEngine::Transform*)>(&HoudiniEngineUnity::HEU_GeneralUtility::CopyLocalTransformValues)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "CopyLocalTransformValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, dest});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetChildGameObjects
// Il2CppName: GetChildGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::GameObject*>* (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetChildGameObjects)> {
  static const MethodInfo* get() {
    static auto* parentGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetChildGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetChildGameObjectsWithNamePattern
// Il2CppName: GetChildGameObjectsWithNamePattern
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::GameObject*>* (*)(UnityEngine::GameObject*, ::Il2CppString*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetChildGameObjectsWithNamePattern)> {
  static const MethodInfo* get() {
    static auto* parentGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bExclude = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetChildGameObjectsWithNamePattern", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentGO, pattern, bExclude});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetInstanceChildObjects
// Il2CppName: GetInstanceChildObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::GameObject*>* (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetInstanceChildObjects)> {
  static const MethodInfo* get() {
    static auto* parentGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetInstanceChildObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetNonInstanceChildObjects
// Il2CppName: GetNonInstanceChildObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::GameObject*>* (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetNonInstanceChildObjects)> {
  static const MethodInfo* get() {
    static auto* parentGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetNonInstanceChildObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetGameObjectByName
// Il2CppName: GetGameObjectByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(System::Collections::Generic::List_1<UnityEngine::GameObject*>*, ::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetGameObjectByName)> {
  static const MethodInfo* get() {
    static auto* goList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetGameObjectByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goList, name});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetGameObjectByNameInProjectOnly
// Il2CppName: GetGameObjectByNameInProjectOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetGameObjectByNameInProjectOnly)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetGameObjectByNameInProjectOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::IsGameObjectInProject
// Il2CppName: IsGameObjectInProject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::IsGameObjectInProject)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "IsGameObjectInProject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetGameObjectByNameInScene
// Il2CppName: GetGameObjectByNameInScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetGameObjectByNameInScene)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetGameObjectByNameInScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetHDAByGameObjectNameInScene
// Il2CppName: GetHDAByGameObjectNameInScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_HoudiniAssetRoot* (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetHDAByGameObjectNameInScene)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetHDAByGameObjectNameInScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetOrCreateComponent
// Il2CppName: GetOrCreateComponent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyGeneratedComponents
// Il2CppName: DestroyGeneratedComponents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyGeneratedComponents)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyGeneratedComponents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyGeneratedMeshComponents
// Il2CppName: DestroyGeneratedMeshComponents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyGeneratedMeshComponents)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyGeneratedMeshComponents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyTerrainComponents
// Il2CppName: DestroyTerrainComponents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyTerrainComponents)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyTerrainComponents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyComponent
// Il2CppName: DestroyComponent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyImmediate
// Il2CppName: DestroyImmediate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Object*, bool, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyImmediate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    static auto* bAllowDestroyingAssets = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bRegisterUndo = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyImmediate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, bAllowDestroyingAssets, bRegisterUndo});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyBakedGameObjects
// Il2CppName: DestroyBakedGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Collections::Generic::List_1<UnityEngine::GameObject*>*)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyBakedGameObjects)> {
  static const MethodInfo* get() {
    static auto* gameObjectsToDestroy = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyBakedGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObjectsToDestroy});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyBakedGameObjectsWithEndName
// Il2CppName: DestroyBakedGameObjectsWithEndName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Collections::Generic::List_1<UnityEngine::GameObject*>*, ::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyBakedGameObjectsWithEndName)> {
  static const MethodInfo* get() {
    static auto* gameObjectsToDestroy = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    static auto* endName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyBakedGameObjectsWithEndName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObjectsToDestroy, endName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyLODGroup
// Il2CppName: DestroyLODGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyLODGroup)> {
  static const MethodInfo* get() {
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* bDontDeletePersistantResources = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyLODGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetGO, bDontDeletePersistantResources});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetLODTransforms
// Il2CppName: GetLODTransforms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::Transform*>* (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetLODTransforms)> {
  static const MethodInfo* get() {
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetLODTransforms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetLODTransformValues
// Il2CppName: SetLODTransformValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData>*)>(&HoudiniEngineUnity::HEU_GeneralUtility::SetLODTransformValues)> {
  static const MethodInfo* get() {
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* transformData = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "TransformData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "SetLODTransformValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetGO, transformData});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyGeneratedMeshMaterialsLODGroups
// Il2CppName: DestroyGeneratedMeshMaterialsLODGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyGeneratedMeshMaterialsLODGroups)> {
  static const MethodInfo* get() {
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* bDontDeletePersistantResources = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyGeneratedMeshMaterialsLODGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetGO, bDontDeletePersistantResources});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyGeneratedMaterial
// Il2CppName: DestroyGeneratedMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Material*)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyGeneratedMaterial)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyGeneratedMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DestroyMeshCollider
// Il2CppName: DestroyMeshCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::MeshCollider*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::DestroyMeshCollider)> {
  static const MethodInfo* get() {
    static auto* meshCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "MeshCollider")->byval_arg;
    static auto* bDontDeletePersistantResources = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DestroyMeshCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{meshCollider, bDontDeletePersistantResources});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetGameObjectRenderVisiblity
// Il2CppName: SetGameObjectRenderVisiblity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::SetGameObjectRenderVisiblity)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* bVisible = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "SetGameObjectRenderVisiblity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, bVisible});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetGameObjectChildrenRenderVisibility
// Il2CppName: SetGameObjectChildrenRenderVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::SetGameObjectChildrenRenderVisibility)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* bVisible = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "SetGameObjectChildrenRenderVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, bVisible});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetGameObjectColliderState
// Il2CppName: SetGameObjectColliderState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::SetGameObjectColliderState)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* bEnabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "SetGameObjectColliderState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, bEnabled});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetGameObjectChildrenColliderState
// Il2CppName: SetGameObjectChildrenColliderState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::SetGameObjectChildrenColliderState)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* bVisible = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "SetGameObjectChildrenColliderState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, bVisible});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::ColorToString
// Il2CppName: ColorToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(UnityEngine::Color)>(&HoudiniEngineUnity::HEU_GeneralUtility::ColorToString)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "ColorToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::StringToColor
// Il2CppName: StringToColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::StringToColor)> {
  static const MethodInfo* get() {
    static auto* colorString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "StringToColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorString});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::DoesUnityTagExist
// Il2CppName: DoesUnityTagExist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::DoesUnityTagExist)> {
  static const MethodInfo* get() {
    static auto* tagName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "DoesUnityTagExist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tagName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetLayer
// Il2CppName: SetLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, int, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::SetLayer)> {
  static const MethodInfo* get() {
    static auto* rootGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bIncludeChildren = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "SetLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rootGO, layer, bIncludeChildren});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetTag
// Il2CppName: SetTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, ::Il2CppString*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::SetTag)> {
  static const MethodInfo* get() {
    static auto* rootGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bIncludeChildren = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "SetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rootGO, tag, bIncludeChildren});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::CopyFlags
// Il2CppName: CopyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, UnityEngine::GameObject*, bool)>(&HoudiniEngineUnity::HEU_GeneralUtility::CopyFlags)> {
  static const MethodInfo* get() {
    static auto* srcGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* dstGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* bIncludeChildren = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "CopyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{srcGO, dstGO, bIncludeChildren});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::IsMouseWithinSceneView
// Il2CppName: IsMouseWithinSceneView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Camera*, UnityEngine::Vector2)>(&HoudiniEngineUnity::HEU_GeneralUtility::IsMouseWithinSceneView)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* mousePosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "IsMouseWithinSceneView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, mousePosition});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::IsMouseOverRect
// Il2CppName: IsMouseOverRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Camera*, UnityEngine::Vector2, ByRef<UnityEngine::Rect>)>(&HoudiniEngineUnity::HEU_GeneralUtility::IsMouseOverRect)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* mousePosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* rect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "IsMouseOverRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, mousePosition, rect});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetSystemTypeByName
// Il2CppName: GetSystemTypeByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetSystemTypeByName)> {
  static const MethodInfo* get() {
    static auto* typeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetSystemTypeByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::AssignUnityTag
// Il2CppName: AssignUnityTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::AssignUnityTag)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "AssignUnityTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, gameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::AssignUnityLayer
// Il2CppName: AssignUnityLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::AssignUnityLayer)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "AssignUnityLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, gameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::MakeStaticIfHasAttribute
// Il2CppName: MakeStaticIfHasAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::MakeStaticIfHasAttribute)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "MakeStaticIfHasAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, gameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetUnityScriptAttributeValue
// Il2CppName: GetUnityScriptAttributeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetUnityScriptAttributeValue)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetUnityScriptAttributeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStringValueSingle
// Il2CppName: GetAttributeStringValueSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, HoudiniEngineUnity::HAPI_AttributeOwner)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStringValueSingle)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attrName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attrOwner = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AttributeOwner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetAttributeStringValueSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attrName, attrOwner});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStringValueSingleStrict
// Il2CppName: GetAttributeStringValueSingleStrict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, HoudiniEngineUnity::HAPI_AttributeOwner)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeStringValueSingleStrict)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attrName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attrOwner = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AttributeOwner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetAttributeStringValueSingleStrict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attrName, attrOwner});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeFloatSingle
// Il2CppName: GetAttributeFloatSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, ByRef<float>)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeFloatSingle)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attrName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetAttributeFloatSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attrName, value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeIntSingle
// Il2CppName: GetAttributeIntSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, ByRef<int>)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeIntSingle)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attrName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetAttributeIntSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attrName, value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeColorSingle
// Il2CppName: GetAttributeColorSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, ByRef<UnityEngine::Color>)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetAttributeColorSingle)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attrName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetAttributeColorSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attrName, value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::HasAttribute
// Il2CppName: HasAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, ::Il2CppString*, HoudiniEngineUnity::HAPI_AttributeOwner)>(&HoudiniEngineUnity::HEU_GeneralUtility::HasAttribute)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* attrName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attrOwner = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AttributeOwner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "HasAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID, attrName, attrOwner});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::AttachScriptWithInvokeFunction
// Il2CppName: AttachScriptWithInvokeFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::AttachScriptWithInvokeFunction)> {
  static const MethodInfo* get() {
    static auto* scriptSet = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "AttachScriptWithInvokeFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scriptSet, gameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::IsInCameraView
// Il2CppName: IsInCameraView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Camera*, UnityEngine::Vector3)>(&HoudiniEngineUnity::HEU_GeneralUtility::IsInCameraView)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "IsInCameraView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera, point});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::FindOrGenerateHandles
// Il2CppName: FindOrGenerateHandles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>* (*)(HoudiniEngineUnity::HEU_SessionBase*, ByRef<HoudiniEngineUnity::HAPI_AssetInfo>, int, ::Il2CppString*, HoudiniEngineUnity::HEU_Parameters*, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>*)>(&HoudiniEngineUnity::HEU_GeneralUtility::FindOrGenerateHandles)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* assetInfo = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_AssetInfo")->this_arg;
    static auto* assetID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* assetName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_Parameters")->byval_arg;
    static auto* currentHandles = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_Handle")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "FindOrGenerateHandles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, assetInfo, assetID, assetName, parameters, currentHandles});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::CopyComponents
// Il2CppName: CopyComponents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::CopyComponents)> {
  static const MethodInfo* get() {
    static auto* srcGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* destGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "CopyComponents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{srcGO, destGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::LoadTextureFromFile
// Il2CppName: LoadTextureFromFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::LoadTextureFromFile)> {
  static const MethodInfo* get() {
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "LoadTextureFromFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filePath});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::MakeTexture
// Il2CppName: MakeTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)(int, int, UnityEngine::Color)>(&HoudiniEngineUnity::HEU_GeneralUtility::MakeTexture)> {
  static const MethodInfo* get() {
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "MakeTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{width, height, color});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::ReplaceFirstOccurrence
// Il2CppName: ReplaceFirstOccurrence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::ReplaceFirstOccurrence)> {
  static const MethodInfo* get() {
    static auto* srcStr = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* searchStr = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* replaceStr = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "ReplaceFirstOccurrence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{srcStr, searchStr, replaceStr});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::SetParentWithCleanTransform
// Il2CppName: SetParentWithCleanTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Transform*, UnityEngine::Transform*)>(&HoudiniEngineUnity::HEU_GeneralUtility::SetParentWithCleanTransform)> {
  static const MethodInfo* get() {
    static auto* parentTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* childTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "SetParentWithCleanTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentTransform, childTransform});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::CopyHAPITransform
// Il2CppName: CopyHAPITransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<HoudiniEngineUnity::HAPI_Transform>, ByRef<HoudiniEngineUnity::HAPI_Transform>)>(&HoudiniEngineUnity::HEU_GeneralUtility::CopyHAPITransform)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_Transform")->this_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_Transform")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "CopyHAPITransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, dest});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetMaterialAttributeValueFromPart
// Il2CppName: GetMaterialAttributeValueFromPart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(HoudiniEngineUnity::HEU_SessionBase*, int, int)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetMaterialAttributeValueFromPart)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetMaterialAttributeValueFromPart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partID});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::ReplaceColliderMeshFromMeshFilter
// Il2CppName: ReplaceColliderMeshFromMeshFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::ReplaceColliderMeshFromMeshFilter)> {
  static const MethodInfo* get() {
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* sourceColliderGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "ReplaceColliderMeshFromMeshFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetGO, sourceColliderGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::ReplaceColliderMeshFromMeshCollider
// Il2CppName: ReplaceColliderMeshFromMeshCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_GeneralUtility::ReplaceColliderMeshFromMeshCollider)> {
  static const MethodInfo* get() {
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* sourceColliderGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "ReplaceColliderMeshFromMeshCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetGO, sourceColliderGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::BiLerpf
// Il2CppName: BiLerpf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float, float, float, float, float)>(&HoudiniEngineUnity::HEU_GeneralUtility::BiLerpf)> {
  static const MethodInfo* get() {
    static auto* p00 = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* p10 = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* p01 = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* p11 = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fracX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fracY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "BiLerpf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p00, p10, p01, p11, fracX, fracY});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::Fractionalf
// Il2CppName: Fractionalf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&HoudiniEngineUnity::HEU_GeneralUtility::Fractionalf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "Fractionalf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::LongestCommonPrefix
// Il2CppName: LongestCommonPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&HoudiniEngineUnity::HEU_GeneralUtility::LongestCommonPrefix)> {
  static const MethodInfo* get() {
    static auto* list = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "LongestCommonPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{list});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetRawOperatorName
// Il2CppName: GetRawOperatorName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetRawOperatorName)> {
  static const MethodInfo* get() {
    static auto* assetOpName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetRawOperatorName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetOpName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::GetPrefabFromPath
// Il2CppName: GetPrefabFromPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_GeneralUtility::GetPrefabFromPath)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeneralUtility*), "GetPrefabFromPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeneralUtility::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
