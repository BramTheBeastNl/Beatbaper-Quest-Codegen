// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: JetBrains.Annotations
namespace JetBrains::Annotations {
  // Size: 0x18
  // Autogenerated type: JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute
  // [] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: D82520
  class NotifyPropertyChangedInvocatorAttribute : public System::Attribute {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xD82DC8
    // private System.String <ParameterName>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* ParameterName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: NotifyPropertyChangedInvocatorAttribute
    NotifyPropertyChangedInvocatorAttribute(::Il2CppString* ParameterName_ = {}) noexcept : ParameterName{ParameterName_} {}
    // Creating conversion operator: operator ::Il2CppString*
    constexpr operator ::Il2CppString*() const noexcept {
      return ParameterName;
    }
    // public System.Void .ctor(System.String parameterName)
    // Offset: 0x19EE7A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NotifyPropertyChangedInvocatorAttribute* New_ctor(::Il2CppString* parameterName) {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("JetBrains::Annotations").WithContext("NotifyPropertyChangedInvocatorAttribute").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NotifyPropertyChangedInvocatorAttribute*, creationType>(parameterName)));
    }
    // public System.String get_ParameterName()
    // Offset: 0x19EE7DC
    ::Il2CppString* get_ParameterName();
    // private System.Void set_ParameterName(System.String value)
    // Offset: 0x19EE7E4
    void set_ParameterName(::Il2CppString* value);
    // public System.Void .ctor()
    // Offset: 0x19EE7A0
    // Implemented from: System.Attribute
    // Base method: System.Void Attribute::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NotifyPropertyChangedInvocatorAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("JetBrains::Annotations").WithContext("NotifyPropertyChangedInvocatorAttribute").WithContext(".ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NotifyPropertyChangedInvocatorAttribute*, creationType>()));
    }
  }; // JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute
  static check_size<sizeof(NotifyPropertyChangedInvocatorAttribute), 16 + sizeof(::Il2CppString*)> __JetBrains_Annotations_NotifyPropertyChangedInvocatorAttributeSizeCheck;
  static_assert(sizeof(NotifyPropertyChangedInvocatorAttribute) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(JetBrains::Annotations::NotifyPropertyChangedInvocatorAttribute*, "JetBrains.Annotations", "NotifyPropertyChangedInvocatorAttribute");
#pragma pack(pop)
