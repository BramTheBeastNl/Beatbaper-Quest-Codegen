// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AddressableAssets.Initialization.CacheInitialization
#include "UnityEngine/AddressableAssets/Initialization/CacheInitialization.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationBase_1.hpp"
// Including type: UnityEngine.ResourceManagement.IUpdateReceiver
#include "UnityEngine/ResourceManagement/IUpdateReceiver.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
// Type namespace: UnityEngine.AddressableAssets.Initialization
namespace UnityEngine::AddressableAssets::Initialization {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.AddressableAssets.Initialization.CacheInitialization/CacheInitOp
  class CacheInitialization::CacheInitOp : public UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<bool>/*, public UnityEngine::ResourceManagement::IUpdateReceiver*/ {
    public:
    // private System.Func`1<System.Boolean> m_Callback
    // Size: 0x8
    // Offset: 0x80
    System::Func_1<bool>* m_Callback;
    // Field size check
    static_assert(sizeof(System::Func_1<bool>*) == 0x8);
    // private System.Boolean m_UpdateRequired
    // Size: 0x1
    // Offset: 0x88
    bool m_UpdateRequired;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: CacheInitOp
    CacheInitOp(System::Func_1<bool>* m_Callback_ = {}, bool m_UpdateRequired_ = {}) noexcept : m_Callback{m_Callback_}, m_UpdateRequired{m_UpdateRequired_} {}
    // Creating interface conversion operator: operator UnityEngine::ResourceManagement::IUpdateReceiver
    operator UnityEngine::ResourceManagement::IUpdateReceiver() noexcept {
      return *reinterpret_cast<UnityEngine::ResourceManagement::IUpdateReceiver*>(this);
    }
    // public System.Void Init(System.Func`1<System.Boolean> callback)
    // Offset: 0x13F32B8
    void Init(System::Func_1<bool>* callback);
    // public System.Void Update(System.Single unscaledDeltaTime)
    // Offset: 0x13F3350
    void Update(float unscaledDeltaTime);
    // override System.Boolean InvokeWaitForCompletion()
    // Offset: 0x13F32C0
    // Implemented from: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1
    // Base method: System.Boolean AsyncOperationBase_1::InvokeWaitForCompletion()
    bool InvokeWaitForCompletion();
    // protected override System.Void Execute()
    // Offset: 0x13F3408
    // Implemented from: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1
    // Base method: System.Void AsyncOperationBase_1::Execute()
    void Execute();
    // public System.Void .ctor()
    // Offset: 0x13F31A8
    // Implemented from: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1
    // Base method: System.Void AsyncOperationBase_1::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CacheInitialization::CacheInitOp* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AddressableAssets::Initialization::CacheInitialization::CacheInitOp::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CacheInitialization::CacheInitOp*, creationType>()));
    }
  }; // UnityEngine.AddressableAssets.Initialization.CacheInitialization/CacheInitOp
  // WARNING Not writing size check since size may be invalid!
  // Writing MetadataGetter for method: CacheInitialization::CacheInitOp::Init
  // Il2CppName: Init
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheInitialization::CacheInitOp::*)(System::Func_1<bool>*)>(&CacheInitialization::CacheInitOp::Init)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CacheInitialization::CacheInitOp*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_1<bool>*>()});
    }
  };
  // Writing MetadataGetter for method: CacheInitialization::CacheInitOp::Update
  // Il2CppName: Update
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheInitialization::CacheInitOp::*)(float)>(&CacheInitialization::CacheInitOp::Update)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CacheInitialization::CacheInitOp*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: CacheInitialization::CacheInitOp::InvokeWaitForCompletion
  // Il2CppName: InvokeWaitForCompletion
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheInitialization::CacheInitOp::*)()>(&CacheInitialization::CacheInitOp::InvokeWaitForCompletion)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CacheInitialization::CacheInitOp*), "InvokeWaitForCompletion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: CacheInitialization::CacheInitOp::Execute
  // Il2CppName: Execute
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheInitialization::CacheInitOp::*)()>(&CacheInitialization::CacheInitOp::Execute)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CacheInitialization::CacheInitOp*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: CacheInitialization::CacheInitOp::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheInitialization::CacheInitOp::*)()>(&CacheInitialization::CacheInitOp::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CacheInitialization::CacheInitOp*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheInitialization::CacheInitOp::*)()>(&CacheInitialization::CacheInitOp::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(CacheInitialization::CacheInitOp*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::AddressableAssets::Initialization::CacheInitialization::CacheInitOp*, "UnityEngine.AddressableAssets.Initialization", "CacheInitialization/CacheInitOp");
