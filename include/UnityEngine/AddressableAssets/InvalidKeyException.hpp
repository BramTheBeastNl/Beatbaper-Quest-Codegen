// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: UnityEngine.AddressableAssets
namespace UnityEngine::AddressableAssets {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.AddressableAssets.InvalidKeyException
  class InvalidKeyException : public System::Exception {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xE027FC
    // private System.Object <Key>k__BackingField
    // Size: 0x8
    // Offset: 0x88
    ::Il2CppObject* Key;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xE0280C
    // private System.Type <Type>k__BackingField
    // Size: 0x8
    // Offset: 0x90
    System::Type* Type;
    // Field size check
    static_assert(sizeof(System::Type*) == 0x8);
    // Creating value type constructor for type: InvalidKeyException
    InvalidKeyException(::Il2CppObject* Key_ = {}, System::Type* Type_ = {}) noexcept : Key{Key_}, Type{Type_} {}
    // public System.Object get_Key()
    // Offset: 0x13F5FD4
    ::Il2CppObject* get_Key();
    // private System.Void set_Key(System.Object value)
    // Offset: 0x13F5FDC
    void set_Key(::Il2CppObject* value);
    // public System.Type get_Type()
    // Offset: 0x13F5FE4
    System::Type* get_Type();
    // private System.Void set_Type(System.Type value)
    // Offset: 0x13F5FEC
    void set_Type(System::Type* value);
    // public System.Void .ctor(System.Object key)
    // Offset: 0x13F5FF4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InvalidKeyException* New_ctor(::Il2CppObject* key) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AddressableAssets::InvalidKeyException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InvalidKeyException*, creationType>(key)));
    }
    // public System.Void .ctor(System.Object key, System.Type type)
    // Offset: 0x13EBC94
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InvalidKeyException* New_ctor(::Il2CppObject* key, System::Type* type) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AddressableAssets::InvalidKeyException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InvalidKeyException*, creationType>(key, type)));
    }
    // public System.Void .ctor()
    // Offset: 0x13F6084
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InvalidKeyException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AddressableAssets::InvalidKeyException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InvalidKeyException*, creationType>()));
    }
    // public System.Void .ctor(System.String message)
    // Offset: 0x13F60EC
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor(System.String message)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InvalidKeyException* New_ctor(::Il2CppString* message) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AddressableAssets::InvalidKeyException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InvalidKeyException*, creationType>(message)));
    }
    // public System.Void .ctor(System.String message, System.Exception innerException)
    // Offset: 0x13F6164
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor(System.String message, System.Exception innerException)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InvalidKeyException* New_ctor(::Il2CppString* message, System::Exception* innerException) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AddressableAssets::InvalidKeyException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InvalidKeyException*, creationType>(message, innerException)));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo message, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x13F61E4
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor(System.Runtime.Serialization.SerializationInfo message, System.Runtime.Serialization.StreamingContext context)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InvalidKeyException* New_ctor(System::Runtime::Serialization::SerializationInfo* message, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AddressableAssets::InvalidKeyException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InvalidKeyException*, creationType>(message, context)));
    }
    // public override System.String get_Message()
    // Offset: 0x13F6274
    // Implemented from: System.Exception
    // Base method: System.String Exception::get_Message()
    ::Il2CppString* get_Message();
  }; // UnityEngine.AddressableAssets.InvalidKeyException
  #pragma pack(pop)
  static check_size<sizeof(InvalidKeyException), 144 + sizeof(System::Type*)> __UnityEngine_AddressableAssets_InvalidKeyExceptionSizeCheck;
  static_assert(sizeof(InvalidKeyException) == 0x98);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::AddressableAssets::InvalidKeyException*, "UnityEngine.AddressableAssets", "InvalidKeyException");
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::get_Key
// Il2CppName: get_Key
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::set_Key
// Il2CppName: set_Key
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::get_Type
// Il2CppName: get_Type
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::set_Type
// Il2CppName: set_Type
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::InvalidKeyException::get_Message
// Il2CppName: get_Message
// Cannot perform method pointer template specialization from operators!
