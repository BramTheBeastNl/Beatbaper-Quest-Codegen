// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Bindings
namespace UnityEngine::Bindings {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Bindings.NativeMethodAttribute
  // [VisibleToOtherModulesAttribute] Offset: D8B828
  // [AttributeUsageAttribute] Offset: D8B828
  class NativeMethodAttribute : public System::Attribute {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xD8BDA4
    // [DebuggerBrowsableAttribute] Offset: 0xD8BDA4
    // private System.String <Name>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* Name;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0xD8BDE0
    // [CompilerGeneratedAttribute] Offset: 0xD8BDE0
    // private System.Boolean <IsThreadSafe>k__BackingField
    // Size: 0x1
    // Offset: 0x18
    bool IsThreadSafe;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xD8BE1C
    // [DebuggerBrowsableAttribute] Offset: 0xD8BE1C
    // private System.Boolean <IsFreeFunction>k__BackingField
    // Size: 0x1
    // Offset: 0x19
    bool IsFreeFunction;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [DebuggerBrowsableAttribute] Offset: 0xD8BE58
    // [CompilerGeneratedAttribute] Offset: 0xD8BE58
    // private System.Boolean <ThrowsException>k__BackingField
    // Size: 0x1
    // Offset: 0x1A
    bool ThrowsException;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [DebuggerBrowsableAttribute] Offset: 0xD8BE94
    // [CompilerGeneratedAttribute] Offset: 0xD8BE94
    // private System.Boolean <HasExplicitThis>k__BackingField
    // Size: 0x1
    // Offset: 0x1B
    bool HasExplicitThis;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: NativeMethodAttribute
    NativeMethodAttribute(::Il2CppString* Name_ = {}, bool IsThreadSafe_ = {}, bool IsFreeFunction_ = {}, bool ThrowsException_ = {}, bool HasExplicitThis_ = {}) noexcept : Name{Name_}, IsThreadSafe{IsThreadSafe_}, IsFreeFunction{IsFreeFunction_}, ThrowsException{ThrowsException_}, HasExplicitThis{HasExplicitThis_} {}
    // public System.Void set_Name(System.String value)
    // Offset: 0x23EBD80
    void set_Name(::Il2CppString* value);
    // public System.Void set_IsThreadSafe(System.Boolean value)
    // Offset: 0x23EBD88
    void set_IsThreadSafe(bool value);
    // public System.Void set_IsFreeFunction(System.Boolean value)
    // Offset: 0x23EBD94
    void set_IsFreeFunction(bool value);
    // public System.Void set_ThrowsException(System.Boolean value)
    // Offset: 0x23EBDA0
    void set_ThrowsException(bool value);
    // public System.Void set_HasExplicitThis(System.Boolean value)
    // Offset: 0x23EBDAC
    void set_HasExplicitThis(bool value);
    // public System.Void .ctor(System.String name)
    // Offset: 0x23EBDB8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeMethodAttribute* New_ctor(::Il2CppString* name) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeMethodAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeMethodAttribute*, creationType>(name)));
    }
    // public System.Void .ctor(System.String name, System.Boolean isFreeFunction)
    // Offset: 0x23EBB84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeMethodAttribute* New_ctor(::Il2CppString* name, bool isFreeFunction) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeMethodAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeMethodAttribute*, creationType>(name, isFreeFunction)));
    }
    // public System.Void .ctor(System.String name, System.Boolean isFreeFunction, System.Boolean isThreadSafe)
    // Offset: 0x23EBBE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeMethodAttribute* New_ctor(::Il2CppString* name, bool isFreeFunction, bool isThreadSafe) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeMethodAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeMethodAttribute*, creationType>(name, isFreeFunction, isThreadSafe)));
    }
    // public System.Void .ctor()
    // Offset: 0x23EBB54
    // Implemented from: System.Attribute
    // Base method: System.Void Attribute::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeMethodAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeMethodAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeMethodAttribute*, creationType>()));
    }
  }; // UnityEngine.Bindings.NativeMethodAttribute
  #pragma pack(pop)
  static check_size<sizeof(NativeMethodAttribute), 27 + sizeof(bool)> __UnityEngine_Bindings_NativeMethodAttributeSizeCheck;
  static_assert(sizeof(NativeMethodAttribute) == 0x1C);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Bindings::NativeMethodAttribute*, "UnityEngine.Bindings", "NativeMethodAttribute");
// Writing includes for template specializations
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeMethodAttribute::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Bindings::NativeMethodAttribute::*)(::Il2CppString*)>(&UnityEngine::Bindings::NativeMethodAttribute::set_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Bindings::NativeMethodAttribute*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe
// Il2CppName: set_IsThreadSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Bindings::NativeMethodAttribute::*)(bool)>(&UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Bindings::NativeMethodAttribute*), "set_IsThreadSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction
// Il2CppName: set_IsFreeFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Bindings::NativeMethodAttribute::*)(bool)>(&UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Bindings::NativeMethodAttribute*), "set_IsFreeFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException
// Il2CppName: set_ThrowsException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Bindings::NativeMethodAttribute::*)(bool)>(&UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Bindings::NativeMethodAttribute*), "set_ThrowsException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis
// Il2CppName: set_HasExplicitThis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Bindings::NativeMethodAttribute::*)(bool)>(&UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Bindings::NativeMethodAttribute*), "set_HasExplicitThis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeMethodAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeMethodAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeMethodAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeMethodAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
