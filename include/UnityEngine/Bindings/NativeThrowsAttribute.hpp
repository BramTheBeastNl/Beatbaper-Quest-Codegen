// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Bindings
namespace UnityEngine::Bindings {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Bindings.NativeThrowsAttribute
  // [VisibleToOtherModulesAttribute] Offset: D8BA74
  // [AttributeUsageAttribute] Offset: D8BA74
  class NativeThrowsAttribute : public System::Attribute {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xD8C038
    // [DebuggerBrowsableAttribute] Offset: 0xD8C038
    // private System.Boolean <ThrowsException>k__BackingField
    // Size: 0x1
    // Offset: 0x10
    bool ThrowsException;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: NativeThrowsAttribute
    NativeThrowsAttribute(bool ThrowsException_ = {}) noexcept : ThrowsException{ThrowsException_} {}
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return ThrowsException;
    }
    // public System.Void set_ThrowsException(System.Boolean value)
    // Offset: 0x23EBFF0
    void set_ThrowsException(bool value);
    // public System.Void .ctor()
    // Offset: 0x23EBFFC
    // Implemented from: System.Attribute
    // Base method: System.Void Attribute::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeThrowsAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bindings::NativeThrowsAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeThrowsAttribute*, creationType>()));
    }
  }; // UnityEngine.Bindings.NativeThrowsAttribute
  #pragma pack(pop)
  static check_size<sizeof(NativeThrowsAttribute), 16 + sizeof(bool)> __UnityEngine_Bindings_NativeThrowsAttributeSizeCheck;
  static_assert(sizeof(NativeThrowsAttribute) == 0x11);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Bindings::NativeThrowsAttribute*, "UnityEngine.Bindings", "NativeThrowsAttribute");
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException
// Il2CppName: set_ThrowsException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Bindings::NativeThrowsAttribute::*)(bool)>(&UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Bindings::NativeThrowsAttribute*), "set_ThrowsException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Bindings::NativeThrowsAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Bindings::NativeThrowsAttribute::*)()>(&UnityEngine::Bindings::NativeThrowsAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Bindings::NativeThrowsAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Bindings::NativeThrowsAttribute::*)()>(&UnityEngine::Bindings::NativeThrowsAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Bindings::NativeThrowsAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
