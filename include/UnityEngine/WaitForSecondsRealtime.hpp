// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CustomYieldInstruction
#include "UnityEngine/CustomYieldInstruction.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.WaitForSecondsRealtime
  // [] Offset: FFFFFFFF
  class WaitForSecondsRealtime : public UnityEngine::CustomYieldInstruction {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xD50DCC
    // [DebuggerBrowsableAttribute] Offset: 0xD50DCC
    // private System.Single <waitTime>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    float waitTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_WaitUntilTime
    // Size: 0x4
    // Offset: 0x14
    float m_WaitUntilTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: WaitForSecondsRealtime
    WaitForSecondsRealtime(float waitTime_ = {}, float m_WaitUntilTime_ = {}) noexcept : waitTime{waitTime_}, m_WaitUntilTime{m_WaitUntilTime_} {}
    // public System.Single get_waitTime()
    // Offset: 0x16CE000
    float get_waitTime();
    // public System.Void set_waitTime(System.Single value)
    // Offset: 0x16CE008
    void set_waitTime(float value);
    // public System.Void .ctor(System.Single time)
    // Offset: 0x16CE0A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WaitForSecondsRealtime* New_ctor(float time) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::WaitForSecondsRealtime::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WaitForSecondsRealtime*, creationType>(time)));
    }
    // public override System.Boolean get_keepWaiting()
    // Offset: 0x16CE010
    // Implemented from: UnityEngine.CustomYieldInstruction
    // Base method: System.Boolean CustomYieldInstruction::get_keepWaiting()
    bool get_keepWaiting();
  }; // UnityEngine.WaitForSecondsRealtime
  static check_size<sizeof(WaitForSecondsRealtime), 20 + sizeof(float)> __UnityEngine_WaitForSecondsRealtimeSizeCheck;
  static_assert(sizeof(WaitForSecondsRealtime) == 0x18);
}
#pragma pack(pop)
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::WaitForSecondsRealtime*, "UnityEngine", "WaitForSecondsRealtime");
