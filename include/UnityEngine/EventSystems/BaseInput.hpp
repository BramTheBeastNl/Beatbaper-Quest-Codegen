// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: IMECompositionMode
  struct IMECompositionMode;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: Touch
  struct Touch;
}
// Completed forward declares
// Type namespace: UnityEngine.EventSystems
namespace UnityEngine::EventSystems {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.EventSystems.BaseInput
  class BaseInput : public UnityEngine::EventSystems::UIBehaviour {
    public:
    // Creating value type constructor for type: BaseInput
    BaseInput() noexcept {}
    // public System.String get_compositionString()
    // Offset: 0x141249C
    ::Il2CppString* get_compositionString();
    // public UnityEngine.IMECompositionMode get_imeCompositionMode()
    // Offset: 0x14124A4
    UnityEngine::IMECompositionMode get_imeCompositionMode();
    // public System.Void set_imeCompositionMode(UnityEngine.IMECompositionMode value)
    // Offset: 0x14124AC
    void set_imeCompositionMode(UnityEngine::IMECompositionMode value);
    // public UnityEngine.Vector2 get_compositionCursorPos()
    // Offset: 0x14124B8
    UnityEngine::Vector2 get_compositionCursorPos();
    // public System.Void set_compositionCursorPos(UnityEngine.Vector2 value)
    // Offset: 0x14124C0
    void set_compositionCursorPos(UnityEngine::Vector2 value);
    // public System.Boolean get_mousePresent()
    // Offset: 0x14124C8
    bool get_mousePresent();
    // public System.Boolean GetMouseButtonDown(System.Int32 button)
    // Offset: 0x14124D0
    bool GetMouseButtonDown(int button);
    // public System.Boolean GetMouseButtonUp(System.Int32 button)
    // Offset: 0x14124DC
    bool GetMouseButtonUp(int button);
    // public System.Boolean GetMouseButton(System.Int32 button)
    // Offset: 0x14124E8
    bool GetMouseButton(int button);
    // public UnityEngine.Vector2 get_mousePosition()
    // Offset: 0x14124F4
    UnityEngine::Vector2 get_mousePosition();
    // public UnityEngine.Vector2 get_mouseScrollDelta()
    // Offset: 0x14124FC
    UnityEngine::Vector2 get_mouseScrollDelta();
    // public System.Boolean get_touchSupported()
    // Offset: 0x1412504
    bool get_touchSupported();
    // public System.Int32 get_touchCount()
    // Offset: 0x141250C
    int get_touchCount();
    // public UnityEngine.Touch GetTouch(System.Int32 index)
    // Offset: 0x1412514
    UnityEngine::Touch GetTouch(int index);
    // public System.Single GetAxisRaw(System.String axisName)
    // Offset: 0x1412520
    float GetAxisRaw(::Il2CppString* axisName);
    // public System.Boolean GetButtonDown(System.String buttonName)
    // Offset: 0x141252C
    bool GetButtonDown(::Il2CppString* buttonName);
    // public System.Void .ctor()
    // Offset: 0x1412538
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseInput* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseInput*, creationType>()));
    }
  }; // UnityEngine.EventSystems.BaseInput
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::EventSystems::BaseInput*, "UnityEngine.EventSystems", "BaseInput");
