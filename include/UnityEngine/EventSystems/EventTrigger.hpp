// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.EventSystems.IPointerEnterHandler
#include "UnityEngine/EventSystems/IPointerEnterHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerExitHandler
#include "UnityEngine/EventSystems/IPointerExitHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerDownHandler
#include "UnityEngine/EventSystems/IPointerDownHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerUpHandler
#include "UnityEngine/EventSystems/IPointerUpHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerClickHandler
#include "UnityEngine/EventSystems/IPointerClickHandler.hpp"
// Including type: UnityEngine.EventSystems.IInitializePotentialDragHandler
#include "UnityEngine/EventSystems/IInitializePotentialDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IBeginDragHandler
#include "UnityEngine/EventSystems/IBeginDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IDragHandler
#include "UnityEngine/EventSystems/IDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IEndDragHandler
#include "UnityEngine/EventSystems/IEndDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IDropHandler
#include "UnityEngine/EventSystems/IDropHandler.hpp"
// Including type: UnityEngine.EventSystems.IScrollHandler
#include "UnityEngine/EventSystems/IScrollHandler.hpp"
// Including type: UnityEngine.EventSystems.IUpdateSelectedHandler
#include "UnityEngine/EventSystems/IUpdateSelectedHandler.hpp"
// Including type: UnityEngine.EventSystems.ISelectHandler
#include "UnityEngine/EventSystems/ISelectHandler.hpp"
// Including type: UnityEngine.EventSystems.IDeselectHandler
#include "UnityEngine/EventSystems/IDeselectHandler.hpp"
// Including type: UnityEngine.EventSystems.IMoveHandler
#include "UnityEngine/EventSystems/IMoveHandler.hpp"
// Including type: UnityEngine.EventSystems.ISubmitHandler
#include "UnityEngine/EventSystems/ISubmitHandler.hpp"
// Including type: UnityEngine.EventSystems.ICancelHandler
#include "UnityEngine/EventSystems/ICancelHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: EventTriggerType
  struct EventTriggerType;
  // Forward declaring type: BaseEventData
  class BaseEventData;
  // Forward declaring type: PointerEventData
  class PointerEventData;
  // Forward declaring type: AxisEventData
  class AxisEventData;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.EventSystems
namespace UnityEngine::EventSystems {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.EventSystems.EventTrigger
  // [AddComponentMenu] Offset: DC5BB8
  class EventTrigger : public UnityEngine::MonoBehaviour/*, public UnityEngine::EventSystems::IPointerEnterHandler, public UnityEngine::EventSystems::IPointerExitHandler, public UnityEngine::EventSystems::IPointerDownHandler, public UnityEngine::EventSystems::IPointerUpHandler, public UnityEngine::EventSystems::IPointerClickHandler, public UnityEngine::EventSystems::IInitializePotentialDragHandler, public UnityEngine::EventSystems::IBeginDragHandler, public UnityEngine::EventSystems::IDragHandler, public UnityEngine::EventSystems::IEndDragHandler, public UnityEngine::EventSystems::IDropHandler, public UnityEngine::EventSystems::IScrollHandler, public UnityEngine::EventSystems::IUpdateSelectedHandler, public UnityEngine::EventSystems::ISelectHandler, public UnityEngine::EventSystems::IDeselectHandler, public UnityEngine::EventSystems::IMoveHandler, public UnityEngine::EventSystems::ISubmitHandler, public UnityEngine::EventSystems::ICancelHandler*/ {
    public:
    // Nested type: UnityEngine::EventSystems::EventTrigger::TriggerEvent
    class TriggerEvent;
    // Nested type: UnityEngine::EventSystems::EventTrigger::Entry
    class Entry;
    // [FormerlySerializedAsAttribute] Offset: 0xDC7C0C
    // private System.Collections.Generic.List`1<UnityEngine.EventSystems.EventTrigger/Entry> m_Delegates
    // Size: 0x8
    // Offset: 0x18
    System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* m_Delegates;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*) == 0x8);
    // Creating value type constructor for type: EventTrigger
    EventTrigger(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* m_Delegates_ = {}) noexcept : m_Delegates{m_Delegates_} {}
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IPointerEnterHandler
    operator UnityEngine::EventSystems::IPointerEnterHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IPointerEnterHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IPointerExitHandler
    operator UnityEngine::EventSystems::IPointerExitHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IPointerExitHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IPointerDownHandler
    operator UnityEngine::EventSystems::IPointerDownHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IPointerDownHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IPointerUpHandler
    operator UnityEngine::EventSystems::IPointerUpHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IPointerUpHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IPointerClickHandler
    operator UnityEngine::EventSystems::IPointerClickHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IPointerClickHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IInitializePotentialDragHandler
    operator UnityEngine::EventSystems::IInitializePotentialDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IInitializePotentialDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IBeginDragHandler
    operator UnityEngine::EventSystems::IBeginDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IBeginDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IDragHandler
    operator UnityEngine::EventSystems::IDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IEndDragHandler
    operator UnityEngine::EventSystems::IEndDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IEndDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IDropHandler
    operator UnityEngine::EventSystems::IDropHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IDropHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IScrollHandler
    operator UnityEngine::EventSystems::IScrollHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IScrollHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IUpdateSelectedHandler
    operator UnityEngine::EventSystems::IUpdateSelectedHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IUpdateSelectedHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::ISelectHandler
    operator UnityEngine::EventSystems::ISelectHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::ISelectHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IDeselectHandler
    operator UnityEngine::EventSystems::IDeselectHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IDeselectHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IMoveHandler
    operator UnityEngine::EventSystems::IMoveHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IMoveHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::ISubmitHandler
    operator UnityEngine::EventSystems::ISubmitHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::ISubmitHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::ICancelHandler
    operator UnityEngine::EventSystems::ICancelHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::ICancelHandler*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Collections.Generic.List`1<UnityEngine.EventSystems.EventTrigger/Entry> get_delegates()
    // Offset: 0x142F960
    System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* get_delegates();
    // public System.Void set_delegates(System.Collections.Generic.List`1<UnityEngine.EventSystems.EventTrigger/Entry> value)
    // Offset: 0x142F9D8
    void set_delegates(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* value);
    // public System.Collections.Generic.List`1<UnityEngine.EventSystems.EventTrigger/Entry> get_triggers()
    // Offset: 0x142F964
    System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* get_triggers();
    // public System.Void set_triggers(System.Collections.Generic.List`1<UnityEngine.EventSystems.EventTrigger/Entry> value)
    // Offset: 0x142F9E8
    void set_triggers(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* value);
    // private System.Void Execute(UnityEngine.EventSystems.EventTriggerType id, UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x142F9F0
    void Execute(UnityEngine::EventSystems::EventTriggerType id, UnityEngine::EventSystems::BaseEventData* eventData);
    // public System.Void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FAD8
    void OnPointerEnter(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FAE4
    void OnPointerExit(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FAF0
    void OnDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnDrop(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FAFC
    void OnDrop(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FB08
    void OnPointerDown(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FB14
    void OnPointerUp(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FB20
    void OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnSelect(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x142FB2C
    void OnSelect(UnityEngine::EventSystems::BaseEventData* eventData);
    // public System.Void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x142FB38
    void OnDeselect(UnityEngine::EventSystems::BaseEventData* eventData);
    // public System.Void OnScroll(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FB44
    void OnScroll(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnMove(UnityEngine.EventSystems.AxisEventData eventData)
    // Offset: 0x142FB50
    void OnMove(UnityEngine::EventSystems::AxisEventData* eventData);
    // public System.Void OnUpdateSelected(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x142FB5C
    void OnUpdateSelected(UnityEngine::EventSystems::BaseEventData* eventData);
    // public System.Void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FB68
    void OnInitializePotentialDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FB74
    void OnBeginDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x142FB80
    void OnEndDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x142FB8C
    void OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData);
    // public System.Void OnCancel(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x142FB98
    void OnCancel(UnityEngine::EventSystems::BaseEventData* eventData);
    // protected System.Void .ctor()
    // Offset: 0x142F9E0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventTrigger* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventTrigger*, creationType>()));
    }
  }; // UnityEngine.EventSystems.EventTrigger
  #pragma pack(pop)
  static check_size<sizeof(EventTrigger), 24 + sizeof(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*)> __UnityEngine_EventSystems_EventTriggerSizeCheck;
  static_assert(sizeof(EventTrigger) == 0x20);
  // Writing MetadataGetter for method: EventTrigger::get_delegates
  // Il2CppName: get_delegates
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* (EventTrigger::*)()>(&EventTrigger::get_delegates)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "get_delegates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::set_delegates
  // Il2CppName: set_delegates
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*)>(&EventTrigger::set_delegates)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "set_delegates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::get_triggers
  // Il2CppName: get_triggers
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* (EventTrigger::*)()>(&EventTrigger::get_triggers)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "get_triggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::set_triggers
  // Il2CppName: set_triggers
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*)>(&EventTrigger::set_triggers)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "set_triggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::Execute
  // Il2CppName: Execute
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::EventTriggerType, UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::Execute)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::EventTriggerType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnPointerEnter
  // Il2CppName: OnPointerEnter
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerEnter)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnPointerExit
  // Il2CppName: OnPointerExit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerExit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnDrag
  // Il2CppName: OnDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnDrop
  // Il2CppName: OnDrop
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnDrop)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnPointerDown
  // Il2CppName: OnPointerDown
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerDown)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnPointerUp
  // Il2CppName: OnPointerUp
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerUp)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnPointerClick
  // Il2CppName: OnPointerClick
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerClick)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnSelect
  // Il2CppName: OnSelect
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnSelect)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnDeselect
  // Il2CppName: OnDeselect
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnDeselect)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnDeselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnScroll
  // Il2CppName: OnScroll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnScroll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnMove
  // Il2CppName: OnMove
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::AxisEventData*)>(&EventTrigger::OnMove)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::AxisEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnUpdateSelected
  // Il2CppName: OnUpdateSelected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnUpdateSelected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnUpdateSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnInitializePotentialDrag
  // Il2CppName: OnInitializePotentialDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnInitializePotentialDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnInitializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnBeginDrag
  // Il2CppName: OnBeginDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnBeginDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnEndDrag
  // Il2CppName: OnEndDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnEndDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnEndDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnSubmit
  // Il2CppName: OnSubmit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnSubmit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::OnCancel
  // Il2CppName: OnCancel
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnCancel)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: EventTrigger::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)()>(&EventTrigger::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)()>(&EventTrigger::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(EventTrigger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::EventSystems::EventTrigger*, "UnityEngine.EventSystems", "EventTrigger");
