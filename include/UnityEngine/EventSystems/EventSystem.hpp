// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
// Including type: UnityEngine.EventSystems.RaycastResult
#include "UnityEngine/EventSystems/RaycastResult.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: BaseInputModule
  class BaseInputModule;
  // Forward declaring type: BaseEventData
  class BaseEventData;
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
}
// Completed forward declares
// Type namespace: UnityEngine.EventSystems
namespace UnityEngine::EventSystems {
  // Autogenerated type: UnityEngine.EventSystems.EventSystem
  class EventSystem : public UnityEngine::EventSystems::UIBehaviour {
    public:
    // private System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseInputModule> m_SystemInputModules
    // Offset: 0x18
    System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseInputModule*>* m_SystemInputModules;
    // private UnityEngine.EventSystems.BaseInputModule m_CurrentInputModule
    // Offset: 0x20
    UnityEngine::EventSystems::BaseInputModule* m_CurrentInputModule;
    // private UnityEngine.GameObject m_FirstSelected
    // Offset: 0x28
    UnityEngine::GameObject* m_FirstSelected;
    // private System.Boolean m_sendNavigationEvents
    // Offset: 0x30
    bool m_sendNavigationEvents;
    // private System.Int32 m_DragThreshold
    // Offset: 0x34
    int m_DragThreshold;
    // private UnityEngine.GameObject m_CurrentSelected
    // Offset: 0x38
    UnityEngine::GameObject* m_CurrentSelected;
    // private System.Boolean m_HasFocus
    // Offset: 0x40
    bool m_HasFocus;
    // private System.Boolean m_SelectionGuard
    // Offset: 0x41
    bool m_SelectionGuard;
    // private UnityEngine.EventSystems.BaseEventData m_DummyData
    // Offset: 0x48
    UnityEngine::EventSystems::BaseEventData* m_DummyData;
    // Get static field: static private System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem> m_EventSystems
    static System::Collections::Generic::List_1<UnityEngine::EventSystems::EventSystem*>* _get_m_EventSystems();
    // Set static field: static private System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem> m_EventSystems
    static void _set_m_EventSystems(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventSystem*>* value);
    // Get static field: static private readonly System.Comparison`1<UnityEngine.EventSystems.RaycastResult> s_RaycastComparer
    static System::Comparison_1<UnityEngine::EventSystems::RaycastResult>* _get_s_RaycastComparer();
    // Set static field: static private readonly System.Comparison`1<UnityEngine.EventSystems.RaycastResult> s_RaycastComparer
    static void _set_s_RaycastComparer(System::Comparison_1<UnityEngine::EventSystems::RaycastResult>* value);
    // static public UnityEngine.EventSystems.EventSystem get_current()
    // Offset: 0xD56FE4
    static UnityEngine::EventSystems::EventSystem* get_current();
    // static public System.Void set_current(UnityEngine.EventSystems.EventSystem value)
    // Offset: 0xD570A4
    static void set_current(UnityEngine::EventSystems::EventSystem* value);
    // public System.Boolean get_sendNavigationEvents()
    // Offset: 0xD571AC
    bool get_sendNavigationEvents();
    // public System.Void set_sendNavigationEvents(System.Boolean value)
    // Offset: 0xD571B4
    void set_sendNavigationEvents(bool value);
    // public System.Int32 get_pixelDragThreshold()
    // Offset: 0xD571C0
    int get_pixelDragThreshold();
    // public System.Void set_pixelDragThreshold(System.Int32 value)
    // Offset: 0xD571C8
    void set_pixelDragThreshold(int value);
    // public UnityEngine.EventSystems.BaseInputModule get_currentInputModule()
    // Offset: 0xD571D0
    UnityEngine::EventSystems::BaseInputModule* get_currentInputModule();
    // public UnityEngine.GameObject get_firstSelectedGameObject()
    // Offset: 0xD571D8
    UnityEngine::GameObject* get_firstSelectedGameObject();
    // public System.Void set_firstSelectedGameObject(UnityEngine.GameObject value)
    // Offset: 0xD571E0
    void set_firstSelectedGameObject(UnityEngine::GameObject* value);
    // public UnityEngine.GameObject get_currentSelectedGameObject()
    // Offset: 0xD571E8
    UnityEngine::GameObject* get_currentSelectedGameObject();
    // public UnityEngine.GameObject get_lastSelectedGameObject()
    // Offset: 0xD571F0
    UnityEngine::GameObject* get_lastSelectedGameObject();
    // public System.Boolean get_isFocused()
    // Offset: 0xD571F8
    bool get_isFocused();
    // public System.Void UpdateModules()
    // Offset: 0xD55BCC
    void UpdateModules();
    // public System.Boolean get_alreadySelecting()
    // Offset: 0xD57290
    bool get_alreadySelecting();
    // public System.Void SetSelectedGameObject(UnityEngine.GameObject selected, UnityEngine.EventSystems.BaseEventData pointer)
    // Offset: 0xD55648
    void SetSelectedGameObject(UnityEngine::GameObject* selected, UnityEngine::EventSystems::BaseEventData* pointer);
    // private UnityEngine.EventSystems.BaseEventData get_baseEventDataCache()
    // Offset: 0xD57298
    UnityEngine::EventSystems::BaseEventData* get_baseEventDataCache();
    // public System.Void SetSelectedGameObject(UnityEngine.GameObject selected)
    // Offset: 0xD5732C
    void SetSelectedGameObject(UnityEngine::GameObject* selected);
    // static private System.Int32 RaycastComparer(UnityEngine.EventSystems.RaycastResult lhs, UnityEngine.EventSystems.RaycastResult rhs)
    // Offset: 0xD5735C
    static int RaycastComparer(UnityEngine::EventSystems::RaycastResult lhs, UnityEngine::EventSystems::RaycastResult rhs);
    // public System.Void RaycastAll(UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> raycastResults)
    // Offset: 0xD576F8
    void RaycastAll(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* raycastResults);
    // public System.Boolean IsPointerOverGameObject()
    // Offset: 0xD578B4
    bool IsPointerOverGameObject();
    // public System.Boolean IsPointerOverGameObject(System.Int32 pointerId)
    // Offset: 0xD578BC
    bool IsPointerOverGameObject(int pointerId);
    // private System.Void TickModules()
    // Offset: 0xD57AE4
    void TickModules();
    // protected System.Void OnApplicationFocus(System.Boolean hasFocus)
    // Offset: 0xD57BE8
    void OnApplicationFocus(bool hasFocus);
    // protected System.Void Update()
    // Offset: 0xD57BF4
    void Update();
    // private System.Void ChangeEventModule(UnityEngine.EventSystems.BaseInputModule module)
    // Offset: 0xD57E88
    void ChangeEventModule(UnityEngine::EventSystems::BaseInputModule* module);
    // protected System.Void .ctor()
    // Offset: 0xD57200
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static EventSystem* New_ctor();
    // protected override System.Void OnEnable()
    // Offset: 0xD57970
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0xD579F4
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDisable()
    void OnDisable();
    // public override System.String ToString()
    // Offset: 0xD57FB8
    // Implemented from: UnityEngine.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
    // static private System.Void .cctor()
    // Offset: 0xD580DC
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // UnityEngine.EventSystems.EventSystem
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::EventSystems::EventSystem*, "UnityEngine.EventSystems", "EventSystem");
#pragma pack(pop)
