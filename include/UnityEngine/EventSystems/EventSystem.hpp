// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
// Including type: UnityEngine.EventSystems.RaycastResult
#include "UnityEngine/EventSystems/RaycastResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: BaseInputModule
  class BaseInputModule;
  // Forward declaring type: BaseEventData
  class BaseEventData;
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
}
// Completed forward declares
// Type namespace: UnityEngine.EventSystems
namespace UnityEngine::EventSystems {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.EventSystems.EventSystem
  // [AddComponentMenu] Offset: DC5B80
  class EventSystem : public UnityEngine::EventSystems::UIBehaviour {
    public:
    // private System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseInputModule> m_SystemInputModules
    // Size: 0x8
    // Offset: 0x18
    System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseInputModule*>* m_SystemInputModules;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseInputModule*>*) == 0x8);
    // private UnityEngine.EventSystems.BaseInputModule m_CurrentInputModule
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::EventSystems::BaseInputModule* m_CurrentInputModule;
    // Field size check
    static_assert(sizeof(UnityEngine::EventSystems::BaseInputModule*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xDC7BA0
    // private UnityEngine.GameObject m_FirstSelected
    // Size: 0x8
    // Offset: 0x28
    UnityEngine::GameObject* m_FirstSelected;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private System.Boolean m_sendNavigationEvents
    // Size: 0x1
    // Offset: 0x30
    bool m_sendNavigationEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_sendNavigationEvents and: m_DragThreshold
    char __padding3[0x3] = {};
    // private System.Int32 m_DragThreshold
    // Size: 0x4
    // Offset: 0x34
    int m_DragThreshold;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.GameObject m_CurrentSelected
    // Size: 0x8
    // Offset: 0x38
    UnityEngine::GameObject* m_CurrentSelected;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private System.Boolean m_HasFocus
    // Size: 0x1
    // Offset: 0x40
    bool m_HasFocus;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_SelectionGuard
    // Size: 0x1
    // Offset: 0x41
    bool m_SelectionGuard;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_SelectionGuard and: m_DummyData
    char __padding7[0x6] = {};
    // private UnityEngine.EventSystems.BaseEventData m_DummyData
    // Size: 0x8
    // Offset: 0x48
    UnityEngine::EventSystems::BaseEventData* m_DummyData;
    // Field size check
    static_assert(sizeof(UnityEngine::EventSystems::BaseEventData*) == 0x8);
    // Creating value type constructor for type: EventSystem
    EventSystem(System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseInputModule*>* m_SystemInputModules_ = {}, UnityEngine::EventSystems::BaseInputModule* m_CurrentInputModule_ = {}, UnityEngine::GameObject* m_FirstSelected_ = {}, bool m_sendNavigationEvents_ = {}, int m_DragThreshold_ = {}, UnityEngine::GameObject* m_CurrentSelected_ = {}, bool m_HasFocus_ = {}, bool m_SelectionGuard_ = {}, UnityEngine::EventSystems::BaseEventData* m_DummyData_ = {}) noexcept : m_SystemInputModules{m_SystemInputModules_}, m_CurrentInputModule{m_CurrentInputModule_}, m_FirstSelected{m_FirstSelected_}, m_sendNavigationEvents{m_sendNavigationEvents_}, m_DragThreshold{m_DragThreshold_}, m_CurrentSelected{m_CurrentSelected_}, m_HasFocus{m_HasFocus_}, m_SelectionGuard{m_SelectionGuard_}, m_DummyData{m_DummyData_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get static field: static private System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem> m_EventSystems
    static System::Collections::Generic::List_1<UnityEngine::EventSystems::EventSystem*>* _get_m_EventSystems();
    // Set static field: static private System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem> m_EventSystems
    static void _set_m_EventSystems(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventSystem*>* value);
    // Get static field: static private readonly System.Comparison`1<UnityEngine.EventSystems.RaycastResult> s_RaycastComparer
    static System::Comparison_1<UnityEngine::EventSystems::RaycastResult>* _get_s_RaycastComparer();
    // Set static field: static private readonly System.Comparison`1<UnityEngine.EventSystems.RaycastResult> s_RaycastComparer
    static void _set_s_RaycastComparer(System::Comparison_1<UnityEngine::EventSystems::RaycastResult>* value);
    // static public UnityEngine.EventSystems.EventSystem get_current()
    // Offset: 0x142E814
    static UnityEngine::EventSystems::EventSystem* get_current();
    // static public System.Void set_current(UnityEngine.EventSystems.EventSystem value)
    // Offset: 0x142E8D4
    static void set_current(UnityEngine::EventSystems::EventSystem* value);
    // public System.Boolean get_sendNavigationEvents()
    // Offset: 0x142E9DC
    bool get_sendNavigationEvents();
    // public System.Void set_sendNavigationEvents(System.Boolean value)
    // Offset: 0x142E9E4
    void set_sendNavigationEvents(bool value);
    // public System.Int32 get_pixelDragThreshold()
    // Offset: 0x142E9F0
    int get_pixelDragThreshold();
    // public System.Void set_pixelDragThreshold(System.Int32 value)
    // Offset: 0x142E9F8
    void set_pixelDragThreshold(int value);
    // public UnityEngine.EventSystems.BaseInputModule get_currentInputModule()
    // Offset: 0x142EA00
    UnityEngine::EventSystems::BaseInputModule* get_currentInputModule();
    // public UnityEngine.GameObject get_firstSelectedGameObject()
    // Offset: 0x142EA08
    UnityEngine::GameObject* get_firstSelectedGameObject();
    // public System.Void set_firstSelectedGameObject(UnityEngine.GameObject value)
    // Offset: 0x142EA10
    void set_firstSelectedGameObject(UnityEngine::GameObject* value);
    // public UnityEngine.GameObject get_currentSelectedGameObject()
    // Offset: 0x142EA18
    UnityEngine::GameObject* get_currentSelectedGameObject();
    // public UnityEngine.GameObject get_lastSelectedGameObject()
    // Offset: 0x142EA20
    UnityEngine::GameObject* get_lastSelectedGameObject();
    // public System.Boolean get_isFocused()
    // Offset: 0x142EA28
    bool get_isFocused();
    // public System.Void UpdateModules()
    // Offset: 0x142D4F4
    void UpdateModules();
    // public System.Boolean get_alreadySelecting()
    // Offset: 0x142EAB4
    bool get_alreadySelecting();
    // public System.Void SetSelectedGameObject(UnityEngine.GameObject selected, UnityEngine.EventSystems.BaseEventData pointer)
    // Offset: 0x142CFB8
    void SetSelectedGameObject(UnityEngine::GameObject* selected, UnityEngine::EventSystems::BaseEventData* pointer);
    // private UnityEngine.EventSystems.BaseEventData get_baseEventDataCache()
    // Offset: 0x142EABC
    UnityEngine::EventSystems::BaseEventData* get_baseEventDataCache();
    // public System.Void SetSelectedGameObject(UnityEngine.GameObject selected)
    // Offset: 0x142EB2C
    void SetSelectedGameObject(UnityEngine::GameObject* selected);
    // static private System.Int32 RaycastComparer(UnityEngine.EventSystems.RaycastResult lhs, UnityEngine.EventSystems.RaycastResult rhs)
    // Offset: 0x142EB5C
    static int RaycastComparer(UnityEngine::EventSystems::RaycastResult lhs, UnityEngine::EventSystems::RaycastResult rhs);
    // public System.Void RaycastAll(UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> raycastResults)
    // Offset: 0x142EEF8
    void RaycastAll(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* raycastResults);
    // public System.Boolean IsPointerOverGameObject()
    // Offset: 0x142F0B4
    bool IsPointerOverGameObject();
    // public System.Boolean IsPointerOverGameObject(System.Int32 pointerId)
    // Offset: 0x142F0BC
    bool IsPointerOverGameObject(int pointerId);
    // private System.Void TickModules()
    // Offset: 0x142F2CC
    void TickModules();
    // protected System.Void OnApplicationFocus(System.Boolean hasFocus)
    // Offset: 0x142F3D0
    void OnApplicationFocus(bool hasFocus);
    // protected System.Void Update()
    // Offset: 0x142F3DC
    void Update();
    // private System.Void ChangeEventModule(UnityEngine.EventSystems.BaseInputModule module)
    // Offset: 0x142F670
    void ChangeEventModule(UnityEngine::EventSystems::BaseInputModule* module);
    // protected System.Void .ctor()
    // Offset: 0x142EA30
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventSystem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventSystem*, creationType>()));
    }
    // protected override System.Void OnEnable()
    // Offset: 0x142F170
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x142F1F4
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDisable()
    void OnDisable();
    // public override System.String ToString()
    // Offset: 0x142F788
    // Implemented from: UnityEngine.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
    // static private System.Void .cctor()
    // Offset: 0x142F8AC
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // UnityEngine.EventSystems.EventSystem
  #pragma pack(pop)
  static check_size<sizeof(EventSystem), 72 + sizeof(UnityEngine::EventSystems::BaseEventData*)> __UnityEngine_EventSystems_EventSystemSizeCheck;
  static_assert(sizeof(EventSystem) == 0x50);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::EventSystems::EventSystem*, "UnityEngine.EventSystems", "EventSystem");
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_current
// Il2CppName: get_current
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::set_current
// Il2CppName: set_current
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_sendNavigationEvents
// Il2CppName: get_sendNavigationEvents
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::set_sendNavigationEvents
// Il2CppName: set_sendNavigationEvents
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_pixelDragThreshold
// Il2CppName: get_pixelDragThreshold
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::set_pixelDragThreshold
// Il2CppName: set_pixelDragThreshold
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_currentInputModule
// Il2CppName: get_currentInputModule
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_firstSelectedGameObject
// Il2CppName: get_firstSelectedGameObject
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::set_firstSelectedGameObject
// Il2CppName: set_firstSelectedGameObject
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_currentSelectedGameObject
// Il2CppName: get_currentSelectedGameObject
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_lastSelectedGameObject
// Il2CppName: get_lastSelectedGameObject
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_isFocused
// Il2CppName: get_isFocused
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::UpdateModules
// Il2CppName: UpdateModules
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_alreadySelecting
// Il2CppName: get_alreadySelecting
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::SetSelectedGameObject
// Il2CppName: SetSelectedGameObject
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::get_baseEventDataCache
// Il2CppName: get_baseEventDataCache
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::SetSelectedGameObject
// Il2CppName: SetSelectedGameObject
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::RaycastComparer
// Il2CppName: RaycastComparer
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::RaycastAll
// Il2CppName: RaycastAll
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::IsPointerOverGameObject
// Il2CppName: IsPointerOverGameObject
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::IsPointerOverGameObject
// Il2CppName: IsPointerOverGameObject
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::TickModules
// Il2CppName: TickModules
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::OnApplicationFocus
// Il2CppName: OnApplicationFocus
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::Update
// Il2CppName: Update
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::ChangeEventModule
// Il2CppName: ChangeEventModule
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::OnEnable
// Il2CppName: OnEnable
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::OnDisable
// Il2CppName: OnDisable
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::EventSystems::EventSystem::_cctor
// Il2CppName: .cctor
// Cannot perform method pointer template specialization from operators!
