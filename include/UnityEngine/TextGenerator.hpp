// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.TextGenerationSettings
#include "UnityEngine/TextGenerationSettings.hpp"
// Including type: UnityEngine.TextGenerationError
#include "UnityEngine/TextGenerationError.hpp"
// Including type: UnityEngine.UIVertex
#include "UnityEngine/UIVertex.hpp"
// Including type: UnityEngine.UICharInfo
#include "UnityEngine/UICharInfo.hpp"
// Including type: UnityEngine.UILineInfo
#include "UnityEngine/UILineInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: Font
  class Font;
  // Skipping declaration: Color because it is already included!
  // Skipping declaration: FontStyle because it is already included!
  // Skipping declaration: TextAnchor because it is already included!
  // Skipping declaration: VerticalWrapMode because it is already included!
  // Skipping declaration: HorizontalWrapMode because it is already included!
  // Skipping declaration: Vector2 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0xA3
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.TextGenerator
  // [NativeHeaderAttribute] Offset: CCE060
  // [UsedByNativeCodeAttribute] Offset: CCE060
  class TextGenerator : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(System::IntPtr) == 0x8);
    // private System.String m_LastString
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* m_LastString;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private UnityEngine.TextGenerationSettings m_LastSettings
    // Size: 0x59
    // Offset: 0x20
    UnityEngine::TextGenerationSettings m_LastSettings;
    // Field size check
    static_assert(sizeof(UnityEngine::TextGenerationSettings) == 0x59);
    // Padding between fields: m_LastSettings and: m_HasGenerated
    char __padding2[0x7] = {};
    // private System.Boolean m_HasGenerated
    // Size: 0x1
    // Offset: 0x80
    bool m_HasGenerated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_HasGenerated and: m_LastValid
    char __padding3[0x3] = {};
    // private UnityEngine.TextGenerationError m_LastValid
    // Size: 0x4
    // Offset: 0x84
    UnityEngine::TextGenerationError m_LastValid;
    // Field size check
    static_assert(sizeof(UnityEngine::TextGenerationError) == 0x4);
    // private readonly System.Collections.Generic.List`1<UnityEngine.UIVertex> m_Verts
    // Size: 0x8
    // Offset: 0x88
    System::Collections::Generic::List_1<UnityEngine::UIVertex>* m_Verts;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::UIVertex>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.UICharInfo> m_Characters
    // Size: 0x8
    // Offset: 0x90
    System::Collections::Generic::List_1<UnityEngine::UICharInfo>* m_Characters;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::UICharInfo>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.UILineInfo> m_Lines
    // Size: 0x8
    // Offset: 0x98
    System::Collections::Generic::List_1<UnityEngine::UILineInfo>* m_Lines;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::UILineInfo>*) == 0x8);
    // private System.Boolean m_CachedVerts
    // Size: 0x1
    // Offset: 0xA0
    bool m_CachedVerts;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_CachedCharacters
    // Size: 0x1
    // Offset: 0xA1
    bool m_CachedCharacters;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_CachedLines
    // Size: 0x1
    // Offset: 0xA2
    bool m_CachedLines;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: TextGenerator
    TextGenerator(System::IntPtr m_Ptr_ = {}, ::Il2CppString* m_LastString_ = {}, UnityEngine::TextGenerationSettings m_LastSettings_ = {}, bool m_HasGenerated_ = {}, UnityEngine::TextGenerationError m_LastValid_ = {}, System::Collections::Generic::List_1<UnityEngine::UIVertex>* m_Verts_ = {}, System::Collections::Generic::List_1<UnityEngine::UICharInfo>* m_Characters_ = {}, System::Collections::Generic::List_1<UnityEngine::UILineInfo>* m_Lines_ = {}, bool m_CachedVerts_ = {}, bool m_CachedCharacters_ = {}, bool m_CachedLines_ = {}) noexcept : m_Ptr{m_Ptr_}, m_LastString{m_LastString_}, m_LastSettings{m_LastSettings_}, m_HasGenerated{m_HasGenerated_}, m_LastValid{m_LastValid_}, m_Verts{m_Verts_}, m_Characters{m_Characters_}, m_Lines{m_Lines_}, m_CachedVerts{m_CachedVerts_}, m_CachedCharacters{m_CachedCharacters_}, m_CachedLines{m_CachedLines_} {}
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // public System.Void .ctor(System.Int32 initialCapacity)
    // Offset: 0x21AA184
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextGenerator* New_ctor(int initialCapacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextGenerator*, creationType>(initialCapacity)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x21AA3B0
    void System_IDisposable_Dispose();
    // public System.Int32 get_characterCountVisible()
    // Offset: 0x21AA47C
    int get_characterCountVisible();
    // private UnityEngine.TextGenerationSettings ValidatedSettings(UnityEngine.TextGenerationSettings settings)
    // Offset: 0x21AA504
    UnityEngine::TextGenerationSettings ValidatedSettings(UnityEngine::TextGenerationSettings settings);
    // public System.Void Invalidate()
    // Offset: 0x21AA7CC
    void Invalidate();
    // public System.Void GetCharacters(System.Collections.Generic.List`1<UnityEngine.UICharInfo> characters)
    // Offset: 0x21AA7D4
    void GetCharacters(System::Collections::Generic::List_1<UnityEngine::UICharInfo>* characters);
    // public System.Void GetLines(System.Collections.Generic.List`1<UnityEngine.UILineInfo> lines)
    // Offset: 0x21AA874
    void GetLines(System::Collections::Generic::List_1<UnityEngine::UILineInfo>* lines);
    // public System.Void GetVertices(System.Collections.Generic.List`1<UnityEngine.UIVertex> vertices)
    // Offset: 0x21AA914
    void GetVertices(System::Collections::Generic::List_1<UnityEngine::UIVertex>* vertices);
    // public System.Single GetPreferredWidth(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x21AA9B4
    float GetPreferredWidth(::Il2CppString* str, UnityEngine::TextGenerationSettings settings);
    // public System.Single GetPreferredHeight(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x21AAADC
    float GetPreferredHeight(::Il2CppString* str, UnityEngine::TextGenerationSettings settings);
    // public System.Boolean PopulateWithErrors(System.String str, UnityEngine.TextGenerationSettings settings, UnityEngine.GameObject context)
    // Offset: 0x21AAB50
    bool PopulateWithErrors(::Il2CppString* str, UnityEngine::TextGenerationSettings settings, UnityEngine::GameObject* context);
    // public System.Boolean Populate(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x21AAA2C
    bool Populate(::Il2CppString* str, UnityEngine::TextGenerationSettings settings);
    // private UnityEngine.TextGenerationError PopulateWithError(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x21AAD0C
    UnityEngine::TextGenerationError PopulateWithError(::Il2CppString* str, UnityEngine::TextGenerationSettings settings);
    // private UnityEngine.TextGenerationError PopulateAlways(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x21AADA8
    UnityEngine::TextGenerationError PopulateAlways(::Il2CppString* str, UnityEngine::TextGenerationSettings settings);
    // public System.Collections.Generic.IList`1<UnityEngine.UIVertex> get_verts()
    // Offset: 0x21AB07C
    System::Collections::Generic::IList_1<UnityEngine::UIVertex>* get_verts();
    // public System.Collections.Generic.IList`1<UnityEngine.UICharInfo> get_characters()
    // Offset: 0x21AB0E4
    System::Collections::Generic::IList_1<UnityEngine::UICharInfo>* get_characters();
    // public System.Collections.Generic.IList`1<UnityEngine.UILineInfo> get_lines()
    // Offset: 0x21AB14C
    System::Collections::Generic::IList_1<UnityEngine::UILineInfo>* get_lines();
    // public UnityEngine.Rect get_rectExtents()
    // Offset: 0x21AAA80
    UnityEngine::Rect get_rectExtents();
    // public System.Int32 get_characterCount()
    // Offset: 0x21AA4C4
    int get_characterCount();
    // public System.Int32 get_lineCount()
    // Offset: 0x21AB204
    int get_lineCount();
    // static private System.IntPtr Internal_Create()
    // Offset: 0x21AA28C
    static System::IntPtr Internal_Create();
    // static private System.Void Internal_Destroy(System.IntPtr ptr)
    // Offset: 0x21AA43C
    static void Internal_Destroy(System::IntPtr ptr);
    // System.Boolean Populate_Internal(System.String str, UnityEngine.Font font, UnityEngine.Color color, System.Int32 fontSize, System.Single scaleFactor, System.Single lineSpacing, UnityEngine.FontStyle style, System.Boolean richText, System.Boolean resizeTextForBestFit, System.Int32 resizeTextMinSize, System.Int32 resizeTextMaxSize, System.Int32 verticalOverFlow, System.Int32 horizontalOverflow, System.Boolean updateBounds, UnityEngine.TextAnchor anchor, System.Single extentsX, System.Single extentsY, System.Single pivotX, System.Single pivotY, System.Boolean generateOutOfBounds, System.Boolean alignByGeometry, out System.UInt32 error)
    // Offset: 0x21AB244
    bool Populate_Internal(::Il2CppString* str, UnityEngine::Font* font, UnityEngine::Color color, int fontSize, float scaleFactor, float lineSpacing, UnityEngine::FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, UnityEngine::TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, uint& error);
    // System.Boolean Populate_Internal(System.String str, UnityEngine.Font font, UnityEngine.Color color, System.Int32 fontSize, System.Single scaleFactor, System.Single lineSpacing, UnityEngine.FontStyle style, System.Boolean richText, System.Boolean resizeTextForBestFit, System.Int32 resizeTextMinSize, System.Int32 resizeTextMaxSize, UnityEngine.VerticalWrapMode verticalOverFlow, UnityEngine.HorizontalWrapMode horizontalOverflow, System.Boolean updateBounds, UnityEngine.TextAnchor anchor, UnityEngine.Vector2 extents, UnityEngine.Vector2 pivot, System.Boolean generateOutOfBounds, System.Boolean alignByGeometry, out UnityEngine.TextGenerationError error)
    // Offset: 0x21AAEC4
    bool Populate_Internal(::Il2CppString* str, UnityEngine::Font* font, UnityEngine::Color color, int fontSize, float scaleFactor, float lineSpacing, UnityEngine::FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, UnityEngine::VerticalWrapMode verticalOverFlow, UnityEngine::HorizontalWrapMode horizontalOverflow, bool updateBounds, UnityEngine::TextAnchor anchor, UnityEngine::Vector2 extents, UnityEngine::Vector2 pivot, bool generateOutOfBounds, bool alignByGeometry, UnityEngine::TextGenerationError& error);
    // private System.Void GetVerticesInternal(System.Object vertices)
    // Offset: 0x21AA964
    void GetVerticesInternal(::Il2CppObject* vertices);
    // private System.Void GetCharactersInternal(System.Object characters)
    // Offset: 0x21AA824
    void GetCharactersInternal(::Il2CppObject* characters);
    // private System.Void GetLinesInternal(System.Object lines)
    // Offset: 0x21AA8C4
    void GetLinesInternal(::Il2CppObject* lines);
    // private System.Void get_rectExtents_Injected(out UnityEngine.Rect ret)
    // Offset: 0x21AB1B4
    void get_rectExtents_Injected(UnityEngine::Rect& ret);
    // private System.Boolean Populate_Internal_Injected(System.String str, UnityEngine.Font font, ref UnityEngine.Color color, System.Int32 fontSize, System.Single scaleFactor, System.Single lineSpacing, UnityEngine.FontStyle style, System.Boolean richText, System.Boolean resizeTextForBestFit, System.Int32 resizeTextMinSize, System.Int32 resizeTextMaxSize, System.Int32 verticalOverFlow, System.Int32 horizontalOverflow, System.Boolean updateBounds, UnityEngine.TextAnchor anchor, System.Single extentsX, System.Single extentsY, System.Single pivotX, System.Single pivotY, System.Boolean generateOutOfBounds, System.Boolean alignByGeometry, out System.UInt32 error)
    // Offset: 0x21AB394
    bool Populate_Internal_Injected(::Il2CppString* str, UnityEngine::Font* font, UnityEngine::Color& color, int fontSize, float scaleFactor, float lineSpacing, UnityEngine::FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, UnityEngine::TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, uint& error);
    // public System.Void .ctor()
    // Offset: 0x21AA17C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextGenerator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextGenerator*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x21AA2C0
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.TextGenerator
  #pragma pack(pop)
  static check_size<sizeof(TextGenerator), 162 + sizeof(bool)> __UnityEngine_TextGeneratorSizeCheck;
  static_assert(sizeof(TextGenerator) == 0xA3);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::TextGenerator*, "UnityEngine", "TextGenerator");
