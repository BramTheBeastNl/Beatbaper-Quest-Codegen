// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Bounds
  struct Bounds;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
  // Forward declaring type: MotionVectorGenerationMode
  struct MotionVectorGenerationMode;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ShadowCastingMode
  struct ShadowCastingMode;
  // Forward declaring type: LightProbeUsage
  struct LightProbeUsage;
  // Forward declaring type: ReflectionProbeUsage
  struct ReflectionProbeUsage;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Renderer
  // [NativeHeaderAttribute] Offset: D8EC48
  // [UsedByNativeCodeAttribute] Offset: D8EC48
  // [NativeHeaderAttribute] Offset: D8EC48
  // [RequireComponent] Offset: D8EC48
  class Renderer : public UnityEngine::Component {
    public:
    // Creating value type constructor for type: Renderer
    Renderer() noexcept {}
    // public UnityEngine.Bounds get_bounds()
    // Offset: 0x1B0EDB0
    UnityEngine::Bounds get_bounds();
    // private UnityEngine.Material GetMaterial()
    // Offset: 0x1B0EE6C
    UnityEngine::Material* GetMaterial();
    // private UnityEngine.Material GetSharedMaterial()
    // Offset: 0x1B0EEAC
    UnityEngine::Material* GetSharedMaterial();
    // private System.Void SetMaterial(UnityEngine.Material m)
    // Offset: 0x1B0EEEC
    void SetMaterial(UnityEngine::Material* m);
    // private UnityEngine.Material[] GetMaterialArray()
    // Offset: 0x1B0EF3C
    ::Array<UnityEngine::Material*>* GetMaterialArray();
    // private System.Void CopySharedMaterialArray(out UnityEngine.Material[] m)
    // Offset: 0x1B0EF7C
    void CopySharedMaterialArray(::Array<UnityEngine::Material*>*& m);
    // private System.Void SetMaterialArray(UnityEngine.Material[] m)
    // Offset: 0x1B0EFCC
    void SetMaterialArray(::Array<UnityEngine::Material*>* m);
    // System.Void Internal_SetPropertyBlock(UnityEngine.MaterialPropertyBlock properties)
    // Offset: 0x1B0F01C
    void Internal_SetPropertyBlock(UnityEngine::MaterialPropertyBlock* properties);
    // System.Void Internal_SetPropertyBlockMaterialIndex(UnityEngine.MaterialPropertyBlock properties, System.Int32 materialIndex)
    // Offset: 0x1B0F06C
    void Internal_SetPropertyBlockMaterialIndex(UnityEngine::MaterialPropertyBlock* properties, int materialIndex);
    // public System.Void SetPropertyBlock(UnityEngine.MaterialPropertyBlock properties)
    // Offset: 0x1B0F0C4
    void SetPropertyBlock(UnityEngine::MaterialPropertyBlock* properties);
    // public System.Void SetPropertyBlock(UnityEngine.MaterialPropertyBlock properties, System.Int32 materialIndex)
    // Offset: 0x1B0F114
    void SetPropertyBlock(UnityEngine::MaterialPropertyBlock* properties, int materialIndex);
    // public System.Boolean get_enabled()
    // Offset: 0x1B0F16C
    bool get_enabled();
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x1B0F1AC
    void set_enabled(bool value);
    // public System.Boolean get_isVisible()
    // Offset: 0x1B0F1FC
    bool get_isVisible();
    // public System.Void set_shadowCastingMode(UnityEngine.Rendering.ShadowCastingMode value)
    // Offset: 0x1B0F23C
    void set_shadowCastingMode(UnityEngine::Rendering::ShadowCastingMode value);
    // public System.Void set_receiveShadows(System.Boolean value)
    // Offset: 0x1B0F28C
    void set_receiveShadows(bool value);
    // public System.Void set_motionVectorGenerationMode(UnityEngine.MotionVectorGenerationMode value)
    // Offset: 0x1B0F2DC
    void set_motionVectorGenerationMode(UnityEngine::MotionVectorGenerationMode value);
    // public System.Void set_lightProbeUsage(UnityEngine.Rendering.LightProbeUsage value)
    // Offset: 0x1B0F32C
    void set_lightProbeUsage(UnityEngine::Rendering::LightProbeUsage value);
    // public System.Void set_reflectionProbeUsage(UnityEngine.Rendering.ReflectionProbeUsage value)
    // Offset: 0x1B0F37C
    void set_reflectionProbeUsage(UnityEngine::Rendering::ReflectionProbeUsage value);
    // public System.Int32 get_sortingLayerID()
    // Offset: 0x1B0F3CC
    int get_sortingLayerID();
    // public System.Void set_sortingLayerID(System.Int32 value)
    // Offset: 0x1B0F40C
    void set_sortingLayerID(int value);
    // public System.Int32 get_sortingOrder()
    // Offset: 0x1B0F45C
    int get_sortingOrder();
    // public System.Void set_sortingOrder(System.Int32 value)
    // Offset: 0x1B0F49C
    void set_sortingOrder(int value);
    // public System.Void set_allowOcclusionWhenDynamic(System.Boolean value)
    // Offset: 0x1B0F4EC
    void set_allowOcclusionWhenDynamic(bool value);
    // public System.Boolean get_isPartOfStaticBatch()
    // Offset: 0x1B0F53C
    bool get_isPartOfStaticBatch();
    // private System.Int32 GetMaterialCount()
    // Offset: 0x1B0F57C
    int GetMaterialCount();
    // private UnityEngine.Material[] GetSharedMaterialArray()
    // Offset: 0x1B0F5BC
    ::Array<UnityEngine::Material*>* GetSharedMaterialArray();
    // public UnityEngine.Material[] get_materials()
    // Offset: 0x1B0F5FC
    ::Array<UnityEngine::Material*>* get_materials();
    // public System.Void set_materials(UnityEngine.Material[] value)
    // Offset: 0x1B0F63C
    void set_materials(::Array<UnityEngine::Material*>* value);
    // public UnityEngine.Material get_material()
    // Offset: 0x1B0F68C
    UnityEngine::Material* get_material();
    // public System.Void set_material(UnityEngine.Material value)
    // Offset: 0x1B0F6CC
    void set_material(UnityEngine::Material* value);
    // public UnityEngine.Material get_sharedMaterial()
    // Offset: 0x1B0F71C
    UnityEngine::Material* get_sharedMaterial();
    // public System.Void set_sharedMaterial(UnityEngine.Material value)
    // Offset: 0x1B0F75C
    void set_sharedMaterial(UnityEngine::Material* value);
    // public UnityEngine.Material[] get_sharedMaterials()
    // Offset: 0x1B0F7AC
    ::Array<UnityEngine::Material*>* get_sharedMaterials();
    // public System.Void set_sharedMaterials(UnityEngine.Material[] value)
    // Offset: 0x1B0F7EC
    void set_sharedMaterials(::Array<UnityEngine::Material*>* value);
    // public System.Void GetSharedMaterials(System.Collections.Generic.List`1<UnityEngine.Material> m)
    // Offset: 0x1B0F83C
    void GetSharedMaterials(System::Collections::Generic::List_1<UnityEngine::Material*>* m);
    // private System.Void get_bounds_Injected(out UnityEngine.Bounds ret)
    // Offset: 0x1B0EE1C
    void get_bounds_Injected(UnityEngine::Bounds& ret);
    // public System.Void .ctor()
    // Offset: 0x1B0F954
    // Implemented from: UnityEngine.Component
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Renderer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Renderer*, creationType>()));
    }
  }; // UnityEngine.Renderer
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Renderer*, "UnityEngine", "Renderer");
