// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: OperatingSystemFamily
  struct OperatingSystemFamily;
  // Forward declaring type: DeviceType
  struct DeviceType;
  // Forward declaring type: RenderTextureFormat
  struct RenderTextureFormat;
  // Forward declaring type: TextureFormat
  struct TextureFormat;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: GraphicsDeviceType
  struct GraphicsDeviceType;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Enum
  class Enum;
}
// Forward declaring namespace: UnityEngine::Experimental::Rendering
namespace UnityEngine::Experimental::Rendering {
  // Forward declaring type: GraphicsFormat
  struct GraphicsFormat;
  // Forward declaring type: FormatUsage
  struct FormatUsage;
  // Forward declaring type: DefaultFormat
  struct DefaultFormat;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.SystemInfo
  // [NativeHeaderAttribute] Offset: D908DC
  // [NativeHeaderAttribute] Offset: D908DC
  // [NativeHeaderAttribute] Offset: D908DC
  // [NativeHeaderAttribute] Offset: D908DC
  // [NativeHeaderAttribute] Offset: D908DC
  // [NativeHeaderAttribute] Offset: D908DC
  class SystemInfo : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: SystemInfo
    SystemInfo() noexcept {}
    // static public UnityEngine.OperatingSystemFamily get_operatingSystemFamily()
    // Offset: 0x2318244
    static UnityEngine::OperatingSystemFamily get_operatingSystemFamily();
    // static public UnityEngine.DeviceType get_deviceType()
    // Offset: 0x23182AC
    static UnityEngine::DeviceType get_deviceType();
    // static public UnityEngine.Rendering.GraphicsDeviceType get_graphicsDeviceType()
    // Offset: 0x2318314
    static UnityEngine::Rendering::GraphicsDeviceType get_graphicsDeviceType();
    // static public System.String get_graphicsDeviceVersion()
    // Offset: 0x231837C
    static ::Il2CppString* get_graphicsDeviceVersion();
    // static public System.Boolean get_supportsInstancing()
    // Offset: 0x23183E4
    static bool get_supportsInstancing();
    // static public System.Boolean get_usesReversedZBuffer()
    // Offset: 0x231844C
    static bool get_usesReversedZBuffer();
    // static private System.Boolean IsValidEnumValue(System.Enum value)
    // Offset: 0x23184B4
    static bool IsValidEnumValue(System::Enum* value);
    // static public System.Boolean SupportsRenderTextureFormat(UnityEngine.RenderTextureFormat format)
    // Offset: 0x231853C
    static bool SupportsRenderTextureFormat(UnityEngine::RenderTextureFormat format);
    // static public System.Boolean SupportsTextureFormat(UnityEngine.TextureFormat format)
    // Offset: 0x231864C
    static bool SupportsTextureFormat(UnityEngine::TextureFormat format);
    // static private UnityEngine.OperatingSystemFamily GetOperatingSystemFamily()
    // Offset: 0x2318278
    static UnityEngine::OperatingSystemFamily GetOperatingSystemFamily();
    // static private UnityEngine.DeviceType GetDeviceType()
    // Offset: 0x23182E0
    static UnityEngine::DeviceType GetDeviceType();
    // static private UnityEngine.Rendering.GraphicsDeviceType GetGraphicsDeviceType()
    // Offset: 0x2318348
    static UnityEngine::Rendering::GraphicsDeviceType GetGraphicsDeviceType();
    // static private System.String GetGraphicsDeviceVersion()
    // Offset: 0x23183B0
    static ::Il2CppString* GetGraphicsDeviceVersion();
    // static private System.Boolean SupportsInstancing()
    // Offset: 0x2318418
    static bool SupportsInstancing();
    // static private System.Boolean UsesReversedZBuffer()
    // Offset: 0x2318480
    static bool UsesReversedZBuffer();
    // static private System.Boolean HasRenderTextureNative(UnityEngine.RenderTextureFormat format)
    // Offset: 0x231860C
    static bool HasRenderTextureNative(UnityEngine::RenderTextureFormat format);
    // static private System.Boolean SupportsTextureFormatNative(UnityEngine.TextureFormat format)
    // Offset: 0x231871C
    static bool SupportsTextureFormatNative(UnityEngine::TextureFormat format);
    // static public System.Boolean IsFormatSupported(UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.FormatUsage usage)
    // Offset: 0x231875C
    static bool IsFormatSupported(UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::FormatUsage usage);
    // static public UnityEngine.Experimental.Rendering.GraphicsFormat GetCompatibleFormat(UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.FormatUsage usage)
    // Offset: 0x23187AC
    static UnityEngine::Experimental::Rendering::GraphicsFormat GetCompatibleFormat(UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::FormatUsage usage);
    // static public UnityEngine.Experimental.Rendering.GraphicsFormat GetGraphicsFormat(UnityEngine.Experimental.Rendering.DefaultFormat format)
    // Offset: 0x23187FC
    static UnityEngine::Experimental::Rendering::GraphicsFormat GetGraphicsFormat(UnityEngine::Experimental::Rendering::DefaultFormat format);
  }; // UnityEngine.SystemInfo
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::SystemInfo*, "UnityEngine", "SystemInfo");
// Writing MetadataGetter for method: SystemInfo::get_operatingSystemFamily
// Il2CppName: get_operatingSystemFamily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::OperatingSystemFamily (*)()>(&SystemInfo::get_operatingSystemFamily)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "get_operatingSystemFamily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::get_deviceType
// Il2CppName: get_deviceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::DeviceType (*)()>(&SystemInfo::get_deviceType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "get_deviceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::get_graphicsDeviceType
// Il2CppName: get_graphicsDeviceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::GraphicsDeviceType (*)()>(&SystemInfo::get_graphicsDeviceType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "get_graphicsDeviceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::get_graphicsDeviceVersion
// Il2CppName: get_graphicsDeviceVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&SystemInfo::get_graphicsDeviceVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "get_graphicsDeviceVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::get_supportsInstancing
// Il2CppName: get_supportsInstancing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&SystemInfo::get_supportsInstancing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "get_supportsInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::get_usesReversedZBuffer
// Il2CppName: get_usesReversedZBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&SystemInfo::get_usesReversedZBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "get_usesReversedZBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::IsValidEnumValue
// Il2CppName: IsValidEnumValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Enum*)>(&SystemInfo::IsValidEnumValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "IsValidEnumValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Enum*>()});
  }
};
// Writing MetadataGetter for method: SystemInfo::SupportsRenderTextureFormat
// Il2CppName: SupportsRenderTextureFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::RenderTextureFormat)>(&SystemInfo::SupportsRenderTextureFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "SupportsRenderTextureFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>()});
  }
};
// Writing MetadataGetter for method: SystemInfo::SupportsTextureFormat
// Il2CppName: SupportsTextureFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::TextureFormat)>(&SystemInfo::SupportsTextureFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "SupportsTextureFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>()});
  }
};
// Writing MetadataGetter for method: SystemInfo::GetOperatingSystemFamily
// Il2CppName: GetOperatingSystemFamily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::OperatingSystemFamily (*)()>(&SystemInfo::GetOperatingSystemFamily)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "GetOperatingSystemFamily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::GetDeviceType
// Il2CppName: GetDeviceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::DeviceType (*)()>(&SystemInfo::GetDeviceType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "GetDeviceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::GetGraphicsDeviceType
// Il2CppName: GetGraphicsDeviceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::GraphicsDeviceType (*)()>(&SystemInfo::GetGraphicsDeviceType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "GetGraphicsDeviceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::GetGraphicsDeviceVersion
// Il2CppName: GetGraphicsDeviceVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&SystemInfo::GetGraphicsDeviceVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "GetGraphicsDeviceVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::SupportsInstancing
// Il2CppName: SupportsInstancing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&SystemInfo::SupportsInstancing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "SupportsInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::UsesReversedZBuffer
// Il2CppName: UsesReversedZBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&SystemInfo::UsesReversedZBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "UsesReversedZBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemInfo::HasRenderTextureNative
// Il2CppName: HasRenderTextureNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::RenderTextureFormat)>(&SystemInfo::HasRenderTextureNative)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "HasRenderTextureNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>()});
  }
};
// Writing MetadataGetter for method: SystemInfo::SupportsTextureFormatNative
// Il2CppName: SupportsTextureFormatNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::TextureFormat)>(&SystemInfo::SupportsTextureFormatNative)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "SupportsTextureFormatNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>()});
  }
};
// Writing MetadataGetter for method: SystemInfo::IsFormatSupported
// Il2CppName: IsFormatSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::FormatUsage)>(&SystemInfo::IsFormatSupported)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "IsFormatSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::FormatUsage>()});
  }
};
// Writing MetadataGetter for method: SystemInfo::GetCompatibleFormat
// Il2CppName: GetCompatibleFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Experimental::Rendering::GraphicsFormat (*)(UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::FormatUsage)>(&SystemInfo::GetCompatibleFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "GetCompatibleFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::FormatUsage>()});
  }
};
// Writing MetadataGetter for method: SystemInfo::GetGraphicsFormat
// Il2CppName: GetGraphicsFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Experimental::Rendering::GraphicsFormat (*)(UnityEngine::Experimental::Rendering::DefaultFormat)>(&SystemInfo::GetGraphicsFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemInfo*), "GetGraphicsFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>()});
  }
};
