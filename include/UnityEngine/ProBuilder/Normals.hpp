// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: ProBuilderMesh
  class ProBuilderMesh;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder
namespace UnityEngine::ProBuilder {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ProBuilder.Normals
  class Normals : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Normals
    Normals() noexcept {}
    // Get static field: static private UnityEngine.Vector3[] s_SmoothAvg
    static ::Array<UnityEngine::Vector3>* _get_s_SmoothAvg();
    // Set static field: static private UnityEngine.Vector3[] s_SmoothAvg
    static void _set_s_SmoothAvg(::Array<UnityEngine::Vector3>* value);
    // Get static field: static private System.Single[] s_SmoothAvgCount
    static ::Array<float>* _get_s_SmoothAvgCount();
    // Set static field: static private System.Single[] s_SmoothAvgCount
    static void _set_s_SmoothAvgCount(::Array<float>* value);
    // Get static field: static private System.Int32[] s_CachedIntArray
    static ::Array<int>* _get_s_CachedIntArray();
    // Set static field: static private System.Int32[] s_CachedIntArray
    static void _set_s_CachedIntArray(::Array<int>* value);
    // static private System.Void ClearIntArray(System.Int32 count)
    // Offset: 0x171AC28
    static void ClearIntArray(int count);
    // static public System.Void CalculateTangents(UnityEngine.ProBuilder.ProBuilderMesh mesh)
    // Offset: 0x171AD4C
    static void CalculateTangents(UnityEngine::ProBuilder::ProBuilderMesh* mesh);
    // static private System.Void CalculateHardNormals(UnityEngine.ProBuilder.ProBuilderMesh mesh)
    // Offset: 0x171B3A0
    static void CalculateHardNormals(UnityEngine::ProBuilder::ProBuilderMesh* mesh);
    // static public System.Void CalculateNormals(UnityEngine.ProBuilder.ProBuilderMesh mesh)
    // Offset: 0x171B8CC
    static void CalculateNormals(UnityEngine::ProBuilder::ProBuilderMesh* mesh);
    // static private System.Void .cctor()
    // Offset: 0x171BFDC
    static void _cctor();
  }; // UnityEngine.ProBuilder.Normals
  #pragma pack(pop)
  // Writing MetadataGetter for method: Normals::ClearIntArray
  // Il2CppName: ClearIntArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Normals::ClearIntArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Normals*), "ClearIntArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Normals::CalculateTangents
  // Il2CppName: CalculateTangents
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::ProBuilder::ProBuilderMesh*)>(&Normals::CalculateTangents)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Normals*), "CalculateTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ProBuilder::ProBuilderMesh*>()});
    }
  };
  // Writing MetadataGetter for method: Normals::CalculateHardNormals
  // Il2CppName: CalculateHardNormals
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::ProBuilder::ProBuilderMesh*)>(&Normals::CalculateHardNormals)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Normals*), "CalculateHardNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ProBuilder::ProBuilderMesh*>()});
    }
  };
  // Writing MetadataGetter for method: Normals::CalculateNormals
  // Il2CppName: CalculateNormals
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::ProBuilder::ProBuilderMesh*)>(&Normals::CalculateNormals)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Normals*), "CalculateNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ProBuilder::ProBuilderMesh*>()});
    }
  };
  // Writing MetadataGetter for method: Normals::_cctor
  // Il2CppName: .cctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Normals::_cctor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Normals*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ProBuilder::Normals*, "UnityEngine.ProBuilder", "Normals");
