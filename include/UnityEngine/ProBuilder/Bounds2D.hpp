// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Rect
  struct Rect;
}
// Forward declaring namespace: UnityEngine::ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: Edge
  struct Edge;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder
namespace UnityEngine::ProBuilder {
  // Autogenerated type: UnityEngine.ProBuilder.Bounds2D
  class Bounds2D : public ::Il2CppObject {
    public:
    // public UnityEngine.Vector2 center
    // Offset: 0x10
    UnityEngine::Vector2 center;
    // private UnityEngine.Vector2 m_Size
    // Offset: 0x18
    UnityEngine::Vector2 m_Size;
    // private UnityEngine.Vector2 m_Extents
    // Offset: 0x20
    UnityEngine::Vector2 m_Extents;
    // public UnityEngine.Vector2 get_size()
    // Offset: 0x1D8F45C
    UnityEngine::Vector2 get_size();
    // public System.Void set_size(UnityEngine.Vector2 value)
    // Offset: 0x1D8F464
    void set_size(UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_extents()
    // Offset: 0x1D8F47C
    UnityEngine::Vector2 get_extents();
    // public UnityEngine.Vector2[] get_corners()
    // Offset: 0x1D8F484
    ::Array<UnityEngine::Vector2>* get_corners();
    // public System.Void .ctor(UnityEngine.Vector2 center, UnityEngine.Vector2 size)
    // Offset: 0x1D8F654
    static Bounds2D* New_ctor(UnityEngine::Vector2 center, UnityEngine::Vector2 size);
    // public System.Void .ctor(System.Collections.Generic.IList`1<UnityEngine.Vector2> points)
    // Offset: 0x1D8F71C
    static Bounds2D* New_ctor(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points);
    // public System.Void .ctor(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Int32> indexes)
    // Offset: 0x1D8FADC
    static Bounds2D* New_ctor(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points, System::Collections::Generic::IList_1<int>* indexes);
    // System.Void .ctor(UnityEngine.Vector3[] points, UnityEngine.ProBuilder.Edge[] edges)
    // Offset: 0x1D90124
    static Bounds2D* New_ctor(::Array<UnityEngine::Vector3>* points, ::Array<UnityEngine::ProBuilder::Edge>* edges);
    // public System.Void .ctor(UnityEngine.Vector2[] points, System.Int32 length)
    // Offset: 0x1D904B8
    static Bounds2D* New_ctor(::Array<UnityEngine::Vector2>* points, int length);
    // public System.Boolean ContainsPoint(UnityEngine.Vector2 point)
    // Offset: 0x1D90720
    bool ContainsPoint(UnityEngine::Vector2 point);
    // public System.Boolean IntersectsLineSegment(UnityEngine.Vector2 lineStart, UnityEngine.Vector2 lineEnd)
    // Offset: 0x1D90774
    bool IntersectsLineSegment(UnityEngine::Vector2 lineStart, UnityEngine::Vector2 lineEnd);
    // public System.Boolean Intersects(UnityEngine.ProBuilder.Bounds2D bounds)
    // Offset: 0x1D9090C
    bool Intersects(UnityEngine::ProBuilder::Bounds2D* bounds);
    // public System.Boolean Intersects(UnityEngine.Rect rect)
    // Offset: 0x1D90A34
    bool Intersects(UnityEngine::Rect rect);
    // public System.Void SetWithPoints(System.Collections.Generic.IList`1<UnityEngine.Vector2> points)
    // Offset: 0x1D8F7C0
    void SetWithPoints(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points);
    // public System.Void SetWithPoints(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Int32> indexes)
    // Offset: 0x1D8FB88
    void SetWithPoints(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points, System::Collections::Generic::IList_1<int>* indexes);
    // static public UnityEngine.Vector2 Center(System.Collections.Generic.IList`1<UnityEngine.Vector2> points)
    // Offset: 0x1D90B7C
    static UnityEngine::Vector2 Center(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points);
    // static public UnityEngine.Vector2 Center(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Int32> indexes)
    // Offset: 0x1D90E68
    static UnityEngine::Vector2 Center(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points, System::Collections::Generic::IList_1<int>* indexes);
    // static public UnityEngine.Vector2 Size(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Int32> indexes)
    // Offset: 0x1D9131C
    static UnityEngine::Vector2 Size(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points, System::Collections::Generic::IList_1<int>* indexes);
    // static UnityEngine.Vector2 Center(System.Collections.Generic.IList`1<UnityEngine.Vector4> points, System.Collections.Generic.IEnumerable`1<System.Int32> indexes)
    // Offset: 0x1D917C4
    static UnityEngine::Vector2 Center(System::Collections::Generic::IList_1<UnityEngine::Vector4>* points, System::Collections::Generic::IEnumerable_1<int>* indexes);
    // public System.Void .ctor()
    // Offset: 0x1D8F5C8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static Bounds2D* New_ctor();
    // public override System.String ToString()
    // Offset: 0x1D91CB8
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // UnityEngine.ProBuilder.Bounds2D
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ProBuilder::Bounds2D*, "UnityEngine.ProBuilder", "Bounds2D");
#pragma pack(pop)
