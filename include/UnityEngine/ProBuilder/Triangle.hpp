// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: UnityEngine::ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: Edge
  struct Edge;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.ProBuilder
namespace UnityEngine::ProBuilder {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.ProBuilder.Triangle
  struct Triangle/*, public System::ValueType, public System::IEquatable_1<UnityEngine::ProBuilder::Triangle>*/ {
    public:
    // private System.Int32 m_A
    // Size: 0x4
    // Offset: 0x0
    int m_A;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_B
    // Size: 0x4
    // Offset: 0x4
    int m_B;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_C
    // Size: 0x4
    // Offset: 0x8
    int m_C;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: Triangle
    constexpr Triangle(int m_A_ = {}, int m_B_ = {}, int m_C_ = {}) noexcept : m_A{m_A_}, m_B{m_B_}, m_C{m_C_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator System::IEquatable_1<UnityEngine::ProBuilder::Triangle>
    operator System::IEquatable_1<UnityEngine::ProBuilder::Triangle>() noexcept {
      return *reinterpret_cast<System::IEquatable_1<UnityEngine::ProBuilder::Triangle>*>(this);
    }
    // public System.Int32 get_a()
    // Offset: 0xF191E0
    int get_a();
    // public System.Int32 get_b()
    // Offset: 0xF191E8
    int get_b();
    // public System.Int32 get_c()
    // Offset: 0xF191F0
    int get_c();
    // public System.Collections.Generic.IEnumerable`1<System.Int32> get_indices()
    // Offset: 0xF191F8
    System::Collections::Generic::IEnumerable_1<int>* get_indices();
    // public System.Void .ctor(System.Int32 a, System.Int32 b, System.Int32 c)
    // Offset: 0xF19200
    // template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    // ABORTED: conflicts with another method.  Triangle(int a, int b, int c)
    // public System.Boolean Equals(UnityEngine.ProBuilder.Triangle other)
    // Offset: 0xF1920C
    bool Equals(UnityEngine::ProBuilder::Triangle other);
    // public System.Boolean IsAdjacent(UnityEngine.ProBuilder.Triangle other)
    // Offset: 0xF19268
    bool IsAdjacent(UnityEngine::ProBuilder::Triangle other);
    // private System.Boolean ContainsEdge(UnityEngine.ProBuilder.Edge edge)
    // Offset: 0xF19274
    bool ContainsEdge(UnityEngine::ProBuilder::Edge edge);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xF19240
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0xF19248
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.ProBuilder.Triangle
  #pragma pack(pop)
  static check_size<sizeof(Triangle), 8 + sizeof(int)> __UnityEngine_ProBuilder_TriangleSizeCheck;
  static_assert(sizeof(Triangle) == 0xC);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ProBuilder::Triangle, "UnityEngine.ProBuilder", "Triangle");
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::get_a
// Il2CppName: get_a
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::get_b
// Il2CppName: get_b
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::get_c
// Il2CppName: get_c
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::get_indices
// Il2CppName: get_indices
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::Triangle
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::Equals
// Il2CppName: Equals
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::IsAdjacent
// Il2CppName: IsAdjacent
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::ContainsEdge
// Il2CppName: ContainsEdge
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::Equals
// Il2CppName: Equals
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::Triangle::GetHashCode
// Il2CppName: GetHashCode
// Cannot perform method pointer template specialization from operators!
