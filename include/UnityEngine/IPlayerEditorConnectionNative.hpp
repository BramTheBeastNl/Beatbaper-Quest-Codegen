// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Guid
  struct Guid;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
template<class T>
struct Array;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.IPlayerEditorConnectionNative
  class IPlayerEditorConnectionNative {
    public:
    // Creating value type constructor for type: IPlayerEditorConnectionNative
    IPlayerEditorConnectionNative() noexcept {}
    // public System.Void Initialize()
    // Offset: 0xFFFFFFFF
    void Initialize();
    // public System.Void DisconnectAll()
    // Offset: 0xFFFFFFFF
    void DisconnectAll();
    // public System.Void SendMessage(System.Guid messageId, System.Byte[] data, System.Int32 playerId)
    // Offset: 0xFFFFFFFF
    void SendMessage(System::Guid messageId, ::Array<uint8_t>* data, int playerId);
    // public System.Boolean TrySendMessage(System.Guid messageId, System.Byte[] data, System.Int32 playerId)
    // Offset: 0xFFFFFFFF
    bool TrySendMessage(System::Guid messageId, ::Array<uint8_t>* data, int playerId);
    // public System.Void Poll()
    // Offset: 0xFFFFFFFF
    void Poll();
    // public System.Void RegisterInternal(System.Guid messageId)
    // Offset: 0xFFFFFFFF
    void RegisterInternal(System::Guid messageId);
    // public System.Void UnregisterInternal(System.Guid messageId)
    // Offset: 0xFFFFFFFF
    void UnregisterInternal(System::Guid messageId);
    // public System.Boolean IsConnected()
    // Offset: 0xFFFFFFFF
    bool IsConnected();
  }; // UnityEngine.IPlayerEditorConnectionNative
  #pragma pack(pop)
  // Writing MetadataGetter for method: IPlayerEditorConnectionNative::Initialize
  // Il2CppName: Initialize
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPlayerEditorConnectionNative::*)()>(&IPlayerEditorConnectionNative::Initialize)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPlayerEditorConnectionNative*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: IPlayerEditorConnectionNative::DisconnectAll
  // Il2CppName: DisconnectAll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPlayerEditorConnectionNative::*)()>(&IPlayerEditorConnectionNative::DisconnectAll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPlayerEditorConnectionNative*), "DisconnectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: IPlayerEditorConnectionNative::SendMessage
  // Il2CppName: SendMessage
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPlayerEditorConnectionNative::*)(System::Guid, ::Array<uint8_t>*, int)>(&IPlayerEditorConnectionNative::SendMessage)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPlayerEditorConnectionNative*), "SendMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: IPlayerEditorConnectionNative::TrySendMessage
  // Il2CppName: TrySendMessage
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IPlayerEditorConnectionNative::*)(System::Guid, ::Array<uint8_t>*, int)>(&IPlayerEditorConnectionNative::TrySendMessage)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPlayerEditorConnectionNative*), "TrySendMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: IPlayerEditorConnectionNative::Poll
  // Il2CppName: Poll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPlayerEditorConnectionNative::*)()>(&IPlayerEditorConnectionNative::Poll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPlayerEditorConnectionNative*), "Poll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: IPlayerEditorConnectionNative::RegisterInternal
  // Il2CppName: RegisterInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPlayerEditorConnectionNative::*)(System::Guid)>(&IPlayerEditorConnectionNative::RegisterInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPlayerEditorConnectionNative*), "RegisterInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>()});
    }
  };
  // Writing MetadataGetter for method: IPlayerEditorConnectionNative::UnregisterInternal
  // Il2CppName: UnregisterInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPlayerEditorConnectionNative::*)(System::Guid)>(&IPlayerEditorConnectionNative::UnregisterInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPlayerEditorConnectionNative*), "UnregisterInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>()});
    }
  };
  // Writing MetadataGetter for method: IPlayerEditorConnectionNative::IsConnected
  // Il2CppName: IsConnected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IPlayerEditorConnectionNative::*)()>(&IPlayerEditorConnectionNative::IsConnected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPlayerEditorConnectionNative*), "IsConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::IPlayerEditorConnectionNative*, "UnityEngine", "IPlayerEditorConnectionNative");
