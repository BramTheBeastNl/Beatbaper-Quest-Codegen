// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Experimental.Rendering.GraphicsFormat
#include "UnityEngine/Experimental/Rendering/GraphicsFormat.hpp"
// Including type: UnityEngine.Experimental.Rendering.TextureCreationFlags
#include "UnityEngine/Experimental/Rendering/TextureCreationFlags.hpp"
// Including type: UnityEngine.Experimental.Rendering.DefaultFormat
#include "UnityEngine/Experimental/Rendering/DefaultFormat.hpp"
// Including type: UnityEngine.TextureFormat
#include "UnityEngine/TextureFormat.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Texture2D
  // [UsedByNativeCodeAttribute] Offset: D8F1EC
  // [NativeHeaderAttribute] Offset: D8F1EC
  // [NativeHeaderAttribute] Offset: D8F1EC
  class Texture2D : public UnityEngine::Texture {
    public:
    // Creating value type constructor for type: Texture2D
    Texture2D() noexcept {}
    // public UnityEngine.TextureFormat get_format()
    // Offset: 0x2319298
    UnityEngine::TextureFormat get_format();
    // static public UnityEngine.Texture2D get_whiteTexture()
    // Offset: 0x23192D8
    static UnityEngine::Texture2D* get_whiteTexture();
    // static public UnityEngine.Texture2D get_blackTexture()
    // Offset: 0x231930C
    static UnityEngine::Texture2D* get_blackTexture();
    // static public UnityEngine.Texture2D get_redTexture()
    // Offset: 0x2319340
    static UnityEngine::Texture2D* get_redTexture();
    // static public UnityEngine.Texture2D get_grayTexture()
    // Offset: 0x2319374
    static UnityEngine::Texture2D* get_grayTexture();
    // static public UnityEngine.Texture2D get_linearGrayTexture()
    // Offset: 0x23193A8
    static UnityEngine::Texture2D* get_linearGrayTexture();
    // static public UnityEngine.Texture2D get_normalTexture()
    // Offset: 0x23193DC
    static UnityEngine::Texture2D* get_normalTexture();
    // public System.Void Compress(System.Boolean highQuality)
    // Offset: 0x2319410
    void Compress(bool highQuality);
    // static private System.Boolean Internal_CreateImpl(UnityEngine.Texture2D mono, System.Int32 w, System.Int32 h, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.IntPtr nativeTex)
    // Offset: 0x2319460
    static bool Internal_CreateImpl(UnityEngine::Texture2D* mono, int w, int h, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags, System::IntPtr nativeTex);
    // static private System.Void Internal_Create(UnityEngine.Texture2D mono, System.Int32 w, System.Int32 h, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.IntPtr nativeTex)
    // Offset: 0x23194E8
    static void Internal_Create(UnityEngine::Texture2D* mono, int w, int h, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags, System::IntPtr nativeTex);
    // private System.Void ApplyImpl(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)
    // Offset: 0x2319614
    void ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable);
    // private System.Boolean ResizeImpl(System.Int32 width, System.Int32 height)
    // Offset: 0x231966C
    bool ResizeImpl(int width, int height);
    // private System.Void SetPixelImpl(System.Int32 image, System.Int32 x, System.Int32 y, UnityEngine.Color color)
    // Offset: 0x23196C4
    void SetPixelImpl(int image, int x, int y, UnityEngine::Color color);
    // private UnityEngine.Color GetPixelImpl(System.Int32 image, System.Int32 x, System.Int32 y)
    // Offset: 0x23197B4
    UnityEngine::Color GetPixelImpl(int image, int x, int y);
    // private UnityEngine.Color GetPixelBilinearImpl(System.Int32 image, System.Single u, System.Single v)
    // Offset: 0x23198A8
    UnityEngine::Color GetPixelBilinearImpl(int image, float u, float v);
    // private System.Boolean ResizeWithFormatImpl(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat format, System.Boolean hasMipMap)
    // Offset: 0x231999C
    bool ResizeWithFormatImpl(int width, int height, UnityEngine::TextureFormat format, bool hasMipMap);
    // private System.Void ReadPixelsImpl(UnityEngine.Rect source, System.Int32 destX, System.Int32 destY, System.Boolean recalculateMipMaps)
    // Offset: 0x2319A0C
    void ReadPixelsImpl(UnityEngine::Rect source, int destX, int destY, bool recalculateMipMaps);
    // private System.Void SetPixelsImpl(System.Int32 x, System.Int32 y, System.Int32 w, System.Int32 h, UnityEngine.Color[] pixel, System.Int32 miplevel, System.Int32 frame)
    // Offset: 0x2319AFC
    void SetPixelsImpl(int x, int y, int w, int h, ::Array<UnityEngine::Color>* pixel, int miplevel, int frame);
    // private System.Boolean LoadRawTextureDataImpl(System.IntPtr data, System.Int32 size)
    // Offset: 0x2319B94
    bool LoadRawTextureDataImpl(System::IntPtr data, int size);
    // private System.Boolean LoadRawTextureDataImplArray(System.Byte[] data)
    // Offset: 0x2319BEC
    bool LoadRawTextureDataImplArray(::Array<uint8_t>* data);
    // private System.Boolean SetPixelDataImplArray(System.Array data, System.Int32 mipLevel, System.Int32 elementSize, System.Int32 dataArraySize, System.Int32 sourceDataStartIndex)
    // Offset: 0x2319C3C
    bool SetPixelDataImplArray(System::Array* data, int mipLevel, int elementSize, int dataArraySize, int sourceDataStartIndex);
    // private System.Boolean SetPixelDataImpl(System.IntPtr data, System.Int32 mipLevel, System.Int32 elementSize, System.Int32 dataArraySize, System.Int32 sourceDataStartIndex)
    // Offset: 0x2319CBC
    bool SetPixelDataImpl(System::IntPtr data, int mipLevel, int elementSize, int dataArraySize, int sourceDataStartIndex);
    // private System.IntPtr GetWritableImageData(System.Int32 frame)
    // Offset: 0x2319D3C
    System::IntPtr GetWritableImageData(int frame);
    // private System.Int64 GetRawImageDataSize()
    // Offset: 0x2319D8C
    int64_t GetRawImageDataSize();
    // static private System.Void GenerateAtlasImpl(UnityEngine.Vector2[] sizes, System.Int32 padding, System.Int32 atlasSize, out UnityEngine.Rect[] rect)
    // Offset: 0x2319DCC
    static void GenerateAtlasImpl(::Array<UnityEngine::Vector2>* sizes, int padding, int atlasSize, ::Array<UnityEngine::Rect>*& rect);
    // System.Boolean get_isPreProcessed()
    // Offset: 0x2319E34
    bool get_isPreProcessed();
    // public System.Boolean get_streamingMipmaps()
    // Offset: 0x2319E74
    bool get_streamingMipmaps();
    // public System.Int32 get_streamingMipmapsPriority()
    // Offset: 0x2319EB4
    int get_streamingMipmapsPriority();
    // public System.Int32 get_requestedMipmapLevel()
    // Offset: 0x2319EF4
    int get_requestedMipmapLevel();
    // public System.Void set_requestedMipmapLevel(System.Int32 value)
    // Offset: 0x2319F34
    void set_requestedMipmapLevel(int value);
    // public System.Int32 get_minimumMipmapLevel()
    // Offset: 0x2319F84
    int get_minimumMipmapLevel();
    // public System.Void set_minimumMipmapLevel(System.Int32 value)
    // Offset: 0x2319FC4
    void set_minimumMipmapLevel(int value);
    // System.Boolean get_loadAllMips()
    // Offset: 0x231A014
    bool get_loadAllMips();
    // System.Void set_loadAllMips(System.Boolean value)
    // Offset: 0x231A054
    void set_loadAllMips(bool value);
    // public System.Int32 get_calculatedMipmapLevel()
    // Offset: 0x231A0A4
    int get_calculatedMipmapLevel();
    // public System.Int32 get_desiredMipmapLevel()
    // Offset: 0x231A0E4
    int get_desiredMipmapLevel();
    // public System.Int32 get_loadingMipmapLevel()
    // Offset: 0x231A124
    int get_loadingMipmapLevel();
    // public System.Int32 get_loadedMipmapLevel()
    // Offset: 0x231A164
    int get_loadedMipmapLevel();
    // public System.Void ClearRequestedMipmapLevel()
    // Offset: 0x231A1A4
    void ClearRequestedMipmapLevel();
    // public System.Boolean IsRequestedMipmapLevelLoaded()
    // Offset: 0x231A1E4
    bool IsRequestedMipmapLevelLoaded();
    // public System.Void ClearMinimumMipmapLevel()
    // Offset: 0x231A224
    void ClearMinimumMipmapLevel();
    // public System.Void UpdateExternalTexture(System.IntPtr nativeTex)
    // Offset: 0x231A264
    void UpdateExternalTexture(System::IntPtr nativeTex);
    // private System.Void SetAllPixels32(UnityEngine.Color32[] colors, System.Int32 miplevel)
    // Offset: 0x231A2B4
    void SetAllPixels32(::Array<UnityEngine::Color32>* colors, int miplevel);
    // private System.Void SetBlockOfPixels32(System.Int32 x, System.Int32 y, System.Int32 blockWidth, System.Int32 blockHeight, UnityEngine.Color32[] colors, System.Int32 miplevel)
    // Offset: 0x231A30C
    void SetBlockOfPixels32(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color32>* colors, int miplevel);
    // public System.Byte[] GetRawTextureData()
    // Offset: 0x231A394
    ::Array<uint8_t>* GetRawTextureData();
    // public UnityEngine.Color[] GetPixels(System.Int32 x, System.Int32 y, System.Int32 blockWidth, System.Int32 blockHeight, System.Int32 miplevel)
    // Offset: 0x231A3D4
    ::Array<UnityEngine::Color>* GetPixels(int x, int y, int blockWidth, int blockHeight, int miplevel);
    // public UnityEngine.Color[] GetPixels(System.Int32 x, System.Int32 y, System.Int32 blockWidth, System.Int32 blockHeight)
    // Offset: 0x231A454
    ::Array<UnityEngine::Color>* GetPixels(int x, int y, int blockWidth, int blockHeight);
    // public UnityEngine.Color32[] GetPixels32(System.Int32 miplevel)
    // Offset: 0x231A4C8
    ::Array<UnityEngine::Color32>* GetPixels32(int miplevel);
    // public UnityEngine.Color32[] GetPixels32()
    // Offset: 0x231A518
    ::Array<UnityEngine::Color32>* GetPixels32();
    // public UnityEngine.Rect[] PackTextures(UnityEngine.Texture2D[] textures, System.Int32 padding, System.Int32 maximumAtlasSize, System.Boolean makeNoLongerReadable)
    // Offset: 0x231A55C
    ::Array<UnityEngine::Rect>* PackTextures(::Array<UnityEngine::Texture2D*>* textures, int padding, int maximumAtlasSize, bool makeNoLongerReadable);
    // public UnityEngine.Rect[] PackTextures(UnityEngine.Texture2D[] textures, System.Int32 padding, System.Int32 maximumAtlasSize)
    // Offset: 0x231A5CC
    ::Array<UnityEngine::Rect>* PackTextures(::Array<UnityEngine::Texture2D*>* textures, int padding, int maximumAtlasSize);
    // public UnityEngine.Rect[] PackTextures(UnityEngine.Texture2D[] textures, System.Int32 padding)
    // Offset: 0x231A638
    ::Array<UnityEngine::Rect>* PackTextures(::Array<UnityEngine::Texture2D*>* textures, int padding);
    // System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount, System.IntPtr nativeTex)
    // Offset: 0x231A698
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Texture2D* New_ctor(int width, int height, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags, int mipCount, System::IntPtr nativeTex) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Texture2D*, creationType>(width, height, format, flags, mipCount, nativeTex)));
    }
    // public System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)
    // Offset: 0x231A778
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Texture2D* New_ctor(int width, int height, UnityEngine::Experimental::Rendering::DefaultFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Texture2D*, creationType>(width, height, format, flags)));
    }
    // public System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)
    // Offset: 0x231A7F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Texture2D* New_ctor(int width, int height, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Texture2D*, creationType>(width, height, format, flags)));
    }
    // public System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat format, System.Int32 mipCount, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)
    // Offset: 0x231A894
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Texture2D* New_ctor(int width, int height, UnityEngine::Experimental::Rendering::GraphicsFormat format, int mipCount, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Texture2D*, creationType>(width, height, format, mipCount, flags)));
    }
    // System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.Boolean linear, System.IntPtr nativeTex)
    // Offset: 0x231A91C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Texture2D* New_ctor(int width, int height, UnityEngine::TextureFormat textureFormat, int mipCount, bool linear, System::IntPtr nativeTex) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Texture2D*, creationType>(width, height, textureFormat, mipCount, linear, nativeTex)));
    }
    // public System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.Boolean linear)
    // Offset: 0x231AA2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Texture2D* New_ctor(int width, int height, UnityEngine::TextureFormat textureFormat, int mipCount, bool linear) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Texture2D*, creationType>(width, height, textureFormat, mipCount, linear)));
    }
    // public System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain, System.Boolean linear)
    // Offset: 0x231AAB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Texture2D* New_ctor(int width, int height, UnityEngine::TextureFormat textureFormat, bool mipChain, bool linear) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Texture2D*, creationType>(width, height, textureFormat, mipChain, linear)));
    }
    // public System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain)
    // Offset: 0x231AB4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Texture2D* New_ctor(int width, int height, UnityEngine::TextureFormat textureFormat, bool mipChain) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Texture2D*, creationType>(width, height, textureFormat, mipChain)));
    }
    // public System.Void .ctor(System.Int32 width, System.Int32 height)
    // Offset: 0x231ABD8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Texture2D* New_ctor(int width, int height) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Texture2D*, creationType>(width, height)));
    }
    // static public UnityEngine.Texture2D CreateExternalTexture(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat format, System.Boolean mipChain, System.Boolean linear, System.IntPtr nativeTex)
    // Offset: 0x231AC6C
    static UnityEngine::Texture2D* CreateExternalTexture(int width, int height, UnityEngine::TextureFormat format, bool mipChain, bool linear, System::IntPtr nativeTex);
    // public System.Void SetPixel(System.Int32 x, System.Int32 y, UnityEngine.Color color)
    // Offset: 0x231AD68
    void SetPixel(int x, int y, UnityEngine::Color color);
    // public System.Void SetPixel(System.Int32 x, System.Int32 y, UnityEngine.Color color, System.Int32 mipLevel)
    // Offset: 0x231AE24
    void SetPixel(int x, int y, UnityEngine::Color color, int mipLevel);
    // public System.Void SetPixels(System.Int32 x, System.Int32 y, System.Int32 blockWidth, System.Int32 blockHeight, UnityEngine.Color[] colors, System.Int32 miplevel)
    // Offset: 0x231AEEC
    void SetPixels(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color>* colors, int miplevel);
    // public System.Void SetPixels(System.Int32 x, System.Int32 y, System.Int32 blockWidth, System.Int32 blockHeight, UnityEngine.Color[] colors)
    // Offset: 0x231AFC8
    void SetPixels(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color>* colors);
    // public System.Void SetPixels(UnityEngine.Color[] colors, System.Int32 miplevel)
    // Offset: 0x231AFD0
    void SetPixels(::Array<UnityEngine::Color>* colors, int miplevel);
    // public System.Void SetPixels(UnityEngine.Color[] colors)
    // Offset: 0x231B04C
    void SetPixels(::Array<UnityEngine::Color>* colors);
    // public UnityEngine.Color GetPixel(System.Int32 x, System.Int32 y)
    // Offset: 0x231B0B4
    UnityEngine::Color GetPixel(int x, int y);
    // public UnityEngine.Color GetPixel(System.Int32 x, System.Int32 y, System.Int32 mipLevel)
    // Offset: 0x231B140
    UnityEngine::Color GetPixel(int x, int y, int mipLevel);
    // public UnityEngine.Color GetPixelBilinear(System.Single u, System.Single v)
    // Offset: 0x231B1D8
    UnityEngine::Color GetPixelBilinear(float u, float v);
    // public UnityEngine.Color GetPixelBilinear(System.Single u, System.Single v, System.Int32 mipLevel)
    // Offset: 0x231B264
    UnityEngine::Color GetPixelBilinear(float u, float v, int mipLevel);
    // public System.Void LoadRawTextureData(System.IntPtr data, System.Int32 size)
    // Offset: 0x231B2FC
    void LoadRawTextureData(System::IntPtr data, int size);
    // public System.Void LoadRawTextureData(System.Byte[] data)
    // Offset: 0x231B440
    void LoadRawTextureData(::Array<uint8_t>* data);
    // public System.Void LoadRawTextureData(Unity.Collections.NativeArray`1<T> data)
    // Offset: 0xFFFFFFFF
    template<class T>
    void LoadRawTextureData(Unity::Collections::NativeArray_1<T> data) {
      static_assert(is_value_type_v<T>);
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::LoadRawTextureData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRawTextureData", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___generic__method, data);
    }
    // public System.Void SetPixelData(T[] data, System.Int32 mipLevel, System.Int32 sourceDataStartIndex)
    // Offset: 0xFFFFFFFF
    template<class T>
    void SetPixelData(::Array<T>* data, int mipLevel, int sourceDataStartIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixelData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixelData", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(sourceDataStartIndex)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___generic__method, data, mipLevel, sourceDataStartIndex);
    }
    // public System.Void SetPixelData(Unity.Collections.NativeArray`1<T> data, System.Int32 mipLevel, System.Int32 sourceDataStartIndex)
    // Offset: 0xFFFFFFFF
    template<class T>
    void SetPixelData(Unity::Collections::NativeArray_1<T> data, int mipLevel, int sourceDataStartIndex) {
      static_assert(is_value_type_v<T>);
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixelData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixelData", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(sourceDataStartIndex)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___generic__method, data, mipLevel, sourceDataStartIndex);
    }
    // public Unity.Collections.NativeArray`1<T> GetRawTextureData()
    // Offset: 0xFFFFFFFF
    template<class T>
    Unity::Collections::NativeArray_1<T> GetRawTextureData() {
      static_assert(is_value_type_v<T>);
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetRawTextureData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawTextureData", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodThrow<Unity::Collections::NativeArray_1<T>, false>(this, ___generic__method);
    }
    // public System.Void Apply(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)
    // Offset: 0x231B570
    void Apply(bool updateMipmaps, bool makeNoLongerReadable);
    // public System.Void Apply(System.Boolean updateMipmaps)
    // Offset: 0x231B618
    void Apply(bool updateMipmaps);
    // public System.Void Apply()
    // Offset: 0x231B624
    void Apply();
    // public System.Boolean Resize(System.Int32 width, System.Int32 height)
    // Offset: 0x231B630
    bool Resize(int width, int height);
    // public System.Boolean Resize(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat format, System.Boolean hasMipMap)
    // Offset: 0x231B6D8
    bool Resize(int width, int height, UnityEngine::TextureFormat format, bool hasMipMap);
    // public System.Void ReadPixels(UnityEngine.Rect source, System.Int32 destX, System.Int32 destY, System.Boolean recalculateMipMaps)
    // Offset: 0x231B798
    void ReadPixels(UnityEngine::Rect source, int destX, int destY, bool recalculateMipMaps);
    // public System.Void ReadPixels(UnityEngine.Rect source, System.Int32 destX, System.Int32 destY)
    // Offset: 0x231B860
    void ReadPixels(UnityEngine::Rect source, int destX, int destY);
    // static public System.Boolean GenerateAtlas(UnityEngine.Vector2[] sizes, System.Int32 padding, System.Int32 atlasSize, System.Collections.Generic.List`1<UnityEngine.Rect> results)
    // Offset: 0x231B868
    static bool GenerateAtlas(::Array<UnityEngine::Vector2>* sizes, int padding, int atlasSize, System::Collections::Generic::List_1<UnityEngine::Rect>* results);
    // public System.Void SetPixels32(UnityEngine.Color32[] colors, System.Int32 miplevel)
    // Offset: 0x231B9F8
    void SetPixels32(::Array<UnityEngine::Color32>* colors, int miplevel);
    // public System.Void SetPixels32(UnityEngine.Color32[] colors)
    // Offset: 0x231BA50
    void SetPixels32(::Array<UnityEngine::Color32>* colors);
    // public System.Void SetPixels32(System.Int32 x, System.Int32 y, System.Int32 blockWidth, System.Int32 blockHeight, UnityEngine.Color32[] colors, System.Int32 miplevel)
    // Offset: 0x231BAA4
    void SetPixels32(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color32>* colors, int miplevel);
    // public System.Void SetPixels32(System.Int32 x, System.Int32 y, System.Int32 blockWidth, System.Int32 blockHeight, UnityEngine.Color32[] colors)
    // Offset: 0x231BB2C
    void SetPixels32(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color32>* colors);
    // public UnityEngine.Color[] GetPixels(System.Int32 miplevel)
    // Offset: 0x231BBB0
    ::Array<UnityEngine::Color>* GetPixels(int miplevel);
    // public UnityEngine.Color[] GetPixels()
    // Offset: 0x231BC50
    ::Array<UnityEngine::Color>* GetPixels();
    // private System.Void SetPixelImpl_Injected(System.Int32 image, System.Int32 x, System.Int32 y, ref UnityEngine.Color color)
    // Offset: 0x2319744
    void SetPixelImpl_Injected(int image, int x, int y, UnityEngine::Color& color);
    // private System.Void GetPixelImpl_Injected(System.Int32 image, System.Int32 x, System.Int32 y, out UnityEngine.Color ret)
    // Offset: 0x2319838
    void GetPixelImpl_Injected(int image, int x, int y, UnityEngine::Color& ret);
    // private System.Void GetPixelBilinearImpl_Injected(System.Int32 image, System.Single u, System.Single v, out UnityEngine.Color ret)
    // Offset: 0x231992C
    void GetPixelBilinearImpl_Injected(int image, float u, float v, UnityEngine::Color& ret);
    // private System.Void ReadPixelsImpl_Injected(ref UnityEngine.Rect source, System.Int32 destX, System.Int32 destY, System.Boolean recalculateMipMaps)
    // Offset: 0x2319A8C
    void ReadPixelsImpl_Injected(UnityEngine::Rect& source, int destX, int destY, bool recalculateMipMaps);
    // public override System.Boolean get_isReadable()
    // Offset: 0x23195D4
    // Implemented from: UnityEngine.Texture
    // Base method: System.Boolean Texture::get_isReadable()
    bool get_isReadable();
  }; // UnityEngine.Texture2D
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Texture2D*, "UnityEngine", "Texture2D");
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_format
// Il2CppName: get_format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextureFormat (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_format)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_whiteTexture
// Il2CppName: get_whiteTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&UnityEngine::Texture2D::get_whiteTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_whiteTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_blackTexture
// Il2CppName: get_blackTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&UnityEngine::Texture2D::get_blackTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_blackTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_redTexture
// Il2CppName: get_redTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&UnityEngine::Texture2D::get_redTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_redTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_grayTexture
// Il2CppName: get_grayTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&UnityEngine::Texture2D::get_grayTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_grayTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_linearGrayTexture
// Il2CppName: get_linearGrayTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&UnityEngine::Texture2D::get_linearGrayTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_linearGrayTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_normalTexture
// Il2CppName: get_normalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&UnityEngine::Texture2D::get_normalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_normalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::Compress
// Il2CppName: Compress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(bool)>(&UnityEngine::Texture2D::Compress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "Compress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::Internal_CreateImpl
// Il2CppName: Internal_CreateImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Texture2D*, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, System::IntPtr)>(&UnityEngine::Texture2D::Internal_CreateImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "Internal_CreateImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture2D*, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, System::IntPtr)>(&UnityEngine::Texture2D::Internal_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::ApplyImpl
// Il2CppName: ApplyImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(bool, bool)>(&UnityEngine::Texture2D::ApplyImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "ApplyImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::ResizeImpl
// Il2CppName: ResizeImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)(int, int)>(&UnityEngine::Texture2D::ResizeImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "ResizeImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixelImpl
// Il2CppName: SetPixelImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, int, UnityEngine::Color)>(&UnityEngine::Texture2D::SetPixelImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixelImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixelImpl
// Il2CppName: GetPixelImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (UnityEngine::Texture2D::*)(int, int, int)>(&UnityEngine::Texture2D::GetPixelImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixelImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixelBilinearImpl
// Il2CppName: GetPixelBilinearImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (UnityEngine::Texture2D::*)(int, float, float)>(&UnityEngine::Texture2D::GetPixelBilinearImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixelBilinearImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::ResizeWithFormatImpl
// Il2CppName: ResizeWithFormatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)(int, int, UnityEngine::TextureFormat, bool)>(&UnityEngine::Texture2D::ResizeWithFormatImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "ResizeWithFormatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::ReadPixelsImpl
// Il2CppName: ReadPixelsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(UnityEngine::Rect, int, int, bool)>(&UnityEngine::Texture2D::ReadPixelsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "ReadPixelsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixelsImpl
// Il2CppName: SetPixelsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color>*, int, int)>(&UnityEngine::Texture2D::SetPixelsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixelsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::LoadRawTextureDataImpl
// Il2CppName: LoadRawTextureDataImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)(System::IntPtr, int)>(&UnityEngine::Texture2D::LoadRawTextureDataImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "LoadRawTextureDataImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::LoadRawTextureDataImplArray
// Il2CppName: LoadRawTextureDataImplArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)(::Array<uint8_t>*)>(&UnityEngine::Texture2D::LoadRawTextureDataImplArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "LoadRawTextureDataImplArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixelDataImplArray
// Il2CppName: SetPixelDataImplArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)(System::Array*, int, int, int, int)>(&UnityEngine::Texture2D::SetPixelDataImplArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixelDataImplArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixelDataImpl
// Il2CppName: SetPixelDataImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)(System::IntPtr, int, int, int, int)>(&UnityEngine::Texture2D::SetPixelDataImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixelDataImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetWritableImageData
// Il2CppName: GetWritableImageData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (UnityEngine::Texture2D::*)(int)>(&UnityEngine::Texture2D::GetWritableImageData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetWritableImageData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetRawImageDataSize
// Il2CppName: GetRawImageDataSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::GetRawImageDataSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetRawImageDataSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GenerateAtlasImpl
// Il2CppName: GenerateAtlasImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<UnityEngine::Vector2>*, int, int, ::Array<UnityEngine::Rect>*&)>(&UnityEngine::Texture2D::GenerateAtlasImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GenerateAtlasImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Rect>*&>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_isPreProcessed
// Il2CppName: get_isPreProcessed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_isPreProcessed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_isPreProcessed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_streamingMipmaps
// Il2CppName: get_streamingMipmaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_streamingMipmaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_streamingMipmaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_streamingMipmapsPriority
// Il2CppName: get_streamingMipmapsPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_streamingMipmapsPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_streamingMipmapsPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_requestedMipmapLevel
// Il2CppName: get_requestedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_requestedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_requestedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::set_requestedMipmapLevel
// Il2CppName: set_requestedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int)>(&UnityEngine::Texture2D::set_requestedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "set_requestedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_minimumMipmapLevel
// Il2CppName: get_minimumMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_minimumMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_minimumMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::set_minimumMipmapLevel
// Il2CppName: set_minimumMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int)>(&UnityEngine::Texture2D::set_minimumMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "set_minimumMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_loadAllMips
// Il2CppName: get_loadAllMips
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_loadAllMips)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_loadAllMips", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::set_loadAllMips
// Il2CppName: set_loadAllMips
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(bool)>(&UnityEngine::Texture2D::set_loadAllMips)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "set_loadAllMips", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_calculatedMipmapLevel
// Il2CppName: get_calculatedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_calculatedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_calculatedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_desiredMipmapLevel
// Il2CppName: get_desiredMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_desiredMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_desiredMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_loadingMipmapLevel
// Il2CppName: get_loadingMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_loadingMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_loadingMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_loadedMipmapLevel
// Il2CppName: get_loadedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_loadedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_loadedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::ClearRequestedMipmapLevel
// Il2CppName: ClearRequestedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::ClearRequestedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "ClearRequestedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::IsRequestedMipmapLevelLoaded
// Il2CppName: IsRequestedMipmapLevelLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::IsRequestedMipmapLevelLoaded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "IsRequestedMipmapLevelLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::ClearMinimumMipmapLevel
// Il2CppName: ClearMinimumMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::ClearMinimumMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "ClearMinimumMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::UpdateExternalTexture
// Il2CppName: UpdateExternalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(System::IntPtr)>(&UnityEngine::Texture2D::UpdateExternalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "UpdateExternalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetAllPixels32
// Il2CppName: SetAllPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(::Array<UnityEngine::Color32>*, int)>(&UnityEngine::Texture2D::SetAllPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetAllPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetBlockOfPixels32
// Il2CppName: SetBlockOfPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color32>*, int)>(&UnityEngine::Texture2D::SetBlockOfPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetBlockOfPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetRawTextureData
// Il2CppName: GetRawTextureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::GetRawTextureData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetRawTextureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (UnityEngine::Texture2D::*)(int, int, int, int, int)>(&UnityEngine::Texture2D::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (UnityEngine::Texture2D::*)(int, int, int, int)>(&UnityEngine::Texture2D::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixels32
// Il2CppName: GetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color32>* (UnityEngine::Texture2D::*)(int)>(&UnityEngine::Texture2D::GetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixels32
// Il2CppName: GetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color32>* (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::GetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::PackTextures
// Il2CppName: PackTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Rect>* (UnityEngine::Texture2D::*)(::Array<UnityEngine::Texture2D*>*, int, int, bool)>(&UnityEngine::Texture2D::PackTextures)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "PackTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Texture2D*>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::PackTextures
// Il2CppName: PackTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Rect>* (UnityEngine::Texture2D::*)(::Array<UnityEngine::Texture2D*>*, int, int)>(&UnityEngine::Texture2D::PackTextures)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "PackTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Texture2D*>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::PackTextures
// Il2CppName: PackTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Rect>* (UnityEngine::Texture2D::*)(::Array<UnityEngine::Texture2D*>*, int)>(&UnityEngine::Texture2D::PackTextures)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "PackTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Texture2D*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Texture2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Texture2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Texture2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Texture2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Texture2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Texture2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Texture2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Texture2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Texture2D::CreateExternalTexture
// Il2CppName: CreateExternalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)(int, int, UnityEngine::TextureFormat, bool, bool, System::IntPtr)>(&UnityEngine::Texture2D::CreateExternalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "CreateExternalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixel
// Il2CppName: SetPixel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, UnityEngine::Color)>(&UnityEngine::Texture2D::SetPixel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixel
// Il2CppName: SetPixel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, UnityEngine::Color, int)>(&UnityEngine::Texture2D::SetPixel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color>*, int)>(&UnityEngine::Texture2D::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color>*)>(&UnityEngine::Texture2D::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(::Array<UnityEngine::Color>*, int)>(&UnityEngine::Texture2D::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(::Array<UnityEngine::Color>*)>(&UnityEngine::Texture2D::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixel
// Il2CppName: GetPixel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (UnityEngine::Texture2D::*)(int, int)>(&UnityEngine::Texture2D::GetPixel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixel
// Il2CppName: GetPixel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (UnityEngine::Texture2D::*)(int, int, int)>(&UnityEngine::Texture2D::GetPixel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixelBilinear
// Il2CppName: GetPixelBilinear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (UnityEngine::Texture2D::*)(float, float)>(&UnityEngine::Texture2D::GetPixelBilinear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixelBilinear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixelBilinear
// Il2CppName: GetPixelBilinear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (UnityEngine::Texture2D::*)(float, float, int)>(&UnityEngine::Texture2D::GetPixelBilinear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixelBilinear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::LoadRawTextureData
// Il2CppName: LoadRawTextureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(System::IntPtr, int)>(&UnityEngine::Texture2D::LoadRawTextureData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "LoadRawTextureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::LoadRawTextureData
// Il2CppName: LoadRawTextureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(::Array<uint8_t>*)>(&UnityEngine::Texture2D::LoadRawTextureData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "LoadRawTextureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::LoadRawTextureData
// Il2CppName: LoadRawTextureData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixelData
// Il2CppName: SetPixelData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixelData
// Il2CppName: SetPixelData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetRawTextureData
// Il2CppName: GetRawTextureData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Texture2D::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(bool, bool)>(&UnityEngine::Texture2D::Apply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(bool)>(&UnityEngine::Texture2D::Apply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::Apply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::Resize
// Il2CppName: Resize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)(int, int)>(&UnityEngine::Texture2D::Resize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "Resize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::Resize
// Il2CppName: Resize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)(int, int, UnityEngine::TextureFormat, bool)>(&UnityEngine::Texture2D::Resize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "Resize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::ReadPixels
// Il2CppName: ReadPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(UnityEngine::Rect, int, int, bool)>(&UnityEngine::Texture2D::ReadPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "ReadPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::ReadPixels
// Il2CppName: ReadPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(UnityEngine::Rect, int, int)>(&UnityEngine::Texture2D::ReadPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "ReadPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GenerateAtlas
// Il2CppName: GenerateAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Array<UnityEngine::Vector2>*, int, int, System::Collections::Generic::List_1<UnityEngine::Rect>*)>(&UnityEngine::Texture2D::GenerateAtlas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GenerateAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Rect>*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(::Array<UnityEngine::Color32>*, int)>(&UnityEngine::Texture2D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(::Array<UnityEngine::Color32>*)>(&UnityEngine::Texture2D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color32>*, int)>(&UnityEngine::Texture2D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color32>*)>(&UnityEngine::Texture2D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (UnityEngine::Texture2D::*)(int)>(&UnityEngine::Texture2D::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::SetPixelImpl_Injected
// Il2CppName: SetPixelImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, int, UnityEngine::Color&)>(&UnityEngine::Texture2D::SetPixelImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "SetPixelImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixelImpl_Injected
// Il2CppName: GetPixelImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, int, int, UnityEngine::Color&)>(&UnityEngine::Texture2D::GetPixelImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixelImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::GetPixelBilinearImpl_Injected
// Il2CppName: GetPixelBilinearImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(int, float, float, UnityEngine::Color&)>(&UnityEngine::Texture2D::GetPixelBilinearImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "GetPixelBilinearImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::ReadPixelsImpl_Injected
// Il2CppName: ReadPixelsImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Texture2D::*)(UnityEngine::Rect&, int, int, bool)>(&UnityEngine::Texture2D::ReadPixelsImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "ReadPixelsImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::Texture2D::get_isReadable
// Il2CppName: get_isReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Texture2D::*)()>(&UnityEngine::Texture2D::get_isReadable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Texture2D*), "get_isReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
