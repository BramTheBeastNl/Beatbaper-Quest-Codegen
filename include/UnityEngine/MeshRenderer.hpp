// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.MeshRenderer
  // [NativeHeaderAttribute] Offset: D8F0D8
  class MeshRenderer : public UnityEngine::Renderer {
    public:
    // Creating value type constructor for type: MeshRenderer
    MeshRenderer() noexcept {}
    // private System.Void DontStripMeshRenderer()
    // Offset: 0x1C1A0CC
    void DontStripMeshRenderer();
    // public UnityEngine.Mesh get_additionalVertexStreams()
    // Offset: 0x1C1A0D0
    UnityEngine::Mesh* get_additionalVertexStreams();
  }; // UnityEngine.MeshRenderer
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::MeshRenderer*, "UnityEngine", "MeshRenderer");
// Writing MetadataGetter for method: MeshRenderer::DontStripMeshRenderer
// Il2CppName: DontStripMeshRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MeshRenderer::*)()>(&MeshRenderer::DontStripMeshRenderer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MeshRenderer*), "DontStripMeshRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MeshRenderer::get_additionalVertexStreams
// Il2CppName: get_additionalVertexStreams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (MeshRenderer::*)()>(&MeshRenderer::get_additionalVertexStreams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MeshRenderer*), "get_additionalVertexStreams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
