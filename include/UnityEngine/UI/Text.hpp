// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.MaskableGraphic
#include "UnityEngine/UI/MaskableGraphic.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: FontData
  class FontData;
  // Forward declaring type: VertexHelper
  class VertexHelper;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextGenerator
  class TextGenerator;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Font
  class Font;
  // Forward declaring type: TextAnchor
  struct TextAnchor;
  // Forward declaring type: HorizontalWrapMode
  struct HorizontalWrapMode;
  // Forward declaring type: VerticalWrapMode
  struct VerticalWrapMode;
  // Forward declaring type: FontStyle
  struct FontStyle;
  // Forward declaring type: TextGenerationSettings
  struct TextGenerationSettings;
  // Skipping declaration: Vector2 because it is already included!
  // Forward declaring type: Texture
  class Texture;
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Size: 0xF0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.Text
  // [AddComponentMenu] Offset: DC58CC
  class Text : public UnityEngine::UI::MaskableGraphic/*, public UnityEngine::UI::ILayoutElement*/ {
    public:
    // private UnityEngine.UI.FontData m_FontData
    // Size: 0x8
    // Offset: 0xC0
    UnityEngine::UI::FontData* m_FontData;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::FontData*) == 0x8);
    // [TextAreaAttribute] Offset: 0xDC7964
    // protected System.String m_Text
    // Size: 0x8
    // Offset: 0xC8
    ::Il2CppString* m_Text;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private UnityEngine.TextGenerator m_TextCache
    // Size: 0x8
    // Offset: 0xD0
    UnityEngine::TextGenerator* m_TextCache;
    // Field size check
    static_assert(sizeof(UnityEngine::TextGenerator*) == 0x8);
    // private UnityEngine.TextGenerator m_TextCacheForLayout
    // Size: 0x8
    // Offset: 0xD8
    UnityEngine::TextGenerator* m_TextCacheForLayout;
    // Field size check
    static_assert(sizeof(UnityEngine::TextGenerator*) == 0x8);
    // protected System.Boolean m_DisableFontTextureRebuiltCallback
    // Size: 0x1
    // Offset: 0xE0
    bool m_DisableFontTextureRebuiltCallback;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_DisableFontTextureRebuiltCallback and: m_TempVerts
    char __padding4[0x7] = {};
    // private readonly UnityEngine.UIVertex[] m_TempVerts
    // Size: 0x8
    // Offset: 0xE8
    ::Array<UnityEngine::UIVertex>* m_TempVerts;
    // Field size check
    static_assert(sizeof(::Array<UnityEngine::UIVertex>*) == 0x8);
    // Creating value type constructor for type: Text
    Text(UnityEngine::UI::FontData* m_FontData_ = {}, ::Il2CppString* m_Text_ = {}, UnityEngine::TextGenerator* m_TextCache_ = {}, UnityEngine::TextGenerator* m_TextCacheForLayout_ = {}, bool m_DisableFontTextureRebuiltCallback_ = {}, ::Array<UnityEngine::UIVertex>* m_TempVerts_ = {}) noexcept : m_FontData{m_FontData_}, m_Text{m_Text_}, m_TextCache{m_TextCache_}, m_TextCacheForLayout{m_TextCacheForLayout_}, m_DisableFontTextureRebuiltCallback{m_DisableFontTextureRebuiltCallback_}, m_TempVerts{m_TempVerts_} {}
    // Creating interface conversion operator: operator UnityEngine::UI::ILayoutElement
    operator UnityEngine::UI::ILayoutElement() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ILayoutElement*>(this);
    }
    // Get static field: static protected UnityEngine.Material s_DefaultText
    static UnityEngine::Material* _get_s_DefaultText();
    // Set static field: static protected UnityEngine.Material s_DefaultText
    static void _set_s_DefaultText(UnityEngine::Material* value);
    // public UnityEngine.TextGenerator get_cachedTextGenerator()
    // Offset: 0x23A0280
    UnityEngine::TextGenerator* get_cachedTextGenerator();
    // public UnityEngine.TextGenerator get_cachedTextGeneratorForLayout()
    // Offset: 0x23A0318
    UnityEngine::TextGenerator* get_cachedTextGeneratorForLayout();
    // public System.Void FontTextureChanged()
    // Offset: 0x23A0588
    void FontTextureChanged();
    // public UnityEngine.Font get_font()
    // Offset: 0x23A056C
    UnityEngine::Font* get_font();
    // public System.Void set_font(UnityEngine.Font value)
    // Offset: 0x23A06A8
    void set_font(UnityEngine::Font* value);
    // public System.String get_text()
    // Offset: 0x23A079C
    ::Il2CppString* get_text();
    // public System.Void set_text(System.String value)
    // Offset: 0x23A07A4
    void set_text(::Il2CppString* value);
    // public System.Boolean get_supportRichText()
    // Offset: 0x23A0880
    bool get_supportRichText();
    // public System.Void set_supportRichText(System.Boolean value)
    // Offset: 0x23A089C
    void set_supportRichText(bool value);
    // public System.Boolean get_resizeTextForBestFit()
    // Offset: 0x23A090C
    bool get_resizeTextForBestFit();
    // public System.Void set_resizeTextForBestFit(System.Boolean value)
    // Offset: 0x23A0928
    void set_resizeTextForBestFit(bool value);
    // public System.Int32 get_resizeTextMinSize()
    // Offset: 0x23A0998
    int get_resizeTextMinSize();
    // public System.Void set_resizeTextMinSize(System.Int32 value)
    // Offset: 0x23A09B4
    void set_resizeTextMinSize(int value);
    // public System.Int32 get_resizeTextMaxSize()
    // Offset: 0x23A0A18
    int get_resizeTextMaxSize();
    // public System.Void set_resizeTextMaxSize(System.Int32 value)
    // Offset: 0x23A0A34
    void set_resizeTextMaxSize(int value);
    // public UnityEngine.TextAnchor get_alignment()
    // Offset: 0x23A0A98
    UnityEngine::TextAnchor get_alignment();
    // public System.Void set_alignment(UnityEngine.TextAnchor value)
    // Offset: 0x23A0AB4
    void set_alignment(UnityEngine::TextAnchor value);
    // public System.Boolean get_alignByGeometry()
    // Offset: 0x23A0B18
    bool get_alignByGeometry();
    // public System.Void set_alignByGeometry(System.Boolean value)
    // Offset: 0x23A0B34
    void set_alignByGeometry(bool value);
    // public System.Int32 get_fontSize()
    // Offset: 0x23A0B78
    int get_fontSize();
    // public System.Void set_fontSize(System.Int32 value)
    // Offset: 0x23A0B94
    void set_fontSize(int value);
    // public UnityEngine.HorizontalWrapMode get_horizontalOverflow()
    // Offset: 0x23A0BF8
    UnityEngine::HorizontalWrapMode get_horizontalOverflow();
    // public System.Void set_horizontalOverflow(UnityEngine.HorizontalWrapMode value)
    // Offset: 0x23A0C14
    void set_horizontalOverflow(UnityEngine::HorizontalWrapMode value);
    // public UnityEngine.VerticalWrapMode get_verticalOverflow()
    // Offset: 0x23A0C78
    UnityEngine::VerticalWrapMode get_verticalOverflow();
    // public System.Void set_verticalOverflow(UnityEngine.VerticalWrapMode value)
    // Offset: 0x23A0C94
    void set_verticalOverflow(UnityEngine::VerticalWrapMode value);
    // public System.Single get_lineSpacing()
    // Offset: 0x23A0CF8
    float get_lineSpacing();
    // public System.Void set_lineSpacing(System.Single value)
    // Offset: 0x23A0D14
    void set_lineSpacing(float value);
    // public UnityEngine.FontStyle get_fontStyle()
    // Offset: 0x23A0D78
    UnityEngine::FontStyle get_fontStyle();
    // public System.Void set_fontStyle(UnityEngine.FontStyle value)
    // Offset: 0x23A0D94
    void set_fontStyle(UnityEngine::FontStyle value);
    // public System.Single get_pixelsPerUnit()
    // Offset: 0x23A0DF8
    float get_pixelsPerUnit();
    // System.Void AssignDefaultFont()
    // Offset: 0x23A10FC
    void AssignDefaultFont();
    // public UnityEngine.TextGenerationSettings GetGenerationSettings(UnityEngine.Vector2 extents)
    // Offset: 0x23A1160
    UnityEngine::TextGenerationSettings GetGenerationSettings(UnityEngine::Vector2 extents);
    // static public UnityEngine.Vector2 GetTextAnchorPivot(UnityEngine.TextAnchor anchor)
    // Offset: 0x23A1354
    static UnityEngine::Vector2 GetTextAnchorPivot(UnityEngine::TextAnchor anchor);
    // public System.Void CalculateLayoutInputHorizontal()
    // Offset: 0x23A1D50
    void CalculateLayoutInputHorizontal();
    // public System.Void CalculateLayoutInputVertical()
    // Offset: 0x23A1D54
    void CalculateLayoutInputVertical();
    // public System.Single get_minWidth()
    // Offset: 0x23A1D58
    float get_minWidth();
    // public System.Single get_preferredWidth()
    // Offset: 0x23A1D60
    float get_preferredWidth();
    // public System.Single get_flexibleWidth()
    // Offset: 0x23A1E58
    float get_flexibleWidth();
    // public System.Single get_minHeight()
    // Offset: 0x23A1E60
    float get_minHeight();
    // public System.Single get_preferredHeight()
    // Offset: 0x23A1E68
    float get_preferredHeight();
    // public System.Single get_flexibleHeight()
    // Offset: 0x23A1F4C
    float get_flexibleHeight();
    // public System.Int32 get_layoutPriority()
    // Offset: 0x23A1F54
    int get_layoutPriority();
    // protected System.Void .ctor()
    // Offset: 0x23A01F4
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::.ctor()
    // Base method: System.Void Graphic::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Text* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Text*, creationType>()));
    }
    // public override UnityEngine.Texture get_mainTexture()
    // Offset: 0x23A0384
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: UnityEngine.Texture Graphic::get_mainTexture()
    UnityEngine::Texture* get_mainTexture();
    // protected override System.Void OnEnable()
    // Offset: 0x23A0F64
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x23A0FF0
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnDisable()
    void OnDisable();
    // protected override System.Void UpdateGeometry()
    // Offset: 0x23A1064
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::UpdateGeometry()
    void UpdateGeometry();
    // protected override System.Void OnPopulateMesh(UnityEngine.UI.VertexHelper toFill)
    // Offset: 0x23A1488
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::OnPopulateMesh(UnityEngine.UI.VertexHelper toFill)
    void OnPopulateMesh(UnityEngine::UI::VertexHelper* toFill);
    // static private System.Void .cctor()
    // Offset: 0x23A1F5C
    // Implemented from: UnityEngine.UI.Graphic
    // Base method: System.Void Graphic::.cctor()
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // UnityEngine.UI.Text
  #pragma pack(pop)
  static check_size<sizeof(Text), 232 + sizeof(::Array<UnityEngine::UIVertex>*)> __UnityEngine_UI_TextSizeCheck;
  static_assert(sizeof(Text) == 0xF0);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::Text*, "UnityEngine.UI", "Text");
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_cachedTextGenerator
// Il2CppName: get_cachedTextGenerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerator* (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_cachedTextGenerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_cachedTextGenerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_cachedTextGeneratorForLayout
// Il2CppName: get_cachedTextGeneratorForLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerator* (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_cachedTextGeneratorForLayout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_cachedTextGeneratorForLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::FontTextureChanged
// Il2CppName: FontTextureChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::FontTextureChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "FontTextureChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_font
// Il2CppName: get_font
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Font* (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_font)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_font", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_font
// Il2CppName: set_font
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(UnityEngine::Font*)>(&UnityEngine::UI::Text::set_font)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_font", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(::Il2CppString*)>(&UnityEngine::UI::Text::set_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_supportRichText
// Il2CppName: get_supportRichText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_supportRichText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_supportRichText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_supportRichText
// Il2CppName: set_supportRichText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(bool)>(&UnityEngine::UI::Text::set_supportRichText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_supportRichText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_resizeTextForBestFit
// Il2CppName: get_resizeTextForBestFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_resizeTextForBestFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_resizeTextForBestFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_resizeTextForBestFit
// Il2CppName: set_resizeTextForBestFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(bool)>(&UnityEngine::UI::Text::set_resizeTextForBestFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_resizeTextForBestFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_resizeTextMinSize
// Il2CppName: get_resizeTextMinSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_resizeTextMinSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_resizeTextMinSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_resizeTextMinSize
// Il2CppName: set_resizeTextMinSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(int)>(&UnityEngine::UI::Text::set_resizeTextMinSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_resizeTextMinSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_resizeTextMaxSize
// Il2CppName: get_resizeTextMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_resizeTextMaxSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_resizeTextMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_resizeTextMaxSize
// Il2CppName: set_resizeTextMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(int)>(&UnityEngine::UI::Text::set_resizeTextMaxSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_resizeTextMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_alignment
// Il2CppName: get_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextAnchor (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_alignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_alignment
// Il2CppName: set_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(UnityEngine::TextAnchor)>(&UnityEngine::UI::Text::set_alignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAnchor>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_alignByGeometry
// Il2CppName: get_alignByGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_alignByGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_alignByGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_alignByGeometry
// Il2CppName: set_alignByGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(bool)>(&UnityEngine::UI::Text::set_alignByGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_alignByGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_fontSize
// Il2CppName: get_fontSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_fontSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_fontSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_fontSize
// Il2CppName: set_fontSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(int)>(&UnityEngine::UI::Text::set_fontSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_fontSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_horizontalOverflow
// Il2CppName: get_horizontalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::HorizontalWrapMode (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_horizontalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_horizontalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_horizontalOverflow
// Il2CppName: set_horizontalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(UnityEngine::HorizontalWrapMode)>(&UnityEngine::UI::Text::set_horizontalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_horizontalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::HorizontalWrapMode>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_verticalOverflow
// Il2CppName: get_verticalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::VerticalWrapMode (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_verticalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_verticalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_verticalOverflow
// Il2CppName: set_verticalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(UnityEngine::VerticalWrapMode)>(&UnityEngine::UI::Text::set_verticalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_verticalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::VerticalWrapMode>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_lineSpacing
// Il2CppName: get_lineSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_lineSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_lineSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_lineSpacing
// Il2CppName: set_lineSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(float)>(&UnityEngine::UI::Text::set_lineSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_lineSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_fontStyle
// Il2CppName: get_fontStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::FontStyle (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_fontStyle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_fontStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::set_fontStyle
// Il2CppName: set_fontStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(UnityEngine::FontStyle)>(&UnityEngine::UI::Text::set_fontStyle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "set_fontStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::FontStyle>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_pixelsPerUnit
// Il2CppName: get_pixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_pixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_pixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::AssignDefaultFont
// Il2CppName: AssignDefaultFont
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::AssignDefaultFont)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "AssignDefaultFont", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::GetGenerationSettings
// Il2CppName: GetGenerationSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerationSettings (UnityEngine::UI::Text::*)(UnityEngine::Vector2)>(&UnityEngine::UI::Text::GetGenerationSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "GetGenerationSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::GetTextAnchorPivot
// Il2CppName: GetTextAnchorPivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)(UnityEngine::TextAnchor)>(&UnityEngine::UI::Text::GetTextAnchorPivot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "GetTextAnchorPivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAnchor>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_minWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_preferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_flexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_minHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_preferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_flexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_layoutPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UI::Text::get_mainTexture
// Il2CppName: get_mainTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::get_mainTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "get_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::UpdateGeometry
// Il2CppName: UpdateGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)()>(&UnityEngine::UI::Text::UpdateGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "UpdateGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::OnPopulateMesh
// Il2CppName: OnPopulateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Text::*)(UnityEngine::UI::VertexHelper*)>(&UnityEngine::UI::Text::OnPopulateMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), "OnPopulateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Text::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UI::Text::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Text*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
