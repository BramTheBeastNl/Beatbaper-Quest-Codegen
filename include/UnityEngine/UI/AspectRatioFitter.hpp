// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
// Including type: UnityEngine.UI.ILayoutSelfController
#include "UnityEngine/UI/ILayoutSelfController.hpp"
// Including type: UnityEngine.DrivenRectTransformTracker
#include "UnityEngine/DrivenRectTransformTracker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Skipping declaration: AspectMode because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UI.AspectRatioFitter
  // [AddComponentMenu] Offset: DC50FC
  // [ExecuteAlways] Offset: DC50FC
  // [RequireComponent] Offset: DC50FC
  // [DisallowMultipleComponent] Offset: DC50FC
  class AspectRatioFitter : public UnityEngine::EventSystems::UIBehaviour/*, public UnityEngine::UI::ILayoutSelfController*/ {
    public:
    // Nested type: UnityEngine::UI::AspectRatioFitter::AspectMode
    struct AspectMode;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.AspectRatioFitter/AspectMode
    struct AspectMode/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: AspectMode
      constexpr AspectMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_None();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
      static void _set_None(UnityEngine::UI::AspectRatioFitter::AspectMode value);
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
      static constexpr const int WidthControlsHeight = 1;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_WidthControlsHeight();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
      static void _set_WidthControlsHeight(UnityEngine::UI::AspectRatioFitter::AspectMode value);
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
      static constexpr const int HeightControlsWidth = 2;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_HeightControlsWidth();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
      static void _set_HeightControlsWidth(UnityEngine::UI::AspectRatioFitter::AspectMode value);
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
      static constexpr const int FitInParent = 3;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_FitInParent();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
      static void _set_FitInParent(UnityEngine::UI::AspectRatioFitter::AspectMode value);
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
      static constexpr const int EnvelopeParent = 4;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_EnvelopeParent();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
      static void _set_EnvelopeParent(UnityEngine::UI::AspectRatioFitter::AspectMode value);
    }; // UnityEngine.UI.AspectRatioFitter/AspectMode
    #pragma pack(pop)
    static check_size<sizeof(AspectRatioFitter::AspectMode), 0 + sizeof(int)> __UnityEngine_UI_AspectRatioFitter_AspectModeSizeCheck;
    static_assert(sizeof(AspectRatioFitter::AspectMode) == 0x4);
    // private UnityEngine.UI.AspectRatioFitter/AspectMode m_AspectMode
    // Size: 0x4
    // Offset: 0x18
    UnityEngine::UI::AspectRatioFitter::AspectMode m_AspectMode;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::AspectRatioFitter::AspectMode) == 0x4);
    // private System.Single m_AspectRatio
    // Size: 0x4
    // Offset: 0x1C
    float m_AspectRatio;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.RectTransform m_Rect
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::RectTransform* m_Rect;
    // Field size check
    static_assert(sizeof(UnityEngine::RectTransform*) == 0x8);
    // private System.Boolean m_DelayedSetDirty
    // Size: 0x1
    // Offset: 0x28
    bool m_DelayedSetDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.DrivenRectTransformTracker m_Tracker
    // Size: 0x1
    // Offset: 0x29
    UnityEngine::DrivenRectTransformTracker m_Tracker;
    // Field size check
    static_assert(sizeof(UnityEngine::DrivenRectTransformTracker) == 0x1);
    // Creating value type constructor for type: AspectRatioFitter
    AspectRatioFitter(UnityEngine::UI::AspectRatioFitter::AspectMode m_AspectMode_ = {}, float m_AspectRatio_ = {}, UnityEngine::RectTransform* m_Rect_ = {}, bool m_DelayedSetDirty_ = {}, UnityEngine::DrivenRectTransformTracker m_Tracker_ = {}) noexcept : m_AspectMode{m_AspectMode_}, m_AspectRatio{m_AspectRatio_}, m_Rect{m_Rect_}, m_DelayedSetDirty{m_DelayedSetDirty_}, m_Tracker{m_Tracker_} {}
    // Creating interface conversion operator: operator UnityEngine::UI::ILayoutSelfController
    operator UnityEngine::UI::ILayoutSelfController() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ILayoutSelfController*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public UnityEngine.UI.AspectRatioFitter/AspectMode get_aspectMode()
    // Offset: 0x1437FA8
    UnityEngine::UI::AspectRatioFitter::AspectMode get_aspectMode();
    // public System.Void set_aspectMode(UnityEngine.UI.AspectRatioFitter/AspectMode value)
    // Offset: 0x1437FB0
    void set_aspectMode(UnityEngine::UI::AspectRatioFitter::AspectMode value);
    // public System.Single get_aspectRatio()
    // Offset: 0x1438030
    float get_aspectRatio();
    // public System.Void set_aspectRatio(System.Single value)
    // Offset: 0x1438038
    void set_aspectRatio(float value);
    // private UnityEngine.RectTransform get_rectTransform()
    // Offset: 0x14380B4
    UnityEngine::RectTransform* get_rectTransform();
    // protected System.Void Update()
    // Offset: 0x14381E4
    void Update();
    // private System.Void UpdateRect()
    // Offset: 0x14381FC
    void UpdateRect();
    // private System.Single GetSizeDeltaToProduceSize(System.Single size, System.Int32 axis)
    // Offset: 0x14385B4
    float GetSizeDeltaToProduceSize(float size, int axis);
    // private UnityEngine.Vector2 GetParentSize()
    // Offset: 0x14384AC
    UnityEngine::Vector2 GetParentSize();
    // public System.Void SetLayoutHorizontal()
    // Offset: 0x1438668
    void SetLayoutHorizontal();
    // public System.Void SetLayoutVertical()
    // Offset: 0x143866C
    void SetLayoutVertical();
    // protected System.Void SetDirty()
    // Offset: 0x143802C
    void SetDirty();
    // protected System.Void .ctor()
    // Offset: 0x143814C
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AspectRatioFitter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AspectRatioFitter*, creationType>()));
    }
    // protected override System.Void OnEnable()
    // Offset: 0x143815C
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x1438160
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDisable()
    void OnDisable();
    // protected override System.Void OnRectTransformDimensionsChange()
    // Offset: 0x14381F8
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnRectTransformDimensionsChange()
    void OnRectTransformDimensionsChange();
  }; // UnityEngine.UI.AspectRatioFitter
  // WARNING Not writing size check since size may be invalid!
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::AspectRatioFitter*, "UnityEngine.UI", "AspectRatioFitter");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::AspectRatioFitter::AspectMode, "UnityEngine.UI", "AspectRatioFitter/AspectMode");
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::get_aspectMode
// Il2CppName: get_aspectMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::AspectRatioFitter::AspectMode (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::get_aspectMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "get_aspectMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::set_aspectMode
// Il2CppName: set_aspectMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)(UnityEngine::UI::AspectRatioFitter::AspectMode)>(&UnityEngine::UI::AspectRatioFitter::set_aspectMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "set_aspectMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::AspectRatioFitter::AspectMode>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::get_aspectRatio
// Il2CppName: get_aspectRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::get_aspectRatio)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "get_aspectRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::set_aspectRatio
// Il2CppName: set_aspectRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)(float)>(&UnityEngine::UI::AspectRatioFitter::set_aspectRatio)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "set_aspectRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::UpdateRect
// Il2CppName: UpdateRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::UpdateRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "UpdateRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::GetSizeDeltaToProduceSize
// Il2CppName: GetSizeDeltaToProduceSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::AspectRatioFitter::*)(float, int)>(&UnityEngine::UI::AspectRatioFitter::GetSizeDeltaToProduceSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "GetSizeDeltaToProduceSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::GetParentSize
// Il2CppName: GetParentSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::GetParentSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "GetParentSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::SetLayoutHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::SetLayoutVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::SetDirty
// Il2CppName: SetDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::SetDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "SetDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::AspectRatioFitter::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::AspectRatioFitter::*)()>(&UnityEngine::UI::AspectRatioFitter::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::AspectRatioFitter*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
