// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
// Including type: UnityEngine.UI.ILayoutIgnorer
#include "UnityEngine/UI/ILayoutIgnorer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.LayoutElement
  // [AddComponentMenu] Offset: DC5378
  // [RequireComponent] Offset: DC5378
  // [ExecuteAlways] Offset: DC5378
  class LayoutElement : public UnityEngine::EventSystems::UIBehaviour/*, public UnityEngine::UI::ILayoutElement, public UnityEngine::UI::ILayoutIgnorer*/ {
    public:
    // private System.Boolean m_IgnoreLayout
    // Size: 0x1
    // Offset: 0x18
    bool m_IgnoreLayout;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_IgnoreLayout and: m_MinWidth
    char __padding0[0x3] = {};
    // private System.Single m_MinWidth
    // Size: 0x4
    // Offset: 0x1C
    float m_MinWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_MinHeight
    // Size: 0x4
    // Offset: 0x20
    float m_MinHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_PreferredWidth
    // Size: 0x4
    // Offset: 0x24
    float m_PreferredWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_PreferredHeight
    // Size: 0x4
    // Offset: 0x28
    float m_PreferredHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_FlexibleWidth
    // Size: 0x4
    // Offset: 0x2C
    float m_FlexibleWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_FlexibleHeight
    // Size: 0x4
    // Offset: 0x30
    float m_FlexibleHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 m_LayoutPriority
    // Size: 0x4
    // Offset: 0x34
    int m_LayoutPriority;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: LayoutElement
    LayoutElement(bool m_IgnoreLayout_ = {}, float m_MinWidth_ = {}, float m_MinHeight_ = {}, float m_PreferredWidth_ = {}, float m_PreferredHeight_ = {}, float m_FlexibleWidth_ = {}, float m_FlexibleHeight_ = {}, int m_LayoutPriority_ = {}) noexcept : m_IgnoreLayout{m_IgnoreLayout_}, m_MinWidth{m_MinWidth_}, m_MinHeight{m_MinHeight_}, m_PreferredWidth{m_PreferredWidth_}, m_PreferredHeight{m_PreferredHeight_}, m_FlexibleWidth{m_FlexibleWidth_}, m_FlexibleHeight{m_FlexibleHeight_}, m_LayoutPriority{m_LayoutPriority_} {}
    // Creating interface conversion operator: operator UnityEngine::UI::ILayoutElement
    operator UnityEngine::UI::ILayoutElement() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ILayoutElement*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::UI::ILayoutIgnorer
    operator UnityEngine::UI::ILayoutIgnorer() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ILayoutIgnorer*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Boolean get_ignoreLayout()
    // Offset: 0x19A8190
    bool get_ignoreLayout();
    // public System.Void set_ignoreLayout(System.Boolean value)
    // Offset: 0x19A8198
    void set_ignoreLayout(bool value);
    // public System.Void CalculateLayoutInputHorizontal()
    // Offset: 0x19A82D0
    void CalculateLayoutInputHorizontal();
    // public System.Void CalculateLayoutInputVertical()
    // Offset: 0x19A82D4
    void CalculateLayoutInputVertical();
    // public System.Single get_minWidth()
    // Offset: 0x19A82D8
    float get_minWidth();
    // public System.Void set_minWidth(System.Single value)
    // Offset: 0x19A82E0
    void set_minWidth(float value);
    // public System.Single get_minHeight()
    // Offset: 0x19A835C
    float get_minHeight();
    // public System.Void set_minHeight(System.Single value)
    // Offset: 0x19A8364
    void set_minHeight(float value);
    // public System.Single get_preferredWidth()
    // Offset: 0x19A83E0
    float get_preferredWidth();
    // public System.Void set_preferredWidth(System.Single value)
    // Offset: 0x19A83E8
    void set_preferredWidth(float value);
    // public System.Single get_preferredHeight()
    // Offset: 0x19A8464
    float get_preferredHeight();
    // public System.Void set_preferredHeight(System.Single value)
    // Offset: 0x19A846C
    void set_preferredHeight(float value);
    // public System.Single get_flexibleWidth()
    // Offset: 0x19A84E8
    float get_flexibleWidth();
    // public System.Void set_flexibleWidth(System.Single value)
    // Offset: 0x19A84F0
    void set_flexibleWidth(float value);
    // public System.Single get_flexibleHeight()
    // Offset: 0x19A856C
    float get_flexibleHeight();
    // public System.Void set_flexibleHeight(System.Single value)
    // Offset: 0x19A8574
    void set_flexibleHeight(float value);
    // public System.Int32 get_layoutPriority()
    // Offset: 0x19A85F0
    int get_layoutPriority();
    // public System.Void set_layoutPriority(System.Int32 value)
    // Offset: 0x19A85F8
    void set_layoutPriority(int value);
    // protected System.Void SetDirty()
    // Offset: 0x19A8214
    void SetDirty();
    // protected System.Void .ctor()
    // Offset: 0x19A8674
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LayoutElement* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LayoutElement*, creationType>()));
    }
    // protected override System.Void OnEnable()
    // Offset: 0x19A8698
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnEnable()
    void OnEnable();
    // protected override System.Void OnTransformParentChanged()
    // Offset: 0x19A86C0
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnTransformParentChanged()
    void OnTransformParentChanged();
    // protected override System.Void OnDisable()
    // Offset: 0x19A86C4
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDisable()
    void OnDisable();
    // protected override System.Void OnDidApplyAnimationProperties()
    // Offset: 0x19A86EC
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDidApplyAnimationProperties()
    void OnDidApplyAnimationProperties();
    // protected override System.Void OnBeforeTransformParentChanged()
    // Offset: 0x19A86F0
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnBeforeTransformParentChanged()
    void OnBeforeTransformParentChanged();
  }; // UnityEngine.UI.LayoutElement
  #pragma pack(pop)
  static check_size<sizeof(LayoutElement), 52 + sizeof(int)> __UnityEngine_UI_LayoutElementSizeCheck;
  static_assert(sizeof(LayoutElement) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::LayoutElement*, "UnityEngine.UI", "LayoutElement");
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::get_ignoreLayout
// Il2CppName: get_ignoreLayout
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::set_ignoreLayout
// Il2CppName: set_ignoreLayout
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::get_minWidth
// Il2CppName: get_minWidth
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::set_minWidth
// Il2CppName: set_minWidth
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::get_minHeight
// Il2CppName: get_minHeight
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::set_minHeight
// Il2CppName: set_minHeight
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::get_preferredWidth
// Il2CppName: get_preferredWidth
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::set_preferredWidth
// Il2CppName: set_preferredWidth
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::get_preferredHeight
// Il2CppName: get_preferredHeight
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::set_preferredHeight
// Il2CppName: set_preferredHeight
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::get_flexibleWidth
// Il2CppName: get_flexibleWidth
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::set_flexibleWidth
// Il2CppName: set_flexibleWidth
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::get_flexibleHeight
// Il2CppName: get_flexibleHeight
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::set_flexibleHeight
// Il2CppName: set_flexibleHeight
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::get_layoutPriority
// Il2CppName: get_layoutPriority
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::set_layoutPriority
// Il2CppName: set_layoutPriority
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::SetDirty
// Il2CppName: SetDirty
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::OnEnable
// Il2CppName: OnEnable
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::OnDisable
// Il2CppName: OnDisable
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::UI::LayoutElement::OnBeforeTransformParentChanged
// Il2CppName: OnBeforeTransformParentChanged
// Cannot perform method pointer template specialization from operators!
