// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
// Including type: UnityEngine.EventSystems.IInitializePotentialDragHandler
#include "UnityEngine/EventSystems/IInitializePotentialDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IBeginDragHandler
#include "UnityEngine/EventSystems/IBeginDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IEndDragHandler
#include "UnityEngine/EventSystems/IEndDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IDragHandler
#include "UnityEngine/EventSystems/IDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IScrollHandler
#include "UnityEngine/EventSystems/IScrollHandler.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
// Including type: UnityEngine.UI.ILayoutGroup
#include "UnityEngine/UI/ILayoutGroup.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.DrivenRectTransformTracker
#include "UnityEngine/DrivenRectTransformTracker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Scrollbar
  class Scrollbar;
  // Skipping declaration: MovementType because it is already included!
  // Skipping declaration: ScrollbarVisibility because it is already included!
  // Forward declaring type: CanvasUpdate
  struct CanvasUpdate;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Size: 0x128
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.ScrollRect
  // [AddComponentMenu] Offset: DC5668
  // [SelectionBaseAttribute] Offset: DC5668
  // [ExecuteAlways] Offset: DC5668
  // [DisallowMultipleComponent] Offset: DC5668
  // [RequireComponent] Offset: DC5668
  class ScrollRect : public UnityEngine::EventSystems::UIBehaviour/*, public UnityEngine::EventSystems::IInitializePotentialDragHandler, public UnityEngine::EventSystems::IBeginDragHandler, public UnityEngine::EventSystems::IEndDragHandler, public UnityEngine::EventSystems::IDragHandler, public UnityEngine::EventSystems::IScrollHandler, public UnityEngine::UI::ICanvasElement, public UnityEngine::UI::ILayoutElement, public UnityEngine::UI::ILayoutGroup*/ {
    public:
    // Nested type: UnityEngine::UI::ScrollRect::MovementType
    struct MovementType;
    // Nested type: UnityEngine::UI::ScrollRect::ScrollbarVisibility
    struct ScrollbarVisibility;
    // Nested type: UnityEngine::UI::ScrollRect::ScrollRectEvent
    class ScrollRectEvent;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.ScrollRect/MovementType
    struct MovementType/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: MovementType
      constexpr MovementType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.ScrollRect/MovementType Unrestricted
      static constexpr const int Unrestricted = 0;
      // Get static field: static public UnityEngine.UI.ScrollRect/MovementType Unrestricted
      static UnityEngine::UI::ScrollRect::MovementType _get_Unrestricted();
      // Set static field: static public UnityEngine.UI.ScrollRect/MovementType Unrestricted
      static void _set_Unrestricted(UnityEngine::UI::ScrollRect::MovementType value);
      // static field const value: static public UnityEngine.UI.ScrollRect/MovementType Elastic
      static constexpr const int Elastic = 1;
      // Get static field: static public UnityEngine.UI.ScrollRect/MovementType Elastic
      static UnityEngine::UI::ScrollRect::MovementType _get_Elastic();
      // Set static field: static public UnityEngine.UI.ScrollRect/MovementType Elastic
      static void _set_Elastic(UnityEngine::UI::ScrollRect::MovementType value);
      // static field const value: static public UnityEngine.UI.ScrollRect/MovementType Clamped
      static constexpr const int Clamped = 2;
      // Get static field: static public UnityEngine.UI.ScrollRect/MovementType Clamped
      static UnityEngine::UI::ScrollRect::MovementType _get_Clamped();
      // Set static field: static public UnityEngine.UI.ScrollRect/MovementType Clamped
      static void _set_Clamped(UnityEngine::UI::ScrollRect::MovementType value);
    }; // UnityEngine.UI.ScrollRect/MovementType
    #pragma pack(pop)
    static check_size<sizeof(ScrollRect::MovementType), 0 + sizeof(int)> __UnityEngine_UI_ScrollRect_MovementTypeSizeCheck;
    static_assert(sizeof(ScrollRect::MovementType) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.ScrollRect/ScrollbarVisibility
    struct ScrollbarVisibility/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: ScrollbarVisibility
      constexpr ScrollbarVisibility(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility Permanent
      static constexpr const int Permanent = 0;
      // Get static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility Permanent
      static UnityEngine::UI::ScrollRect::ScrollbarVisibility _get_Permanent();
      // Set static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility Permanent
      static void _set_Permanent(UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
      // static field const value: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHide
      static constexpr const int AutoHide = 1;
      // Get static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHide
      static UnityEngine::UI::ScrollRect::ScrollbarVisibility _get_AutoHide();
      // Set static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHide
      static void _set_AutoHide(UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
      // static field const value: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHideAndExpandViewport
      static constexpr const int AutoHideAndExpandViewport = 2;
      // Get static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHideAndExpandViewport
      static UnityEngine::UI::ScrollRect::ScrollbarVisibility _get_AutoHideAndExpandViewport();
      // Set static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHideAndExpandViewport
      static void _set_AutoHideAndExpandViewport(UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
    }; // UnityEngine.UI.ScrollRect/ScrollbarVisibility
    #pragma pack(pop)
    static check_size<sizeof(ScrollRect::ScrollbarVisibility), 0 + sizeof(int)> __UnityEngine_UI_ScrollRect_ScrollbarVisibilitySizeCheck;
    static_assert(sizeof(ScrollRect::ScrollbarVisibility) == 0x4);
    // private UnityEngine.RectTransform m_Content
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::RectTransform* m_Content;
    // Field size check
    static_assert(sizeof(UnityEngine::RectTransform*) == 0x8);
    // private System.Boolean m_Horizontal
    // Size: 0x1
    // Offset: 0x20
    bool m_Horizontal;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Vertical
    // Size: 0x1
    // Offset: 0x21
    bool m_Vertical;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Vertical and: m_MovementType
    char __padding2[0x2] = {};
    // private UnityEngine.UI.ScrollRect/MovementType m_MovementType
    // Size: 0x4
    // Offset: 0x24
    UnityEngine::UI::ScrollRect::MovementType m_MovementType;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::ScrollRect::MovementType) == 0x4);
    // private System.Single m_Elasticity
    // Size: 0x4
    // Offset: 0x28
    float m_Elasticity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_Inertia
    // Size: 0x1
    // Offset: 0x2C
    bool m_Inertia;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Inertia and: m_DecelerationRate
    char __padding5[0x3] = {};
    // private System.Single m_DecelerationRate
    // Size: 0x4
    // Offset: 0x30
    float m_DecelerationRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_ScrollSensitivity
    // Size: 0x4
    // Offset: 0x34
    float m_ScrollSensitivity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.RectTransform m_Viewport
    // Size: 0x8
    // Offset: 0x38
    UnityEngine::RectTransform* m_Viewport;
    // Field size check
    static_assert(sizeof(UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.UI.Scrollbar m_HorizontalScrollbar
    // Size: 0x8
    // Offset: 0x40
    UnityEngine::UI::Scrollbar* m_HorizontalScrollbar;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Scrollbar*) == 0x8);
    // private UnityEngine.UI.Scrollbar m_VerticalScrollbar
    // Size: 0x8
    // Offset: 0x48
    UnityEngine::UI::Scrollbar* m_VerticalScrollbar;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Scrollbar*) == 0x8);
    // private UnityEngine.UI.ScrollRect/ScrollbarVisibility m_HorizontalScrollbarVisibility
    // Size: 0x4
    // Offset: 0x50
    UnityEngine::UI::ScrollRect::ScrollbarVisibility m_HorizontalScrollbarVisibility;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::ScrollRect::ScrollbarVisibility) == 0x4);
    // private UnityEngine.UI.ScrollRect/ScrollbarVisibility m_VerticalScrollbarVisibility
    // Size: 0x4
    // Offset: 0x54
    UnityEngine::UI::ScrollRect::ScrollbarVisibility m_VerticalScrollbarVisibility;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::ScrollRect::ScrollbarVisibility) == 0x4);
    // private System.Single m_HorizontalScrollbarSpacing
    // Size: 0x4
    // Offset: 0x58
    float m_HorizontalScrollbarSpacing;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_VerticalScrollbarSpacing
    // Size: 0x4
    // Offset: 0x5C
    float m_VerticalScrollbarSpacing;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.UI.ScrollRect/ScrollRectEvent m_OnValueChanged
    // Size: 0x8
    // Offset: 0x60
    UnityEngine::UI::ScrollRect::ScrollRectEvent* m_OnValueChanged;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::ScrollRect::ScrollRectEvent*) == 0x8);
    // private UnityEngine.Vector2 m_PointerStartLocalCursor
    // Size: 0x8
    // Offset: 0x68
    UnityEngine::Vector2 m_PointerStartLocalCursor;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // protected UnityEngine.Vector2 m_ContentStartPosition
    // Size: 0x8
    // Offset: 0x70
    UnityEngine::Vector2 m_ContentStartPosition;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // private UnityEngine.RectTransform m_ViewRect
    // Size: 0x8
    // Offset: 0x78
    UnityEngine::RectTransform* m_ViewRect;
    // Field size check
    static_assert(sizeof(UnityEngine::RectTransform*) == 0x8);
    // protected UnityEngine.Bounds m_ContentBounds
    // Size: 0x18
    // Offset: 0x80
    UnityEngine::Bounds m_ContentBounds;
    // Field size check
    static_assert(sizeof(UnityEngine::Bounds) == 0x18);
    // private UnityEngine.Bounds m_ViewBounds
    // Size: 0x18
    // Offset: 0x98
    UnityEngine::Bounds m_ViewBounds;
    // Field size check
    static_assert(sizeof(UnityEngine::Bounds) == 0x18);
    // private UnityEngine.Vector2 m_Velocity
    // Size: 0x8
    // Offset: 0xB0
    UnityEngine::Vector2 m_Velocity;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // private System.Boolean m_Dragging
    // Size: 0x1
    // Offset: 0xB8
    bool m_Dragging;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Scrolling
    // Size: 0x1
    // Offset: 0xB9
    bool m_Scrolling;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Scrolling and: m_PrevPosition
    char __padding23[0x2] = {};
    // private UnityEngine.Vector2 m_PrevPosition
    // Size: 0x8
    // Offset: 0xBC
    UnityEngine::Vector2 m_PrevPosition;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Bounds m_PrevContentBounds
    // Size: 0x18
    // Offset: 0xC4
    UnityEngine::Bounds m_PrevContentBounds;
    // Field size check
    static_assert(sizeof(UnityEngine::Bounds) == 0x18);
    // private UnityEngine.Bounds m_PrevViewBounds
    // Size: 0x18
    // Offset: 0xDC
    UnityEngine::Bounds m_PrevViewBounds;
    // Field size check
    static_assert(sizeof(UnityEngine::Bounds) == 0x18);
    // private System.Boolean m_HasRebuiltLayout
    // Size: 0x1
    // Offset: 0xF4
    bool m_HasRebuiltLayout;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_HSliderExpand
    // Size: 0x1
    // Offset: 0xF5
    bool m_HSliderExpand;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_VSliderExpand
    // Size: 0x1
    // Offset: 0xF6
    bool m_VSliderExpand;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_VSliderExpand and: m_HSliderHeight
    char __padding29[0x1] = {};
    // private System.Single m_HSliderHeight
    // Size: 0x4
    // Offset: 0xF8
    float m_HSliderHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_VSliderWidth
    // Size: 0x4
    // Offset: 0xFC
    float m_VSliderWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.RectTransform m_Rect
    // Size: 0x8
    // Offset: 0x100
    UnityEngine::RectTransform* m_Rect;
    // Field size check
    static_assert(sizeof(UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.RectTransform m_HorizontalScrollbarRect
    // Size: 0x8
    // Offset: 0x108
    UnityEngine::RectTransform* m_HorizontalScrollbarRect;
    // Field size check
    static_assert(sizeof(UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.RectTransform m_VerticalScrollbarRect
    // Size: 0x8
    // Offset: 0x110
    UnityEngine::RectTransform* m_VerticalScrollbarRect;
    // Field size check
    static_assert(sizeof(UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.DrivenRectTransformTracker m_Tracker
    // Size: 0x1
    // Offset: 0x118
    UnityEngine::DrivenRectTransformTracker m_Tracker;
    // Field size check
    static_assert(sizeof(UnityEngine::DrivenRectTransformTracker) == 0x1);
    // Padding between fields: m_Tracker and: m_Corners
    char __padding35[0x7] = {};
    // private readonly UnityEngine.Vector3[] m_Corners
    // Size: 0x8
    // Offset: 0x120
    ::Array<UnityEngine::Vector3>* m_Corners;
    // Field size check
    static_assert(sizeof(::Array<UnityEngine::Vector3>*) == 0x8);
    // Creating value type constructor for type: ScrollRect
    ScrollRect(UnityEngine::RectTransform* m_Content_ = {}, bool m_Horizontal_ = {}, bool m_Vertical_ = {}, UnityEngine::UI::ScrollRect::MovementType m_MovementType_ = {}, float m_Elasticity_ = {}, bool m_Inertia_ = {}, float m_DecelerationRate_ = {}, float m_ScrollSensitivity_ = {}, UnityEngine::RectTransform* m_Viewport_ = {}, UnityEngine::UI::Scrollbar* m_HorizontalScrollbar_ = {}, UnityEngine::UI::Scrollbar* m_VerticalScrollbar_ = {}, UnityEngine::UI::ScrollRect::ScrollbarVisibility m_HorizontalScrollbarVisibility_ = {}, UnityEngine::UI::ScrollRect::ScrollbarVisibility m_VerticalScrollbarVisibility_ = {}, float m_HorizontalScrollbarSpacing_ = {}, float m_VerticalScrollbarSpacing_ = {}, UnityEngine::UI::ScrollRect::ScrollRectEvent* m_OnValueChanged_ = {}, UnityEngine::Vector2 m_PointerStartLocalCursor_ = {}, UnityEngine::Vector2 m_ContentStartPosition_ = {}, UnityEngine::RectTransform* m_ViewRect_ = {}, UnityEngine::Bounds m_ContentBounds_ = {}, UnityEngine::Bounds m_ViewBounds_ = {}, UnityEngine::Vector2 m_Velocity_ = {}, bool m_Dragging_ = {}, bool m_Scrolling_ = {}, UnityEngine::Vector2 m_PrevPosition_ = {}, UnityEngine::Bounds m_PrevContentBounds_ = {}, UnityEngine::Bounds m_PrevViewBounds_ = {}, bool m_HasRebuiltLayout_ = {}, bool m_HSliderExpand_ = {}, bool m_VSliderExpand_ = {}, float m_HSliderHeight_ = {}, float m_VSliderWidth_ = {}, UnityEngine::RectTransform* m_Rect_ = {}, UnityEngine::RectTransform* m_HorizontalScrollbarRect_ = {}, UnityEngine::RectTransform* m_VerticalScrollbarRect_ = {}, UnityEngine::DrivenRectTransformTracker m_Tracker_ = {}, ::Array<UnityEngine::Vector3>* m_Corners_ = {}) noexcept : m_Content{m_Content_}, m_Horizontal{m_Horizontal_}, m_Vertical{m_Vertical_}, m_MovementType{m_MovementType_}, m_Elasticity{m_Elasticity_}, m_Inertia{m_Inertia_}, m_DecelerationRate{m_DecelerationRate_}, m_ScrollSensitivity{m_ScrollSensitivity_}, m_Viewport{m_Viewport_}, m_HorizontalScrollbar{m_HorizontalScrollbar_}, m_VerticalScrollbar{m_VerticalScrollbar_}, m_HorizontalScrollbarVisibility{m_HorizontalScrollbarVisibility_}, m_VerticalScrollbarVisibility{m_VerticalScrollbarVisibility_}, m_HorizontalScrollbarSpacing{m_HorizontalScrollbarSpacing_}, m_VerticalScrollbarSpacing{m_VerticalScrollbarSpacing_}, m_OnValueChanged{m_OnValueChanged_}, m_PointerStartLocalCursor{m_PointerStartLocalCursor_}, m_ContentStartPosition{m_ContentStartPosition_}, m_ViewRect{m_ViewRect_}, m_ContentBounds{m_ContentBounds_}, m_ViewBounds{m_ViewBounds_}, m_Velocity{m_Velocity_}, m_Dragging{m_Dragging_}, m_Scrolling{m_Scrolling_}, m_PrevPosition{m_PrevPosition_}, m_PrevContentBounds{m_PrevContentBounds_}, m_PrevViewBounds{m_PrevViewBounds_}, m_HasRebuiltLayout{m_HasRebuiltLayout_}, m_HSliderExpand{m_HSliderExpand_}, m_VSliderExpand{m_VSliderExpand_}, m_HSliderHeight{m_HSliderHeight_}, m_VSliderWidth{m_VSliderWidth_}, m_Rect{m_Rect_}, m_HorizontalScrollbarRect{m_HorizontalScrollbarRect_}, m_VerticalScrollbarRect{m_VerticalScrollbarRect_}, m_Tracker{m_Tracker_}, m_Corners{m_Corners_} {}
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IInitializePotentialDragHandler
    operator UnityEngine::EventSystems::IInitializePotentialDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IInitializePotentialDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IBeginDragHandler
    operator UnityEngine::EventSystems::IBeginDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IBeginDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IEndDragHandler
    operator UnityEngine::EventSystems::IEndDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IEndDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IDragHandler
    operator UnityEngine::EventSystems::IDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IScrollHandler
    operator UnityEngine::EventSystems::IScrollHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IScrollHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::UI::ICanvasElement
    operator UnityEngine::UI::ICanvasElement() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ICanvasElement*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::UI::ILayoutElement
    operator UnityEngine::UI::ILayoutElement() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ILayoutElement*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::UI::ILayoutGroup
    operator UnityEngine::UI::ILayoutGroup() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ILayoutGroup*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public UnityEngine.RectTransform get_content()
    // Offset: 0x19B398C
    UnityEngine::RectTransform* get_content();
    // public System.Void set_content(UnityEngine.RectTransform value)
    // Offset: 0x19B3994
    void set_content(UnityEngine::RectTransform* value);
    // public System.Boolean get_horizontal()
    // Offset: 0x19B399C
    bool get_horizontal();
    // public System.Void set_horizontal(System.Boolean value)
    // Offset: 0x19B39A4
    void set_horizontal(bool value);
    // public System.Boolean get_vertical()
    // Offset: 0x19B39B0
    bool get_vertical();
    // public System.Void set_vertical(System.Boolean value)
    // Offset: 0x19B39B8
    void set_vertical(bool value);
    // public UnityEngine.UI.ScrollRect/MovementType get_movementType()
    // Offset: 0x19B39C4
    UnityEngine::UI::ScrollRect::MovementType get_movementType();
    // public System.Void set_movementType(UnityEngine.UI.ScrollRect/MovementType value)
    // Offset: 0x19B39CC
    void set_movementType(UnityEngine::UI::ScrollRect::MovementType value);
    // public System.Single get_elasticity()
    // Offset: 0x19B39D4
    float get_elasticity();
    // public System.Void set_elasticity(System.Single value)
    // Offset: 0x19B39DC
    void set_elasticity(float value);
    // public System.Boolean get_inertia()
    // Offset: 0x19B39E4
    bool get_inertia();
    // public System.Void set_inertia(System.Boolean value)
    // Offset: 0x19B39EC
    void set_inertia(bool value);
    // public System.Single get_decelerationRate()
    // Offset: 0x19B39F8
    float get_decelerationRate();
    // public System.Void set_decelerationRate(System.Single value)
    // Offset: 0x19B3A00
    void set_decelerationRate(float value);
    // public System.Single get_scrollSensitivity()
    // Offset: 0x19B3A08
    float get_scrollSensitivity();
    // public System.Void set_scrollSensitivity(System.Single value)
    // Offset: 0x19B3A10
    void set_scrollSensitivity(float value);
    // public UnityEngine.RectTransform get_viewport()
    // Offset: 0x19B3A18
    UnityEngine::RectTransform* get_viewport();
    // public System.Void set_viewport(UnityEngine.RectTransform value)
    // Offset: 0x19B3A20
    void set_viewport(UnityEngine::RectTransform* value);
    // public UnityEngine.UI.Scrollbar get_horizontalScrollbar()
    // Offset: 0x19B3AE4
    UnityEngine::UI::Scrollbar* get_horizontalScrollbar();
    // public System.Void set_horizontalScrollbar(UnityEngine.UI.Scrollbar value)
    // Offset: 0x19B3AEC
    void set_horizontalScrollbar(UnityEngine::UI::Scrollbar* value);
    // public UnityEngine.UI.Scrollbar get_verticalScrollbar()
    // Offset: 0x19B3C60
    UnityEngine::UI::Scrollbar* get_verticalScrollbar();
    // public System.Void set_verticalScrollbar(UnityEngine.UI.Scrollbar value)
    // Offset: 0x19B3C68
    void set_verticalScrollbar(UnityEngine::UI::Scrollbar* value);
    // public UnityEngine.UI.ScrollRect/ScrollbarVisibility get_horizontalScrollbarVisibility()
    // Offset: 0x19B3DDC
    UnityEngine::UI::ScrollRect::ScrollbarVisibility get_horizontalScrollbarVisibility();
    // public System.Void set_horizontalScrollbarVisibility(UnityEngine.UI.ScrollRect/ScrollbarVisibility value)
    // Offset: 0x19B3DE4
    void set_horizontalScrollbarVisibility(UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
    // public UnityEngine.UI.ScrollRect/ScrollbarVisibility get_verticalScrollbarVisibility()
    // Offset: 0x19B3DEC
    UnityEngine::UI::ScrollRect::ScrollbarVisibility get_verticalScrollbarVisibility();
    // public System.Void set_verticalScrollbarVisibility(UnityEngine.UI.ScrollRect/ScrollbarVisibility value)
    // Offset: 0x19B3DF4
    void set_verticalScrollbarVisibility(UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
    // public System.Single get_horizontalScrollbarSpacing()
    // Offset: 0x19B3DFC
    float get_horizontalScrollbarSpacing();
    // public System.Void set_horizontalScrollbarSpacing(System.Single value)
    // Offset: 0x19B3E04
    void set_horizontalScrollbarSpacing(float value);
    // public System.Single get_verticalScrollbarSpacing()
    // Offset: 0x19B3EA0
    float get_verticalScrollbarSpacing();
    // public System.Void set_verticalScrollbarSpacing(System.Single value)
    // Offset: 0x19B3EA8
    void set_verticalScrollbarSpacing(float value);
    // public UnityEngine.UI.ScrollRect/ScrollRectEvent get_onValueChanged()
    // Offset: 0x19B3EB0
    UnityEngine::UI::ScrollRect::ScrollRectEvent* get_onValueChanged();
    // public System.Void set_onValueChanged(UnityEngine.UI.ScrollRect/ScrollRectEvent value)
    // Offset: 0x19B3EB8
    void set_onValueChanged(UnityEngine::UI::ScrollRect::ScrollRectEvent* value);
    // protected UnityEngine.RectTransform get_viewRect()
    // Offset: 0x19B3EC0
    UnityEngine::RectTransform* get_viewRect();
    // public UnityEngine.Vector2 get_velocity()
    // Offset: 0x19B3FB4
    UnityEngine::Vector2 get_velocity();
    // public System.Void set_velocity(UnityEngine.Vector2 value)
    // Offset: 0x19B3FBC
    void set_velocity(UnityEngine::Vector2 value);
    // private UnityEngine.RectTransform get_rectTransform()
    // Offset: 0x19B3FC4
    UnityEngine::RectTransform* get_rectTransform();
    // public System.Void Rebuild(UnityEngine.UI.CanvasUpdate executing)
    // Offset: 0x19B4198
    void Rebuild(UnityEngine::UI::CanvasUpdate executing);
    // public System.Void LayoutComplete()
    // Offset: 0x19B4E68
    void LayoutComplete();
    // public System.Void GraphicUpdateComplete()
    // Offset: 0x19B4E6C
    void GraphicUpdateComplete();
    // private System.Void UpdateCachedData()
    // Offset: 0x19B424C
    void UpdateCachedData();
    // private System.Void EnsureLayoutHasRebuilt()
    // Offset: 0x19B52B0
    void EnsureLayoutHasRebuilt();
    // public System.Void StopMovement()
    // Offset: 0x19B5334
    void StopMovement();
    // public System.Void OnScroll(UnityEngine.EventSystems.PointerEventData data)
    // Offset: 0x19B53A0
    void OnScroll(UnityEngine::EventSystems::PointerEventData* data);
    // public System.Void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x19B5688
    void OnInitializePotentialDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x19B5710
    void OnBeginDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x19B5840
    void OnEndDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x19B5864
    void OnDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // protected System.Void SetContentAnchoredPosition(UnityEngine.Vector2 position)
    // Offset: 0x19B5B54
    void SetContentAnchoredPosition(UnityEngine::Vector2 position);
    // protected System.Void LateUpdate()
    // Offset: 0x19B5C6C
    void LateUpdate();
    // protected System.Void UpdatePrevData()
    // Offset: 0x19B4D8C
    void UpdatePrevData();
    // private System.Void UpdateScrollbars(UnityEngine.Vector2 offset)
    // Offset: 0x19B4B74
    void UpdateScrollbars(UnityEngine::Vector2 offset);
    // public UnityEngine.Vector2 get_normalizedPosition()
    // Offset: 0x19B6300
    UnityEngine::Vector2 get_normalizedPosition();
    // public System.Void set_normalizedPosition(UnityEngine.Vector2 value)
    // Offset: 0x19B66F4
    void set_normalizedPosition(UnityEngine::Vector2 value);
    // public System.Single get_horizontalNormalizedPosition()
    // Offset: 0x19B644C
    float get_horizontalNormalizedPosition();
    // public System.Void set_horizontalNormalizedPosition(System.Single value)
    // Offset: 0x19B6748
    void set_horizontalNormalizedPosition(float value);
    // public System.Single get_verticalNormalizedPosition()
    // Offset: 0x19B65A4
    float get_verticalNormalizedPosition();
    // public System.Void set_verticalNormalizedPosition(System.Single value)
    // Offset: 0x19B675C
    void set_verticalNormalizedPosition(float value);
    // private System.Void SetHorizontalNormalizedPosition(System.Single value)
    // Offset: 0x19B6770
    void SetHorizontalNormalizedPosition(float value);
    // private System.Void SetVerticalNormalizedPosition(System.Single value)
    // Offset: 0x19B6784
    void SetVerticalNormalizedPosition(float value);
    // protected System.Void SetNormalizedPosition(System.Single value, System.Int32 axis)
    // Offset: 0x19B6798
    void SetNormalizedPosition(float value, int axis);
    // static private System.Single RubberDelta(System.Single overStretching, System.Single viewSize)
    // Offset: 0x19B5AA8
    static float RubberDelta(float overStretching, float viewSize);
    // private System.Boolean get_hScrollingNeeded()
    // Offset: 0x19B69B4
    bool get_hScrollingNeeded();
    // private System.Boolean get_vScrollingNeeded()
    // Offset: 0x19B6A1C
    bool get_vScrollingNeeded();
    // public System.Void CalculateLayoutInputHorizontal()
    // Offset: 0x19B6A84
    void CalculateLayoutInputHorizontal();
    // public System.Void CalculateLayoutInputVertical()
    // Offset: 0x19B6A88
    void CalculateLayoutInputVertical();
    // public System.Single get_minWidth()
    // Offset: 0x19B6A8C
    float get_minWidth();
    // public System.Single get_preferredWidth()
    // Offset: 0x19B6A94
    float get_preferredWidth();
    // public System.Single get_flexibleWidth()
    // Offset: 0x19B6A9C
    float get_flexibleWidth();
    // public System.Single get_minHeight()
    // Offset: 0x19B6AA4
    float get_minHeight();
    // public System.Single get_preferredHeight()
    // Offset: 0x19B6AAC
    float get_preferredHeight();
    // public System.Single get_flexibleHeight()
    // Offset: 0x19B6AB4
    float get_flexibleHeight();
    // public System.Int32 get_layoutPriority()
    // Offset: 0x19B6ABC
    int get_layoutPriority();
    // public System.Void SetLayoutHorizontal()
    // Offset: 0x19B6AC4
    void SetLayoutHorizontal();
    // public System.Void SetLayoutVertical()
    // Offset: 0x19B7188
    void SetLayoutVertical();
    // private System.Void UpdateScrollbarVisibility()
    // Offset: 0x19B6358
    void UpdateScrollbarVisibility();
    // static private System.Void UpdateOneScrollbarVisibility(System.Boolean xScrollingNeeded, System.Boolean xAxisEnabled, UnityEngine.UI.ScrollRect/ScrollbarVisibility scrollbarVisibility, UnityEngine.UI.Scrollbar scrollbar)
    // Offset: 0x19B760C
    static void UpdateOneScrollbarVisibility(bool xScrollingNeeded, bool xAxisEnabled, UnityEngine::UI::ScrollRect::ScrollbarVisibility scrollbarVisibility, UnityEngine::UI::Scrollbar* scrollbar);
    // private System.Void UpdateScrollbarLayout()
    // Offset: 0x19B72E4
    void UpdateScrollbarLayout();
    // protected System.Void UpdateBounds()
    // Offset: 0x19B4618
    void UpdateBounds();
    // static System.Void AdjustBounds(ref UnityEngine.Bounds viewBounds, ref UnityEngine.Vector2 contentPivot, ref UnityEngine.Vector3 contentSize, ref UnityEngine.Vector3 contentPos)
    // Offset: 0x19B7710
    static void AdjustBounds(UnityEngine::Bounds& viewBounds, UnityEngine::Vector2& contentPivot, UnityEngine::Vector3& contentSize, UnityEngine::Vector3& contentPos);
    // private UnityEngine.Bounds GetBounds()
    // Offset: 0x19B7094
    UnityEngine::Bounds GetBounds();
    // static UnityEngine.Bounds InternalGetBounds(UnityEngine.Vector3[] corners, ref UnityEngine.Matrix4x4 viewWorldToLocalMatrix)
    // Offset: 0x19B7850
    static UnityEngine::Bounds InternalGetBounds(::Array<UnityEngine::Vector3>* corners, UnityEngine::Matrix4x4& viewWorldToLocalMatrix);
    // private UnityEngine.Vector2 CalculateOffset(UnityEngine.Vector2 delta)
    // Offset: 0x19B564C
    UnityEngine::Vector2 CalculateOffset(UnityEngine::Vector2 delta);
    // static UnityEngine.Vector2 InternalCalculateOffset(ref UnityEngine.Bounds viewBounds, ref UnityEngine.Bounds contentBounds, System.Boolean horizontal, System.Boolean vertical, UnityEngine.UI.ScrollRect/MovementType movementType, ref UnityEngine.Vector2 delta)
    // Offset: 0x19B7A54
    static UnityEngine::Vector2 InternalCalculateOffset(UnityEngine::Bounds& viewBounds, UnityEngine::Bounds& contentBounds, bool horizontal, bool vertical, UnityEngine::UI::ScrollRect::MovementType movementType, UnityEngine::Vector2& delta);
    // protected System.Void SetDirty()
    // Offset: 0x19B3E0C
    void SetDirty();
    // protected System.Void SetDirtyCaching()
    // Offset: 0x19B3A28
    void SetDirtyCaching();
    // private UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform()
    // Offset: 0x19B7C48
    UnityEngine::Transform* UnityEngine_UI_ICanvasElement_get_transform();
    // protected System.Void .ctor()
    // Offset: 0x19B405C
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScrollRect* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScrollRect*, creationType>()));
    }
    // protected override System.Void OnEnable()
    // Offset: 0x19B4E70
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x19B5010
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDisable()
    void OnDisable();
    // public override System.Boolean IsActive()
    // Offset: 0x19B5220
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Boolean UIBehaviour::IsActive()
    bool IsActive();
    // protected override System.Void OnRectTransformDimensionsChange()
    // Offset: 0x19B69B0
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnRectTransformDimensionsChange()
    void OnRectTransformDimensionsChange();
  }; // UnityEngine.UI.ScrollRect
  #pragma pack(pop)
  static check_size<sizeof(ScrollRect), 288 + sizeof(::Array<UnityEngine::Vector3>*)> __UnityEngine_UI_ScrollRectSizeCheck;
  static_assert(sizeof(ScrollRect) == 0x128);
  // Writing MetadataGetter for method: ScrollRect::get_content
  // Il2CppName: get_content
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (ScrollRect::*)()>(&ScrollRect::get_content)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_content
  // Il2CppName: set_content
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::RectTransform*)>(&ScrollRect::set_content)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_horizontal
  // Il2CppName: get_horizontal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_horizontal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_horizontal
  // Il2CppName: set_horizontal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(bool)>(&ScrollRect::set_horizontal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_vertical
  // Il2CppName: get_vertical
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_vertical)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_vertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_vertical
  // Il2CppName: set_vertical
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(bool)>(&ScrollRect::set_vertical)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_vertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_movementType
  // Il2CppName: get_movementType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ScrollRect::MovementType (ScrollRect::*)()>(&ScrollRect::get_movementType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_movementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_movementType
  // Il2CppName: set_movementType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::ScrollRect::MovementType)>(&ScrollRect::set_movementType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_movementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::MovementType>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_elasticity
  // Il2CppName: get_elasticity
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_elasticity)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_elasticity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_elasticity
  // Il2CppName: set_elasticity
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_elasticity)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_elasticity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_inertia
  // Il2CppName: get_inertia
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_inertia)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_inertia", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_inertia
  // Il2CppName: set_inertia
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(bool)>(&ScrollRect::set_inertia)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_inertia", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_decelerationRate
  // Il2CppName: get_decelerationRate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_decelerationRate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_decelerationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_decelerationRate
  // Il2CppName: set_decelerationRate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_decelerationRate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_decelerationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_scrollSensitivity
  // Il2CppName: get_scrollSensitivity
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_scrollSensitivity)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_scrollSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_scrollSensitivity
  // Il2CppName: set_scrollSensitivity
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_scrollSensitivity)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_scrollSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_viewport
  // Il2CppName: get_viewport
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (ScrollRect::*)()>(&ScrollRect::get_viewport)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_viewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_viewport
  // Il2CppName: set_viewport
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::RectTransform*)>(&ScrollRect::set_viewport)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_viewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_horizontalScrollbar
  // Il2CppName: get_horizontalScrollbar
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Scrollbar* (ScrollRect::*)()>(&ScrollRect::get_horizontalScrollbar)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_horizontalScrollbar
  // Il2CppName: set_horizontalScrollbar
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::Scrollbar*)>(&ScrollRect::set_horizontalScrollbar)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Scrollbar*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_verticalScrollbar
  // Il2CppName: get_verticalScrollbar
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Scrollbar* (ScrollRect::*)()>(&ScrollRect::get_verticalScrollbar)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_verticalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_verticalScrollbar
  // Il2CppName: set_verticalScrollbar
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::Scrollbar*)>(&ScrollRect::set_verticalScrollbar)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_verticalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Scrollbar*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_horizontalScrollbarVisibility
  // Il2CppName: get_horizontalScrollbarVisibility
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ScrollRect::ScrollbarVisibility (ScrollRect::*)()>(&ScrollRect::get_horizontalScrollbarVisibility)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_horizontalScrollbarVisibility
  // Il2CppName: set_horizontalScrollbarVisibility
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::ScrollRect::ScrollbarVisibility)>(&ScrollRect::set_horizontalScrollbarVisibility)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::ScrollbarVisibility>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_verticalScrollbarVisibility
  // Il2CppName: get_verticalScrollbarVisibility
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ScrollRect::ScrollbarVisibility (ScrollRect::*)()>(&ScrollRect::get_verticalScrollbarVisibility)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_verticalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_verticalScrollbarVisibility
  // Il2CppName: set_verticalScrollbarVisibility
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::ScrollRect::ScrollbarVisibility)>(&ScrollRect::set_verticalScrollbarVisibility)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_verticalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::ScrollbarVisibility>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_horizontalScrollbarSpacing
  // Il2CppName: get_horizontalScrollbarSpacing
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_horizontalScrollbarSpacing)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_horizontalScrollbarSpacing
  // Il2CppName: set_horizontalScrollbarSpacing
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_horizontalScrollbarSpacing)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_verticalScrollbarSpacing
  // Il2CppName: get_verticalScrollbarSpacing
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_verticalScrollbarSpacing)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_verticalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_verticalScrollbarSpacing
  // Il2CppName: set_verticalScrollbarSpacing
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_verticalScrollbarSpacing)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_verticalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_onValueChanged
  // Il2CppName: get_onValueChanged
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ScrollRect::ScrollRectEvent* (ScrollRect::*)()>(&ScrollRect::get_onValueChanged)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_onValueChanged
  // Il2CppName: set_onValueChanged
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::ScrollRect::ScrollRectEvent*)>(&ScrollRect::set_onValueChanged)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::ScrollRectEvent*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_viewRect
  // Il2CppName: get_viewRect
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (ScrollRect::*)()>(&ScrollRect::get_viewRect)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_viewRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_velocity
  // Il2CppName: get_velocity
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (ScrollRect::*)()>(&ScrollRect::get_velocity)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_velocity
  // Il2CppName: set_velocity
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::set_velocity)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_rectTransform
  // Il2CppName: get_rectTransform
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (ScrollRect::*)()>(&ScrollRect::get_rectTransform)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::Rebuild
  // Il2CppName: Rebuild
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::CanvasUpdate)>(&ScrollRect::Rebuild)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::LayoutComplete
  // Il2CppName: LayoutComplete
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::LayoutComplete)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::GraphicUpdateComplete
  // Il2CppName: GraphicUpdateComplete
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::GraphicUpdateComplete)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::UpdateCachedData
  // Il2CppName: UpdateCachedData
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdateCachedData)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateCachedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::EnsureLayoutHasRebuilt
  // Il2CppName: EnsureLayoutHasRebuilt
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::EnsureLayoutHasRebuilt)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "EnsureLayoutHasRebuilt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::StopMovement
  // Il2CppName: StopMovement
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::StopMovement)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "StopMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::OnScroll
  // Il2CppName: OnScroll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnScroll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::OnInitializePotentialDrag
  // Il2CppName: OnInitializePotentialDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnInitializePotentialDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnInitializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::OnBeginDrag
  // Il2CppName: OnBeginDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnBeginDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::OnEndDrag
  // Il2CppName: OnEndDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnEndDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnEndDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::OnDrag
  // Il2CppName: OnDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::SetContentAnchoredPosition
  // Il2CppName: SetContentAnchoredPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::SetContentAnchoredPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetContentAnchoredPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::LateUpdate
  // Il2CppName: LateUpdate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::LateUpdate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::UpdatePrevData
  // Il2CppName: UpdatePrevData
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdatePrevData)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdatePrevData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::UpdateScrollbars
  // Il2CppName: UpdateScrollbars
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::UpdateScrollbars)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateScrollbars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_normalizedPosition
  // Il2CppName: get_normalizedPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (ScrollRect::*)()>(&ScrollRect::get_normalizedPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_normalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_normalizedPosition
  // Il2CppName: set_normalizedPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::set_normalizedPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_normalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_horizontalNormalizedPosition
  // Il2CppName: get_horizontalNormalizedPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_horizontalNormalizedPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_horizontalNormalizedPosition
  // Il2CppName: set_horizontalNormalizedPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_horizontalNormalizedPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_verticalNormalizedPosition
  // Il2CppName: get_verticalNormalizedPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_verticalNormalizedPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_verticalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::set_verticalNormalizedPosition
  // Il2CppName: set_verticalNormalizedPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_verticalNormalizedPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_verticalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::SetHorizontalNormalizedPosition
  // Il2CppName: SetHorizontalNormalizedPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::SetHorizontalNormalizedPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetHorizontalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::SetVerticalNormalizedPosition
  // Il2CppName: SetVerticalNormalizedPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::SetVerticalNormalizedPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetVerticalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::SetNormalizedPosition
  // Il2CppName: SetNormalizedPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float, int)>(&ScrollRect::SetNormalizedPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::RubberDelta
  // Il2CppName: RubberDelta
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float)>(&ScrollRect::RubberDelta)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "RubberDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_hScrollingNeeded
  // Il2CppName: get_hScrollingNeeded
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_hScrollingNeeded)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_hScrollingNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_vScrollingNeeded
  // Il2CppName: get_vScrollingNeeded
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_vScrollingNeeded)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_vScrollingNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::CalculateLayoutInputHorizontal
  // Il2CppName: CalculateLayoutInputHorizontal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::CalculateLayoutInputHorizontal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::CalculateLayoutInputVertical
  // Il2CppName: CalculateLayoutInputVertical
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::CalculateLayoutInputVertical)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_minWidth
  // Il2CppName: get_minWidth
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_minWidth)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_preferredWidth
  // Il2CppName: get_preferredWidth
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_preferredWidth)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_flexibleWidth
  // Il2CppName: get_flexibleWidth
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_flexibleWidth)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_minHeight
  // Il2CppName: get_minHeight
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_minHeight)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_preferredHeight
  // Il2CppName: get_preferredHeight
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_preferredHeight)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_flexibleHeight
  // Il2CppName: get_flexibleHeight
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_flexibleHeight)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::get_layoutPriority
  // Il2CppName: get_layoutPriority
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ScrollRect::*)()>(&ScrollRect::get_layoutPriority)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::SetLayoutHorizontal
  // Il2CppName: SetLayoutHorizontal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::SetLayoutHorizontal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::SetLayoutVertical
  // Il2CppName: SetLayoutVertical
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::SetLayoutVertical)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::UpdateScrollbarVisibility
  // Il2CppName: UpdateScrollbarVisibility
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdateScrollbarVisibility)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::UpdateOneScrollbarVisibility
  // Il2CppName: UpdateOneScrollbarVisibility
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool, bool, UnityEngine::UI::ScrollRect::ScrollbarVisibility, UnityEngine::UI::Scrollbar*)>(&ScrollRect::UpdateOneScrollbarVisibility)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateOneScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::ScrollbarVisibility>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Scrollbar*>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::UpdateScrollbarLayout
  // Il2CppName: UpdateScrollbarLayout
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdateScrollbarLayout)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateScrollbarLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::UpdateBounds
  // Il2CppName: UpdateBounds
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdateBounds)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::AdjustBounds
  // Il2CppName: AdjustBounds
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Bounds&, UnityEngine::Vector2&, UnityEngine::Vector3&, UnityEngine::Vector3&)>(&ScrollRect::AdjustBounds)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "AdjustBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::GetBounds
  // Il2CppName: GetBounds
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (ScrollRect::*)()>(&ScrollRect::GetBounds)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "GetBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::InternalGetBounds
  // Il2CppName: InternalGetBounds
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (*)(::Array<UnityEngine::Vector3>*, UnityEngine::Matrix4x4&)>(&ScrollRect::InternalGetBounds)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "InternalGetBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::CalculateOffset
  // Il2CppName: CalculateOffset
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::CalculateOffset)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "CalculateOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::InternalCalculateOffset
  // Il2CppName: InternalCalculateOffset
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)(UnityEngine::Bounds&, UnityEngine::Bounds&, bool, bool, UnityEngine::UI::ScrollRect::MovementType, UnityEngine::Vector2&)>(&ScrollRect::InternalCalculateOffset)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "InternalCalculateOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::MovementType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::SetDirty
  // Il2CppName: SetDirty
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::SetDirty)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::SetDirtyCaching
  // Il2CppName: SetDirtyCaching
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::SetDirtyCaching)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetDirtyCaching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::UnityEngine_UI_ICanvasElement_get_transform
  // Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (ScrollRect::*)()>(&ScrollRect::UnityEngine_UI_ICanvasElement_get_transform)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::OnEnable
  // Il2CppName: OnEnable
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::OnEnable)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::OnDisable
  // Il2CppName: OnDisable
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::OnDisable)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::IsActive
  // Il2CppName: IsActive
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::IsActive)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: ScrollRect::OnRectTransformDimensionsChange
  // Il2CppName: OnRectTransformDimensionsChange
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::OnRectTransformDimensionsChange)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::ScrollRect*, "UnityEngine.UI", "ScrollRect");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::ScrollRect::MovementType, "UnityEngine.UI", "ScrollRect/MovementType");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::ScrollRect::ScrollbarVisibility, "UnityEngine.UI", "ScrollRect/ScrollbarVisibility");
