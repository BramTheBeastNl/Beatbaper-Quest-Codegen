// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
// Including type: UnityEngine.EventSystems.IUpdateSelectedHandler
#include "UnityEngine/EventSystems/IUpdateSelectedHandler.hpp"
// Including type: UnityEngine.EventSystems.IBeginDragHandler
#include "UnityEngine/EventSystems/IBeginDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IDragHandler
#include "UnityEngine/EventSystems/IDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IEndDragHandler
#include "UnityEngine/EventSystems/IEndDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerClickHandler
#include "UnityEngine/EventSystems/IPointerClickHandler.hpp"
// Including type: UnityEngine.EventSystems.ISubmitHandler
#include "UnityEngine/EventSystems/ISubmitHandler.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
// Including type: UnityEngine.TouchScreenKeyboardType
#include "UnityEngine/TouchScreenKeyboardType.hpp"
// Including type: UnityEngine.UIVertex
#include "UnityEngine/UIVertex.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: CanvasRenderer
  class CanvasRenderer;
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: TextGenerator
  class TextGenerator;
  // Forward declaring type: TouchScreenKeyboard
  class TouchScreenKeyboard;
  // Forward declaring type: Coroutine
  class Coroutine;
  // Forward declaring type: WaitForSecondsRealtime
  class WaitForSecondsRealtime;
  // Forward declaring type: Event
  class Event;
  // Skipping declaration: Vector2 because it is already included!
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
  // Forward declaring type: Graphic
  class Graphic;
  // Skipping declaration: ContentType because it is already included!
  // Skipping declaration: LineType because it is already included!
  // Skipping declaration: InputType because it is already included!
  // Skipping declaration: CharacterValidation because it is already included!
  // Forward declaring type: CanvasUpdate
  struct CanvasUpdate;
  // Forward declaring type: VertexHelper
  class VertexHelper;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: BaseInput
  class BaseInput;
  // Forward declaring type: PointerEventData
  class PointerEventData;
  // Forward declaring type: BaseEventData
  class BaseEventData;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Size: 0x210
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.InputField
  // [AddComponentMenu] Offset: DC50C0
  class InputField : public UnityEngine::UI::Selectable/*, public UnityEngine::EventSystems::IUpdateSelectedHandler, public UnityEngine::EventSystems::IBeginDragHandler, public UnityEngine::EventSystems::IDragHandler, public UnityEngine::EventSystems::IEndDragHandler, public UnityEngine::EventSystems::IPointerClickHandler, public UnityEngine::EventSystems::ISubmitHandler, public UnityEngine::UI::ICanvasElement, public UnityEngine::UI::ILayoutElement*/ {
    public:
    // Nested type: UnityEngine::UI::InputField::ContentType
    struct ContentType;
    // Nested type: UnityEngine::UI::InputField::InputType
    struct InputType;
    // Nested type: UnityEngine::UI::InputField::CharacterValidation
    struct CharacterValidation;
    // Nested type: UnityEngine::UI::InputField::LineType
    struct LineType;
    // Nested type: UnityEngine::UI::InputField::OnValidateInput
    class OnValidateInput;
    // Nested type: UnityEngine::UI::InputField::SubmitEvent
    class SubmitEvent;
    // Nested type: UnityEngine::UI::InputField::OnChangeEvent
    class OnChangeEvent;
    // Nested type: UnityEngine::UI::InputField::EditState
    struct EditState;
    // Nested type: UnityEngine::UI::InputField::$CaretBlink$d__159
    class $CaretBlink$d__159;
    // Nested type: UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179
    class $MouseDragOutsideRect$d__179;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.InputField/ContentType
    struct ContentType/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: ContentType
      constexpr ContentType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.InputField/ContentType Standard
      static constexpr const int Standard = 0;
      // Get static field: static public UnityEngine.UI.InputField/ContentType Standard
      static UnityEngine::UI::InputField::ContentType _get_Standard();
      // Set static field: static public UnityEngine.UI.InputField/ContentType Standard
      static void _set_Standard(UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/ContentType Autocorrected
      static constexpr const int Autocorrected = 1;
      // Get static field: static public UnityEngine.UI.InputField/ContentType Autocorrected
      static UnityEngine::UI::InputField::ContentType _get_Autocorrected();
      // Set static field: static public UnityEngine.UI.InputField/ContentType Autocorrected
      static void _set_Autocorrected(UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/ContentType IntegerNumber
      static constexpr const int IntegerNumber = 2;
      // Get static field: static public UnityEngine.UI.InputField/ContentType IntegerNumber
      static UnityEngine::UI::InputField::ContentType _get_IntegerNumber();
      // Set static field: static public UnityEngine.UI.InputField/ContentType IntegerNumber
      static void _set_IntegerNumber(UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/ContentType DecimalNumber
      static constexpr const int DecimalNumber = 3;
      // Get static field: static public UnityEngine.UI.InputField/ContentType DecimalNumber
      static UnityEngine::UI::InputField::ContentType _get_DecimalNumber();
      // Set static field: static public UnityEngine.UI.InputField/ContentType DecimalNumber
      static void _set_DecimalNumber(UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/ContentType Alphanumeric
      static constexpr const int Alphanumeric = 4;
      // Get static field: static public UnityEngine.UI.InputField/ContentType Alphanumeric
      static UnityEngine::UI::InputField::ContentType _get_Alphanumeric();
      // Set static field: static public UnityEngine.UI.InputField/ContentType Alphanumeric
      static void _set_Alphanumeric(UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/ContentType Name
      static constexpr const int Name = 5;
      // Get static field: static public UnityEngine.UI.InputField/ContentType Name
      static UnityEngine::UI::InputField::ContentType _get_Name();
      // Set static field: static public UnityEngine.UI.InputField/ContentType Name
      static void _set_Name(UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/ContentType EmailAddress
      static constexpr const int EmailAddress = 6;
      // Get static field: static public UnityEngine.UI.InputField/ContentType EmailAddress
      static UnityEngine::UI::InputField::ContentType _get_EmailAddress();
      // Set static field: static public UnityEngine.UI.InputField/ContentType EmailAddress
      static void _set_EmailAddress(UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/ContentType Password
      static constexpr const int Password = 7;
      // Get static field: static public UnityEngine.UI.InputField/ContentType Password
      static UnityEngine::UI::InputField::ContentType _get_Password();
      // Set static field: static public UnityEngine.UI.InputField/ContentType Password
      static void _set_Password(UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/ContentType Pin
      static constexpr const int Pin = 8;
      // Get static field: static public UnityEngine.UI.InputField/ContentType Pin
      static UnityEngine::UI::InputField::ContentType _get_Pin();
      // Set static field: static public UnityEngine.UI.InputField/ContentType Pin
      static void _set_Pin(UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/ContentType Custom
      static constexpr const int Custom = 9;
      // Get static field: static public UnityEngine.UI.InputField/ContentType Custom
      static UnityEngine::UI::InputField::ContentType _get_Custom();
      // Set static field: static public UnityEngine.UI.InputField/ContentType Custom
      static void _set_Custom(UnityEngine::UI::InputField::ContentType value);
    }; // UnityEngine.UI.InputField/ContentType
    #pragma pack(pop)
    static check_size<sizeof(InputField::ContentType), 0 + sizeof(int)> __UnityEngine_UI_InputField_ContentTypeSizeCheck;
    static_assert(sizeof(InputField::ContentType) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.InputField/InputType
    struct InputType/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: InputType
      constexpr InputType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.InputField/InputType Standard
      static constexpr const int Standard = 0;
      // Get static field: static public UnityEngine.UI.InputField/InputType Standard
      static UnityEngine::UI::InputField::InputType _get_Standard();
      // Set static field: static public UnityEngine.UI.InputField/InputType Standard
      static void _set_Standard(UnityEngine::UI::InputField::InputType value);
      // static field const value: static public UnityEngine.UI.InputField/InputType AutoCorrect
      static constexpr const int AutoCorrect = 1;
      // Get static field: static public UnityEngine.UI.InputField/InputType AutoCorrect
      static UnityEngine::UI::InputField::InputType _get_AutoCorrect();
      // Set static field: static public UnityEngine.UI.InputField/InputType AutoCorrect
      static void _set_AutoCorrect(UnityEngine::UI::InputField::InputType value);
      // static field const value: static public UnityEngine.UI.InputField/InputType Password
      static constexpr const int Password = 2;
      // Get static field: static public UnityEngine.UI.InputField/InputType Password
      static UnityEngine::UI::InputField::InputType _get_Password();
      // Set static field: static public UnityEngine.UI.InputField/InputType Password
      static void _set_Password(UnityEngine::UI::InputField::InputType value);
    }; // UnityEngine.UI.InputField/InputType
    #pragma pack(pop)
    static check_size<sizeof(InputField::InputType), 0 + sizeof(int)> __UnityEngine_UI_InputField_InputTypeSizeCheck;
    static_assert(sizeof(InputField::InputType) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.InputField/CharacterValidation
    struct CharacterValidation/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: CharacterValidation
      constexpr CharacterValidation(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.InputField/CharacterValidation None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.UI.InputField/CharacterValidation None
      static UnityEngine::UI::InputField::CharacterValidation _get_None();
      // Set static field: static public UnityEngine.UI.InputField/CharacterValidation None
      static void _set_None(UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/CharacterValidation Integer
      static constexpr const int Integer = 1;
      // Get static field: static public UnityEngine.UI.InputField/CharacterValidation Integer
      static UnityEngine::UI::InputField::CharacterValidation _get_Integer();
      // Set static field: static public UnityEngine.UI.InputField/CharacterValidation Integer
      static void _set_Integer(UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/CharacterValidation Decimal
      static constexpr const int Decimal = 2;
      // Get static field: static public UnityEngine.UI.InputField/CharacterValidation Decimal
      static UnityEngine::UI::InputField::CharacterValidation _get_Decimal();
      // Set static field: static public UnityEngine.UI.InputField/CharacterValidation Decimal
      static void _set_Decimal(UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/CharacterValidation Alphanumeric
      static constexpr const int Alphanumeric = 3;
      // Get static field: static public UnityEngine.UI.InputField/CharacterValidation Alphanumeric
      static UnityEngine::UI::InputField::CharacterValidation _get_Alphanumeric();
      // Set static field: static public UnityEngine.UI.InputField/CharacterValidation Alphanumeric
      static void _set_Alphanumeric(UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/CharacterValidation Name
      static constexpr const int Name = 4;
      // Get static field: static public UnityEngine.UI.InputField/CharacterValidation Name
      static UnityEngine::UI::InputField::CharacterValidation _get_Name();
      // Set static field: static public UnityEngine.UI.InputField/CharacterValidation Name
      static void _set_Name(UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/CharacterValidation EmailAddress
      static constexpr const int EmailAddress = 5;
      // Get static field: static public UnityEngine.UI.InputField/CharacterValidation EmailAddress
      static UnityEngine::UI::InputField::CharacterValidation _get_EmailAddress();
      // Set static field: static public UnityEngine.UI.InputField/CharacterValidation EmailAddress
      static void _set_EmailAddress(UnityEngine::UI::InputField::CharacterValidation value);
    }; // UnityEngine.UI.InputField/CharacterValidation
    #pragma pack(pop)
    static check_size<sizeof(InputField::CharacterValidation), 0 + sizeof(int)> __UnityEngine_UI_InputField_CharacterValidationSizeCheck;
    static_assert(sizeof(InputField::CharacterValidation) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.InputField/LineType
    struct LineType/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: LineType
      constexpr LineType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.InputField/LineType SingleLine
      static constexpr const int SingleLine = 0;
      // Get static field: static public UnityEngine.UI.InputField/LineType SingleLine
      static UnityEngine::UI::InputField::LineType _get_SingleLine();
      // Set static field: static public UnityEngine.UI.InputField/LineType SingleLine
      static void _set_SingleLine(UnityEngine::UI::InputField::LineType value);
      // static field const value: static public UnityEngine.UI.InputField/LineType MultiLineSubmit
      static constexpr const int MultiLineSubmit = 1;
      // Get static field: static public UnityEngine.UI.InputField/LineType MultiLineSubmit
      static UnityEngine::UI::InputField::LineType _get_MultiLineSubmit();
      // Set static field: static public UnityEngine.UI.InputField/LineType MultiLineSubmit
      static void _set_MultiLineSubmit(UnityEngine::UI::InputField::LineType value);
      // static field const value: static public UnityEngine.UI.InputField/LineType MultiLineNewline
      static constexpr const int MultiLineNewline = 2;
      // Get static field: static public UnityEngine.UI.InputField/LineType MultiLineNewline
      static UnityEngine::UI::InputField::LineType _get_MultiLineNewline();
      // Set static field: static public UnityEngine.UI.InputField/LineType MultiLineNewline
      static void _set_MultiLineNewline(UnityEngine::UI::InputField::LineType value);
    }; // UnityEngine.UI.InputField/LineType
    #pragma pack(pop)
    static check_size<sizeof(InputField::LineType), 0 + sizeof(int)> __UnityEngine_UI_InputField_LineTypeSizeCheck;
    static_assert(sizeof(InputField::LineType) == 0x4);
    // protected UnityEngine.TouchScreenKeyboard m_Keyboard
    // Size: 0x8
    // Offset: 0xF8
    UnityEngine::TouchScreenKeyboard* m_Keyboard;
    // Field size check
    static_assert(sizeof(UnityEngine::TouchScreenKeyboard*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xDC6844
    // protected UnityEngine.UI.Text m_TextComponent
    // Size: 0x8
    // Offset: 0x100
    UnityEngine::UI::Text* m_TextComponent;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Text*) == 0x8);
    // protected UnityEngine.UI.Graphic m_Placeholder
    // Size: 0x8
    // Offset: 0x108
    UnityEngine::UI::Graphic* m_Placeholder;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Graphic*) == 0x8);
    // private UnityEngine.UI.InputField/ContentType m_ContentType
    // Size: 0x4
    // Offset: 0x110
    UnityEngine::UI::InputField::ContentType m_ContentType;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::InputField::ContentType) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0xDC68B0
    // private UnityEngine.UI.InputField/InputType m_InputType
    // Size: 0x4
    // Offset: 0x114
    UnityEngine::UI::InputField::InputType m_InputType;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::InputField::InputType) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0xDC68FC
    // private System.Char m_AsteriskChar
    // Size: 0x2
    // Offset: 0x118
    ::Il2CppChar m_AsteriskChar;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // Padding between fields: m_AsteriskChar and: m_KeyboardType
    char __padding5[0x2] = {};
    // [FormerlySerializedAsAttribute] Offset: 0xDC6948
    // private UnityEngine.TouchScreenKeyboardType m_KeyboardType
    // Size: 0x4
    // Offset: 0x11C
    UnityEngine::TouchScreenKeyboardType m_KeyboardType;
    // Field size check
    static_assert(sizeof(UnityEngine::TouchScreenKeyboardType) == 0x4);
    // private UnityEngine.UI.InputField/LineType m_LineType
    // Size: 0x4
    // Offset: 0x120
    UnityEngine::UI::InputField::LineType m_LineType;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::InputField::LineType) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0xDC69A4
    // private System.Boolean m_HideMobileInput
    // Size: 0x1
    // Offset: 0x124
    bool m_HideMobileInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_HideMobileInput and: m_CharacterValidation
    char __padding8[0x3] = {};
    // [FormerlySerializedAsAttribute] Offset: 0xDC69F0
    // private UnityEngine.UI.InputField/CharacterValidation m_CharacterValidation
    // Size: 0x4
    // Offset: 0x128
    UnityEngine::UI::InputField::CharacterValidation m_CharacterValidation;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::InputField::CharacterValidation) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0xDC6A3C
    // private System.Int32 m_CharacterLimit
    // Size: 0x4
    // Offset: 0x12C
    int m_CharacterLimit;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0xDC6A88
    // [FormerlySerializedAsAttribute] Offset: 0xDC6A88
    // [FormerlySerializedAsAttribute] Offset: 0xDC6A88
    // private UnityEngine.UI.InputField/SubmitEvent m_OnEndEdit
    // Size: 0x8
    // Offset: 0x130
    UnityEngine::UI::InputField::SubmitEvent* m_OnEndEdit;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::InputField::SubmitEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xDC6B1C
    // [FormerlySerializedAsAttribute] Offset: 0xDC6B1C
    // private UnityEngine.UI.InputField/OnChangeEvent m_OnValueChanged
    // Size: 0x8
    // Offset: 0x138
    UnityEngine::UI::InputField::OnChangeEvent* m_OnValueChanged;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::InputField::OnChangeEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xDC6B8C
    // private UnityEngine.UI.InputField/OnValidateInput m_OnValidateInput
    // Size: 0x8
    // Offset: 0x140
    UnityEngine::UI::InputField::OnValidateInput* m_OnValidateInput;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::InputField::OnValidateInput*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xDC6BD8
    // private UnityEngine.Color m_CaretColor
    // Size: 0x10
    // Offset: 0x148
    UnityEngine::Color m_CaretColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // private System.Boolean m_CustomCaretColor
    // Size: 0x1
    // Offset: 0x158
    bool m_CustomCaretColor;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_CustomCaretColor and: m_SelectionColor
    char __padding15[0x3] = {};
    // private UnityEngine.Color m_SelectionColor
    // Size: 0x10
    // Offset: 0x15C
    UnityEngine::Color m_SelectionColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // Padding between fields: m_SelectionColor and: m_Text
    char __padding16[0x4] = {};
    // [FormerlySerializedAsAttribute] Offset: 0xDC6C44
    // protected System.String m_Text
    // Size: 0x8
    // Offset: 0x170
    ::Il2CppString* m_Text;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [RangeAttribute] Offset: 0xDC6C90
    // private System.Single m_CaretBlinkRate
    // Size: 0x4
    // Offset: 0x178
    float m_CaretBlinkRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xDC6CD0
    // private System.Int32 m_CaretWidth
    // Size: 0x4
    // Offset: 0x17C
    int m_CaretWidth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_ReadOnly
    // Size: 0x1
    // Offset: 0x180
    bool m_ReadOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ReadOnly and: m_CaretPosition
    char __padding20[0x3] = {};
    // protected System.Int32 m_CaretPosition
    // Size: 0x4
    // Offset: 0x184
    int m_CaretPosition;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected System.Int32 m_CaretSelectPosition
    // Size: 0x4
    // Offset: 0x188
    int m_CaretSelectPosition;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_CaretSelectPosition and: caretRectTrans
    char __padding22[0x4] = {};
    // private UnityEngine.RectTransform caretRectTrans
    // Size: 0x8
    // Offset: 0x190
    UnityEngine::RectTransform* caretRectTrans;
    // Field size check
    static_assert(sizeof(UnityEngine::RectTransform*) == 0x8);
    // protected UnityEngine.UIVertex[] m_CursorVerts
    // Size: 0x8
    // Offset: 0x198
    ::Array<UnityEngine::UIVertex>* m_CursorVerts;
    // Field size check
    static_assert(sizeof(::Array<UnityEngine::UIVertex>*) == 0x8);
    // private UnityEngine.TextGenerator m_InputTextCache
    // Size: 0x8
    // Offset: 0x1A0
    UnityEngine::TextGenerator* m_InputTextCache;
    // Field size check
    static_assert(sizeof(UnityEngine::TextGenerator*) == 0x8);
    // private UnityEngine.CanvasRenderer m_CachedInputRenderer
    // Size: 0x8
    // Offset: 0x1A8
    UnityEngine::CanvasRenderer* m_CachedInputRenderer;
    // Field size check
    static_assert(sizeof(UnityEngine::CanvasRenderer*) == 0x8);
    // private System.Boolean m_PreventFontCallback
    // Size: 0x1
    // Offset: 0x1B0
    bool m_PreventFontCallback;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_PreventFontCallback and: m_Mesh
    char __padding27[0x7] = {};
    // protected UnityEngine.Mesh m_Mesh
    // Size: 0x8
    // Offset: 0x1B8
    UnityEngine::Mesh* m_Mesh;
    // Field size check
    static_assert(sizeof(UnityEngine::Mesh*) == 0x8);
    // private System.Boolean m_AllowInput
    // Size: 0x1
    // Offset: 0x1C0
    bool m_AllowInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ShouldActivateNextUpdate
    // Size: 0x1
    // Offset: 0x1C1
    bool m_ShouldActivateNextUpdate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_UpdateDrag
    // Size: 0x1
    // Offset: 0x1C2
    bool m_UpdateDrag;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_DragPositionOutOfBounds
    // Size: 0x1
    // Offset: 0x1C3
    bool m_DragPositionOutOfBounds;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean m_CaretVisible
    // Size: 0x1
    // Offset: 0x1C4
    bool m_CaretVisible;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_CaretVisible and: m_BlinkCoroutine
    char __padding33[0x3] = {};
    // private UnityEngine.Coroutine m_BlinkCoroutine
    // Size: 0x8
    // Offset: 0x1C8
    UnityEngine::Coroutine* m_BlinkCoroutine;
    // Field size check
    static_assert(sizeof(UnityEngine::Coroutine*) == 0x8);
    // private System.Single m_BlinkStartTime
    // Size: 0x4
    // Offset: 0x1D0
    float m_BlinkStartTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // protected System.Int32 m_DrawStart
    // Size: 0x4
    // Offset: 0x1D4
    int m_DrawStart;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected System.Int32 m_DrawEnd
    // Size: 0x4
    // Offset: 0x1D8
    int m_DrawEnd;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_DrawEnd and: m_DragCoroutine
    char __padding37[0x4] = {};
    // private UnityEngine.Coroutine m_DragCoroutine
    // Size: 0x8
    // Offset: 0x1E0
    UnityEngine::Coroutine* m_DragCoroutine;
    // Field size check
    static_assert(sizeof(UnityEngine::Coroutine*) == 0x8);
    // private System.String m_OriginalText
    // Size: 0x8
    // Offset: 0x1E8
    ::Il2CppString* m_OriginalText;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Boolean m_WasCanceled
    // Size: 0x1
    // Offset: 0x1F0
    bool m_WasCanceled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_HasDoneFocusTransition
    // Size: 0x1
    // Offset: 0x1F1
    bool m_HasDoneFocusTransition;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_HasDoneFocusTransition and: m_WaitForSecondsRealtime
    char __padding41[0x6] = {};
    // private UnityEngine.WaitForSecondsRealtime m_WaitForSecondsRealtime
    // Size: 0x8
    // Offset: 0x1F8
    UnityEngine::WaitForSecondsRealtime* m_WaitForSecondsRealtime;
    // Field size check
    static_assert(sizeof(UnityEngine::WaitForSecondsRealtime*) == 0x8);
    // private System.Boolean m_TouchKeyboardAllowsInPlaceEditing
    // Size: 0x1
    // Offset: 0x200
    bool m_TouchKeyboardAllowsInPlaceEditing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_TouchKeyboardAllowsInPlaceEditing and: m_ProcessingEvent
    char __padding43[0x7] = {};
    // private UnityEngine.Event m_ProcessingEvent
    // Size: 0x8
    // Offset: 0x208
    UnityEngine::Event* m_ProcessingEvent;
    // Field size check
    static_assert(sizeof(UnityEngine::Event*) == 0x8);
    // Creating value type constructor for type: InputField
    InputField(UnityEngine::TouchScreenKeyboard* m_Keyboard_ = {}, UnityEngine::UI::Text* m_TextComponent_ = {}, UnityEngine::UI::Graphic* m_Placeholder_ = {}, UnityEngine::UI::InputField::ContentType m_ContentType_ = {}, UnityEngine::UI::InputField::InputType m_InputType_ = {}, ::Il2CppChar m_AsteriskChar_ = {}, UnityEngine::TouchScreenKeyboardType m_KeyboardType_ = {}, UnityEngine::UI::InputField::LineType m_LineType_ = {}, bool m_HideMobileInput_ = {}, UnityEngine::UI::InputField::CharacterValidation m_CharacterValidation_ = {}, int m_CharacterLimit_ = {}, UnityEngine::UI::InputField::SubmitEvent* m_OnEndEdit_ = {}, UnityEngine::UI::InputField::OnChangeEvent* m_OnValueChanged_ = {}, UnityEngine::UI::InputField::OnValidateInput* m_OnValidateInput_ = {}, UnityEngine::Color m_CaretColor_ = {}, bool m_CustomCaretColor_ = {}, UnityEngine::Color m_SelectionColor_ = {}, ::Il2CppString* m_Text_ = {}, float m_CaretBlinkRate_ = {}, int m_CaretWidth_ = {}, bool m_ReadOnly_ = {}, int m_CaretPosition_ = {}, int m_CaretSelectPosition_ = {}, UnityEngine::RectTransform* caretRectTrans_ = {}, ::Array<UnityEngine::UIVertex>* m_CursorVerts_ = {}, UnityEngine::TextGenerator* m_InputTextCache_ = {}, UnityEngine::CanvasRenderer* m_CachedInputRenderer_ = {}, bool m_PreventFontCallback_ = {}, UnityEngine::Mesh* m_Mesh_ = {}, bool m_AllowInput_ = {}, bool m_ShouldActivateNextUpdate_ = {}, bool m_UpdateDrag_ = {}, bool m_DragPositionOutOfBounds_ = {}, bool m_CaretVisible_ = {}, UnityEngine::Coroutine* m_BlinkCoroutine_ = {}, float m_BlinkStartTime_ = {}, int m_DrawStart_ = {}, int m_DrawEnd_ = {}, UnityEngine::Coroutine* m_DragCoroutine_ = {}, ::Il2CppString* m_OriginalText_ = {}, bool m_WasCanceled_ = {}, bool m_HasDoneFocusTransition_ = {}, UnityEngine::WaitForSecondsRealtime* m_WaitForSecondsRealtime_ = {}, bool m_TouchKeyboardAllowsInPlaceEditing_ = {}, UnityEngine::Event* m_ProcessingEvent_ = {}) noexcept : m_Keyboard{m_Keyboard_}, m_TextComponent{m_TextComponent_}, m_Placeholder{m_Placeholder_}, m_ContentType{m_ContentType_}, m_InputType{m_InputType_}, m_AsteriskChar{m_AsteriskChar_}, m_KeyboardType{m_KeyboardType_}, m_LineType{m_LineType_}, m_HideMobileInput{m_HideMobileInput_}, m_CharacterValidation{m_CharacterValidation_}, m_CharacterLimit{m_CharacterLimit_}, m_OnEndEdit{m_OnEndEdit_}, m_OnValueChanged{m_OnValueChanged_}, m_OnValidateInput{m_OnValidateInput_}, m_CaretColor{m_CaretColor_}, m_CustomCaretColor{m_CustomCaretColor_}, m_SelectionColor{m_SelectionColor_}, m_Text{m_Text_}, m_CaretBlinkRate{m_CaretBlinkRate_}, m_CaretWidth{m_CaretWidth_}, m_ReadOnly{m_ReadOnly_}, m_CaretPosition{m_CaretPosition_}, m_CaretSelectPosition{m_CaretSelectPosition_}, caretRectTrans{caretRectTrans_}, m_CursorVerts{m_CursorVerts_}, m_InputTextCache{m_InputTextCache_}, m_CachedInputRenderer{m_CachedInputRenderer_}, m_PreventFontCallback{m_PreventFontCallback_}, m_Mesh{m_Mesh_}, m_AllowInput{m_AllowInput_}, m_ShouldActivateNextUpdate{m_ShouldActivateNextUpdate_}, m_UpdateDrag{m_UpdateDrag_}, m_DragPositionOutOfBounds{m_DragPositionOutOfBounds_}, m_CaretVisible{m_CaretVisible_}, m_BlinkCoroutine{m_BlinkCoroutine_}, m_BlinkStartTime{m_BlinkStartTime_}, m_DrawStart{m_DrawStart_}, m_DrawEnd{m_DrawEnd_}, m_DragCoroutine{m_DragCoroutine_}, m_OriginalText{m_OriginalText_}, m_WasCanceled{m_WasCanceled_}, m_HasDoneFocusTransition{m_HasDoneFocusTransition_}, m_WaitForSecondsRealtime{m_WaitForSecondsRealtime_}, m_TouchKeyboardAllowsInPlaceEditing{m_TouchKeyboardAllowsInPlaceEditing_}, m_ProcessingEvent{m_ProcessingEvent_} {}
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IUpdateSelectedHandler
    operator UnityEngine::EventSystems::IUpdateSelectedHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IUpdateSelectedHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IBeginDragHandler
    operator UnityEngine::EventSystems::IBeginDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IBeginDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IDragHandler
    operator UnityEngine::EventSystems::IDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IEndDragHandler
    operator UnityEngine::EventSystems::IEndDragHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IEndDragHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::IPointerClickHandler
    operator UnityEngine::EventSystems::IPointerClickHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::IPointerClickHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::EventSystems::ISubmitHandler
    operator UnityEngine::EventSystems::ISubmitHandler() noexcept {
      return *reinterpret_cast<UnityEngine::EventSystems::ISubmitHandler*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::UI::ICanvasElement
    operator UnityEngine::UI::ICanvasElement() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ICanvasElement*>(this);
    }
    // Creating interface conversion operator: operator UnityEngine::UI::ILayoutElement
    operator UnityEngine::UI::ILayoutElement() noexcept {
      return *reinterpret_cast<UnityEngine::UI::ILayoutElement*>(this);
    }
    // Get static field: static private readonly System.Char[] kSeparators
    static ::Array<::Il2CppChar>* _get_kSeparators();
    // Set static field: static private readonly System.Char[] kSeparators
    static void _set_kSeparators(::Array<::Il2CppChar>* value);
    // static field const value: static private System.Single kHScrollSpeed
    static constexpr const float kHScrollSpeed = 0.05;
    // Get static field: static private System.Single kHScrollSpeed
    static float _get_kHScrollSpeed();
    // Set static field: static private System.Single kHScrollSpeed
    static void _set_kHScrollSpeed(float value);
    // static field const value: static private System.Single kVScrollSpeed
    static constexpr const float kVScrollSpeed = 0.1;
    // Get static field: static private System.Single kVScrollSpeed
    static float _get_kVScrollSpeed();
    // Set static field: static private System.Single kVScrollSpeed
    static void _set_kVScrollSpeed(float value);
    // static field const value: static private System.String kEmailSpecialCharacters
    static constexpr const char* kEmailSpecialCharacters = "!#$%&'*+-/=?^_`{|}~";
    // Get static field: static private System.String kEmailSpecialCharacters
    static ::Il2CppString* _get_kEmailSpecialCharacters();
    // Set static field: static private System.String kEmailSpecialCharacters
    static void _set_kEmailSpecialCharacters(::Il2CppString* value);
    // static field const value: static private System.Int32 k_MaxTextLength
    static constexpr const int k_MaxTextLength = 16382;
    // Get static field: static private System.Int32 k_MaxTextLength
    static int _get_k_MaxTextLength();
    // Set static field: static private System.Int32 k_MaxTextLength
    static void _set_k_MaxTextLength(int value);
    // private UnityEngine.EventSystems.BaseInput get_input()
    // Offset: 0x19203E4
    UnityEngine::EventSystems::BaseInput* get_input();
    // private System.String get_compositionString()
    // Offset: 0x1920524
    ::Il2CppString* get_compositionString();
    // protected UnityEngine.Mesh get_mesh()
    // Offset: 0x1920804
    UnityEngine::Mesh* get_mesh();
    // protected UnityEngine.TextGenerator get_cachedInputTextGenerator()
    // Offset: 0x19208A8
    UnityEngine::TextGenerator* get_cachedInputTextGenerator();
    // public System.Void set_shouldHideMobileInput(System.Boolean value)
    // Offset: 0x1920914
    void set_shouldHideMobileInput(bool value);
    // public System.Boolean get_shouldHideMobileInput()
    // Offset: 0x1920974
    bool get_shouldHideMobileInput();
    // private System.Boolean get_shouldActivateOnSelect()
    // Offset: 0x19209C8
    bool get_shouldActivateOnSelect();
    // public System.String get_text()
    // Offset: 0x19209E8
    ::Il2CppString* get_text();
    // public System.Void set_text(System.String value)
    // Offset: 0x19209F0
    void set_text(::Il2CppString* value);
    // public System.Void SetTextWithoutNotify(System.String input)
    // Offset: 0x1920CC8
    void SetTextWithoutNotify(::Il2CppString* input);
    // private System.Void SetText(System.String value, System.Boolean sendCallback)
    // Offset: 0x19209F8
    void SetText(::Il2CppString* value, bool sendCallback);
    // public System.Boolean get_isFocused()
    // Offset: 0x19211D4
    bool get_isFocused();
    // public System.Single get_caretBlinkRate()
    // Offset: 0x19211DC
    float get_caretBlinkRate();
    // public System.Void set_caretBlinkRate(System.Single value)
    // Offset: 0x19211E4
    void set_caretBlinkRate(float value);
    // public System.Int32 get_caretWidth()
    // Offset: 0x19212C8
    int get_caretWidth();
    // public System.Void set_caretWidth(System.Int32 value)
    // Offset: 0x19212D0
    void set_caretWidth(int value);
    // public UnityEngine.UI.Text get_textComponent()
    // Offset: 0x19213B4
    UnityEngine::UI::Text* get_textComponent();
    // public System.Void set_textComponent(UnityEngine.UI.Text value)
    // Offset: 0x19213BC
    void set_textComponent(UnityEngine::UI::Text* value);
    // public UnityEngine.UI.Graphic get_placeholder()
    // Offset: 0x1921610
    UnityEngine::UI::Graphic* get_placeholder();
    // public System.Void set_placeholder(UnityEngine.UI.Graphic value)
    // Offset: 0x1921618
    void set_placeholder(UnityEngine::UI::Graphic* value);
    // public UnityEngine.Color get_caretColor()
    // Offset: 0x1921678
    UnityEngine::Color get_caretColor();
    // public System.Void set_caretColor(UnityEngine.Color value)
    // Offset: 0x19216C0
    void set_caretColor(UnityEngine::Color value);
    // public System.Boolean get_customCaretColor()
    // Offset: 0x19216FC
    bool get_customCaretColor();
    // public System.Void set_customCaretColor(System.Boolean value)
    // Offset: 0x1921704
    void set_customCaretColor(bool value);
    // public UnityEngine.Color get_selectionColor()
    // Offset: 0x1921728
    UnityEngine::Color get_selectionColor();
    // public System.Void set_selectionColor(UnityEngine.Color value)
    // Offset: 0x192173C
    void set_selectionColor(UnityEngine::Color value);
    // public UnityEngine.UI.InputField/SubmitEvent get_onEndEdit()
    // Offset: 0x1921778
    UnityEngine::UI::InputField::SubmitEvent* get_onEndEdit();
    // public System.Void set_onEndEdit(UnityEngine.UI.InputField/SubmitEvent value)
    // Offset: 0x1921780
    void set_onEndEdit(UnityEngine::UI::InputField::SubmitEvent* value);
    // public UnityEngine.UI.InputField/OnChangeEvent get_onValueChange()
    // Offset: 0x19217E0
    UnityEngine::UI::InputField::OnChangeEvent* get_onValueChange();
    // public System.Void set_onValueChange(UnityEngine.UI.InputField/OnChangeEvent value)
    // Offset: 0x19217E8
    void set_onValueChange(UnityEngine::UI::InputField::OnChangeEvent* value);
    // public UnityEngine.UI.InputField/OnChangeEvent get_onValueChanged()
    // Offset: 0x192184C
    UnityEngine::UI::InputField::OnChangeEvent* get_onValueChanged();
    // public System.Void set_onValueChanged(UnityEngine.UI.InputField/OnChangeEvent value)
    // Offset: 0x19217EC
    void set_onValueChanged(UnityEngine::UI::InputField::OnChangeEvent* value);
    // public UnityEngine.UI.InputField/OnValidateInput get_onValidateInput()
    // Offset: 0x1921854
    UnityEngine::UI::InputField::OnValidateInput* get_onValidateInput();
    // public System.Void set_onValidateInput(UnityEngine.UI.InputField/OnValidateInput value)
    // Offset: 0x192185C
    void set_onValidateInput(UnityEngine::UI::InputField::OnValidateInput* value);
    // public System.Int32 get_characterLimit()
    // Offset: 0x19218BC
    int get_characterLimit();
    // public System.Void set_characterLimit(System.Int32 value)
    // Offset: 0x19218C4
    void set_characterLimit(int value);
    // public UnityEngine.UI.InputField/ContentType get_contentType()
    // Offset: 0x1921988
    UnityEngine::UI::InputField::ContentType get_contentType();
    // public System.Void set_contentType(UnityEngine.UI.InputField/ContentType value)
    // Offset: 0x1921990
    void set_contentType(UnityEngine::UI::InputField::ContentType value);
    // public UnityEngine.UI.InputField/LineType get_lineType()
    // Offset: 0x1921AC4
    UnityEngine::UI::InputField::LineType get_lineType();
    // public System.Void set_lineType(UnityEngine.UI.InputField/LineType value)
    // Offset: 0x1921ACC
    void set_lineType(UnityEngine::UI::InputField::LineType value);
    // public UnityEngine.UI.InputField/InputType get_inputType()
    // Offset: 0x1921C00
    UnityEngine::UI::InputField::InputType get_inputType();
    // public System.Void set_inputType(UnityEngine.UI.InputField/InputType value)
    // Offset: 0x1921C08
    void set_inputType(UnityEngine::UI::InputField::InputType value);
    // public UnityEngine.TouchScreenKeyboard get_touchScreenKeyboard()
    // Offset: 0x1921CAC
    UnityEngine::TouchScreenKeyboard* get_touchScreenKeyboard();
    // public UnityEngine.TouchScreenKeyboardType get_keyboardType()
    // Offset: 0x1921CB4
    UnityEngine::TouchScreenKeyboardType get_keyboardType();
    // public System.Void set_keyboardType(UnityEngine.TouchScreenKeyboardType value)
    // Offset: 0x1921CBC
    void set_keyboardType(UnityEngine::TouchScreenKeyboardType value);
    // public UnityEngine.UI.InputField/CharacterValidation get_characterValidation()
    // Offset: 0x1921D48
    UnityEngine::UI::InputField::CharacterValidation get_characterValidation();
    // public System.Void set_characterValidation(UnityEngine.UI.InputField/CharacterValidation value)
    // Offset: 0x1921D50
    void set_characterValidation(UnityEngine::UI::InputField::CharacterValidation value);
    // public System.Boolean get_readOnly()
    // Offset: 0x1921DDC
    bool get_readOnly();
    // public System.Void set_readOnly(System.Boolean value)
    // Offset: 0x1921DE4
    void set_readOnly(bool value);
    // public System.Boolean get_multiLine()
    // Offset: 0x1921DF0
    bool get_multiLine();
    // public System.Char get_asteriskChar()
    // Offset: 0x1921E04
    ::Il2CppChar get_asteriskChar();
    // public System.Void set_asteriskChar(System.Char value)
    // Offset: 0x1921E0C
    void set_asteriskChar(::Il2CppChar value);
    // public System.Boolean get_wasCanceled()
    // Offset: 0x1921E88
    bool get_wasCanceled();
    // protected System.Void ClampPos(ref System.Int32 pos)
    // Offset: 0x1921E90
    void ClampPos(int& pos);
    // protected System.Int32 get_caretPositionInternal()
    // Offset: 0x1921EC8
    int get_caretPositionInternal();
    // protected System.Void set_caretPositionInternal(System.Int32 value)
    // Offset: 0x1921EF8
    void set_caretPositionInternal(int value);
    // protected System.Int32 get_caretSelectPositionInternal()
    // Offset: 0x1921F30
    int get_caretSelectPositionInternal();
    // protected System.Void set_caretSelectPositionInternal(System.Int32 value)
    // Offset: 0x1921F60
    void set_caretSelectPositionInternal(int value);
    // public System.Int32 get_caretPosition()
    // Offset: 0x1921FCC
    int get_caretPosition();
    // public System.Void set_caretPosition(System.Int32 value)
    // Offset: 0x1921FFC
    void set_caretPosition(int value);
    // public System.Int32 get_selectionAnchorPosition()
    // Offset: 0x19220E8
    int get_selectionAnchorPosition();
    // public System.Void set_selectionAnchorPosition(System.Int32 value)
    // Offset: 0x1922028
    void set_selectionAnchorPosition(int value);
    // public System.Int32 get_selectionFocusPosition()
    // Offset: 0x1922118
    int get_selectionFocusPosition();
    // public System.Void set_selectionFocusPosition(System.Int32 value)
    // Offset: 0x1922088
    void set_selectionFocusPosition(int value);
    // private System.Collections.IEnumerator CaretBlink()
    // Offset: 0x1922748
    System::Collections::IEnumerator* CaretBlink();
    // private System.Void SetCaretVisible()
    // Offset: 0x19227B8
    void SetCaretVisible();
    // private System.Void SetCaretActive()
    // Offset: 0x1921268
    void SetCaretActive();
    // private System.Void UpdateCaretMaterial()
    // Offset: 0x19227F8
    void UpdateCaretMaterial();
    // protected System.Void OnFocus()
    // Offset: 0x1922924
    void OnFocus();
    // protected System.Void SelectAll()
    // Offset: 0x1922928
    void SelectAll();
    // public System.Void MoveTextEnd(System.Boolean shift)
    // Offset: 0x1922974
    void MoveTextEnd(bool shift);
    // public System.Void MoveTextStart(System.Boolean shift)
    // Offset: 0x1922A10
    void MoveTextStart(bool shift);
    // static private System.String get_clipboard()
    // Offset: 0x1922A98
    static ::Il2CppString* get_clipboard();
    // static private System.Void set_clipboard(System.String value)
    // Offset: 0x1922AA0
    static void set_clipboard(::Il2CppString* value);
    // private System.Boolean InPlaceEditing()
    // Offset: 0x1922AA8
    bool InPlaceEditing();
    // private System.Void UpdateCaretFromKeyboard()
    // Offset: 0x1922AE4
    void UpdateCaretFromKeyboard();
    // protected System.Void LateUpdate()
    // Offset: 0x1922BD0
    void LateUpdate();
    // public UnityEngine.Vector2 ScreenToLocal(UnityEngine.Vector2 screen)
    // Offset: 0x1923FFC
    UnityEngine::Vector2 ScreenToLocal(UnityEngine::Vector2 screen);
    // private System.Int32 GetUnclampedCharacterLineFromPosition(UnityEngine.Vector2 pos, UnityEngine.TextGenerator generator)
    // Offset: 0x19242F0
    int GetUnclampedCharacterLineFromPosition(UnityEngine::Vector2 pos, UnityEngine::TextGenerator* generator);
    // protected System.Int32 GetCharacterIndexFromPosition(UnityEngine.Vector2 pos)
    // Offset: 0x1924524
    int GetCharacterIndexFromPosition(UnityEngine::Vector2 pos);
    // private System.Boolean MayDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x19249C0
    bool MayDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1924AB0
    void OnBeginDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1924ADC
    void OnDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Collections.IEnumerator MouseDragOutsideRect(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1924CBC
    System::Collections::IEnumerator* MouseDragOutsideRect(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1924D38
    void OnEndDrag(UnityEngine::EventSystems::PointerEventData* eventData);
    // protected UnityEngine.UI.InputField/EditState KeyPressed(UnityEngine.Event evt)
    // Offset: 0x1924F60
    UnityEngine::UI::InputField::EditState KeyPressed(UnityEngine::Event* evt);
    // private System.Boolean IsValidChar(System.Char c)
    // Offset: 0x1925ADC
    bool IsValidChar(::Il2CppChar c);
    // public System.Void ProcessEvent(UnityEngine.Event e)
    // Offset: 0x1925B4C
    void ProcessEvent(UnityEngine::Event* e);
    // public System.Void OnUpdateSelected(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x1925B50
    void OnUpdateSelected(UnityEngine::EventSystems::BaseEventData* eventData);
    // private System.String GetSelectedString()
    // Offset: 0x19254EC
    ::Il2CppString* GetSelectedString();
    // private System.Int32 FindtNextWordBegin()
    // Offset: 0x1925C84
    int FindtNextWordBegin();
    // private System.Void MoveRight(System.Boolean shift, System.Boolean ctrl)
    // Offset: 0x192593C
    void MoveRight(bool shift, bool ctrl);
    // private System.Int32 FindtPrevWordBegin()
    // Offset: 0x1925D58
    int FindtPrevWordBegin();
    // private System.Void MoveLeft(System.Boolean shift, System.Boolean ctrl)
    // Offset: 0x19257B4
    void MoveLeft(bool shift, bool ctrl);
    // private System.Int32 DetermineCharacterLine(System.Int32 charPos, UnityEngine.TextGenerator generator)
    // Offset: 0x1925E10
    int DetermineCharacterLine(int charPos, UnityEngine::TextGenerator* generator);
    // private System.Int32 LineUpCharacterPosition(System.Int32 originalPos, System.Boolean goToFirstChar)
    // Offset: 0x1925F30
    int LineUpCharacterPosition(int originalPos, bool goToFirstChar);
    // private System.Int32 LineDownCharacterPosition(System.Int32 originalPos, System.Boolean goToLastChar)
    // Offset: 0x19262A0
    int LineDownCharacterPosition(int originalPos, bool goToLastChar);
    // private System.Void MoveDown(System.Boolean shift)
    // Offset: 0x1925AD0
    void MoveDown(bool shift);
    // private System.Void MoveDown(System.Boolean shift, System.Boolean goToLastChar)
    // Offset: 0x192656C
    void MoveDown(bool shift, bool goToLastChar);
    // private System.Void MoveUp(System.Boolean shift)
    // Offset: 0x1925AC4
    void MoveUp(bool shift);
    // private System.Void MoveUp(System.Boolean shift, System.Boolean goToFirstChar)
    // Offset: 0x1926704
    void MoveUp(bool shift, bool goToFirstChar);
    // private System.Void Delete()
    // Offset: 0x192559C
    void Delete();
    // private System.Void ForwardSpace()
    // Offset: 0x1925444
    void ForwardSpace();
    // private System.Void Backspace()
    // Offset: 0x1925354
    void Backspace();
    // private System.Void Insert(System.Char c)
    // Offset: 0x19268A8
    void Insert(::Il2CppChar c);
    // private System.Void UpdateTouchKeyboardFromEditChanges()
    // Offset: 0x192575C
    void UpdateTouchKeyboardFromEditChanges();
    // private System.Void SendOnValueChangedAndUpdateLabel()
    // Offset: 0x1923FD8
    void SendOnValueChangedAndUpdateLabel();
    // private System.Void SendOnValueChanged()
    // Offset: 0x1920CD0
    void SendOnValueChanged();
    // protected System.Void SendOnSubmit()
    // Offset: 0x1926994
    void SendOnSubmit();
    // protected System.Void Append(System.String input)
    // Offset: 0x1926A10
    void Append(::Il2CppString* input);
    // protected System.Void Append(System.Char input)
    // Offset: 0x1926AD0
    void Append(::Il2CppChar input);
    // protected System.Void UpdateLabel()
    // Offset: 0x1920D4C
    void UpdateLabel();
    // private System.Boolean IsSelectionVisible()
    // Offset: 0x1927834
    bool IsSelectionVisible();
    // static private System.Int32 GetLineStartPosition(UnityEngine.TextGenerator gen, System.Int32 line)
    // Offset: 0x19278A4
    static int GetLineStartPosition(UnityEngine::TextGenerator* gen, int line);
    // static private System.Int32 GetLineEndPosition(UnityEngine.TextGenerator gen, System.Int32 line)
    // Offset: 0x1924814
    static int GetLineEndPosition(UnityEngine::TextGenerator* gen, int line);
    // private System.Void SetDrawRangeToContainCaretPosition(System.Int32 caretPos)
    // Offset: 0x1926C30
    void SetDrawRangeToContainCaretPosition(int caretPos);
    // public System.Void ForceLabelUpdate()
    // Offset: 0x1927A34
    void ForceLabelUpdate();
    // private System.Void MarkGeometryAsDirty()
    // Offset: 0x192134C
    void MarkGeometryAsDirty();
    // public System.Void Rebuild(UnityEngine.UI.CanvasUpdate update)
    // Offset: 0x1927A38
    void Rebuild(UnityEngine::UI::CanvasUpdate update);
    // public System.Void LayoutComplete()
    // Offset: 0x1927E40
    void LayoutComplete();
    // public System.Void GraphicUpdateComplete()
    // Offset: 0x1927E44
    void GraphicUpdateComplete();
    // private System.Void UpdateGeometry()
    // Offset: 0x1927A48
    void UpdateGeometry();
    // private System.Void AssignPositioningIfNeeded()
    // Offset: 0x1923358
    void AssignPositioningIfNeeded();
    // private System.Void OnFillVBO(UnityEngine.Mesh vbo)
    // Offset: 0x1927E48
    void OnFillVBO(UnityEngine::Mesh* vbo);
    // private System.Void GenerateCaret(UnityEngine.UI.VertexHelper vbo, UnityEngine.Vector2 roundingOffset)
    // Offset: 0x192803C
    void GenerateCaret(UnityEngine::UI::VertexHelper* vbo, UnityEngine::Vector2 roundingOffset);
    // private System.Void CreateCursorVerts()
    // Offset: 0x192916C
    void CreateCursorVerts();
    // private System.Void GenerateHighlight(UnityEngine.UI.VertexHelper vbo, UnityEngine.Vector2 roundingOffset)
    // Offset: 0x1928820
    void GenerateHighlight(UnityEngine::UI::VertexHelper* vbo, UnityEngine::Vector2 roundingOffset);
    // protected System.Char Validate(System.String text, System.Int32 pos, System.Char ch)
    // Offset: 0x1923960
    ::Il2CppChar Validate(::Il2CppString* text, int pos, ::Il2CppChar ch);
    // public System.Void ActivateInputField()
    // Offset: 0x19292BC
    void ActivateInputField();
    // private System.Void ActivateInputFieldInternal()
    // Offset: 0x1923010
    void ActivateInputFieldInternal();
    // public System.Void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1929440
    void OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void DeactivateInputField()
    // Offset: 0x19225A0
    void DeactivateInputField();
    // public System.Void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x1929490
    void OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData);
    // private System.Void EnforceContentType()
    // Offset: 0x1921A0C
    void EnforceContentType();
    // private System.Void EnforceTextHOverflow()
    // Offset: 0x1920754
    void EnforceTextHOverflow();
    // private System.Void SetToCustomIfContentTypeIsNot(params UnityEngine.UI.InputField/ContentType[] allowedContentTypes)
    // Offset: 0x1921B90
    void SetToCustomIfContentTypeIsNot(::Array<UnityEngine::UI::InputField::ContentType>* allowedContentTypes);
    // Creating initializer_list -> params proxy for: System.Void SetToCustomIfContentTypeIsNot(params UnityEngine.UI.InputField/ContentType[] allowedContentTypes)
    void SetToCustomIfContentTypeIsNot(std::initializer_list<UnityEngine::UI::InputField::ContentType> allowedContentTypes);
    // Creating TArgs -> initializer_list proxy for: System.Void SetToCustomIfContentTypeIsNot(params UnityEngine.UI.InputField/ContentType[] allowedContentTypes)
    template<class ...TParams>
    void SetToCustomIfContentTypeIsNot(TParams&&... allowedContentTypes) {
      SetToCustomIfContentTypeIsNot({allowedContentTypes...});
    }
    // private System.Void SetToCustom()
    // Offset: 0x1921C94
    void SetToCustom();
    // public System.Void CalculateLayoutInputHorizontal()
    // Offset: 0x1929510
    void CalculateLayoutInputHorizontal();
    // public System.Void CalculateLayoutInputVertical()
    // Offset: 0x1929514
    void CalculateLayoutInputVertical();
    // public System.Single get_minWidth()
    // Offset: 0x1929518
    float get_minWidth();
    // public System.Single get_preferredWidth()
    // Offset: 0x1929520
    float get_preferredWidth();
    // public System.Single get_flexibleWidth()
    // Offset: 0x1929680
    float get_flexibleWidth();
    // public System.Single get_minHeight()
    // Offset: 0x1929688
    float get_minHeight();
    // public System.Single get_preferredHeight()
    // Offset: 0x1929690
    float get_preferredHeight();
    // public System.Single get_flexibleHeight()
    // Offset: 0x192980C
    float get_flexibleHeight();
    // public System.Int32 get_layoutPriority()
    // Offset: 0x1929814
    int get_layoutPriority();
    // private UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform()
    // Offset: 0x1929898
    UnityEngine::Transform* UnityEngine_UI_ICanvasElement_get_transform();
    // protected System.Void .ctor()
    // Offset: 0x19205C8
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputField* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputField*, creationType>()));
    }
    // private System.Boolean get_hasSelection()
    // Offset: 0x1921F98
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Boolean Selectable::get_hasSelection()
    bool get_hasSelection();
    // protected override System.Void OnEnable()
    // Offset: 0x1922148
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x1922388
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnDisable()
    void OnDisable();
    // public override System.Void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1924D60
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    void OnPointerDown(UnityEngine::EventSystems::PointerEventData* eventData);
    // public override System.Void OnSelect(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x19293FC
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnSelect(UnityEngine.EventSystems.BaseEventData eventData)
    void OnSelect(UnityEngine::EventSystems::BaseEventData* eventData);
    // public override System.Void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x1929460
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnDeselect(UnityEngine.EventSystems.BaseEventData eventData)
    void OnDeselect(UnityEngine::EventSystems::BaseEventData* eventData);
    // protected override System.Void DoStateTransition(UnityEngine.UI.Selectable/SelectionState state, System.Boolean instant)
    // Offset: 0x19294E4
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::DoStateTransition(UnityEngine.UI.Selectable/SelectionState state, System.Boolean instant)
    void DoStateTransition(UnityEngine::UI::Selectable::SelectionState state, bool instant);
    // static private System.Void .cctor()
    // Offset: 0x192981C
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::.cctor()
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // UnityEngine.UI.InputField
  #pragma pack(pop)
  static check_size<sizeof(InputField), 520 + sizeof(UnityEngine::Event*)> __UnityEngine_UI_InputFieldSizeCheck;
  static_assert(sizeof(InputField) == 0x210);
  // Writing MetadataGetter for method: InputField::get_input
  // Il2CppName: get_input
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::BaseInput* (InputField::*)()>(&InputField::get_input)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_input", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_compositionString
  // Il2CppName: get_compositionString
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (InputField::*)()>(&InputField::get_compositionString)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_compositionString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_mesh
  // Il2CppName: get_mesh
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (InputField::*)()>(&InputField::get_mesh)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_cachedInputTextGenerator
  // Il2CppName: get_cachedInputTextGenerator
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerator* (InputField::*)()>(&InputField::get_cachedInputTextGenerator)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_cachedInputTextGenerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_shouldHideMobileInput
  // Il2CppName: set_shouldHideMobileInput
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::set_shouldHideMobileInput)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_shouldHideMobileInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_shouldHideMobileInput
  // Il2CppName: get_shouldHideMobileInput
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_shouldHideMobileInput)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_shouldHideMobileInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_shouldActivateOnSelect
  // Il2CppName: get_shouldActivateOnSelect
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_shouldActivateOnSelect)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_shouldActivateOnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_text
  // Il2CppName: get_text
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (InputField::*)()>(&InputField::get_text)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_text
  // Il2CppName: set_text
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppString*)>(&InputField::set_text)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::SetTextWithoutNotify
  // Il2CppName: SetTextWithoutNotify
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppString*)>(&InputField::SetTextWithoutNotify)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SetTextWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::SetText
  // Il2CppName: SetText
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppString*, bool)>(&InputField::SetText)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_isFocused
  // Il2CppName: get_isFocused
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_isFocused)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_isFocused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_caretBlinkRate
  // Il2CppName: get_caretBlinkRate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_caretBlinkRate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretBlinkRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_caretBlinkRate
  // Il2CppName: set_caretBlinkRate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(float)>(&InputField::set_caretBlinkRate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretBlinkRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_caretWidth
  // Il2CppName: get_caretWidth
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_caretWidth)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_caretWidth
  // Il2CppName: set_caretWidth
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_caretWidth)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_textComponent
  // Il2CppName: get_textComponent
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Text* (InputField::*)()>(&InputField::get_textComponent)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_textComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_textComponent
  // Il2CppName: set_textComponent
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::Text*)>(&InputField::set_textComponent)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_textComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Text*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_placeholder
  // Il2CppName: get_placeholder
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Graphic* (InputField::*)()>(&InputField::get_placeholder)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_placeholder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_placeholder
  // Il2CppName: set_placeholder
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::Graphic*)>(&InputField::set_placeholder)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_placeholder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Graphic*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_caretColor
  // Il2CppName: get_caretColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (InputField::*)()>(&InputField::get_caretColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_caretColor
  // Il2CppName: set_caretColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::Color)>(&InputField::set_caretColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_customCaretColor
  // Il2CppName: get_customCaretColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_customCaretColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_customCaretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_customCaretColor
  // Il2CppName: set_customCaretColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::set_customCaretColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_customCaretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_selectionColor
  // Il2CppName: get_selectionColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (InputField::*)()>(&InputField::get_selectionColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_selectionColor
  // Il2CppName: set_selectionColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::Color)>(&InputField::set_selectionColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_onEndEdit
  // Il2CppName: get_onEndEdit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::SubmitEvent* (InputField::*)()>(&InputField::get_onEndEdit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_onEndEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_onEndEdit
  // Il2CppName: set_onEndEdit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::SubmitEvent*)>(&InputField::set_onEndEdit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_onEndEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::SubmitEvent*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_onValueChange
  // Il2CppName: get_onValueChange
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::OnChangeEvent* (InputField::*)()>(&InputField::get_onValueChange)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_onValueChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_onValueChange
  // Il2CppName: set_onValueChange
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::OnChangeEvent*)>(&InputField::set_onValueChange)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_onValueChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::OnChangeEvent*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_onValueChanged
  // Il2CppName: get_onValueChanged
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::OnChangeEvent* (InputField::*)()>(&InputField::get_onValueChanged)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_onValueChanged
  // Il2CppName: set_onValueChanged
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::OnChangeEvent*)>(&InputField::set_onValueChanged)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::OnChangeEvent*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_onValidateInput
  // Il2CppName: get_onValidateInput
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::OnValidateInput* (InputField::*)()>(&InputField::get_onValidateInput)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_onValidateInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_onValidateInput
  // Il2CppName: set_onValidateInput
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::OnValidateInput*)>(&InputField::set_onValidateInput)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_onValidateInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::OnValidateInput*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_characterLimit
  // Il2CppName: get_characterLimit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_characterLimit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_characterLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_characterLimit
  // Il2CppName: set_characterLimit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_characterLimit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_characterLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_contentType
  // Il2CppName: get_contentType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::ContentType (InputField::*)()>(&InputField::get_contentType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_contentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_contentType
  // Il2CppName: set_contentType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::ContentType)>(&InputField::set_contentType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_contentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::ContentType>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_lineType
  // Il2CppName: get_lineType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::LineType (InputField::*)()>(&InputField::get_lineType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_lineType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_lineType
  // Il2CppName: set_lineType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::LineType)>(&InputField::set_lineType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_lineType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::LineType>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_inputType
  // Il2CppName: get_inputType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::InputType (InputField::*)()>(&InputField::get_inputType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_inputType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_inputType
  // Il2CppName: set_inputType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::InputType)>(&InputField::set_inputType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_inputType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::InputType>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_touchScreenKeyboard
  // Il2CppName: get_touchScreenKeyboard
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TouchScreenKeyboard* (InputField::*)()>(&InputField::get_touchScreenKeyboard)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_touchScreenKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_keyboardType
  // Il2CppName: get_keyboardType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TouchScreenKeyboardType (InputField::*)()>(&InputField::get_keyboardType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_keyboardType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_keyboardType
  // Il2CppName: set_keyboardType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::TouchScreenKeyboardType)>(&InputField::set_keyboardType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_keyboardType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TouchScreenKeyboardType>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_characterValidation
  // Il2CppName: get_characterValidation
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::CharacterValidation (InputField::*)()>(&InputField::get_characterValidation)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_characterValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_characterValidation
  // Il2CppName: set_characterValidation
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::CharacterValidation)>(&InputField::set_characterValidation)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_characterValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::CharacterValidation>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_readOnly
  // Il2CppName: get_readOnly
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_readOnly)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_readOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_readOnly
  // Il2CppName: set_readOnly
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::set_readOnly)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_readOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_multiLine
  // Il2CppName: get_multiLine
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_multiLine)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_multiLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_asteriskChar
  // Il2CppName: get_asteriskChar
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (InputField::*)()>(&InputField::get_asteriskChar)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_asteriskChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_asteriskChar
  // Il2CppName: set_asteriskChar
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppChar)>(&InputField::set_asteriskChar)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_asteriskChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_wasCanceled
  // Il2CppName: get_wasCanceled
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_wasCanceled)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_wasCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::ClampPos
  // Il2CppName: ClampPos
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int&)>(&InputField::ClampPos)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "ClampPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_caretPositionInternal
  // Il2CppName: get_caretPositionInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_caretPositionInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_caretPositionInternal
  // Il2CppName: set_caretPositionInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_caretPositionInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_caretSelectPositionInternal
  // Il2CppName: get_caretSelectPositionInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_caretSelectPositionInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretSelectPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_caretSelectPositionInternal
  // Il2CppName: set_caretSelectPositionInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_caretSelectPositionInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretSelectPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_caretPosition
  // Il2CppName: get_caretPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_caretPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_caretPosition
  // Il2CppName: set_caretPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_caretPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_selectionAnchorPosition
  // Il2CppName: get_selectionAnchorPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_selectionAnchorPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_selectionAnchorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_selectionAnchorPosition
  // Il2CppName: set_selectionAnchorPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_selectionAnchorPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_selectionAnchorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_selectionFocusPosition
  // Il2CppName: get_selectionFocusPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_selectionFocusPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_selectionFocusPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_selectionFocusPosition
  // Il2CppName: set_selectionFocusPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_selectionFocusPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_selectionFocusPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::CaretBlink
  // Il2CppName: CaretBlink
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (InputField::*)()>(&InputField::CaretBlink)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "CaretBlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::SetCaretVisible
  // Il2CppName: SetCaretVisible
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SetCaretVisible)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SetCaretVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::SetCaretActive
  // Il2CppName: SetCaretActive
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SetCaretActive)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SetCaretActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::UpdateCaretMaterial
  // Il2CppName: UpdateCaretMaterial
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateCaretMaterial)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateCaretMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::OnFocus
  // Il2CppName: OnFocus
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::OnFocus)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::SelectAll
  // Il2CppName: SelectAll
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SelectAll)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SelectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::MoveTextEnd
  // Il2CppName: MoveTextEnd
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::MoveTextEnd)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveTextEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::MoveTextStart
  // Il2CppName: MoveTextStart
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::MoveTextStart)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveTextStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::get_clipboard
  // Il2CppName: get_clipboard
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&InputField::get_clipboard)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_clipboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::set_clipboard
  // Il2CppName: set_clipboard
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&InputField::set_clipboard)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "set_clipboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::InPlaceEditing
  // Il2CppName: InPlaceEditing
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::InPlaceEditing)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "InPlaceEditing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::UpdateCaretFromKeyboard
  // Il2CppName: UpdateCaretFromKeyboard
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateCaretFromKeyboard)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateCaretFromKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::LateUpdate
  // Il2CppName: LateUpdate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::LateUpdate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::ScreenToLocal
  // Il2CppName: ScreenToLocal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (InputField::*)(UnityEngine::Vector2)>(&InputField::ScreenToLocal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "ScreenToLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: InputField::GetUnclampedCharacterLineFromPosition
  // Il2CppName: GetUnclampedCharacterLineFromPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(UnityEngine::Vector2, UnityEngine::TextGenerator*)>(&InputField::GetUnclampedCharacterLineFromPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "GetUnclampedCharacterLineFromPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerator*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::GetCharacterIndexFromPosition
  // Il2CppName: GetCharacterIndexFromPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(UnityEngine::Vector2)>(&InputField::GetCharacterIndexFromPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "GetCharacterIndexFromPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: InputField::MayDrag
  // Il2CppName: MayDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::MayDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MayDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::OnBeginDrag
  // Il2CppName: OnBeginDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnBeginDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::OnDrag
  // Il2CppName: OnDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::MouseDragOutsideRect
  // Il2CppName: MouseDragOutsideRect
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::MouseDragOutsideRect)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MouseDragOutsideRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::OnEndDrag
  // Il2CppName: OnEndDrag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnEndDrag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnEndDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::KeyPressed
  // Il2CppName: KeyPressed
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::EditState (InputField::*)(UnityEngine::Event*)>(&InputField::KeyPressed)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "KeyPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Event*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::IsValidChar
  // Il2CppName: IsValidChar
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)(::Il2CppChar)>(&InputField::IsValidChar)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "IsValidChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
    }
  };
  // Writing MetadataGetter for method: InputField::ProcessEvent
  // Il2CppName: ProcessEvent
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::Event*)>(&InputField::ProcessEvent)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "ProcessEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Event*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::OnUpdateSelected
  // Il2CppName: OnUpdateSelected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::BaseEventData*)>(&InputField::OnUpdateSelected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnUpdateSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::GetSelectedString
  // Il2CppName: GetSelectedString
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (InputField::*)()>(&InputField::GetSelectedString)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "GetSelectedString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::FindtNextWordBegin
  // Il2CppName: FindtNextWordBegin
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::FindtNextWordBegin)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "FindtNextWordBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::MoveRight
  // Il2CppName: MoveRight
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool, bool)>(&InputField::MoveRight)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::FindtPrevWordBegin
  // Il2CppName: FindtPrevWordBegin
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::FindtPrevWordBegin)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "FindtPrevWordBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::MoveLeft
  // Il2CppName: MoveLeft
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool, bool)>(&InputField::MoveLeft)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::DetermineCharacterLine
  // Il2CppName: DetermineCharacterLine
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(int, UnityEngine::TextGenerator*)>(&InputField::DetermineCharacterLine)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "DetermineCharacterLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerator*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::LineUpCharacterPosition
  // Il2CppName: LineUpCharacterPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(int, bool)>(&InputField::LineUpCharacterPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "LineUpCharacterPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::LineDownCharacterPosition
  // Il2CppName: LineDownCharacterPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(int, bool)>(&InputField::LineDownCharacterPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "LineDownCharacterPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::MoveDown
  // Il2CppName: MoveDown
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::MoveDown)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::MoveDown
  // Il2CppName: MoveDown
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool, bool)>(&InputField::MoveDown)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::MoveUp
  // Il2CppName: MoveUp
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::MoveUp)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::MoveUp
  // Il2CppName: MoveUp
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool, bool)>(&InputField::MoveUp)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::Delete
  // Il2CppName: Delete
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::Delete)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::ForwardSpace
  // Il2CppName: ForwardSpace
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::ForwardSpace)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "ForwardSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::Backspace
  // Il2CppName: Backspace
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::Backspace)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "Backspace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::Insert
  // Il2CppName: Insert
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppChar)>(&InputField::Insert)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
    }
  };
  // Writing MetadataGetter for method: InputField::UpdateTouchKeyboardFromEditChanges
  // Il2CppName: UpdateTouchKeyboardFromEditChanges
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateTouchKeyboardFromEditChanges)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateTouchKeyboardFromEditChanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::SendOnValueChangedAndUpdateLabel
  // Il2CppName: SendOnValueChangedAndUpdateLabel
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SendOnValueChangedAndUpdateLabel)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SendOnValueChangedAndUpdateLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::SendOnValueChanged
  // Il2CppName: SendOnValueChanged
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SendOnValueChanged)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SendOnValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::SendOnSubmit
  // Il2CppName: SendOnSubmit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SendOnSubmit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SendOnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::Append
  // Il2CppName: Append
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppString*)>(&InputField::Append)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::Append
  // Il2CppName: Append
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppChar)>(&InputField::Append)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
    }
  };
  // Writing MetadataGetter for method: InputField::UpdateLabel
  // Il2CppName: UpdateLabel
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateLabel)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::IsSelectionVisible
  // Il2CppName: IsSelectionVisible
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::IsSelectionVisible)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "IsSelectionVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::GetLineStartPosition
  // Il2CppName: GetLineStartPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::TextGenerator*, int)>(&InputField::GetLineStartPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "GetLineStartPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerator*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::GetLineEndPosition
  // Il2CppName: GetLineEndPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::TextGenerator*, int)>(&InputField::GetLineEndPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "GetLineEndPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerator*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::SetDrawRangeToContainCaretPosition
  // Il2CppName: SetDrawRangeToContainCaretPosition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::SetDrawRangeToContainCaretPosition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SetDrawRangeToContainCaretPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: InputField::ForceLabelUpdate
  // Il2CppName: ForceLabelUpdate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::ForceLabelUpdate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "ForceLabelUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::MarkGeometryAsDirty
  // Il2CppName: MarkGeometryAsDirty
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::MarkGeometryAsDirty)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "MarkGeometryAsDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::Rebuild
  // Il2CppName: Rebuild
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::CanvasUpdate)>(&InputField::Rebuild)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
    }
  };
  // Writing MetadataGetter for method: InputField::LayoutComplete
  // Il2CppName: LayoutComplete
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::LayoutComplete)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::GraphicUpdateComplete
  // Il2CppName: GraphicUpdateComplete
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::GraphicUpdateComplete)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::UpdateGeometry
  // Il2CppName: UpdateGeometry
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateGeometry)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::AssignPositioningIfNeeded
  // Il2CppName: AssignPositioningIfNeeded
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::AssignPositioningIfNeeded)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "AssignPositioningIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::OnFillVBO
  // Il2CppName: OnFillVBO
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::Mesh*)>(&InputField::OnFillVBO)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnFillVBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::GenerateCaret
  // Il2CppName: GenerateCaret
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::VertexHelper*, UnityEngine::Vector2)>(&InputField::GenerateCaret)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "GenerateCaret", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: InputField::CreateCursorVerts
  // Il2CppName: CreateCursorVerts
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::CreateCursorVerts)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "CreateCursorVerts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::GenerateHighlight
  // Il2CppName: GenerateHighlight
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::VertexHelper*, UnityEngine::Vector2)>(&InputField::GenerateHighlight)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "GenerateHighlight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: InputField::Validate
  // Il2CppName: Validate
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (InputField::*)(::Il2CppString*, int, ::Il2CppChar)>(&InputField::Validate)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "Validate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
    }
  };
  // Writing MetadataGetter for method: InputField::ActivateInputField
  // Il2CppName: ActivateInputField
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::ActivateInputField)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "ActivateInputField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::ActivateInputFieldInternal
  // Il2CppName: ActivateInputFieldInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::ActivateInputFieldInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "ActivateInputFieldInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::OnPointerClick
  // Il2CppName: OnPointerClick
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnPointerClick)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::DeactivateInputField
  // Il2CppName: DeactivateInputField
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::DeactivateInputField)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "DeactivateInputField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::OnSubmit
  // Il2CppName: OnSubmit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::BaseEventData*)>(&InputField::OnSubmit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::EnforceContentType
  // Il2CppName: EnforceContentType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::EnforceContentType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "EnforceContentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::EnforceTextHOverflow
  // Il2CppName: EnforceTextHOverflow
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::EnforceTextHOverflow)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "EnforceTextHOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::SetToCustomIfContentTypeIsNot
  // Il2CppName: SetToCustomIfContentTypeIsNot
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Array<UnityEngine::UI::InputField::ContentType>*)>(&InputField::SetToCustomIfContentTypeIsNot)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SetToCustomIfContentTypeIsNot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::UI::InputField::ContentType>*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::SetToCustom
  // Il2CppName: SetToCustom
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SetToCustom)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "SetToCustom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::CalculateLayoutInputHorizontal
  // Il2CppName: CalculateLayoutInputHorizontal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::CalculateLayoutInputHorizontal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::CalculateLayoutInputVertical
  // Il2CppName: CalculateLayoutInputVertical
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::CalculateLayoutInputVertical)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_minWidth
  // Il2CppName: get_minWidth
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_minWidth)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_preferredWidth
  // Il2CppName: get_preferredWidth
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_preferredWidth)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_flexibleWidth
  // Il2CppName: get_flexibleWidth
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_flexibleWidth)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_minHeight
  // Il2CppName: get_minHeight
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_minHeight)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_preferredHeight
  // Il2CppName: get_preferredHeight
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_preferredHeight)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_flexibleHeight
  // Il2CppName: get_flexibleHeight
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_flexibleHeight)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_layoutPriority
  // Il2CppName: get_layoutPriority
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_layoutPriority)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::UnityEngine_UI_ICanvasElement_get_transform
  // Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (InputField::*)()>(&InputField::UnityEngine_UI_ICanvasElement_get_transform)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::get_hasSelection
  // Il2CppName: get_hasSelection
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_hasSelection)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "get_hasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::OnEnable
  // Il2CppName: OnEnable
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::OnEnable)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::OnDisable
  // Il2CppName: OnDisable
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::OnDisable)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: InputField::OnPointerDown
  // Il2CppName: OnPointerDown
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnPointerDown)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::OnSelect
  // Il2CppName: OnSelect
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::BaseEventData*)>(&InputField::OnSelect)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::OnDeselect
  // Il2CppName: OnDeselect
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::BaseEventData*)>(&InputField::OnDeselect)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "OnDeselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
    }
  };
  // Writing MetadataGetter for method: InputField::DoStateTransition
  // Il2CppName: DoStateTransition
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::Selectable::SelectionState, bool)>(&InputField::DoStateTransition)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), "DoStateTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable::SelectionState>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: InputField::_cctor
  // Il2CppName: .cctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&InputField::_cctor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(InputField*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::InputField*, "UnityEngine.UI", "InputField");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::InputField::ContentType, "UnityEngine.UI", "InputField/ContentType");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::InputField::InputType, "UnityEngine.UI", "InputField/InputType");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::InputField::CharacterValidation, "UnityEngine.UI", "InputField/CharacterValidation");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::InputField::LineType, "UnityEngine.UI", "InputField/LineType");
