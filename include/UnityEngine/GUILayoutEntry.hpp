// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GUIStyle
  class GUIStyle;
  // Forward declaring type: GUILayoutOption
  class GUILayoutOption;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.GUILayoutEntry
  // [VisibleToOtherModulesAttribute] Offset: DADC70
  class GUILayoutEntry : public ::Il2CppObject {
    public:
    // public System.Single minWidth
    // Size: 0x4
    // Offset: 0x10
    float minWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single maxWidth
    // Size: 0x4
    // Offset: 0x14
    float maxWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single minHeight
    // Size: 0x4
    // Offset: 0x18
    float minHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single maxHeight
    // Size: 0x4
    // Offset: 0x1C
    float maxHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.Rect rect
    // Size: 0x10
    // Offset: 0x20
    UnityEngine::Rect rect;
    // Field size check
    static_assert(sizeof(UnityEngine::Rect) == 0x10);
    // public System.Int32 stretchWidth
    // Size: 0x4
    // Offset: 0x30
    int stretchWidth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 stretchHeight
    // Size: 0x4
    // Offset: 0x34
    int stretchHeight;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean consideredForMargin
    // Size: 0x1
    // Offset: 0x38
    bool consideredForMargin;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: consideredForMargin and: m_Style
    char __padding7[0x7] = {};
    // private UnityEngine.GUIStyle m_Style
    // Size: 0x8
    // Offset: 0x40
    UnityEngine::GUIStyle* m_Style;
    // Field size check
    static_assert(sizeof(UnityEngine::GUIStyle*) == 0x8);
    // Creating value type constructor for type: GUILayoutEntry
    GUILayoutEntry(float minWidth_ = {}, float maxWidth_ = {}, float minHeight_ = {}, float maxHeight_ = {}, UnityEngine::Rect rect_ = {}, int stretchWidth_ = {}, int stretchHeight_ = {}, bool consideredForMargin_ = {}, UnityEngine::GUIStyle* m_Style_ = {}) noexcept : minWidth{minWidth_}, maxWidth{maxWidth_}, minHeight{minHeight_}, maxHeight{maxHeight_}, rect{rect_}, stretchWidth{stretchWidth_}, stretchHeight{stretchHeight_}, consideredForMargin{consideredForMargin_}, m_Style{m_Style_} {}
    // Get static field: static UnityEngine.Rect kDummyRect
    static UnityEngine::Rect _get_kDummyRect();
    // Set static field: static UnityEngine.Rect kDummyRect
    static void _set_kDummyRect(UnityEngine::Rect value);
    // Get static field: static protected System.Int32 indent
    static int _get_indent();
    // Set static field: static protected System.Int32 indent
    static void _set_indent(int value);
    // public UnityEngine.GUIStyle get_style()
    // Offset: 0x1A8F004
    UnityEngine::GUIStyle* get_style();
    // public System.Void set_style(UnityEngine.GUIStyle value)
    // Offset: 0x1A8F00C
    void set_style(UnityEngine::GUIStyle* value);
    // public System.Int32 get_marginLeft()
    // Offset: 0x1A8F01C
    int get_marginLeft();
    // public System.Int32 get_marginRight()
    // Offset: 0x1A8F044
    int get_marginRight();
    // public System.Int32 get_marginTop()
    // Offset: 0x1A8F06C
    int get_marginTop();
    // public System.Int32 get_marginBottom()
    // Offset: 0x1A8F094
    int get_marginBottom();
    // public System.Int32 get_marginHorizontal()
    // Offset: 0x1A8F0BC
    int get_marginHorizontal();
    // public System.Int32 get_marginVertical()
    // Offset: 0x1A8F0FC
    int get_marginVertical();
    // public System.Void .ctor(System.Single _minWidth, System.Single _maxWidth, System.Single _minHeight, System.Single _maxHeight, UnityEngine.GUIStyle _style)
    // Offset: 0x1A8F13C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GUILayoutEntry* New_ctor(float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, UnityEngine::GUIStyle* _style) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GUILayoutEntry::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GUILayoutEntry*, creationType>(_minWidth, _maxWidth, _minHeight, _maxHeight, _style)));
    }
    // public System.Void .ctor(System.Single _minWidth, System.Single _maxWidth, System.Single _minHeight, System.Single _maxHeight, UnityEngine.GUIStyle _style, UnityEngine.GUILayoutOption[] options)
    // Offset: 0x1A8F258
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GUILayoutEntry* New_ctor(float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, UnityEngine::GUIStyle* _style, ::Array<UnityEngine::GUILayoutOption*>* options) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GUILayoutEntry::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GUILayoutEntry*, creationType>(_minWidth, _maxWidth, _minHeight, _maxHeight, _style, options)));
    }
    // public System.Void CalcWidth()
    // Offset: 0x1A8F36C
    void CalcWidth();
    // public System.Void CalcHeight()
    // Offset: 0x1A8F370
    void CalcHeight();
    // public System.Void SetHorizontal(System.Single x, System.Single width)
    // Offset: 0x1A8F374
    void SetHorizontal(float x, float width);
    // public System.Void SetVertical(System.Single y, System.Single height)
    // Offset: 0x1A8F3B4
    void SetVertical(float y, float height);
    // protected System.Void ApplyStyleSettings(UnityEngine.GUIStyle style)
    // Offset: 0x1A8F3F4
    void ApplyStyleSettings(UnityEngine::GUIStyle* style);
    // public System.Void ApplyOptions(UnityEngine.GUILayoutOption[] options)
    // Offset: 0x1A8F57C
    void ApplyOptions(::Array<UnityEngine::GUILayoutOption*>* options);
    // static private System.Void .cctor()
    // Offset: 0x1A8FE00
    static void _cctor();
    // public override System.String ToString()
    // Offset: 0x1A8F858
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // UnityEngine.GUILayoutEntry
  #pragma pack(pop)
  static check_size<sizeof(GUILayoutEntry), 64 + sizeof(UnityEngine::GUIStyle*)> __UnityEngine_GUILayoutEntrySizeCheck;
  static_assert(sizeof(GUILayoutEntry) == 0x48);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::GUILayoutEntry*, "UnityEngine", "GUILayoutEntry");
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::get_style
// Il2CppName: get_style
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GUIStyle* (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::get_style)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "get_style", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::set_style
// Il2CppName: set_style
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)(UnityEngine::GUIStyle*)>(&UnityEngine::GUILayoutEntry::set_style)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "set_style", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GUIStyle*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::get_marginLeft
// Il2CppName: get_marginLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::get_marginLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "get_marginLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::get_marginRight
// Il2CppName: get_marginRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::get_marginRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "get_marginRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::get_marginTop
// Il2CppName: get_marginTop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::get_marginTop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "get_marginTop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::get_marginBottom
// Il2CppName: get_marginBottom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::get_marginBottom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "get_marginBottom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::get_marginHorizontal
// Il2CppName: get_marginHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::get_marginHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "get_marginHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::get_marginVertical
// Il2CppName: get_marginVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::get_marginVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "get_marginVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)(float, float, float, float, UnityEngine::GUIStyle*)>(&UnityEngine::GUILayoutEntry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GUIStyle*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)(float, float, float, float, UnityEngine::GUIStyle*)>(&UnityEngine::GUILayoutEntry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GUIStyle*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)(float, float, float, float, UnityEngine::GUIStyle*, ::Array<UnityEngine::GUILayoutOption*>*)>(&UnityEngine::GUILayoutEntry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GUIStyle*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::GUILayoutOption*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)(float, float, float, float, UnityEngine::GUIStyle*, ::Array<UnityEngine::GUILayoutOption*>*)>(&UnityEngine::GUILayoutEntry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GUIStyle*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::GUILayoutOption*>*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::CalcWidth
// Il2CppName: CalcWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::CalcWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "CalcWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::CalcHeight
// Il2CppName: CalcHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::CalcHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "CalcHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::SetHorizontal
// Il2CppName: SetHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)(float, float)>(&UnityEngine::GUILayoutEntry::SetHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "SetHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::SetVertical
// Il2CppName: SetVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)(float, float)>(&UnityEngine::GUILayoutEntry::SetVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "SetVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::ApplyStyleSettings
// Il2CppName: ApplyStyleSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)(UnityEngine::GUIStyle*)>(&UnityEngine::GUILayoutEntry::ApplyStyleSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "ApplyStyleSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GUIStyle*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::ApplyOptions
// Il2CppName: ApplyOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUILayoutEntry::*)(::Array<UnityEngine::GUILayoutOption*>*)>(&UnityEngine::GUILayoutEntry::ApplyOptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "ApplyOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::GUILayoutOption*>*>()});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::GUILayoutEntry::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUILayoutEntry::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityEngine::GUILayoutEntry::*)()>(&UnityEngine::GUILayoutEntry::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUILayoutEntry*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
