// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UnhandledExceptionHandler
  // [NativeHeaderAttribute] Offset: D905CC
  class UnhandledExceptionHandler : public ::Il2CppObject {
    public:
    // Nested type: UnityEngine::UnhandledExceptionHandler::$$c
    class $$c;
    // Creating value type constructor for type: UnhandledExceptionHandler
    UnhandledExceptionHandler() noexcept {}
    // static private System.Void RegisterUECatcher()
    // Offset: 0x2320CF8
    static void RegisterUECatcher();
  }; // UnityEngine.UnhandledExceptionHandler
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UnhandledExceptionHandler*, "UnityEngine", "UnhandledExceptionHandler");
// Writing MetadataGetter for method: UnhandledExceptionHandler::RegisterUECatcher
// Il2CppName: RegisterUECatcher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnhandledExceptionHandler::RegisterUECatcher)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnhandledExceptionHandler*), "RegisterUECatcher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
