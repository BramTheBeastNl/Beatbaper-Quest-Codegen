// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.SceneInstance
#include "UnityEngine/ResourceManagement/ResourceProviders/SceneInstance.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: UnityEngine::Networking
namespace UnityEngine::Networking {
  // Forward declaring type: CertificateHandler
  class CertificateHandler;
}
// Forward declaring namespace: UnityEngine::ResourceManagement
namespace UnityEngine::ResourceManagement {
  // Forward declaring type: IUpdateReceiver
  class IUpdateReceiver;
  // Skipping declaration: DiagnosticEventContext because it is already included!
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceLocations
namespace UnityEngine::ResourceManagement::ResourceLocations {
  // Forward declaring type: IResourceLocation
  class IResourceLocation;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ListWithEvents`1<T>
  template<typename T>
  class ListWithEvents_1;
  // Forward declaring type: DelegateList`1<T>
  template<typename T>
  class DelegateList_1;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Forward declaring type: IResourceProvider
  class IResourceProvider;
  // Forward declaring type: ISceneProvider
  class ISceneProvider;
  // Forward declaring type: IInstanceProvider
  class IInstanceProvider;
  // Forward declaring type: InstantiationParameters
  struct InstantiationParameters;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::Util
namespace UnityEngine::ResourceManagement::Util {
  // Forward declaring type: IAllocationStrategy
  class IAllocationStrategy;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::AsyncOperations
namespace UnityEngine::ResourceManagement::AsyncOperations {
  // Forward declaring type: IAsyncOperation
  class IAsyncOperation;
  // Forward declaring type: AsyncOperationBase`1<TObject>
  template<typename TObject>
  class AsyncOperationBase_1;
  // Forward declaring type: GroupOperation
  class GroupOperation;
}
// Forward declaring namespace: UnityEngine::SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: LoadSceneMode
  struct LoadSceneMode;
  // Skipping declaration: Scene because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement
namespace UnityEngine::ResourceManagement {
  // Size: 0xB8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.ResourceManager
  class ResourceManager : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // Nested type: UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType
    struct DiagnosticEventType;
    // Nested type: UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventContext
    struct DiagnosticEventContext;
    // Nested type: UnityEngine::ResourceManagement::ResourceManager::CompletedOperation_1<TObject>
    template<typename TObject>
    class CompletedOperation_1;
    // Nested type: UnityEngine::ResourceManagement::ResourceManager::InstanceOperation
    class InstanceOperation;
    // Nested type: UnityEngine::ResourceManagement::ResourceManager::$$c__DisplayClass83_0_1<TObject>
    template<typename TObject>
    class $$c__DisplayClass83_0_1;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType
    struct DiagnosticEventType/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: DiagnosticEventType
      constexpr DiagnosticEventType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationFail
      static constexpr const int AsyncOperationFail = 0;
      // Get static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationFail
      static UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType _get_AsyncOperationFail();
      // Set static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationFail
      static void _set_AsyncOperationFail(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType value);
      // static field const value: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationCreate
      static constexpr const int AsyncOperationCreate = 1;
      // Get static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationCreate
      static UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType _get_AsyncOperationCreate();
      // Set static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationCreate
      static void _set_AsyncOperationCreate(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType value);
      // static field const value: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationPercentComplete
      static constexpr const int AsyncOperationPercentComplete = 2;
      // Get static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationPercentComplete
      static UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType _get_AsyncOperationPercentComplete();
      // Set static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationPercentComplete
      static void _set_AsyncOperationPercentComplete(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType value);
      // static field const value: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationComplete
      static constexpr const int AsyncOperationComplete = 3;
      // Get static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationComplete
      static UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType _get_AsyncOperationComplete();
      // Set static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationComplete
      static void _set_AsyncOperationComplete(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType value);
      // static field const value: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationReferenceCount
      static constexpr const int AsyncOperationReferenceCount = 4;
      // Get static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationReferenceCount
      static UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType _get_AsyncOperationReferenceCount();
      // Set static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationReferenceCount
      static void _set_AsyncOperationReferenceCount(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType value);
      // static field const value: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationDestroy
      static constexpr const int AsyncOperationDestroy = 5;
      // Get static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationDestroy
      static UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType _get_AsyncOperationDestroy();
      // Set static field: static public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType AsyncOperationDestroy
      static void _set_AsyncOperationDestroy(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType value);
    }; // UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType
    #pragma pack(pop)
    static check_size<sizeof(ResourceManager::DiagnosticEventType), 0 + sizeof(int)> __UnityEngine_ResourceManagement_ResourceManager_DiagnosticEventTypeSizeCheck;
    static_assert(sizeof(ResourceManager::DiagnosticEventType) == 0x4);
    // Size: 0x38
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventContext
    struct DiagnosticEventContext/*, public System::ValueType*/ {
      public:
      // [CompilerGeneratedAttribute] Offset: 0xDFADAC
      // private readonly UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle <OperationHandle>k__BackingField
      // Size: 0x18
      // Offset: 0x0
      UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle OperationHandle;
      // Field size check
      static_assert(sizeof(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle) == 0x18);
      // [CompilerGeneratedAttribute] Offset: 0xDFADBC
      // private readonly UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType <Type>k__BackingField
      // Size: 0x4
      // Offset: 0x18
      UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType Type;
      // Field size check
      static_assert(sizeof(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType) == 0x4);
      // [CompilerGeneratedAttribute] Offset: 0xDFADCC
      // private readonly System.Int32 <EventValue>k__BackingField
      // Size: 0x4
      // Offset: 0x1C
      int EventValue;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // [CompilerGeneratedAttribute] Offset: 0xDFADDC
      // private readonly UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation <Location>k__BackingField
      // Size: 0x8
      // Offset: 0x20
      UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* Location;
      // Field size check
      static_assert(sizeof(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*) == 0x8);
      // [CompilerGeneratedAttribute] Offset: 0xDFADEC
      // private readonly System.Object <Context>k__BackingField
      // Size: 0x8
      // Offset: 0x28
      ::Il2CppObject* Context;
      // Field size check
      static_assert(sizeof(::Il2CppObject*) == 0x8);
      // [CompilerGeneratedAttribute] Offset: 0xDFADFC
      // private readonly System.String <Error>k__BackingField
      // Size: 0x8
      // Offset: 0x30
      ::Il2CppString* Error;
      // Field size check
      static_assert(sizeof(::Il2CppString*) == 0x8);
      // Creating value type constructor for type: DiagnosticEventContext
      constexpr DiagnosticEventContext(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle OperationHandle_ = {}, UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType Type_ = {}, int EventValue_ = {}, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* Location_ = {}, ::Il2CppObject* Context_ = {}, ::Il2CppString* Error_ = {}) noexcept : OperationHandle{OperationHandle_}, Type{Type_}, EventValue{EventValue_}, Location{Location_}, Context{Context_}, Error{Error_} {}
      // Creating interface conversion operator: operator System::ValueType
      operator System::ValueType() noexcept {
        return *reinterpret_cast<System::ValueType*>(this);
      }
      // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle get_OperationHandle()
      // Offset: 0xF01DB0
      UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle get_OperationHandle();
      // public UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType get_Type()
      // Offset: 0xF01DC4
      UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType get_Type();
      // public System.Int32 get_EventValue()
      // Offset: 0xF01DCC
      int get_EventValue();
      // public UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation get_Location()
      // Offset: 0xF01DD4
      UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* get_Location();
      // public System.Object get_Context()
      // Offset: 0xF01DDC
      ::Il2CppObject* get_Context();
      // public System.String get_Error()
      // Offset: 0xF01DE4
      ::Il2CppString* get_Error();
      // public System.Void .ctor(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle op, UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType type, System.Int32 eventValue, System.String error, System.Object context)
      // Offset: 0xF01DEC
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      DiagnosticEventContext(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op, UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType type, int eventValue, ::Il2CppString* error, ::Il2CppObject* context) {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventContext::.ctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(eventValue), ::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(context)})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, op, type, eventValue, error, context);
      }
    }; // UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventContext
    #pragma pack(pop)
    static check_size<sizeof(ResourceManager::DiagnosticEventContext), 48 + sizeof(::Il2CppString*)> __UnityEngine_ResourceManagement_ResourceManager_DiagnosticEventContextSizeCheck;
    static_assert(sizeof(ResourceManager::DiagnosticEventContext) == 0x38);
    // System.Boolean postProfilerEvents
    // Size: 0x1
    // Offset: 0x10
    bool postProfilerEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: postProfilerEvents and: InternalIdTransformFunc
    char __padding0[0x7] = {};
    // [CompilerGeneratedAttribute] Offset: 0xDFAD8C
    // private System.Func`2<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation,System.String> <InternalIdTransformFunc>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    System::Func_2<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::Il2CppString*>* InternalIdTransformFunc;
    // Field size check
    static_assert(sizeof(System::Func_2<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::Il2CppString*>*) == 0x8);
    // System.Boolean CallbackHooksEnabled
    // Size: 0x1
    // Offset: 0x20
    bool CallbackHooksEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: CallbackHooksEnabled and: m_ResourceProviders
    char __padding2[0x7] = {};
    // private ListWithEvents`1<UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider> m_ResourceProviders
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::ListWithEvents_1<UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider*>* m_ResourceProviders;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ListWithEvents_1<UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider*>*) == 0x8);
    // private UnityEngine.ResourceManagement.Util.IAllocationStrategy m_allocator
    // Size: 0x8
    // Offset: 0x30
    UnityEngine::ResourceManagement::Util::IAllocationStrategy* m_allocator;
    // Field size check
    static_assert(sizeof(UnityEngine::ResourceManagement::Util::IAllocationStrategy*) == 0x8);
    // private ListWithEvents`1<UnityEngine.ResourceManagement.IUpdateReceiver> m_UpdateReceivers
    // Size: 0x8
    // Offset: 0x38
    GlobalNamespace::ListWithEvents_1<UnityEngine::ResourceManagement::IUpdateReceiver*>* m_UpdateReceivers;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ListWithEvents_1<UnityEngine::ResourceManagement::IUpdateReceiver*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.ResourceManagement.IUpdateReceiver> m_UpdateReceiversToRemove
    // Size: 0x8
    // Offset: 0x40
    System::Collections::Generic::List_1<UnityEngine::ResourceManagement::IUpdateReceiver*>* m_UpdateReceiversToRemove;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::IUpdateReceiver*>*) == 0x8);
    // private System.Boolean m_UpdatingReceivers
    // Size: 0x1
    // Offset: 0x48
    bool m_UpdatingReceivers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_UpdatingReceivers and: m_providerMap
    char __padding7[0x7] = {};
    // private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider> m_providerMap
    // Size: 0x8
    // Offset: 0x50
    System::Collections::Generic::Dictionary_2<int, UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider*>* m_providerMap;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<int, UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_AssetOperationCache
    // Size: 0x8
    // Offset: 0x58
    System::Collections::Generic::Dictionary_2<int, UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_AssetOperationCache;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<int, UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*) == 0x8);
    // private System.Collections.Generic.HashSet`1<UnityEngine.ResourceManagement.ResourceManager/InstanceOperation> m_TrackedInstanceOperations
    // Size: 0x8
    // Offset: 0x60
    System::Collections::Generic::HashSet_1<UnityEngine::ResourceManagement::ResourceManager::InstanceOperation*>* m_TrackedInstanceOperations;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::HashSet_1<UnityEngine::ResourceManagement::ResourceManager::InstanceOperation*>*) == 0x8);
    // private DelegateList`1<System.Single> m_UpdateCallbacks
    // Size: 0x8
    // Offset: 0x68
    GlobalNamespace::DelegateList_1<float>* m_UpdateCallbacks;
    // Field size check
    static_assert(sizeof(GlobalNamespace::DelegateList_1<float>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_DeferredCompleteCallbacks
    // Size: 0x8
    // Offset: 0x70
    System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_DeferredCompleteCallbacks;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*) == 0x8);
    // private System.Action`4<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle,UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType,System.Int32,System.Object> m_obsoleteDiagnosticsHandler
    // Size: 0x8
    // Offset: 0x78
    System::Action_4<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType, int, ::Il2CppObject*>* m_obsoleteDiagnosticsHandler;
    // Field size check
    static_assert(sizeof(System::Action_4<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType, int, ::Il2CppObject*>*) == 0x8);
    // private System.Action`1<UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventContext> m_diagnosticsHandler
    // Size: 0x8
    // Offset: 0x80
    System::Action_1<UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventContext>* m_diagnosticsHandler;
    // Field size check
    static_assert(sizeof(System::Action_1<UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventContext>*) == 0x8);
    // private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_ReleaseOpNonCached
    // Size: 0x8
    // Offset: 0x88
    System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_ReleaseOpNonCached;
    // Field size check
    static_assert(sizeof(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*) == 0x8);
    // private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_ReleaseOpCached
    // Size: 0x8
    // Offset: 0x90
    System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_ReleaseOpCached;
    // Field size check
    static_assert(sizeof(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*) == 0x8);
    // private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_ReleaseInstanceOp
    // Size: 0x8
    // Offset: 0x98
    System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_ReleaseInstanceOp;
    // Field size check
    static_assert(sizeof(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xDFAD9C
    // private UnityEngine.Networking.CertificateHandler <CertificateHandlerInstance>k__BackingField
    // Size: 0x8
    // Offset: 0xA0
    UnityEngine::Networking::CertificateHandler* CertificateHandlerInstance;
    // Field size check
    static_assert(sizeof(UnityEngine::Networking::CertificateHandler*) == 0x8);
    // private System.Boolean m_RegisteredForCallbacks
    // Size: 0x1
    // Offset: 0xA8
    bool m_RegisteredForCallbacks;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_RegisteredForCallbacks and: m_ProviderOperationTypeCache
    char __padding19[0x7] = {};
    // private System.Collections.Generic.Dictionary`2<System.Type,System.Type> m_ProviderOperationTypeCache
    // Size: 0x8
    // Offset: 0xB0
    System::Collections::Generic::Dictionary_2<System::Type*, System::Type*>* m_ProviderOperationTypeCache;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<System::Type*, System::Type*>*) == 0x8);
    // Creating value type constructor for type: ResourceManager
    ResourceManager(bool postProfilerEvents_ = {}, System::Func_2<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::Il2CppString*>* InternalIdTransformFunc_ = {}, bool CallbackHooksEnabled_ = {}, GlobalNamespace::ListWithEvents_1<UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider*>* m_ResourceProviders_ = {}, UnityEngine::ResourceManagement::Util::IAllocationStrategy* m_allocator_ = {}, GlobalNamespace::ListWithEvents_1<UnityEngine::ResourceManagement::IUpdateReceiver*>* m_UpdateReceivers_ = {}, System::Collections::Generic::List_1<UnityEngine::ResourceManagement::IUpdateReceiver*>* m_UpdateReceiversToRemove_ = {}, bool m_UpdatingReceivers_ = {}, System::Collections::Generic::Dictionary_2<int, UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider*>* m_providerMap_ = {}, System::Collections::Generic::Dictionary_2<int, UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_AssetOperationCache_ = {}, System::Collections::Generic::HashSet_1<UnityEngine::ResourceManagement::ResourceManager::InstanceOperation*>* m_TrackedInstanceOperations_ = {}, GlobalNamespace::DelegateList_1<float>* m_UpdateCallbacks_ = {}, System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_DeferredCompleteCallbacks_ = {}, System::Action_4<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType, int, ::Il2CppObject*>* m_obsoleteDiagnosticsHandler_ = {}, System::Action_1<UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventContext>* m_diagnosticsHandler_ = {}, System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_ReleaseOpNonCached_ = {}, System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_ReleaseOpCached_ = {}, System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_ReleaseInstanceOp_ = {}, UnityEngine::Networking::CertificateHandler* CertificateHandlerInstance_ = {}, bool m_RegisteredForCallbacks_ = {}, System::Collections::Generic::Dictionary_2<System::Type*, System::Type*>* m_ProviderOperationTypeCache_ = {}) noexcept : postProfilerEvents{postProfilerEvents_}, InternalIdTransformFunc{InternalIdTransformFunc_}, CallbackHooksEnabled{CallbackHooksEnabled_}, m_ResourceProviders{m_ResourceProviders_}, m_allocator{m_allocator_}, m_UpdateReceivers{m_UpdateReceivers_}, m_UpdateReceiversToRemove{m_UpdateReceiversToRemove_}, m_UpdatingReceivers{m_UpdatingReceivers_}, m_providerMap{m_providerMap_}, m_AssetOperationCache{m_AssetOperationCache_}, m_TrackedInstanceOperations{m_TrackedInstanceOperations_}, m_UpdateCallbacks{m_UpdateCallbacks_}, m_DeferredCompleteCallbacks{m_DeferredCompleteCallbacks_}, m_obsoleteDiagnosticsHandler{m_obsoleteDiagnosticsHandler_}, m_diagnosticsHandler{m_diagnosticsHandler_}, m_ReleaseOpNonCached{m_ReleaseOpNonCached_}, m_ReleaseOpCached{m_ReleaseOpCached_}, m_ReleaseInstanceOp{m_ReleaseInstanceOp_}, CertificateHandlerInstance{CertificateHandlerInstance_}, m_RegisteredForCallbacks{m_RegisteredForCallbacks_}, m_ProviderOperationTypeCache{m_ProviderOperationTypeCache_} {}
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // [CompilerGeneratedAttribute] Offset: 0xDFAD7C
    // Get static field: static private System.Action`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle,System.Exception> <ExceptionHandler>k__BackingField
    static System::Action_2<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, System::Exception*>* _get_$ExceptionHandler$k__BackingField();
    // Set static field: static private System.Action`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle,System.Exception> <ExceptionHandler>k__BackingField
    static void _set_$ExceptionHandler$k__BackingField(System::Action_2<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, System::Exception*>* value);
    // Get static field: static private System.Int32 s_GroupOperationTypeHash
    static int _get_s_GroupOperationTypeHash();
    // Set static field: static private System.Int32 s_GroupOperationTypeHash
    static void _set_s_GroupOperationTypeHash(int value);
    // Get static field: static private System.Int32 s_InstanceOperationTypeHash
    static int _get_s_InstanceOperationTypeHash();
    // Set static field: static private System.Int32 s_InstanceOperationTypeHash
    static void _set_s_InstanceOperationTypeHash(int value);
    // static public System.Action`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle,System.Exception> get_ExceptionHandler()
    // Offset: 0x19AC710
    static System::Action_2<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, System::Exception*>* get_ExceptionHandler();
    // static public System.Void set_ExceptionHandler(System.Action`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle,System.Exception> value)
    // Offset: 0x19AC778
    static void set_ExceptionHandler(System::Action_2<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, System::Exception*>* value);
    // public System.Func`2<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation,System.String> get_InternalIdTransformFunc()
    // Offset: 0x19AC7E4
    System::Func_2<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::Il2CppString*>* get_InternalIdTransformFunc();
    // public System.Void set_InternalIdTransformFunc(System.Func`2<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation,System.String> value)
    // Offset: 0x19AC7EC
    void set_InternalIdTransformFunc(System::Func_2<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::Il2CppString*>* value);
    // public System.String TransformInternalId(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location)
    // Offset: 0x19AC7F4
    ::Il2CppString* TransformInternalId(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location);
    // System.Int32 get_OperationCacheCount()
    // Offset: 0x19AC8D4
    int get_OperationCacheCount();
    // System.Int32 get_InstanceOperationCount()
    // Offset: 0x19AC92C
    int get_InstanceOperationCount();
    // public System.Void AddUpdateReceiver(UnityEngine.ResourceManagement.IUpdateReceiver receiver)
    // Offset: 0x19AC97C
    void AddUpdateReceiver(UnityEngine::ResourceManagement::IUpdateReceiver* receiver);
    // public System.Void RemoveUpdateReciever(UnityEngine.ResourceManagement.IUpdateReceiver receiver)
    // Offset: 0x19AC9F8
    void RemoveUpdateReciever(UnityEngine::ResourceManagement::IUpdateReceiver* receiver);
    // public UnityEngine.ResourceManagement.Util.IAllocationStrategy get_Allocator()
    // Offset: 0x19ACAD4
    UnityEngine::ResourceManagement::Util::IAllocationStrategy* get_Allocator();
    // public System.Void set_Allocator(UnityEngine.ResourceManagement.Util.IAllocationStrategy value)
    // Offset: 0x19ACADC
    void set_Allocator(UnityEngine::ResourceManagement::Util::IAllocationStrategy* value);
    // public System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider> get_ResourceProviders()
    // Offset: 0x19ACAE4
    System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider*>* get_ResourceProviders();
    // public UnityEngine.Networking.CertificateHandler get_CertificateHandlerInstance()
    // Offset: 0x19ACAEC
    UnityEngine::Networking::CertificateHandler* get_CertificateHandlerInstance();
    // public System.Void set_CertificateHandlerInstance(UnityEngine.Networking.CertificateHandler value)
    // Offset: 0x19ACAF4
    void set_CertificateHandlerInstance(UnityEngine::Networking::CertificateHandler* value);
    // public System.Void .ctor(UnityEngine.ResourceManagement.Util.IAllocationStrategy alloc)
    // Offset: 0x19ACAFC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ResourceManager* New_ctor(UnityEngine::ResourceManagement::Util::IAllocationStrategy* alloc) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ResourceManager*, creationType>(alloc)));
    }
    // private System.Void OnObjectAdded(System.Object obj)
    // Offset: 0x19ACF90
    void OnObjectAdded(::Il2CppObject* obj);
    // private System.Void OnObjectRemoved(System.Object obj)
    // Offset: 0x19AD00C
    void OnObjectRemoved(::Il2CppObject* obj);
    // System.Void RegisterForCallbacks()
    // Offset: 0x19AD088
    void RegisterForCallbacks();
    // public System.Void ClearDiagnosticsCallback()
    // Offset: 0x19AD154
    void ClearDiagnosticsCallback();
    // public System.Void ClearDiagnosticCallbacks()
    // Offset: 0x19AD15C
    void ClearDiagnosticCallbacks();
    // public System.Void UnregisterDiagnosticCallback(System.Action`1<UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventContext> func)
    // Offset: 0x19AD164
    void UnregisterDiagnosticCallback(System::Action_1<UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventContext>* func);
    // public System.Void RegisterDiagnosticCallback(System.Action`4<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle,UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventType,System.Int32,System.Object> func)
    // Offset: 0x19AD228
    void RegisterDiagnosticCallback(System::Action_4<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType, int, ::Il2CppObject*>* func);
    // public System.Void RegisterDiagnosticCallback(System.Action`1<UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventContext> func)
    // Offset: 0x19AD230
    void RegisterDiagnosticCallback(System::Action_1<UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventContext>* func);
    // System.Void PostDiagnosticEvent(UnityEngine.ResourceManagement.ResourceManager/DiagnosticEventContext context)
    // Offset: 0x19AD2B0
    void PostDiagnosticEvent(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventContext context);
    // public UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider GetResourceProvider(System.Type t, UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location)
    // Offset: 0x19AD408
    UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider* GetResourceProvider(System::Type* t, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location);
    // private System.Type GetDefaultTypeForLocation(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation loc)
    // Offset: 0x19AD858
    System::Type* GetDefaultTypeForLocation(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* loc);
    // private System.Int32 CalculateLocationsHash(System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> locations, System.Type t)
    // Offset: 0x19AD9B8
    int CalculateLocationsHash(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, System::Type* t);
    // private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle ProvideResource(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location, System.Type desiredType, System.Boolean releaseDependenciesOnFailure)
    // Offset: 0x19ADD7C
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle ProvideResource(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, System::Type* desiredType, bool releaseDependenciesOnFailure);
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> ProvideResource(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location)
    // Offset: 0xFFFFFFFF
    template<class TObject>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> ProvideResource(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::ProvideResource");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProvideResource", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___generic__method, location);
    }
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> StartOperation(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1<TObject> operation, UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle dependency)
    // Offset: 0xFFFFFFFF
    template<class TObject>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> StartOperation(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1<TObject>* operation, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dependency) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::StartOperation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operation), ::il2cpp_utils::ExtractType(dependency)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___generic__method, operation, dependency);
    }
    // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle StartOperation(UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation operation, UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle dependency)
    // Offset: 0x19AEB40
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle StartOperation(UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* operation, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dependency);
    // private System.Void OnInstanceOperationDestroy(UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation o)
    // Offset: 0x19AECC4
    void OnInstanceOperationDestroy(UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* o);
    // private System.Void OnOperationDestroyNonCached(UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation o)
    // Offset: 0x19AEE08
    void OnOperationDestroyNonCached(UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* o);
    // private System.Void OnOperationDestroyCached(UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation o)
    // Offset: 0x19AEEF4
    void OnOperationDestroyCached(UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* o);
    // T CreateOperation(System.Type actualType, System.Int32 typeHash, System.Int32 operationHash, System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> onDestroyAction)
    // Offset: 0xFFFFFFFF
    template<class T>
    T CreateOperation(System::Type* actualType, int typeHash, int operationHash, System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* onDestroyAction) {
      static_assert(std::is_base_of_v<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation, std::remove_pointer_t<T>>);
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::CreateOperation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOperation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actualType), ::il2cpp_utils::ExtractType(typeHash), ::il2cpp_utils::ExtractType(operationHash), ::il2cpp_utils::ExtractType(onDestroyAction)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodThrow<T, false>(this, ___generic__method, actualType, typeHash, operationHash, onDestroyAction);
    }
    // System.Void AddOperationToCache(System.Int32 hash, UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation operation)
    // Offset: 0x19AF104
    void AddOperationToCache(int hash, UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* operation);
    // System.Boolean RemoveOperationFromCache(System.Int32 hash)
    // Offset: 0x19AF078
    bool RemoveOperationFromCache(int hash);
    // System.Boolean IsOperationCached(System.Int32 hash)
    // Offset: 0x19AF194
    bool IsOperationCached(int hash);
    // System.Int32 CachedOperationCount()
    // Offset: 0x19AF1FC
    int CachedOperationCount();
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> CreateCompletedOperation(TObject result, System.String errorMsg)
    // Offset: 0xFFFFFFFF
    template<class TObject>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> CreateCompletedOperation(TObject result, ::Il2CppString* errorMsg) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::CreateCompletedOperation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCompletedOperation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(errorMsg)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___generic__method, result, errorMsg);
    }
    // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> CreateCompletedOperationInternal(TObject result, System.Boolean success, System.String errorMsg, System.Boolean releaseDependenciesOnFailure)
    // Offset: 0xFFFFFFFF
    template<class TObject>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> CreateCompletedOperationInternal(TObject result, bool success, ::Il2CppString* errorMsg, bool releaseDependenciesOnFailure) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::CreateCompletedOperationInternal");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCompletedOperationInternal", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(errorMsg), ::il2cpp_utils::ExtractType(releaseDependenciesOnFailure)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___generic__method, result, success, errorMsg, releaseDependenciesOnFailure);
    }
    // public System.Void Release(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle handle)
    // Offset: 0x19AF254
    void Release(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle);
    // public System.Void Acquire(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle handle)
    // Offset: 0x19AF25C
    void Acquire(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle);
    // private UnityEngine.ResourceManagement.AsyncOperations.GroupOperation AcquireGroupOpFromCache(System.Int32 hash)
    // Offset: 0x19AF280
    UnityEngine::ResourceManagement::AsyncOperations::GroupOperation* AcquireGroupOpFromCache(int hash);
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle>> CreateGroupOperation(System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> locations)
    // Offset: 0xFFFFFFFF
    template<class T>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> CreateGroupOperation(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::CreateGroupOperation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGroupOperation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>, false>(this, ___generic__method, locations);
    }
    // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle>> CreateGroupOperation(System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> locations, System.Boolean allowFailedDependencies)
    // Offset: 0xFFFFFFFF
    template<class T>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> CreateGroupOperation(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, bool allowFailedDependencies) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::CreateGroupOperation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGroupOperation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations), ::il2cpp_utils::ExtractType(allowFailedDependencies)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>, false>(this, ___generic__method, locations, allowFailedDependencies);
    }
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle>> CreateGenericGroupOperation(System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> operations, System.Boolean releasedCachedOpOnComplete)
    // Offset: 0x19AF3B4
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> CreateGenericGroupOperation(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* operations, bool releasedCachedOpOnComplete);
    // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle>> ProvideResourceGroupCached(System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> locations, System.Int32 groupHash, System.Type desiredType, System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> callback, System.Boolean releaseDependenciesOnFailure)
    // Offset: 0x19AE55C
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> ProvideResourceGroupCached(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, int groupHash, System::Type* desiredType, System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* callback, bool releaseDependenciesOnFailure);
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.IList`1<TObject>> ProvideResources(System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> locations, System.Action`1<TObject> callback)
    // Offset: 0xFFFFFFFF
    template<class TObject>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<TObject>*> ProvideResources(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, System::Action_1<TObject>* callback) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::ProvideResources");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProvideResources", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations), ::il2cpp_utils::ExtractType(callback)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<TObject>*>, false>(this, ___generic__method, locations, callback);
    }
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.IList`1<TObject>> ProvideResources(System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> locations, System.Boolean releaseDependenciesOnFailure, System.Action`1<TObject> callback)
    // Offset: 0xFFFFFFFF
    template<class TObject>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<TObject>*> ProvideResources(System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, bool releaseDependenciesOnFailure, System::Action_1<TObject>* callback) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::ProvideResources");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProvideResources", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations), ::il2cpp_utils::ExtractType(releaseDependenciesOnFailure), ::il2cpp_utils::ExtractType(callback)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<TObject>*>, false>(this, ___generic__method, locations, releaseDependenciesOnFailure, callback);
    }
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> CreateChainOperation(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObjectDependency> dependentOp, System.Func`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObjectDependency>,UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> callback)
    // Offset: 0xFFFFFFFF
    template<class TObject, class TObjectDependency>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> CreateChainOperation(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObjectDependency> dependentOp, System::Func_2<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObjectDependency>, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* callback) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::CreateChainOperation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChainOperation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObjectDependency>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dependentOp), ::il2cpp_utils::ExtractType(callback)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObjectDependency>::get()})));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___generic__method, dependentOp, callback);
    }
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> CreateChainOperation(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle dependentOp, System.Func`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle,UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> callback)
    // Offset: 0xFFFFFFFF
    template<class TObject>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> CreateChainOperation(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dependentOp, System::Func_2<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* callback) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::CreateChainOperation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChainOperation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dependentOp), ::il2cpp_utils::ExtractType(callback)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___generic__method, dependentOp, callback);
    }
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> CreateChainOperation(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObjectDependency> dependentOp, System.Func`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObjectDependency>,UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> callback, System.Boolean releaseDependenciesOnFailure)
    // Offset: 0xFFFFFFFF
    template<class TObject, class TObjectDependency>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> CreateChainOperation(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObjectDependency> dependentOp, System::Func_2<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObjectDependency>, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* callback, bool releaseDependenciesOnFailure) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::CreateChainOperation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChainOperation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObjectDependency>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dependentOp), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(releaseDependenciesOnFailure)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObjectDependency>::get()})));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___generic__method, dependentOp, callback, releaseDependenciesOnFailure);
    }
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> CreateChainOperation(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle dependentOp, System.Func`2<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle,UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> callback, System.Boolean releaseDependenciesOnFailure)
    // Offset: 0xFFFFFFFF
    template<class TObject>
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> CreateChainOperation(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dependentOp, System::Func_2<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* callback, bool releaseDependenciesOnFailure) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceManager::CreateChainOperation");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChainOperation", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dependentOp), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(releaseDependenciesOnFailure)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TObject>::get()}));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___generic__method, dependentOp, callback, releaseDependenciesOnFailure);
    }
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.ResourceManagement.ResourceProviders.SceneInstance> ProvideScene(UnityEngine.ResourceManagement.ResourceProviders.ISceneProvider sceneProvider, UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location, UnityEngine.SceneManagement.LoadSceneMode loadMode, System.Boolean activateOnLoad, System.Int32 priority)
    // Offset: 0x19AF514
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> ProvideScene(UnityEngine::ResourceManagement::ResourceProviders::ISceneProvider* sceneProvider, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority);
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.ResourceManagement.ResourceProviders.SceneInstance> ReleaseScene(UnityEngine.ResourceManagement.ResourceProviders.ISceneProvider sceneProvider, UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.ResourceManagement.ResourceProviders.SceneInstance> sceneLoadHandle)
    // Offset: 0x19AF640
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> ReleaseScene(UnityEngine::ResourceManagement::ResourceProviders::ISceneProvider* sceneProvider, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> sceneLoadHandle);
    // public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.GameObject> ProvideInstance(UnityEngine.ResourceManagement.ResourceProviders.IInstanceProvider provider, UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location, UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters instantiateParameters)
    // Offset: 0x19AF780
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::GameObject*> ProvideInstance(UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider* provider, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters);
    // public System.Void CleanupSceneInstances(UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x19AFA10
    void CleanupSceneInstances(UnityEngine::SceneManagement::Scene scene);
    // private System.Void ExecuteDeferredCallbacks()
    // Offset: 0x19AFCC4
    void ExecuteDeferredCallbacks();
    // System.Void RegisterForDeferredCallback(UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation op, System.Boolean incrementRefCount)
    // Offset: 0x19AFE6C
    void RegisterForDeferredCallback(UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* op, bool incrementRefCount);
    // System.Void Update(System.Single unscaledDeltaTime)
    // Offset: 0x19A98BC
    void Update(float unscaledDeltaTime);
    // public System.Void Dispose()
    // Offset: 0x19AFF54
    void Dispose();
    // static private System.Void .cctor()
    // Offset: 0x19B001C
    static void _cctor();
    // private System.Void <.ctor>b__45_0(UnityEngine.ResourceManagement.IUpdateReceiver x)
    // Offset: 0x19B00E8
    void $_ctor$b__45_0(UnityEngine::ResourceManagement::IUpdateReceiver* x);
  }; // UnityEngine.ResourceManagement.ResourceManager
  #pragma pack(pop)
  static check_size<sizeof(ResourceManager), 176 + sizeof(System::Collections::Generic::Dictionary_2<System::Type*, System::Type*>*)> __UnityEngine_ResourceManagement_ResourceManagerSizeCheck;
  static_assert(sizeof(ResourceManager) == 0xB8);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ResourceManagement::ResourceManager*, "UnityEngine.ResourceManagement", "ResourceManager");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventType, "UnityEngine.ResourceManagement", "ResourceManager/DiagnosticEventType");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ResourceManagement::ResourceManager::DiagnosticEventContext, "UnityEngine.ResourceManagement", "ResourceManager/DiagnosticEventContext");
