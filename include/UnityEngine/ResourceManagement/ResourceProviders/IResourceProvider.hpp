// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceLocations
namespace UnityEngine::ResourceManagement::ResourceLocations {
  // Forward declaring type: IResourceLocation
  class IResourceLocation;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Forward declaring type: ProvideHandle
  struct ProvideHandle;
  // Forward declaring type: ProviderBehaviourFlags
  struct ProviderBehaviourFlags;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppString;
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.ResourceManagement.ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider
  class IResourceProvider {
    public:
    // Creating value type constructor for type: IResourceProvider
    IResourceProvider() noexcept {}
    // public System.String get_ProviderId()
    // Offset: 0xFFFFFFFF
    ::Il2CppString* get_ProviderId();
    // public System.Type GetDefaultType(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location)
    // Offset: 0xFFFFFFFF
    System::Type* GetDefaultType(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location);
    // public System.Boolean CanProvide(System.Type type, UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location)
    // Offset: 0xFFFFFFFF
    bool CanProvide(System::Type* type, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location);
    // public System.Void Provide(UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle provideHandle)
    // Offset: 0xFFFFFFFF
    void Provide(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle);
    // public System.Void Release(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location, System.Object asset)
    // Offset: 0xFFFFFFFF
    void Release(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::Il2CppObject* asset);
    // public UnityEngine.ResourceManagement.ResourceProviders.ProviderBehaviourFlags get_BehaviourFlags()
    // Offset: 0xFFFFFFFF
    UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags get_BehaviourFlags();
  }; // UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider
  #pragma pack(pop)
  // Writing MetadataGetter for method: IResourceProvider::get_ProviderId
  // Il2CppName: get_ProviderId
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (IResourceProvider::*)()>(&IResourceProvider::get_ProviderId)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IResourceProvider*), "get_ProviderId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: IResourceProvider::GetDefaultType
  // Il2CppName: GetDefaultType
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (IResourceProvider::*)(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*)>(&IResourceProvider::GetDefaultType)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IResourceProvider*), "GetDefaultType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>()});
    }
  };
  // Writing MetadataGetter for method: IResourceProvider::CanProvide
  // Il2CppName: CanProvide
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IResourceProvider::*)(System::Type*, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*)>(&IResourceProvider::CanProvide)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IResourceProvider*), "CanProvide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>()});
    }
  };
  // Writing MetadataGetter for method: IResourceProvider::Provide
  // Il2CppName: Provide
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IResourceProvider::*)(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle)>(&IResourceProvider::Provide)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IResourceProvider*), "Provide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle>()});
    }
  };
  // Writing MetadataGetter for method: IResourceProvider::Release
  // Il2CppName: Release
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IResourceProvider::*)(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::Il2CppObject*)>(&IResourceProvider::Release)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IResourceProvider*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: IResourceProvider::get_BehaviourFlags
  // Il2CppName: get_BehaviourFlags
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags (IResourceProvider::*)()>(&IResourceProvider::get_BehaviourFlags)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IResourceProvider*), "get_BehaviourFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider*, "UnityEngine.ResourceManagement.ResourceProviders", "IResourceProvider");
