// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IAssetBundleResource
#include "UnityEngine/ResourceManagement/ResourceProviders/IAssetBundleResource.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AssetBundle
  class AssetBundle;
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Forward declaring namespace: UnityEngine::Networking
namespace UnityEngine::Networking {
  // Forward declaring type: DownloadHandlerAssetBundle
  class DownloadHandlerAssetBundle;
  // Forward declaring type: UnityWebRequest
  class UnityWebRequest;
  // Forward declaring type: UnityWebRequestAsyncOperation
  class UnityWebRequestAsyncOperation;
}
// Forward declaring namespace: UnityEngine::ResourceManagement
namespace UnityEngine::ResourceManagement {
  // Forward declaring type: WebRequestQueueOperation
  class WebRequestQueueOperation;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Forward declaring type: AssetBundleRequestOptions
  class AssetBundleRequestOptions;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceLocations
namespace UnityEngine::ResourceManagement::ResourceLocations {
  // Forward declaring type: IResourceLocation
  class IResourceLocation;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::AsyncOperations
namespace UnityEngine::ResourceManagement::AsyncOperations {
  // Skipping declaration: DownloadStatus because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement.ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Size: 0x69
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource
  class AssetBundleResource : public ::Il2CppObject/*, public UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*/ {
    public:
    // private UnityEngine.AssetBundle m_AssetBundle
    // Size: 0x8
    // Offset: 0x10
    UnityEngine::AssetBundle* m_AssetBundle;
    // Field size check
    static_assert(sizeof(UnityEngine::AssetBundle*) == 0x8);
    // private UnityEngine.Networking.DownloadHandlerAssetBundle m_downloadHandler
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::Networking::DownloadHandlerAssetBundle* m_downloadHandler;
    // Field size check
    static_assert(sizeof(UnityEngine::Networking::DownloadHandlerAssetBundle*) == 0x8);
    // private UnityEngine.AsyncOperation m_RequestOperation
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::AsyncOperation* m_RequestOperation;
    // Field size check
    static_assert(sizeof(UnityEngine::AsyncOperation*) == 0x8);
    // private UnityEngine.ResourceManagement.WebRequestQueueOperation m_WebRequestQueueOperation
    // Size: 0x8
    // Offset: 0x28
    UnityEngine::ResourceManagement::WebRequestQueueOperation* m_WebRequestQueueOperation;
    // Field size check
    static_assert(sizeof(UnityEngine::ResourceManagement::WebRequestQueueOperation*) == 0x8);
    // UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle m_ProvideHandle
    // Size: 0x18
    // Offset: 0x30
    UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle m_ProvideHandle;
    // Field size check
    static_assert(sizeof(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle) == 0x18);
    // UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions m_Options
    // Size: 0x8
    // Offset: 0x48
    UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions* m_Options;
    // Field size check
    static_assert(sizeof(UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions*) == 0x8);
    // private System.Int32 m_Retries
    // Size: 0x4
    // Offset: 0x50
    int m_Retries;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_Retries and: m_BytesToDownload
    char __padding6[0x4] = {};
    // private System.Int64 m_BytesToDownload
    // Size: 0x8
    // Offset: 0x58
    int64_t m_BytesToDownload;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Int64 m_DownloadedBytes
    // Size: 0x8
    // Offset: 0x60
    int64_t m_DownloadedBytes;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Boolean m_Completed
    // Size: 0x1
    // Offset: 0x68
    bool m_Completed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: AssetBundleResource
    AssetBundleResource(UnityEngine::AssetBundle* m_AssetBundle_ = {}, UnityEngine::Networking::DownloadHandlerAssetBundle* m_downloadHandler_ = {}, UnityEngine::AsyncOperation* m_RequestOperation_ = {}, UnityEngine::ResourceManagement::WebRequestQueueOperation* m_WebRequestQueueOperation_ = {}, UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle m_ProvideHandle_ = {}, UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions* m_Options_ = {}, int m_Retries_ = {}, int64_t m_BytesToDownload_ = {}, int64_t m_DownloadedBytes_ = {}, bool m_Completed_ = {}) noexcept : m_AssetBundle{m_AssetBundle_}, m_downloadHandler{m_downloadHandler_}, m_RequestOperation{m_RequestOperation_}, m_WebRequestQueueOperation{m_WebRequestQueueOperation_}, m_ProvideHandle{m_ProvideHandle_}, m_Options{m_Options_}, m_Retries{m_Retries_}, m_BytesToDownload{m_BytesToDownload_}, m_DownloadedBytes{m_DownloadedBytes_}, m_Completed{m_Completed_} {}
    // Creating interface conversion operator: operator UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource
    operator UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource() noexcept {
      return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>(this);
    }
    // UnityEngine.Networking.UnityWebRequest CreateWebRequest(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation loc)
    // Offset: 0x19B117C
    UnityEngine::Networking::UnityWebRequest* CreateWebRequest(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* loc);
    // private System.Single PercentComplete()
    // Offset: 0x19B1350
    float PercentComplete();
    // private UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus GetDownloadStatus()
    // Offset: 0x19B1368
    UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus GetDownloadStatus();
    // public UnityEngine.AssetBundle GetAssetBundle()
    // Offset: 0x19B1524
    UnityEngine::AssetBundle* GetAssetBundle();
    // System.Void Start(UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle provideHandle)
    // Offset: 0x19B09F0
    void Start(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle);
    // private System.Boolean WaitForCompletionHandler()
    // Offset: 0x19B1CD4
    bool WaitForCompletionHandler();
    // private System.Void BeginOperation()
    // Offset: 0x19B19B0
    void BeginOperation();
    // private System.Void LocalRequestOperationCompleted(UnityEngine.AsyncOperation op)
    // Offset: 0x19B1E28
    void LocalRequestOperationCompleted(UnityEngine::AsyncOperation* op);
    // private System.Void WebRequestOperationCompleted(UnityEngine.AsyncOperation op)
    // Offset: 0x19B2008
    void WebRequestOperationCompleted(UnityEngine::AsyncOperation* op);
    // public System.Void Unload()
    // Offset: 0x19B0DF4
    void Unload();
    // private System.Void <BeginOperation>b__16_0(UnityEngine.Networking.UnityWebRequestAsyncOperation asyncOp)
    // Offset: 0x19B27EC
    void $BeginOperation$b__16_0(UnityEngine::Networking::UnityWebRequestAsyncOperation* asyncOp);
    // public System.Void .ctor()
    // Offset: 0x19B09E8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AssetBundleResource* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AssetBundleResource*, creationType>()));
    }
  }; // UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource
  #pragma pack(pop)
  static check_size<sizeof(AssetBundleResource), 104 + sizeof(bool)> __UnityEngine_ResourceManagement_ResourceProviders_AssetBundleResourceSizeCheck;
  static_assert(sizeof(AssetBundleResource) == 0x69);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource*, "UnityEngine.ResourceManagement.ResourceProviders", "AssetBundleResource");
