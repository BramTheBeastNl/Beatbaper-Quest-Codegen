// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation
#include "UnityEngine/ResourceManagement/AsyncOperations/IAsyncOperation.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationStatus.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ResourceManagement::AsyncOperations
namespace UnityEngine::ResourceManagement::AsyncOperations {
  // Skipping declaration: <>c__DisplayClass45_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass47_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass58_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass59_0 because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine::ResourceManagement
namespace UnityEngine::ResourceManagement {
  // Forward declaring type: ResourceManager
  class ResourceManager;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: DelegateList`1<T>
  template<typename T>
  class DelegateList_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: EventWaitHandle
  class EventWaitHandle;
  // Forward declaring type: WaitHandle
  class WaitHandle;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement.AsyncOperations
namespace UnityEngine::ResourceManagement::AsyncOperations {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1
  template<typename TObject>
  class AsyncOperationBase_1 : public ::Il2CppObject/*, public UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*/ {
    public:
    // Nested type: UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass45_0<TObject>
    class $$c__DisplayClass45_0;
    // Nested type: UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass47_0<TObject>
    class $$c__DisplayClass47_0;
    // Nested type: UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass58_0<TObject>
    class $$c__DisplayClass58_0;
    // Nested type: UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass59_0<TObject>
    class $$c__DisplayClass59_0;
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass45_0
    // [CompilerGeneratedAttribute] Offset: DFCCF8
    class $$c__DisplayClass45_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = AsyncOperationBase_1<TObject>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass45_0";
      // public System.Threading.WaitHandle waitHandle
      // Size: 0x8
      // Offset: 0x0
      System::Threading::WaitHandle* waitHandle;
      // Field size check
      static_assert(sizeof(System::Threading::WaitHandle*) == 0x8);
      // Creating value type constructor for type: $$c__DisplayClass45_0
      $$c__DisplayClass45_0(System::Threading::WaitHandle* waitHandle_ = {}) noexcept : waitHandle{waitHandle_} {}
      // Creating conversion operator: operator System::Threading::WaitHandle*
      constexpr operator System::Threading::WaitHandle*() const noexcept {
        return waitHandle;
      }
      // TObject <get_Task>b__1(System.Object o)
      // Offset: 0xFFFFFFFF
      TObject $get_Task$b__1(::Il2CppObject* o) {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass45_0::<get_Task>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Task>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
        return ::il2cpp_utils::RunMethodThrow<TObject, false>(this, ___internal__method, o);
      }
      // TObject <get_Task>b__0(System.Object o)
      // Offset: 0xFFFFFFFF
      TObject $get_Task$b__0(::Il2CppObject* o) {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass45_0::<get_Task>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Task>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
        return ::il2cpp_utils::RunMethodThrow<TObject, false>(this, ___internal__method, o);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename AsyncOperationBase_1<TObject>::$$c__DisplayClass45_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass45_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename AsyncOperationBase_1<TObject>::$$c__DisplayClass45_0*, creationType>()));
      }
    }; // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass45_0
    // Could not write size check! Type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass45_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass47_0
    // [CompilerGeneratedAttribute] Offset: DFCD08
    class $$c__DisplayClass47_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = AsyncOperationBase_1<TObject>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass47_0";
      // public System.Threading.WaitHandle waitHandle
      // Size: 0x8
      // Offset: 0x0
      System::Threading::WaitHandle* waitHandle;
      // Field size check
      static_assert(sizeof(System::Threading::WaitHandle*) == 0x8);
      // Creating value type constructor for type: $$c__DisplayClass47_0
      $$c__DisplayClass47_0(System::Threading::WaitHandle* waitHandle_ = {}) noexcept : waitHandle{waitHandle_} {}
      // Creating conversion operator: operator System::Threading::WaitHandle*
      constexpr operator System::Threading::WaitHandle*() const noexcept {
        return waitHandle;
      }
      // System.Object <UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task>b__1(System.Object o)
      // Offset: 0xFFFFFFFF
      ::Il2CppObject* $UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Task$b__1(::Il2CppObject* o) {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass47_0::<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
        return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, o);
      }
      // System.Object <UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task>b__0(System.Object o)
      // Offset: 0xFFFFFFFF
      ::Il2CppObject* $UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Task$b__0(::Il2CppObject* o) {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass47_0::<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
        return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, o);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename AsyncOperationBase_1<TObject>::$$c__DisplayClass47_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass47_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename AsyncOperationBase_1<TObject>::$$c__DisplayClass47_0*, creationType>()));
      }
    }; // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass47_0
    // Could not write size check! Type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass47_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass58_0
    // [CompilerGeneratedAttribute] Offset: DFCD18
    class $$c__DisplayClass58_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = AsyncOperationBase_1<TObject>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass58_0";
      // public System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value
      // Size: 0x8
      // Offset: 0x0
      System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value;
      // Field size check
      static_assert(sizeof(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*) == 0x8);
      // Creating value type constructor for type: $$c__DisplayClass58_0
      $$c__DisplayClass58_0(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*
      constexpr operator System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() const noexcept {
        return value;
      }
      // System.Void <add_CompletedTypeless>b__0(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> s)
      // Offset: 0xFFFFFFFF
      void $add_CompletedTypeless$b__0(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> s) {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass58_0::<add_CompletedTypeless>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<add_CompletedTypeless>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
        ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename AsyncOperationBase_1<TObject>::$$c__DisplayClass58_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass58_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename AsyncOperationBase_1<TObject>::$$c__DisplayClass58_0*, creationType>()));
      }
    }; // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass58_0
    // Could not write size check! Type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass58_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass59_0
    // [CompilerGeneratedAttribute] Offset: DFCD28
    class $$c__DisplayClass59_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = AsyncOperationBase_1<TObject>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass59_0";
      // public System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value
      // Size: 0x8
      // Offset: 0x0
      System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value;
      // Field size check
      static_assert(sizeof(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*) == 0x8);
      // Creating value type constructor for type: $$c__DisplayClass59_0
      $$c__DisplayClass59_0(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*
      constexpr operator System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() const noexcept {
        return value;
      }
      // System.Void <remove_CompletedTypeless>b__0(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> s)
      // Offset: 0xFFFFFFFF
      void $remove_CompletedTypeless$b__0(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> s) {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass59_0::<remove_CompletedTypeless>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<remove_CompletedTypeless>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
        ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename AsyncOperationBase_1<TObject>::$$c__DisplayClass59_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::$$c__DisplayClass59_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename AsyncOperationBase_1<TObject>::$$c__DisplayClass59_0*, creationType>()));
      }
    }; // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass59_0
    // Could not write size check! Type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1/<>c__DisplayClass59_0 is generic, or has no fields that are valid for size checks!
    // [CompilerGeneratedAttribute] Offset: 0xDFD24C
    // private TObject <Result>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TObject Result;
    // private System.Int32 m_referenceCount
    // Size: 0x4
    // Offset: 0x0
    int m_referenceCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus m_Status
    // Size: 0x4
    // Offset: 0x0
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus m_Status;
    // Field size check
    static_assert(sizeof(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus) == 0x4);
    // private System.Exception m_Error
    // Size: 0x8
    // Offset: 0x0
    System::Exception* m_Error;
    // Field size check
    static_assert(sizeof(System::Exception*) == 0x8);
    // UnityEngine.ResourceManagement.ResourceManager m_RM
    // Size: 0x8
    // Offset: 0x0
    UnityEngine::ResourceManagement::ResourceManager* m_RM;
    // Field size check
    static_assert(sizeof(UnityEngine::ResourceManagement::ResourceManager*) == 0x8);
    // System.Int32 m_Version
    // Size: 0x4
    // Offset: 0x0
    int m_Version;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private DelegateList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_DestroyedAction
    // Size: 0x8
    // Offset: 0x0
    GlobalNamespace::DelegateList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* m_DestroyedAction;
    // Field size check
    static_assert(sizeof(GlobalNamespace::DelegateList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*) == 0x8);
    // private DelegateList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> m_CompletedActionT
    // Size: 0x8
    // Offset: 0x0
    GlobalNamespace::DelegateList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* m_CompletedActionT;
    // Field size check
    static_assert(sizeof(GlobalNamespace::DelegateList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>*) == 0x8);
    // private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> m_OnDestroyAction
    // Size: 0x8
    // Offset: 0x0
    System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_OnDestroyAction;
    // Field size check
    static_assert(sizeof(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>*) == 0x8);
    // private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_dependencyCompleteAction
    // Size: 0x8
    // Offset: 0x0
    System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* m_dependencyCompleteAction;
    // Field size check
    static_assert(sizeof(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*) == 0x8);
    // protected System.Boolean HasExecuted
    // Size: 0x1
    // Offset: 0x0
    bool HasExecuted;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xDFD25C
    // private System.Boolean <IsRunning>k__BackingField
    // Size: 0x1
    // Offset: 0x0
    bool IsRunning;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Threading.EventWaitHandle m_waitHandle
    // Size: 0x8
    // Offset: 0x0
    System::Threading::EventWaitHandle* m_waitHandle;
    // Field size check
    static_assert(sizeof(System::Threading::EventWaitHandle*) == 0x8);
    // private System.Boolean m_InDeferredCallbackQueue
    // Size: 0x1
    // Offset: 0x0
    bool m_InDeferredCallbackQueue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private DelegateList`1<System.Single> m_UpdateCallbacks
    // Size: 0x8
    // Offset: 0x0
    GlobalNamespace::DelegateList_1<float>* m_UpdateCallbacks;
    // Field size check
    static_assert(sizeof(GlobalNamespace::DelegateList_1<float>*) == 0x8);
    // private System.Action`1<System.Single> m_UpdateCallback
    // Size: 0x8
    // Offset: 0x0
    System::Action_1<float>* m_UpdateCallback;
    // Field size check
    static_assert(sizeof(System::Action_1<float>*) == 0x8);
    // Creating value type constructor for type: AsyncOperationBase_1
    AsyncOperationBase_1(TObject Result_ = {}, int m_referenceCount_ = {}, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus m_Status_ = {}, System::Exception* m_Error_ = {}, UnityEngine::ResourceManagement::ResourceManager* m_RM_ = {}, int m_Version_ = {}, GlobalNamespace::DelegateList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* m_DestroyedAction_ = {}, GlobalNamespace::DelegateList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* m_CompletedActionT_ = {}, System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* m_OnDestroyAction_ = {}, System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* m_dependencyCompleteAction_ = {}, bool HasExecuted_ = {}, bool IsRunning_ = {}, System::Threading::EventWaitHandle* m_waitHandle_ = {}, bool m_InDeferredCallbackQueue_ = {}, GlobalNamespace::DelegateList_1<float>* m_UpdateCallbacks_ = {}, System::Action_1<float>* m_UpdateCallback_ = {}) noexcept : Result{Result_}, m_referenceCount{m_referenceCount_}, m_Status{m_Status_}, m_Error{m_Error_}, m_RM{m_RM_}, m_Version{m_Version_}, m_DestroyedAction{m_DestroyedAction_}, m_CompletedActionT{m_CompletedActionT_}, m_OnDestroyAction{m_OnDestroyAction_}, m_dependencyCompleteAction{m_dependencyCompleteAction_}, HasExecuted{HasExecuted_}, IsRunning{IsRunning_}, m_waitHandle{m_waitHandle_}, m_InDeferredCallbackQueue{m_InDeferredCallbackQueue_}, m_UpdateCallbacks{m_UpdateCallbacks_}, m_UpdateCallback{m_UpdateCallback_} {}
    // Creating interface conversion operator: operator UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation
    operator UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation() noexcept {
      return *reinterpret_cast<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>(this);
    }
    // protected System.Void Execute()
    // Offset: 0xFFFFFFFF
    void Execute() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Execute");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // protected System.Void Destroy()
    // Offset: 0xFFFFFFFF
    void Destroy() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Destroy");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // protected System.Single get_Progress()
    // Offset: 0xFFFFFFFF
    float get_Progress() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Progress");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
    }
    // protected System.String get_DebugName()
    // Offset: 0xFFFFFFFF
    ::Il2CppString* get_DebugName() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_DebugName");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
    }
    // protected System.Void GetDependencies(System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> dependencies)
    // Offset: 0xFFFFFFFF
    void GetDependencies(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* dependencies) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::GetDependencies");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dependencies)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dependencies);
    }
    // public TObject get_Result()
    // Offset: 0xFFFFFFFF
    TObject get_Result() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Result");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<TObject, false>(this, ___internal__method);
    }
    // public System.Void set_Result(TObject value)
    // Offset: 0xFFFFFFFF
    void set_Result(TObject value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::set_Result");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // System.Int32 get_Version()
    // Offset: 0xFFFFFFFF
    int get_Version() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Version");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
    }
    // System.Boolean get_CompletedEventHasListeners()
    // Offset: 0xFFFFFFFF
    bool get_CompletedEventHasListeners() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_CompletedEventHasListeners");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedEventHasListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
    }
    // System.Boolean get_DestroyedEventHasListeners()
    // Offset: 0xFFFFFFFF
    bool get_DestroyedEventHasListeners() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_DestroyedEventHasListeners");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DestroyedEventHasListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
    }
    // System.Void set_OnDestroy(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> value)
    // Offset: 0xFFFFFFFF
    void set_OnDestroy(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::set_OnDestroy");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // System.Int32 get_ReferenceCount()
    // Offset: 0xFFFFFFFF
    int get_ReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_ReferenceCount");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
    }
    // public System.Boolean get_IsRunning()
    // Offset: 0xFFFFFFFF
    bool get_IsRunning() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_IsRunning");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
    }
    // System.Void set_IsRunning(System.Boolean value)
    // Offset: 0xFFFFFFFF
    void set_IsRunning(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::set_IsRunning");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // static System.String ShortenPath(System.String p, System.Boolean keepExtension)
    // Offset: 0xFFFFFFFF
    static ::Il2CppString* ShortenPath(::Il2CppString* p, bool keepExtension) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::ShortenPath");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<AsyncOperationBase_1<TObject>*>::get(), "ShortenPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(keepExtension)})));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p, keepExtension);
    }
    // System.Void IncrementReferenceCount()
    // Offset: 0xFFFFFFFF
    void IncrementReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::IncrementReferenceCount");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // public System.Void WaitForCompletion()
    // Offset: 0xFFFFFFFF
    void WaitForCompletion() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::WaitForCompletion");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // System.Boolean InvokeWaitForCompletion()
    // Offset: 0xFFFFFFFF
    bool InvokeWaitForCompletion() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::InvokeWaitForCompletion");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeWaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
    }
    // System.Void DecrementReferenceCount()
    // Offset: 0xFFFFFFFF
    void DecrementReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::DecrementReferenceCount");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // System.Threading.WaitHandle get_WaitHandle()
    // Offset: 0xFFFFFFFF
    System::Threading::WaitHandle* get_WaitHandle() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_WaitHandle");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
    }
    // System.Threading.Tasks.Task`1<TObject> get_Task()
    // Offset: 0xFFFFFFFF
    System::Threading::Tasks::Task_1<TObject>* get_Task() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Task");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<TObject>*, false>(this, ___internal__method);
    }
    // private System.Threading.Tasks.Task`1<System.Object> UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task()
    // Offset: 0xFFFFFFFF
    System::Threading::Tasks::Task_1<::Il2CppObject*>* UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Task() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppObject*>*, false>(this, ___internal__method);
    }
    // private System.Void RegisterForDeferredCallbackEvent(System.Boolean incrementReferenceCount)
    // Offset: 0xFFFFFFFF
    void RegisterForDeferredCallbackEvent(bool incrementReferenceCount) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::RegisterForDeferredCallbackEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForDeferredCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(incrementReferenceCount)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, incrementReferenceCount);
    }
    // System.Void add_Completed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> value)
    // Offset: 0xFFFFFFFF
    void add_Completed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::add_Completed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // System.Void remove_Completed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject>> value)
    // Offset: 0xFFFFFFFF
    void remove_Completed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::remove_Completed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // System.Void add_Destroyed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFF
    void add_Destroyed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::add_Destroyed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // System.Void remove_Destroyed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFF
    void remove_Destroyed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::remove_Destroyed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // System.Void add_CompletedTypeless(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFF
    void add_CompletedTypeless(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::add_CompletedTypeless");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CompletedTypeless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // System.Void remove_CompletedTypeless(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFF
    void remove_CompletedTypeless(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::remove_CompletedTypeless");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CompletedTypeless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus get_Status()
    // Offset: 0xFFFFFFFF
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus get_Status() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Status");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus, false>(this, ___internal__method);
    }
    // System.Exception get_OperationException()
    // Offset: 0xFFFFFFFF
    System::Exception* get_OperationException() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_OperationException");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method);
    }
    // private System.Void set_OperationException(System.Exception value)
    // Offset: 0xFFFFFFFF
    void set_OperationException(System::Exception* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::set_OperationException");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // System.Boolean MoveNext()
    // Offset: 0xFFFFFFFF
    bool MoveNext() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::MoveNext");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
    }
    // System.Void Reset()
    // Offset: 0xFFFFFFFF
    void Reset() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Reset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // System.Object get_Current()
    // Offset: 0xFFFFFFFF
    ::Il2CppObject* get_Current() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Current");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // System.Boolean get_IsDone()
    // Offset: 0xFFFFFFFF
    bool get_IsDone() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_IsDone");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
    }
    // System.Single get_PercentComplete()
    // Offset: 0xFFFFFFFF
    float get_PercentComplete() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_PercentComplete");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
    }
    // System.Void InvokeCompletionEvent()
    // Offset: 0xFFFFFFFF
    void InvokeCompletionEvent() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::InvokeCompletionEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCompletionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<TObject> get_Handle()
    // Offset: 0xFFFFFFFF
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject> get_Handle() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::get_Handle");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<TObject>, false>(this, ___internal__method);
    }
    // private System.Void UpdateCallback(System.Single unscaledDeltaTime)
    // Offset: 0xFFFFFFFF
    void UpdateCallback(float unscaledDeltaTime) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UpdateCallback");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unscaledDeltaTime)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, unscaledDeltaTime);
    }
    // public System.Void Complete(TObject result, System.Boolean success, System.String errorMsg)
    // Offset: 0xFFFFFFFF
    void Complete(TObject result, bool success, ::Il2CppString* errorMsg) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Complete");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(errorMsg)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result, success, errorMsg);
    }
    // public System.Void Complete(TObject result, System.Boolean success, System.String errorMsg, System.Boolean releaseDependenciesOnFailure)
    // Offset: 0xFFFFFFFF
    void Complete(TObject result, bool success, ::Il2CppString* errorMsg, bool releaseDependenciesOnFailure) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Complete");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(errorMsg), ::il2cpp_utils::ExtractType(releaseDependenciesOnFailure)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result, success, errorMsg, releaseDependenciesOnFailure);
    }
    // System.Void Start(UnityEngine.ResourceManagement.ResourceManager rm, UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle dependency, DelegateList`1<System.Single> updateCallbacks)
    // Offset: 0xFFFFFFFF
    void Start(UnityEngine::ResourceManagement::ResourceManager* rm, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dependency, GlobalNamespace::DelegateList_1<float>* updateCallbacks) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::Start");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(dependency), ::il2cpp_utils::ExtractType(updateCallbacks)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rm, dependency, updateCallbacks);
    }
    // System.Void InvokeExecute()
    // Offset: 0xFFFFFFFF
    void InvokeExecute() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::InvokeExecute");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_CompletedTypeless(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_add_CompletedTypeless(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_CompletedTypeless");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_CompletedTypeless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_CompletedTypeless(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_remove_CompletedTypeless(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_CompletedTypeless");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_CompletedTypeless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_Destroyed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_add_Destroyed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_Destroyed");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_Destroyed(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> value)
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_remove_Destroyed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_Destroyed");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // private System.Int32 UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Version()
    // Offset: 0xFFFFFFFF
    int UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Version() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Version");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
    }
    // private System.Int32 UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ReferenceCount()
    // Offset: 0xFFFFFFFF
    int UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_ReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ReferenceCount");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
    }
    // private System.Single UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_PercentComplete()
    // Offset: 0xFFFFFFFF
    float UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_PercentComplete() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_PercentComplete");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_PercentComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
    }
    // private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Status()
    // Offset: 0xFFFFFFFF
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Status() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Status");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus, false>(this, ___internal__method);
    }
    // private System.Exception UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_OperationException()
    // Offset: 0xFFFFFFFF
    System::Exception* UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_OperationException() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_OperationException");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_OperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method);
    }
    // private System.Boolean UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_IsDone()
    // Offset: 0xFFFFFFFF
    bool UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_IsDone() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_IsDone");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
    }
    // private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Handle()
    // Offset: 0xFFFFFFFF
    UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_Handle() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Handle");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.set_OnDestroy(System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation> value)
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_set_OnDestroy(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.set_OnDestroy");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.set_OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
    }
    // private System.String UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_DebugName()
    // Offset: 0xFFFFFFFF
    ::Il2CppString* UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_DebugName() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_DebugName");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_DebugName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
    }
    // private System.Object UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetResultAsObject()
    // Offset: 0xFFFFFFFF
    ::Il2CppObject* UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_GetResultAsObject() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetResultAsObject");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetResultAsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // private System.Type UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ResultType()
    // Offset: 0xFFFFFFFF
    System::Type* UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_get_ResultType() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ResultType");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ResultType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDependencies(System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> deps)
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_GetDependencies(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* deps) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDependencies");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deps)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deps);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.DecrementReferenceCount()
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_DecrementReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.DecrementReferenceCount");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.DecrementReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.IncrementReferenceCount()
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_IncrementReferenceCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.IncrementReferenceCount");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.IncrementReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.InvokeCompletionEvent()
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_InvokeCompletionEvent() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.InvokeCompletionEvent");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.InvokeCompletionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // private System.Void UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.Start(UnityEngine.ResourceManagement.ResourceManager rm, UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle dependency, DelegateList`1<System.Single> updateCallbacks)
    // Offset: 0xFFFFFFFF
    void UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_Start(UnityEngine::ResourceManagement::ResourceManager* rm, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dependency, GlobalNamespace::DelegateList_1<float>* updateCallbacks) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.Start");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(dependency), ::il2cpp_utils::ExtractType(updateCallbacks)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rm, dependency, updateCallbacks);
    }
    // System.Void ReleaseDependencies()
    // Offset: 0xFFFFFFFF
    void ReleaseDependencies() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::ReleaseDependencies");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // private UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDownloadStatus(System.Collections.Generic.HashSet`1<System.Object> visited)
    // Offset: 0xFFFFFFFF
    UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus UnityEngine_ResourceManagement_AsyncOperations_IAsyncOperation_GetDownloadStatus(System::Collections::Generic::HashSet_1<::Il2CppObject*>* visited) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDownloadStatus");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visited)})));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(this, ___internal__method, visited);
    }
    // UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus GetDownloadStatus(System.Collections.Generic.HashSet`1<System.Object> visited)
    // Offset: 0xFFFFFFFF
    UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus GetDownloadStatus(System::Collections::Generic::HashSet_1<::Il2CppObject*>* visited) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::GetDownloadStatus");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visited)})));
      return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(this, ___internal__method, visited);
    }
    // private System.Void <.ctor>b__35_0(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle o)
    // Offset: 0xFFFFFFFF
    void $_ctor$b__35_0(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle o) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::<.ctor>b__35_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__35_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, o);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsyncOperationBase_1<TObject>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsyncOperationBase_1<TObject>*, creationType>()));
    }
    // public override System.String ToString()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1::ToString");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
    }
  }; // UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1
  // Could not write size check! Type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationBase_1, "UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationBase`1");
