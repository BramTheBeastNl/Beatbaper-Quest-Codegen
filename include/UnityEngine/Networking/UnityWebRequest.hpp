// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Networking
namespace UnityEngine::Networking {
  // Forward declaring type: DownloadHandler
  class DownloadHandler;
  // Forward declaring type: UploadHandler
  class UploadHandler;
  // Forward declaring type: CertificateHandler
  class CertificateHandler;
  // Forward declaring type: UnityWebRequestAsyncOperation
  class UnityWebRequestAsyncOperation;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: UnityEngine.Networking
namespace UnityEngine::Networking {
  // Size: 0x3B
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Networking.UnityWebRequest
  // [NativeHeaderAttribute] Offset: DDAC18
  class UnityWebRequest : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // Nested type: UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod
    struct UnityWebRequestMethod;
    // Nested type: UnityEngine::Networking::UnityWebRequest::UnityWebRequestError
    struct UnityWebRequestError;
    // System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(System::IntPtr) == 0x8);
    // UnityEngine.Networking.DownloadHandler m_DownloadHandler
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::Networking::DownloadHandler* m_DownloadHandler;
    // Field size check
    static_assert(sizeof(UnityEngine::Networking::DownloadHandler*) == 0x8);
    // UnityEngine.Networking.UploadHandler m_UploadHandler
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::Networking::UploadHandler* m_UploadHandler;
    // Field size check
    static_assert(sizeof(UnityEngine::Networking::UploadHandler*) == 0x8);
    // UnityEngine.Networking.CertificateHandler m_CertificateHandler
    // Size: 0x8
    // Offset: 0x28
    UnityEngine::Networking::CertificateHandler* m_CertificateHandler;
    // Field size check
    static_assert(sizeof(UnityEngine::Networking::CertificateHandler*) == 0x8);
    // System.Uri m_Uri
    // Size: 0x8
    // Offset: 0x30
    System::Uri* m_Uri;
    // Field size check
    static_assert(sizeof(System::Uri*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0xDDADA4
    // [CompilerGeneratedAttribute] Offset: 0xDDADA4
    // private System.Boolean <disposeCertificateHandlerOnDispose>k__BackingField
    // Size: 0x1
    // Offset: 0x38
    bool disposeCertificateHandlerOnDispose;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [DebuggerBrowsableAttribute] Offset: 0xDDADE0
    // [CompilerGeneratedAttribute] Offset: 0xDDADE0
    // private System.Boolean <disposeDownloadHandlerOnDispose>k__BackingField
    // Size: 0x1
    // Offset: 0x39
    bool disposeDownloadHandlerOnDispose;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [DebuggerBrowsableAttribute] Offset: 0xDDAE1C
    // [CompilerGeneratedAttribute] Offset: 0xDDAE1C
    // private System.Boolean <disposeUploadHandlerOnDispose>k__BackingField
    // Size: 0x1
    // Offset: 0x3A
    bool disposeUploadHandlerOnDispose;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: UnityWebRequest
    UnityWebRequest(System::IntPtr m_Ptr_ = {}, UnityEngine::Networking::DownloadHandler* m_DownloadHandler_ = {}, UnityEngine::Networking::UploadHandler* m_UploadHandler_ = {}, UnityEngine::Networking::CertificateHandler* m_CertificateHandler_ = {}, System::Uri* m_Uri_ = {}, bool disposeCertificateHandlerOnDispose_ = {}, bool disposeDownloadHandlerOnDispose_ = {}, bool disposeUploadHandlerOnDispose_ = {}) noexcept : m_Ptr{m_Ptr_}, m_DownloadHandler{m_DownloadHandler_}, m_UploadHandler{m_UploadHandler_}, m_CertificateHandler{m_CertificateHandler_}, m_Uri{m_Uri_}, disposeCertificateHandlerOnDispose{disposeCertificateHandlerOnDispose_}, disposeDownloadHandlerOnDispose{disposeDownloadHandlerOnDispose_}, disposeUploadHandlerOnDispose{disposeUploadHandlerOnDispose_} {}
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // static private System.String GetWebErrorString(UnityEngine.Networking.UnityWebRequest/UnityWebRequestError err)
    // Offset: 0x23C870C
    static ::Il2CppString* GetWebErrorString(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError err);
    // static System.String GetHTTPStatusString(System.Int64 responseCode)
    // Offset: 0x23C874C
    static ::Il2CppString* GetHTTPStatusString(int64_t responseCode);
    // public System.Boolean get_disposeCertificateHandlerOnDispose()
    // Offset: 0x23C878C
    bool get_disposeCertificateHandlerOnDispose();
    // public System.Void set_disposeCertificateHandlerOnDispose(System.Boolean value)
    // Offset: 0x23C8794
    void set_disposeCertificateHandlerOnDispose(bool value);
    // public System.Boolean get_disposeDownloadHandlerOnDispose()
    // Offset: 0x23C87A0
    bool get_disposeDownloadHandlerOnDispose();
    // public System.Void set_disposeDownloadHandlerOnDispose(System.Boolean value)
    // Offset: 0x23C87A8
    void set_disposeDownloadHandlerOnDispose(bool value);
    // public System.Boolean get_disposeUploadHandlerOnDispose()
    // Offset: 0x23C87B4
    bool get_disposeUploadHandlerOnDispose();
    // public System.Void set_disposeUploadHandlerOnDispose(System.Boolean value)
    // Offset: 0x23C87BC
    void set_disposeUploadHandlerOnDispose(bool value);
    // static System.IntPtr Create()
    // Offset: 0x23C87C8
    static System::IntPtr Create();
    // private System.Void Release()
    // Offset: 0x23C87FC
    void Release();
    // System.Void InternalDestroy()
    // Offset: 0x23C883C
    void InternalDestroy();
    // private System.Void InternalSetDefaults()
    // Offset: 0x23C8924
    void InternalSetDefaults();
    // public System.Void .ctor(System.String url, System.String method)
    // Offset: 0x23C8938
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityWebRequest* New_ctor(::Il2CppString* url, ::Il2CppString* method) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityWebRequest*, creationType>(url, method)));
    }
    // public System.Void .ctor(System.String url, System.String method, UnityEngine.Networking.DownloadHandler downloadHandler, UnityEngine.Networking.UploadHandler uploadHandler)
    // Offset: 0x23C8BA8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityWebRequest* New_ctor(::Il2CppString* url, ::Il2CppString* method, UnityEngine::Networking::DownloadHandler* downloadHandler, UnityEngine::Networking::UploadHandler* uploadHandler) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::UnityWebRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityWebRequest*, creationType>(url, method, downloadHandler, uploadHandler)));
    }
    // public System.Void Dispose()
    // Offset: 0x23C8F70
    void Dispose();
    // private System.Void DisposeHandlers()
    // Offset: 0x23C8F10
    void DisposeHandlers();
    // UnityEngine.Networking.UnityWebRequestAsyncOperation BeginWebRequest()
    // Offset: 0x23C9080
    UnityEngine::Networking::UnityWebRequestAsyncOperation* BeginWebRequest();
    // public UnityEngine.Networking.UnityWebRequestAsyncOperation SendWebRequest()
    // Offset: 0x23C90C0
    UnityEngine::Networking::UnityWebRequestAsyncOperation* SendWebRequest();
    // public System.Void Abort()
    // Offset: 0x23C88E4
    void Abort();
    // private UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SetMethod(UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod methodType)
    // Offset: 0x23C910C
    UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetMethod(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType);
    // System.Void InternalSetMethod(UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod methodType)
    // Offset: 0x23C915C
    void InternalSetMethod(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType);
    // private UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SetCustomMethod(System.String customMethodName)
    // Offset: 0x23C92C0
    UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetCustomMethod(::Il2CppString* customMethodName);
    // System.Void InternalSetCustomMethod(System.String customMethodName)
    // Offset: 0x23C9310
    void InternalSetCustomMethod(::Il2CppString* customMethodName);
    // public System.Void set_method(System.String value)
    // Offset: 0x23C8A44
    void set_method(::Il2CppString* value);
    // private UnityEngine.Networking.UnityWebRequest/UnityWebRequestError GetError()
    // Offset: 0x23C9434
    UnityEngine::Networking::UnityWebRequest::UnityWebRequestError GetError();
    // public System.String get_error()
    // Offset: 0x23C9474
    ::Il2CppString* get_error();
    // public System.String get_url()
    // Offset: 0x23C972C
    ::Il2CppString* get_url();
    // public System.Void set_url(System.String value)
    // Offset: 0x23C89B8
    void set_url(::Il2CppString* value);
    // private System.String GetUrl()
    // Offset: 0x23C976C
    ::Il2CppString* GetUrl();
    // private UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SetUrl(System.String url)
    // Offset: 0x23C9C58
    UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetUrl(::Il2CppString* url);
    // private System.Void InternalSetUrl(System.String url)
    // Offset: 0x23C9B34
    void InternalSetUrl(::Il2CppString* url);
    // public System.Int64 get_responseCode()
    // Offset: 0x23C96EC
    int64_t get_responseCode();
    // private System.Boolean IsExecuting()
    // Offset: 0x23C9CA8
    bool IsExecuting();
    // public System.Boolean get_isModifiable()
    // Offset: 0x23C9280
    bool get_isModifiable();
    // public System.Boolean get_isDone()
    // Offset: 0x23C9CE8
    bool get_isDone();
    // public System.Boolean get_isNetworkError()
    // Offset: 0x23C966C
    bool get_isNetworkError();
    // public System.Boolean get_isHttpError()
    // Offset: 0x23C96AC
    bool get_isHttpError();
    // private System.Single GetDownloadProgress()
    // Offset: 0x23C9D28
    float GetDownloadProgress();
    // public System.Single get_downloadProgress()
    // Offset: 0x23C9D68
    float get_downloadProgress();
    // public System.UInt64 get_downloadedBytes()
    // Offset: 0x23C9E10
    uint64_t get_downloadedBytes();
    // private System.Void SetRedirectLimitFromScripting(System.Int32 limit)
    // Offset: 0x23C9E50
    void SetRedirectLimitFromScripting(int limit);
    // public System.Void set_redirectLimit(System.Int32 value)
    // Offset: 0x23C9EA0
    void set_redirectLimit(int value);
    // UnityEngine.Networking.UnityWebRequest/UnityWebRequestError InternalSetRequestHeader(System.String name, System.String value)
    // Offset: 0x23C9EF0
    UnityEngine::Networking::UnityWebRequest::UnityWebRequestError InternalSetRequestHeader(::Il2CppString* name, ::Il2CppString* value);
    // public System.Void SetRequestHeader(System.String name, System.String value)
    // Offset: 0x23C9F48
    void SetRequestHeader(::Il2CppString* name, ::Il2CppString* value);
    // private UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SetUploadHandler(UnityEngine.Networking.UploadHandler uh)
    // Offset: 0x23CA0D0
    UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetUploadHandler(UnityEngine::Networking::UploadHandler* uh);
    // public UnityEngine.Networking.UploadHandler get_uploadHandler()
    // Offset: 0x23C8FF0
    UnityEngine::Networking::UploadHandler* get_uploadHandler();
    // public System.Void set_uploadHandler(UnityEngine.Networking.UploadHandler value)
    // Offset: 0x23C8D78
    void set_uploadHandler(UnityEngine::Networking::UploadHandler* value);
    // private UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SetDownloadHandler(UnityEngine.Networking.DownloadHandler dh)
    // Offset: 0x23CA120
    UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetDownloadHandler(UnityEngine::Networking::DownloadHandler* dh);
    // public UnityEngine.Networking.DownloadHandler get_downloadHandler()
    // Offset: 0x23C8FE8
    UnityEngine::Networking::DownloadHandler* get_downloadHandler();
    // public System.Void set_downloadHandler(UnityEngine.Networking.DownloadHandler value)
    // Offset: 0x23C8C50
    void set_downloadHandler(UnityEngine::Networking::DownloadHandler* value);
    // private UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SetCertificateHandler(UnityEngine.Networking.CertificateHandler ch)
    // Offset: 0x23CA170
    UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetCertificateHandler(UnityEngine::Networking::CertificateHandler* ch);
    // public UnityEngine.Networking.CertificateHandler get_certificateHandler()
    // Offset: 0x23C9078
    UnityEngine::Networking::CertificateHandler* get_certificateHandler();
    // public System.Void set_certificateHandler(UnityEngine.Networking.CertificateHandler value)
    // Offset: 0x23CA1C0
    void set_certificateHandler(UnityEngine::Networking::CertificateHandler* value);
    // private UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SetTimeoutMsec(System.Int32 timeout)
    // Offset: 0x23CA2E8
    UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetTimeoutMsec(int timeout);
    // public System.Void set_timeout(System.Int32 value)
    // Offset: 0x23CA338
    void set_timeout(int value);
    // static public UnityEngine.Networking.UnityWebRequest Get(System.String uri)
    // Offset: 0x23CA494
    static UnityEngine::Networking::UnityWebRequest* Get(::Il2CppString* uri);
    // static public System.String EscapeURL(System.String s)
    // Offset: 0x23CA528
    static ::Il2CppString* EscapeURL(::Il2CppString* s);
    // static public System.String EscapeURL(System.String s, System.Text.Encoding e)
    // Offset: 0x23CA554
    static ::Il2CppString* EscapeURL(::Il2CppString* s, System::Text::Encoding* e);
    // protected override System.Void Finalize()
    // Offset: 0x23C8EA0
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.Networking.UnityWebRequest
  #pragma pack(pop)
  static check_size<sizeof(UnityWebRequest), 58 + sizeof(bool)> __UnityEngine_Networking_UnityWebRequestSizeCheck;
  static_assert(sizeof(UnityWebRequest) == 0x3B);
  // Writing MetadataGetter for method: UnityWebRequest::GetWebErrorString
  // Il2CppName: GetWebErrorString
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(UnityEngine::Networking::UnityWebRequest::UnityWebRequestError)>(&UnityWebRequest::GetWebErrorString)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "GetWebErrorString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::GetHTTPStatusString
  // Il2CppName: GetHTTPStatusString
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(int64_t)>(&UnityWebRequest::GetHTTPStatusString)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "GetHTTPStatusString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_disposeCertificateHandlerOnDispose
  // Il2CppName: get_disposeCertificateHandlerOnDispose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWebRequest::*)()>(&UnityWebRequest::get_disposeCertificateHandlerOnDispose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_disposeCertificateHandlerOnDispose
  // Il2CppName: set_disposeCertificateHandlerOnDispose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(bool)>(&UnityWebRequest::set_disposeCertificateHandlerOnDispose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_disposeDownloadHandlerOnDispose
  // Il2CppName: get_disposeDownloadHandlerOnDispose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWebRequest::*)()>(&UnityWebRequest::get_disposeDownloadHandlerOnDispose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_disposeDownloadHandlerOnDispose
  // Il2CppName: set_disposeDownloadHandlerOnDispose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(bool)>(&UnityWebRequest::set_disposeDownloadHandlerOnDispose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_disposeUploadHandlerOnDispose
  // Il2CppName: get_disposeUploadHandlerOnDispose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWebRequest::*)()>(&UnityWebRequest::get_disposeUploadHandlerOnDispose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_disposeUploadHandlerOnDispose
  // Il2CppName: set_disposeUploadHandlerOnDispose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(bool)>(&UnityWebRequest::set_disposeUploadHandlerOnDispose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::Create
  // Il2CppName: Create
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&UnityWebRequest::Create)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::Release
  // Il2CppName: Release
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)()>(&UnityWebRequest::Release)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::InternalDestroy
  // Il2CppName: InternalDestroy
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)()>(&UnityWebRequest::InternalDestroy)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "InternalDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::InternalSetDefaults
  // Il2CppName: InternalSetDefaults
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)()>(&UnityWebRequest::InternalSetDefaults)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "InternalSetDefaults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(::Il2CppString*, ::Il2CppString*)>(&UnityWebRequest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(::Il2CppString*, ::Il2CppString*)>(&UnityWebRequest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(::Il2CppString*, ::Il2CppString*, UnityEngine::Networking::DownloadHandler*, UnityEngine::Networking::UploadHandler*)>(&UnityWebRequest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::DownloadHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::UploadHandler*>()});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(::Il2CppString*, ::Il2CppString*, UnityEngine::Networking::DownloadHandler*, UnityEngine::Networking::UploadHandler*)>(&UnityWebRequest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::DownloadHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::UploadHandler*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::Dispose
  // Il2CppName: Dispose
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)()>(&UnityWebRequest::Dispose)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::DisposeHandlers
  // Il2CppName: DisposeHandlers
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)()>(&UnityWebRequest::DisposeHandlers)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "DisposeHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::BeginWebRequest
  // Il2CppName: BeginWebRequest
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequestAsyncOperation* (UnityWebRequest::*)()>(&UnityWebRequest::BeginWebRequest)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "BeginWebRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SendWebRequest
  // Il2CppName: SendWebRequest
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequestAsyncOperation* (UnityWebRequest::*)()>(&UnityWebRequest::SendWebRequest)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SendWebRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::Abort
  // Il2CppName: Abort
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)()>(&UnityWebRequest::Abort)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "Abort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SetMethod
  // Il2CppName: SetMethod
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityWebRequest::*)(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod)>(&UnityWebRequest::SetMethod)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SetMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::InternalSetMethod
  // Il2CppName: InternalSetMethod
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod)>(&UnityWebRequest::InternalSetMethod)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "InternalSetMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SetCustomMethod
  // Il2CppName: SetCustomMethod
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityWebRequest::*)(::Il2CppString*)>(&UnityWebRequest::SetCustomMethod)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SetCustomMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::InternalSetCustomMethod
  // Il2CppName: InternalSetCustomMethod
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(::Il2CppString*)>(&UnityWebRequest::InternalSetCustomMethod)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "InternalSetCustomMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_method
  // Il2CppName: set_method
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(::Il2CppString*)>(&UnityWebRequest::set_method)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_method", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::GetError
  // Il2CppName: GetError
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityWebRequest::*)()>(&UnityWebRequest::GetError)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "GetError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_error
  // Il2CppName: get_error
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityWebRequest::*)()>(&UnityWebRequest::get_error)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_url
  // Il2CppName: get_url
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityWebRequest::*)()>(&UnityWebRequest::get_url)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_url", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_url
  // Il2CppName: set_url
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(::Il2CppString*)>(&UnityWebRequest::set_url)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_url", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::GetUrl
  // Il2CppName: GetUrl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityWebRequest::*)()>(&UnityWebRequest::GetUrl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "GetUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SetUrl
  // Il2CppName: SetUrl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityWebRequest::*)(::Il2CppString*)>(&UnityWebRequest::SetUrl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SetUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::InternalSetUrl
  // Il2CppName: InternalSetUrl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(::Il2CppString*)>(&UnityWebRequest::InternalSetUrl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "InternalSetUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_responseCode
  // Il2CppName: get_responseCode
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (UnityWebRequest::*)()>(&UnityWebRequest::get_responseCode)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_responseCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::IsExecuting
  // Il2CppName: IsExecuting
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWebRequest::*)()>(&UnityWebRequest::IsExecuting)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "IsExecuting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_isModifiable
  // Il2CppName: get_isModifiable
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWebRequest::*)()>(&UnityWebRequest::get_isModifiable)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_isModifiable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_isDone
  // Il2CppName: get_isDone
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWebRequest::*)()>(&UnityWebRequest::get_isDone)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_isDone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_isNetworkError
  // Il2CppName: get_isNetworkError
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWebRequest::*)()>(&UnityWebRequest::get_isNetworkError)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_isNetworkError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_isHttpError
  // Il2CppName: get_isHttpError
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityWebRequest::*)()>(&UnityWebRequest::get_isHttpError)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_isHttpError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::GetDownloadProgress
  // Il2CppName: GetDownloadProgress
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityWebRequest::*)()>(&UnityWebRequest::GetDownloadProgress)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "GetDownloadProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_downloadProgress
  // Il2CppName: get_downloadProgress
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityWebRequest::*)()>(&UnityWebRequest::get_downloadProgress)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_downloadProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_downloadedBytes
  // Il2CppName: get_downloadedBytes
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (UnityWebRequest::*)()>(&UnityWebRequest::get_downloadedBytes)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_downloadedBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SetRedirectLimitFromScripting
  // Il2CppName: SetRedirectLimitFromScripting
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(int)>(&UnityWebRequest::SetRedirectLimitFromScripting)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SetRedirectLimitFromScripting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_redirectLimit
  // Il2CppName: set_redirectLimit
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(int)>(&UnityWebRequest::set_redirectLimit)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_redirectLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::InternalSetRequestHeader
  // Il2CppName: InternalSetRequestHeader
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityWebRequest::*)(::Il2CppString*, ::Il2CppString*)>(&UnityWebRequest::InternalSetRequestHeader)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "InternalSetRequestHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SetRequestHeader
  // Il2CppName: SetRequestHeader
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(::Il2CppString*, ::Il2CppString*)>(&UnityWebRequest::SetRequestHeader)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SetRequestHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SetUploadHandler
  // Il2CppName: SetUploadHandler
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityWebRequest::*)(UnityEngine::Networking::UploadHandler*)>(&UnityWebRequest::SetUploadHandler)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SetUploadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::UploadHandler*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_uploadHandler
  // Il2CppName: get_uploadHandler
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UploadHandler* (UnityWebRequest::*)()>(&UnityWebRequest::get_uploadHandler)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_uploadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_uploadHandler
  // Il2CppName: set_uploadHandler
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(UnityEngine::Networking::UploadHandler*)>(&UnityWebRequest::set_uploadHandler)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_uploadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::UploadHandler*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SetDownloadHandler
  // Il2CppName: SetDownloadHandler
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityWebRequest::*)(UnityEngine::Networking::DownloadHandler*)>(&UnityWebRequest::SetDownloadHandler)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SetDownloadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::DownloadHandler*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_downloadHandler
  // Il2CppName: get_downloadHandler
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::DownloadHandler* (UnityWebRequest::*)()>(&UnityWebRequest::get_downloadHandler)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_downloadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_downloadHandler
  // Il2CppName: set_downloadHandler
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(UnityEngine::Networking::DownloadHandler*)>(&UnityWebRequest::set_downloadHandler)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_downloadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::DownloadHandler*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SetCertificateHandler
  // Il2CppName: SetCertificateHandler
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityWebRequest::*)(UnityEngine::Networking::CertificateHandler*)>(&UnityWebRequest::SetCertificateHandler)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SetCertificateHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::CertificateHandler*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::get_certificateHandler
  // Il2CppName: get_certificateHandler
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::CertificateHandler* (UnityWebRequest::*)()>(&UnityWebRequest::get_certificateHandler)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "get_certificateHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_certificateHandler
  // Il2CppName: set_certificateHandler
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(UnityEngine::Networking::CertificateHandler*)>(&UnityWebRequest::set_certificateHandler)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_certificateHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::CertificateHandler*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::SetTimeoutMsec
  // Il2CppName: SetTimeoutMsec
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityWebRequest::*)(int)>(&UnityWebRequest::SetTimeoutMsec)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "SetTimeoutMsec", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::set_timeout
  // Il2CppName: set_timeout
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)(int)>(&UnityWebRequest::set_timeout)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "set_timeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::Get
  // Il2CppName: Get
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::UnityWebRequest* (*)(::Il2CppString*)>(&UnityWebRequest::Get)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::EscapeURL
  // Il2CppName: EscapeURL
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&UnityWebRequest::EscapeURL)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "EscapeURL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::EscapeURL
  // Il2CppName: EscapeURL
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, System::Text::Encoding*)>(&UnityWebRequest::EscapeURL)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "EscapeURL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::Encoding*>()});
    }
  };
  // Writing MetadataGetter for method: UnityWebRequest::Finalize
  // Il2CppName: Finalize
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityWebRequest::*)()>(&UnityWebRequest::Finalize)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(UnityWebRequest*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Networking::UnityWebRequest*, "UnityEngine.Networking", "UnityWebRequest");
