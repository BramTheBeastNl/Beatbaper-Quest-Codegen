// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Shader
  class Shader;
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: MaterialGlobalIlluminationFlags
  struct MaterialGlobalIlluminationFlags;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: ComputeBuffer
  class ComputeBuffer;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ShaderPropertyFlags
  struct ShaderPropertyFlags;
  // Forward declaring type: RenderTextureSubElement
  struct RenderTextureSubElement;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Material
  // [NativeHeaderAttribute] Offset: D8EE4C
  // [NativeHeaderAttribute] Offset: D8EE4C
  class Material : public UnityEngine::Object {
    public:
    // Creating value type constructor for type: Material
    Material() noexcept {}
    // static public UnityEngine.Material Create(System.String scriptContents)
    // Offset: 0x1C0B90C
    static UnityEngine::Material* Create(::Il2CppString* scriptContents);
    // static private System.Void CreateWithShader(UnityEngine.Material self, UnityEngine.Shader shader)
    // Offset: 0x1C0B9F4
    static void CreateWithShader(UnityEngine::Material* self, UnityEngine::Shader* shader);
    // static private System.Void CreateWithMaterial(UnityEngine.Material self, UnityEngine.Material source)
    // Offset: 0x1C0BA44
    static void CreateWithMaterial(UnityEngine::Material* self, UnityEngine::Material* source);
    // static private System.Void CreateWithString(UnityEngine.Material self)
    // Offset: 0x1C0BA94
    static void CreateWithString(UnityEngine::Material* self);
    // public System.Void .ctor(UnityEngine.Shader shader)
    // Offset: 0x1C0BAD4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Material* New_ctor(UnityEngine::Shader* shader) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Material*, creationType>(shader)));
    }
    // public System.Void .ctor(UnityEngine.Material source)
    // Offset: 0x1C0BB7C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Material* New_ctor(UnityEngine::Material* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Material*, creationType>(source)));
    }
    // public System.Void .ctor(System.String contents)
    // Offset: 0x1C0B964
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Material* New_ctor(::Il2CppString* contents) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Material*, creationType>(contents)));
    }
    // static UnityEngine.Material GetDefaultMaterial()
    // Offset: 0x1C0BC1C
    static UnityEngine::Material* GetDefaultMaterial();
    // static UnityEngine.Material GetDefaultParticleMaterial()
    // Offset: 0x1C0BC50
    static UnityEngine::Material* GetDefaultParticleMaterial();
    // static UnityEngine.Material GetDefaultLineMaterial()
    // Offset: 0x1C0BC84
    static UnityEngine::Material* GetDefaultLineMaterial();
    // public UnityEngine.Shader get_shader()
    // Offset: 0x1C0BCB8
    UnityEngine::Shader* get_shader();
    // public System.Void set_shader(UnityEngine.Shader value)
    // Offset: 0x1C0BCF8
    void set_shader(UnityEngine::Shader* value);
    // public UnityEngine.Color get_color()
    // Offset: 0x1C0BD48
    UnityEngine::Color get_color();
    // public System.Void set_color(UnityEngine.Color value)
    // Offset: 0x1C0BE5C
    void set_color(UnityEngine::Color value);
    // public UnityEngine.Texture get_mainTexture()
    // Offset: 0x1C0BF7C
    UnityEngine::Texture* get_mainTexture();
    // public System.Void set_mainTexture(UnityEngine.Texture value)
    // Offset: 0x1C0C0EC
    void set_mainTexture(UnityEngine::Texture* value);
    // public UnityEngine.Vector2 get_mainTextureOffset()
    // Offset: 0x1C0C278
    UnityEngine::Vector2 get_mainTextureOffset();
    // public System.Void set_mainTextureOffset(UnityEngine.Vector2 value)
    // Offset: 0x1C0C370
    void set_mainTextureOffset(UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_mainTextureScale()
    // Offset: 0x1C0C460
    UnityEngine::Vector2 get_mainTextureScale();
    // public System.Void set_mainTextureScale(UnityEngine.Vector2 value)
    // Offset: 0x1C0C550
    void set_mainTextureScale(UnityEngine::Vector2 value);
    // private System.Int32 GetFirstPropertyNameIdByAttribute(UnityEngine.Rendering.ShaderPropertyFlags attributeFlag)
    // Offset: 0x1C0BDD8
    int GetFirstPropertyNameIdByAttribute(UnityEngine::Rendering::ShaderPropertyFlags attributeFlag);
    // public System.Boolean HasProperty(System.Int32 nameID)
    // Offset: 0x1C0C640
    bool HasProperty(int nameID);
    // public System.Boolean HasProperty(System.String name)
    // Offset: 0x1C0C690
    bool HasProperty(::Il2CppString* name);
    // public System.Int32 get_renderQueue()
    // Offset: 0x1C0C6EC
    int get_renderQueue();
    // public System.Void set_renderQueue(System.Int32 value)
    // Offset: 0x1C0C72C
    void set_renderQueue(int value);
    // System.Int32 get_rawRenderQueue()
    // Offset: 0x1C0C77C
    int get_rawRenderQueue();
    // public System.Void EnableKeyword(System.String keyword)
    // Offset: 0x1C0C7BC
    void EnableKeyword(::Il2CppString* keyword);
    // public System.Void DisableKeyword(System.String keyword)
    // Offset: 0x1C0C80C
    void DisableKeyword(::Il2CppString* keyword);
    // public System.Boolean IsKeywordEnabled(System.String keyword)
    // Offset: 0x1C0C85C
    bool IsKeywordEnabled(::Il2CppString* keyword);
    // public UnityEngine.MaterialGlobalIlluminationFlags get_globalIlluminationFlags()
    // Offset: 0x1C0C8AC
    UnityEngine::MaterialGlobalIlluminationFlags get_globalIlluminationFlags();
    // public System.Void set_globalIlluminationFlags(UnityEngine.MaterialGlobalIlluminationFlags value)
    // Offset: 0x1C0C8EC
    void set_globalIlluminationFlags(UnityEngine::MaterialGlobalIlluminationFlags value);
    // public System.Boolean get_doubleSidedGI()
    // Offset: 0x1C0C93C
    bool get_doubleSidedGI();
    // public System.Void set_doubleSidedGI(System.Boolean value)
    // Offset: 0x1C0C97C
    void set_doubleSidedGI(bool value);
    // public System.Boolean get_enableInstancing()
    // Offset: 0x1C0C9CC
    bool get_enableInstancing();
    // public System.Void set_enableInstancing(System.Boolean value)
    // Offset: 0x1C0CA0C
    void set_enableInstancing(bool value);
    // public System.Int32 get_passCount()
    // Offset: 0x1C0CA5C
    int get_passCount();
    // public System.Void SetShaderPassEnabled(System.String passName, System.Boolean enabled)
    // Offset: 0x1C0CA9C
    void SetShaderPassEnabled(::Il2CppString* passName, bool enabled);
    // public System.Boolean GetShaderPassEnabled(System.String passName)
    // Offset: 0x1C0CAF4
    bool GetShaderPassEnabled(::Il2CppString* passName);
    // public System.String GetPassName(System.Int32 pass)
    // Offset: 0x1C0CB44
    ::Il2CppString* GetPassName(int pass);
    // public System.Int32 FindPass(System.String passName)
    // Offset: 0x1C0CB94
    int FindPass(::Il2CppString* passName);
    // public System.Void SetOverrideTag(System.String tag, System.String val)
    // Offset: 0x1C0CBE4
    void SetOverrideTag(::Il2CppString* tag, ::Il2CppString* val);
    // private System.String GetTagImpl(System.String tag, System.Boolean currentSubShaderOnly, System.String defaultValue)
    // Offset: 0x1C0CC3C
    ::Il2CppString* GetTagImpl(::Il2CppString* tag, bool currentSubShaderOnly, ::Il2CppString* defaultValue);
    // public System.String GetTag(System.String tag, System.Boolean searchFallbacks, System.String defaultValue)
    // Offset: 0x1C0CCA4
    ::Il2CppString* GetTag(::Il2CppString* tag, bool searchFallbacks, ::Il2CppString* defaultValue);
    // public System.String GetTag(System.String tag, System.Boolean searchFallbacks)
    // Offset: 0x1C0CD0C
    ::Il2CppString* GetTag(::Il2CppString* tag, bool searchFallbacks);
    // public System.Void Lerp(UnityEngine.Material start, UnityEngine.Material end, System.Single t)
    // Offset: 0x1C0CDA4
    void Lerp(UnityEngine::Material* start, UnityEngine::Material* end, float t);
    // public System.Boolean SetPass(System.Int32 pass)
    // Offset: 0x1C0CE0C
    bool SetPass(int pass);
    // public System.Void CopyPropertiesFromMaterial(UnityEngine.Material mat)
    // Offset: 0x1C0CE5C
    void CopyPropertiesFromMaterial(UnityEngine::Material* mat);
    // private System.String[] GetShaderKeywords()
    // Offset: 0x1C0CEAC
    ::Array<::Il2CppString*>* GetShaderKeywords();
    // private System.Void SetShaderKeywords(System.String[] names)
    // Offset: 0x1C0CEEC
    void SetShaderKeywords(::Array<::Il2CppString*>* names);
    // public System.String[] get_shaderKeywords()
    // Offset: 0x1C0CF3C
    ::Array<::Il2CppString*>* get_shaderKeywords();
    // public System.Void set_shaderKeywords(System.String[] value)
    // Offset: 0x1C0CF7C
    void set_shaderKeywords(::Array<::Il2CppString*>* value);
    // public System.Int32 ComputeCRC()
    // Offset: 0x1C0CFCC
    int ComputeCRC();
    // public System.String[] GetTexturePropertyNames()
    // Offset: 0x1C0D00C
    ::Array<::Il2CppString*>* GetTexturePropertyNames();
    // public System.Int32[] GetTexturePropertyNameIDs()
    // Offset: 0x1C0D04C
    ::Array<int>* GetTexturePropertyNameIDs();
    // private System.Void GetTexturePropertyNamesInternal(System.Object outNames)
    // Offset: 0x1C0D08C
    void GetTexturePropertyNamesInternal(::Il2CppObject* outNames);
    // private System.Void GetTexturePropertyNameIDsInternal(System.Object outNames)
    // Offset: 0x1C0D0DC
    void GetTexturePropertyNameIDsInternal(::Il2CppObject* outNames);
    // public System.Void GetTexturePropertyNames(System.Collections.Generic.List`1<System.String> outNames)
    // Offset: 0x1C0D12C
    void GetTexturePropertyNames(System::Collections::Generic::List_1<::Il2CppString*>* outNames);
    // public System.Void GetTexturePropertyNameIDs(System.Collections.Generic.List`1<System.Int32> outNames)
    // Offset: 0x1C0D17C
    void GetTexturePropertyNameIDs(System::Collections::Generic::List_1<int>* outNames);
    // private System.Void SetFloatImpl(System.Int32 name, System.Single value)
    // Offset: 0x1C0D1CC
    void SetFloatImpl(int name, float value);
    // private System.Void SetColorImpl(System.Int32 name, UnityEngine.Color value)
    // Offset: 0x1C0D22C
    void SetColorImpl(int name, UnityEngine::Color value);
    // private System.Void SetMatrixImpl(System.Int32 name, UnityEngine.Matrix4x4 value)
    // Offset: 0x1C0D2EC
    void SetMatrixImpl(int name, UnityEngine::Matrix4x4 value);
    // private System.Void SetTextureImpl(System.Int32 name, UnityEngine.Texture value)
    // Offset: 0x1C0D39C
    void SetTextureImpl(int name, UnityEngine::Texture* value);
    // private System.Void SetRenderTextureImpl(System.Int32 name, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x1C0D3F4
    void SetRenderTextureImpl(int name, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element);
    // private System.Void SetBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value)
    // Offset: 0x1C0D45C
    void SetBufferImpl(int name, UnityEngine::ComputeBuffer* value);
    // private System.Void SetConstantBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x1C0D4B4
    void SetConstantBufferImpl(int name, UnityEngine::ComputeBuffer* value, int offset, int size);
    // private System.Single GetFloatImpl(System.Int32 name)
    // Offset: 0x1C0D524
    float GetFloatImpl(int name);
    // private UnityEngine.Color GetColorImpl(System.Int32 name)
    // Offset: 0x1C0D574
    UnityEngine::Color GetColorImpl(int name);
    // private UnityEngine.Matrix4x4 GetMatrixImpl(System.Int32 name)
    // Offset: 0x1C0D638
    UnityEngine::Matrix4x4 GetMatrixImpl(int name);
    // private UnityEngine.Texture GetTextureImpl(System.Int32 name)
    // Offset: 0x1C0D710
    UnityEngine::Texture* GetTextureImpl(int name);
    // private System.Void SetFloatArrayImpl(System.Int32 name, System.Single[] values, System.Int32 count)
    // Offset: 0x1C0D760
    void SetFloatArrayImpl(int name, ::Array<float>* values, int count);
    // private System.Void SetVectorArrayImpl(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)
    // Offset: 0x1C0D7C8
    void SetVectorArrayImpl(int name, ::Array<UnityEngine::Vector4>* values, int count);
    // private System.Void SetColorArrayImpl(System.Int32 name, UnityEngine.Color[] values, System.Int32 count)
    // Offset: 0x1C0D830
    void SetColorArrayImpl(int name, ::Array<UnityEngine::Color>* values, int count);
    // private System.Void SetMatrixArrayImpl(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)
    // Offset: 0x1C0D898
    void SetMatrixArrayImpl(int name, ::Array<UnityEngine::Matrix4x4>* values, int count);
    // private System.Single[] GetFloatArrayImpl(System.Int32 name)
    // Offset: 0x1C0D900
    ::Array<float>* GetFloatArrayImpl(int name);
    // private UnityEngine.Vector4[] GetVectorArrayImpl(System.Int32 name)
    // Offset: 0x1C0D950
    ::Array<UnityEngine::Vector4>* GetVectorArrayImpl(int name);
    // private UnityEngine.Color[] GetColorArrayImpl(System.Int32 name)
    // Offset: 0x1C0D9A0
    ::Array<UnityEngine::Color>* GetColorArrayImpl(int name);
    // private UnityEngine.Matrix4x4[] GetMatrixArrayImpl(System.Int32 name)
    // Offset: 0x1C0D9F0
    ::Array<UnityEngine::Matrix4x4>* GetMatrixArrayImpl(int name);
    // private System.Int32 GetFloatArrayCountImpl(System.Int32 name)
    // Offset: 0x1C0DA40
    int GetFloatArrayCountImpl(int name);
    // private System.Int32 GetVectorArrayCountImpl(System.Int32 name)
    // Offset: 0x1C0DA90
    int GetVectorArrayCountImpl(int name);
    // private System.Int32 GetColorArrayCountImpl(System.Int32 name)
    // Offset: 0x1C0DAE0
    int GetColorArrayCountImpl(int name);
    // private System.Int32 GetMatrixArrayCountImpl(System.Int32 name)
    // Offset: 0x1C0DB30
    int GetMatrixArrayCountImpl(int name);
    // private System.Void ExtractFloatArrayImpl(System.Int32 name, out System.Single[] val)
    // Offset: 0x1C0DB80
    void ExtractFloatArrayImpl(int name, ::Array<float>*& val);
    // private System.Void ExtractVectorArrayImpl(System.Int32 name, out UnityEngine.Vector4[] val)
    // Offset: 0x1C0DBD8
    void ExtractVectorArrayImpl(int name, ::Array<UnityEngine::Vector4>*& val);
    // private System.Void ExtractColorArrayImpl(System.Int32 name, out UnityEngine.Color[] val)
    // Offset: 0x1C0DC30
    void ExtractColorArrayImpl(int name, ::Array<UnityEngine::Color>*& val);
    // private System.Void ExtractMatrixArrayImpl(System.Int32 name, out UnityEngine.Matrix4x4[] val)
    // Offset: 0x1C0DC88
    void ExtractMatrixArrayImpl(int name, ::Array<UnityEngine::Matrix4x4>*& val);
    // private UnityEngine.Vector4 GetTextureScaleAndOffsetImpl(System.Int32 name)
    // Offset: 0x1C0DCE0
    UnityEngine::Vector4 GetTextureScaleAndOffsetImpl(int name);
    // private System.Void SetTextureOffsetImpl(System.Int32 name, UnityEngine.Vector2 offset)
    // Offset: 0x1C0DDA4
    void SetTextureOffsetImpl(int name, UnityEngine::Vector2 offset);
    // private System.Void SetTextureScaleImpl(System.Int32 name, UnityEngine.Vector2 scale)
    // Offset: 0x1C0DE58
    void SetTextureScaleImpl(int name, UnityEngine::Vector2 scale);
    // private System.Void SetFloatArray(System.Int32 name, System.Single[] values, System.Int32 count)
    // Offset: 0x1C0DF0C
    void SetFloatArray(int name, ::Array<float>* values, int count);
    // private System.Void SetVectorArray(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)
    // Offset: 0x1C0E030
    void SetVectorArray(int name, ::Array<UnityEngine::Vector4>* values, int count);
    // private System.Void SetColorArray(System.Int32 name, UnityEngine.Color[] values, System.Int32 count)
    // Offset: 0x1C0E154
    void SetColorArray(int name, ::Array<UnityEngine::Color>* values, int count);
    // private System.Void SetMatrixArray(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)
    // Offset: 0x1C0E278
    void SetMatrixArray(int name, ::Array<UnityEngine::Matrix4x4>* values, int count);
    // private System.Void ExtractFloatArray(System.Int32 name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0E39C
    void ExtractFloatArray(int name, System::Collections::Generic::List_1<float>* values);
    // private System.Void ExtractVectorArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0E570
    void ExtractVectorArray(int name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // private System.Void ExtractColorArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0E704
    void ExtractColorArray(int name, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // private System.Void ExtractMatrixArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0E898
    void ExtractMatrixArray(int name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void SetFloat(System.String name, System.Single value)
    // Offset: 0x1C0EA2C
    void SetFloat(::Il2CppString* name, float value);
    // public System.Void SetFloat(System.Int32 nameID, System.Single value)
    // Offset: 0x1C0EA98
    void SetFloat(int nameID, float value);
    // public System.Void SetInt(System.String name, System.Int32 value)
    // Offset: 0x1C0EAF8
    void SetInt(::Il2CppString* name, int value);
    // public System.Void SetInt(System.Int32 nameID, System.Int32 value)
    // Offset: 0x1C0EB68
    void SetInt(int nameID, int value);
    // public System.Void SetColor(System.String name, UnityEngine.Color value)
    // Offset: 0x1C0BF1C
    void SetColor(::Il2CppString* name, UnityEngine::Color value);
    // public System.Void SetColor(System.Int32 nameID, UnityEngine.Color value)
    // Offset: 0x1C0BF18
    void SetColor(int nameID, UnityEngine::Color value);
    // public System.Void SetVector(System.String name, UnityEngine.Vector4 value)
    // Offset: 0x1C0EBC8
    void SetVector(::Il2CppString* name, UnityEngine::Vector4 value);
    // public System.Void SetVector(System.Int32 nameID, UnityEngine.Vector4 value)
    // Offset: 0x1C0EC34
    void SetVector(int nameID, UnityEngine::Vector4 value);
    // public System.Void SetMatrix(System.String name, UnityEngine.Matrix4x4 value)
    // Offset: 0x1C0EC64
    void SetMatrix(::Il2CppString* name, UnityEngine::Matrix4x4 value);
    // public System.Void SetMatrix(System.Int32 nameID, UnityEngine.Matrix4x4 value)
    // Offset: 0x1C0ECE4
    void SetMatrix(int nameID, UnityEngine::Matrix4x4 value);
    // public System.Void SetTexture(System.String name, UnityEngine.Texture value)
    // Offset: 0x1C0C214
    void SetTexture(::Il2CppString* name, UnityEngine::Texture* value);
    // public System.Void SetTexture(System.Int32 nameID, UnityEngine.Texture value)
    // Offset: 0x1C0C1BC
    void SetTexture(int nameID, UnityEngine::Texture* value);
    // public System.Void SetTexture(System.String name, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x1C0ED54
    void SetTexture(::Il2CppString* name, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element);
    // public System.Void SetTexture(System.Int32 nameID, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x1C0EDC8
    void SetTexture(int nameID, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element);
    // public System.Void SetBuffer(System.String name, UnityEngine.ComputeBuffer value)
    // Offset: 0x1C0EE30
    void SetBuffer(::Il2CppString* name, UnityEngine::ComputeBuffer* value);
    // public System.Void SetBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value)
    // Offset: 0x1C0EE94
    void SetBuffer(int nameID, UnityEngine::ComputeBuffer* value);
    // public System.Void SetConstantBuffer(System.String name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x1C0EEEC
    void SetConstantBuffer(::Il2CppString* name, UnityEngine::ComputeBuffer* value, int offset, int size);
    // public System.Void SetConstantBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x1C0EF68
    void SetConstantBuffer(int nameID, UnityEngine::ComputeBuffer* value, int offset, int size);
    // public System.Void SetFloatArray(System.String name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0EFD8
    void SetFloatArray(::Il2CppString* name, System::Collections::Generic::List_1<float>* values);
    // public System.Void SetFloatArray(System.Int32 nameID, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0F064
    void SetFloatArray(int nameID, System::Collections::Generic::List_1<float>* values);
    // public System.Void SetFloatArray(System.String name, System.Single[] values)
    // Offset: 0x1C0F0E0
    void SetFloatArray(::Il2CppString* name, ::Array<float>* values);
    // public System.Void SetFloatArray(System.Int32 nameID, System.Single[] values)
    // Offset: 0x1C0F124
    void SetFloatArray(int nameID, ::Array<float>* values);
    // public System.Void SetColorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0F13C
    void SetColorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // public System.Void SetColorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0F1C8
    void SetColorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // public System.Void SetColorArray(System.String name, UnityEngine.Color[] values)
    // Offset: 0x1C0F244
    void SetColorArray(::Il2CppString* name, ::Array<UnityEngine::Color>* values);
    // public System.Void SetColorArray(System.Int32 nameID, UnityEngine.Color[] values)
    // Offset: 0x1C0F288
    void SetColorArray(int nameID, ::Array<UnityEngine::Color>* values);
    // public System.Void SetVectorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0F2A0
    void SetVectorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // public System.Void SetVectorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0F32C
    void SetVectorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // public System.Void SetVectorArray(System.String name, UnityEngine.Vector4[] values)
    // Offset: 0x1C0F3A8
    void SetVectorArray(::Il2CppString* name, ::Array<UnityEngine::Vector4>* values);
    // public System.Void SetVectorArray(System.Int32 nameID, UnityEngine.Vector4[] values)
    // Offset: 0x1C0F3EC
    void SetVectorArray(int nameID, ::Array<UnityEngine::Vector4>* values);
    // public System.Void SetMatrixArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0F404
    void SetMatrixArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void SetMatrixArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0F490
    void SetMatrixArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void SetMatrixArray(System.String name, UnityEngine.Matrix4x4[] values)
    // Offset: 0x1C0F50C
    void SetMatrixArray(::Il2CppString* name, ::Array<UnityEngine::Matrix4x4>* values);
    // public System.Void SetMatrixArray(System.Int32 nameID, UnityEngine.Matrix4x4[] values)
    // Offset: 0x1C0F550
    void SetMatrixArray(int nameID, ::Array<UnityEngine::Matrix4x4>* values);
    // public System.Single GetFloat(System.String name)
    // Offset: 0x1C0F568
    float GetFloat(::Il2CppString* name);
    // public System.Single GetFloat(System.Int32 nameID)
    // Offset: 0x1C0F5C4
    float GetFloat(int nameID);
    // public System.Int32 GetInt(System.String name)
    // Offset: 0x1C0F614
    int GetInt(::Il2CppString* name);
    // public System.Int32 GetInt(System.Int32 nameID)
    // Offset: 0x1C0F678
    int GetInt(int nameID);
    // public UnityEngine.Color GetColor(System.String name)
    // Offset: 0x1C0BE2C
    UnityEngine::Color GetColor(::Il2CppString* name);
    // public UnityEngine.Color GetColor(System.Int32 nameID)
    // Offset: 0x1C0BE28
    UnityEngine::Color GetColor(int nameID);
    // public UnityEngine.Vector4 GetVector(System.String name)
    // Offset: 0x1C0F6D0
    UnityEngine::Vector4 GetVector(::Il2CppString* name);
    // public UnityEngine.Vector4 GetVector(System.Int32 nameID)
    // Offset: 0x1C0F708
    UnityEngine::Vector4 GetVector(int nameID);
    // public UnityEngine.Matrix4x4 GetMatrix(System.String name)
    // Offset: 0x1C0F720
    UnityEngine::Matrix4x4 GetMatrix(::Il2CppString* name);
    // public UnityEngine.Matrix4x4 GetMatrix(System.Int32 nameID)
    // Offset: 0x1C0F7C8
    UnityEngine::Matrix4x4 GetMatrix(int nameID);
    // public UnityEngine.Texture GetTexture(System.String name)
    // Offset: 0x1C0C090
    UnityEngine::Texture* GetTexture(::Il2CppString* name);
    // public UnityEngine.Texture GetTexture(System.Int32 nameID)
    // Offset: 0x1C0C040
    UnityEngine::Texture* GetTexture(int nameID);
    // public System.Single[] GetFloatArray(System.String name)
    // Offset: 0x1C0F860
    ::Array<float>* GetFloatArray(::Il2CppString* name);
    // public System.Single[] GetFloatArray(System.Int32 nameID)
    // Offset: 0x1C0F890
    ::Array<float>* GetFloatArray(int nameID);
    // public UnityEngine.Color[] GetColorArray(System.String name)
    // Offset: 0x1C0F924
    ::Array<UnityEngine::Color>* GetColorArray(::Il2CppString* name);
    // public UnityEngine.Color[] GetColorArray(System.Int32 nameID)
    // Offset: 0x1C0F954
    ::Array<UnityEngine::Color>* GetColorArray(int nameID);
    // public UnityEngine.Vector4[] GetVectorArray(System.String name)
    // Offset: 0x1C0F9E8
    ::Array<UnityEngine::Vector4>* GetVectorArray(::Il2CppString* name);
    // public UnityEngine.Vector4[] GetVectorArray(System.Int32 nameID)
    // Offset: 0x1C0FA18
    ::Array<UnityEngine::Vector4>* GetVectorArray(int nameID);
    // public UnityEngine.Matrix4x4[] GetMatrixArray(System.String name)
    // Offset: 0x1C0FAAC
    ::Array<UnityEngine::Matrix4x4>* GetMatrixArray(::Il2CppString* name);
    // public UnityEngine.Matrix4x4[] GetMatrixArray(System.Int32 nameID)
    // Offset: 0x1C0FADC
    ::Array<UnityEngine::Matrix4x4>* GetMatrixArray(int nameID);
    // public System.Void GetFloatArray(System.String name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0FB70
    void GetFloatArray(::Il2CppString* name, System::Collections::Generic::List_1<float>* values);
    // public System.Void GetFloatArray(System.Int32 nameID, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0FBA8
    void GetFloatArray(int nameID, System::Collections::Generic::List_1<float>* values);
    // public System.Void GetColorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0FBAC
    void GetColorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // public System.Void GetColorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0FBE4
    void GetColorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // public System.Void GetVectorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0FBE8
    void GetVectorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // public System.Void GetVectorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0FC20
    void GetVectorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // public System.Void GetMatrixArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0FC24
    void GetMatrixArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void GetMatrixArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0FC5C
    void GetMatrixArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void SetTextureOffset(System.String name, UnityEngine.Vector2 value)
    // Offset: 0x1C0C418
    void SetTextureOffset(::Il2CppString* name, UnityEngine::Vector2 value);
    // public System.Void SetTextureOffset(System.Int32 nameID, UnityEngine.Vector2 value)
    // Offset: 0x1C0C414
    void SetTextureOffset(int nameID, UnityEngine::Vector2 value);
    // public System.Void SetTextureScale(System.String name, UnityEngine.Vector2 value)
    // Offset: 0x1C0C5F8
    void SetTextureScale(::Il2CppString* name, UnityEngine::Vector2 value);
    // public System.Void SetTextureScale(System.Int32 nameID, UnityEngine.Vector2 value)
    // Offset: 0x1C0C5F4
    void SetTextureScale(int nameID, UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 GetTextureOffset(System.String name)
    // Offset: 0x1C0C340
    UnityEngine::Vector2 GetTextureOffset(::Il2CppString* name);
    // public UnityEngine.Vector2 GetTextureOffset(System.Int32 nameID)
    // Offset: 0x1C0C308
    UnityEngine::Vector2 GetTextureOffset(int nameID);
    // public UnityEngine.Vector2 GetTextureScale(System.String name)
    // Offset: 0x1C0C520
    UnityEngine::Vector2 GetTextureScale(::Il2CppString* name);
    // public UnityEngine.Vector2 GetTextureScale(System.Int32 nameID)
    // Offset: 0x1C0C4F0
    UnityEngine::Vector2 GetTextureScale(int nameID);
    // private System.Void SetColorImpl_Injected(System.Int32 name, ref UnityEngine.Color value)
    // Offset: 0x1C0D294
    void SetColorImpl_Injected(int name, UnityEngine::Color& value);
    // private System.Void SetMatrixImpl_Injected(System.Int32 name, ref UnityEngine.Matrix4x4 value)
    // Offset: 0x1C0D344
    void SetMatrixImpl_Injected(int name, UnityEngine::Matrix4x4& value);
    // private System.Void GetColorImpl_Injected(System.Int32 name, out UnityEngine.Color ret)
    // Offset: 0x1C0D5E0
    void GetColorImpl_Injected(int name, UnityEngine::Color& ret);
    // private System.Void GetMatrixImpl_Injected(System.Int32 name, out UnityEngine.Matrix4x4 ret)
    // Offset: 0x1C0D6B8
    void GetMatrixImpl_Injected(int name, UnityEngine::Matrix4x4& ret);
    // private System.Void GetTextureScaleAndOffsetImpl_Injected(System.Int32 name, out UnityEngine.Vector4 ret)
    // Offset: 0x1C0DD4C
    void GetTextureScaleAndOffsetImpl_Injected(int name, UnityEngine::Vector4& ret);
    // private System.Void SetTextureOffsetImpl_Injected(System.Int32 name, ref UnityEngine.Vector2 offset)
    // Offset: 0x1C0DE00
    void SetTextureOffsetImpl_Injected(int name, UnityEngine::Vector2& offset);
    // private System.Void SetTextureScaleImpl_Injected(System.Int32 name, ref UnityEngine.Vector2 scale)
    // Offset: 0x1C0DEB4
    void SetTextureScaleImpl_Injected(int name, UnityEngine::Vector2& scale);
  }; // UnityEngine.Material
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Material*, "UnityEngine", "Material");
// Writing MetadataGetter for method: UnityEngine::Material::Create
// Il2CppName: Create
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::CreateWithShader
// Il2CppName: CreateWithShader
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::CreateWithMaterial
// Il2CppName: CreateWithMaterial
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::CreateWithString
// Il2CppName: CreateWithString
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Material::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Material::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Material::GetDefaultMaterial
// Il2CppName: GetDefaultMaterial
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetDefaultParticleMaterial
// Il2CppName: GetDefaultParticleMaterial
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetDefaultLineMaterial
// Il2CppName: GetDefaultLineMaterial
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_shader
// Il2CppName: get_shader
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_shader
// Il2CppName: set_shader
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_color
// Il2CppName: get_color
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_color
// Il2CppName: set_color
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_mainTexture
// Il2CppName: get_mainTexture
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_mainTexture
// Il2CppName: set_mainTexture
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_mainTextureOffset
// Il2CppName: get_mainTextureOffset
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_mainTextureOffset
// Il2CppName: set_mainTextureOffset
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_mainTextureScale
// Il2CppName: get_mainTextureScale
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_mainTextureScale
// Il2CppName: set_mainTextureScale
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFirstPropertyNameIdByAttribute
// Il2CppName: GetFirstPropertyNameIdByAttribute
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::HasProperty
// Il2CppName: HasProperty
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::HasProperty
// Il2CppName: HasProperty
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_renderQueue
// Il2CppName: get_renderQueue
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_renderQueue
// Il2CppName: set_renderQueue
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_rawRenderQueue
// Il2CppName: get_rawRenderQueue
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::EnableKeyword
// Il2CppName: EnableKeyword
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::DisableKeyword
// Il2CppName: DisableKeyword
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::IsKeywordEnabled
// Il2CppName: IsKeywordEnabled
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_globalIlluminationFlags
// Il2CppName: get_globalIlluminationFlags
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_globalIlluminationFlags
// Il2CppName: set_globalIlluminationFlags
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_doubleSidedGI
// Il2CppName: get_doubleSidedGI
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_doubleSidedGI
// Il2CppName: set_doubleSidedGI
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_enableInstancing
// Il2CppName: get_enableInstancing
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_enableInstancing
// Il2CppName: set_enableInstancing
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_passCount
// Il2CppName: get_passCount
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetShaderPassEnabled
// Il2CppName: SetShaderPassEnabled
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetShaderPassEnabled
// Il2CppName: GetShaderPassEnabled
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetPassName
// Il2CppName: GetPassName
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::FindPass
// Il2CppName: FindPass
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetOverrideTag
// Il2CppName: SetOverrideTag
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTagImpl
// Il2CppName: GetTagImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTag
// Il2CppName: GetTag
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTag
// Il2CppName: GetTag
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::Lerp
// Il2CppName: Lerp
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetPass
// Il2CppName: SetPass
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::CopyPropertiesFromMaterial
// Il2CppName: CopyPropertiesFromMaterial
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetShaderKeywords
// Il2CppName: GetShaderKeywords
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetShaderKeywords
// Il2CppName: SetShaderKeywords
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::get_shaderKeywords
// Il2CppName: get_shaderKeywords
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::set_shaderKeywords
// Il2CppName: set_shaderKeywords
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::ComputeCRC
// Il2CppName: ComputeCRC
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNames
// Il2CppName: GetTexturePropertyNames
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNameIDs
// Il2CppName: GetTexturePropertyNameIDs
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNamesInternal
// Il2CppName: GetTexturePropertyNamesInternal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNameIDsInternal
// Il2CppName: GetTexturePropertyNameIDsInternal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNames
// Il2CppName: GetTexturePropertyNames
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTexturePropertyNameIDs
// Il2CppName: GetTexturePropertyNameIDs
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatImpl
// Il2CppName: SetFloatImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColorImpl
// Il2CppName: SetColorImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixImpl
// Il2CppName: SetMatrixImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureImpl
// Il2CppName: SetTextureImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetRenderTextureImpl
// Il2CppName: SetRenderTextureImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetBufferImpl
// Il2CppName: SetBufferImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetConstantBufferImpl
// Il2CppName: SetConstantBufferImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatImpl
// Il2CppName: GetFloatImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColorImpl
// Il2CppName: GetColorImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixImpl
// Il2CppName: GetMatrixImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureImpl
// Il2CppName: GetTextureImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArrayImpl
// Il2CppName: SetFloatArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArrayImpl
// Il2CppName: SetVectorArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArrayImpl
// Il2CppName: SetColorArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArrayImpl
// Il2CppName: SetMatrixArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArrayImpl
// Il2CppName: GetFloatArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArrayImpl
// Il2CppName: GetVectorArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArrayImpl
// Il2CppName: GetColorArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArrayImpl
// Il2CppName: GetMatrixArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArrayCountImpl
// Il2CppName: GetFloatArrayCountImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArrayCountImpl
// Il2CppName: GetVectorArrayCountImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArrayCountImpl
// Il2CppName: GetColorArrayCountImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArrayCountImpl
// Il2CppName: GetMatrixArrayCountImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::ExtractFloatArrayImpl
// Il2CppName: ExtractFloatArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::ExtractVectorArrayImpl
// Il2CppName: ExtractVectorArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::ExtractColorArrayImpl
// Il2CppName: ExtractColorArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::ExtractMatrixArrayImpl
// Il2CppName: ExtractMatrixArrayImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureScaleAndOffsetImpl
// Il2CppName: GetTextureScaleAndOffsetImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureOffsetImpl
// Il2CppName: SetTextureOffsetImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureScaleImpl
// Il2CppName: SetTextureScaleImpl
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::ExtractFloatArray
// Il2CppName: ExtractFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::ExtractVectorArray
// Il2CppName: ExtractVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::ExtractColorArray
// Il2CppName: ExtractColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::ExtractMatrixArray
// Il2CppName: ExtractMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetFloat
// Il2CppName: SetFloat
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetFloat
// Il2CppName: SetFloat
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetInt
// Il2CppName: SetInt
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetInt
// Il2CppName: SetInt
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColor
// Il2CppName: SetColor
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColor
// Il2CppName: SetColor
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetVector
// Il2CppName: SetVector
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetVector
// Il2CppName: SetVector
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrix
// Il2CppName: SetMatrix
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrix
// Il2CppName: SetMatrix
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTexture
// Il2CppName: SetTexture
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTexture
// Il2CppName: SetTexture
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTexture
// Il2CppName: SetTexture
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTexture
// Il2CppName: SetTexture
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetBuffer
// Il2CppName: SetBuffer
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetBuffer
// Il2CppName: SetBuffer
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetConstantBuffer
// Il2CppName: SetConstantBuffer
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetConstantBuffer
// Il2CppName: SetConstantBuffer
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetFloatArray
// Il2CppName: SetFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColorArray
// Il2CppName: SetColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetVectorArray
// Il2CppName: SetVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixArray
// Il2CppName: SetMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFloat
// Il2CppName: GetFloat
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFloat
// Il2CppName: GetFloat
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetInt
// Il2CppName: GetInt
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetInt
// Il2CppName: GetInt
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColor
// Il2CppName: GetColor
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColor
// Il2CppName: GetColor
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetVector
// Il2CppName: GetVector
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetVector
// Il2CppName: GetVector
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrix
// Il2CppName: GetMatrix
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrix
// Il2CppName: GetMatrix
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTexture
// Il2CppName: GetTexture
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTexture
// Il2CppName: GetTexture
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArray
// Il2CppName: GetFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArray
// Il2CppName: GetFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArray
// Il2CppName: GetColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArray
// Il2CppName: GetColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArray
// Il2CppName: GetVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArray
// Il2CppName: GetVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArray
// Il2CppName: GetMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArray
// Il2CppName: GetMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArray
// Il2CppName: GetFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetFloatArray
// Il2CppName: GetFloatArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArray
// Il2CppName: GetColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColorArray
// Il2CppName: GetColorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArray
// Il2CppName: GetVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetVectorArray
// Il2CppName: GetVectorArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArray
// Il2CppName: GetMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixArray
// Il2CppName: GetMatrixArray
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureOffset
// Il2CppName: SetTextureOffset
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureOffset
// Il2CppName: SetTextureOffset
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureScale
// Il2CppName: SetTextureScale
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureScale
// Il2CppName: SetTextureScale
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureOffset
// Il2CppName: GetTextureOffset
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureOffset
// Il2CppName: GetTextureOffset
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureScale
// Il2CppName: GetTextureScale
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureScale
// Il2CppName: GetTextureScale
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetColorImpl_Injected
// Il2CppName: SetColorImpl_Injected
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetMatrixImpl_Injected
// Il2CppName: SetMatrixImpl_Injected
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetColorImpl_Injected
// Il2CppName: GetColorImpl_Injected
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetMatrixImpl_Injected
// Il2CppName: GetMatrixImpl_Injected
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::GetTextureScaleAndOffsetImpl_Injected
// Il2CppName: GetTextureScaleAndOffsetImpl_Injected
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureOffsetImpl_Injected
// Il2CppName: SetTextureOffsetImpl_Injected
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::Material::SetTextureScaleImpl_Injected
// Il2CppName: SetTextureScaleImpl_Injected
// Cannot perform method pointer template specialization from operators!
