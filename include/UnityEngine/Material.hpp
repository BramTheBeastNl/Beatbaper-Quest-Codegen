// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Shader
  class Shader;
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: MaterialGlobalIlluminationFlags
  struct MaterialGlobalIlluminationFlags;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: ComputeBuffer
  class ComputeBuffer;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ShaderPropertyFlags
  struct ShaderPropertyFlags;
  // Forward declaring type: RenderTextureSubElement
  struct RenderTextureSubElement;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Material
  // [NativeHeaderAttribute] Offset: D8EE4C
  // [NativeHeaderAttribute] Offset: D8EE4C
  class Material : public UnityEngine::Object {
    public:
    // Creating value type constructor for type: Material
    Material() noexcept {}
    // static public UnityEngine.Material Create(System.String scriptContents)
    // Offset: 0x1C0B90C
    static UnityEngine::Material* Create(::Il2CppString* scriptContents);
    // static private System.Void CreateWithShader(UnityEngine.Material self, UnityEngine.Shader shader)
    // Offset: 0x1C0B9F4
    static void CreateWithShader(UnityEngine::Material* self, UnityEngine::Shader* shader);
    // static private System.Void CreateWithMaterial(UnityEngine.Material self, UnityEngine.Material source)
    // Offset: 0x1C0BA44
    static void CreateWithMaterial(UnityEngine::Material* self, UnityEngine::Material* source);
    // static private System.Void CreateWithString(UnityEngine.Material self)
    // Offset: 0x1C0BA94
    static void CreateWithString(UnityEngine::Material* self);
    // public System.Void .ctor(UnityEngine.Shader shader)
    // Offset: 0x1C0BAD4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Material* New_ctor(UnityEngine::Shader* shader) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Material*, creationType>(shader)));
    }
    // public System.Void .ctor(UnityEngine.Material source)
    // Offset: 0x1C0BB7C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Material* New_ctor(UnityEngine::Material* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Material*, creationType>(source)));
    }
    // public System.Void .ctor(System.String contents)
    // Offset: 0x1C0B964
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Material* New_ctor(::Il2CppString* contents) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Material*, creationType>(contents)));
    }
    // static UnityEngine.Material GetDefaultMaterial()
    // Offset: 0x1C0BC1C
    static UnityEngine::Material* GetDefaultMaterial();
    // static UnityEngine.Material GetDefaultParticleMaterial()
    // Offset: 0x1C0BC50
    static UnityEngine::Material* GetDefaultParticleMaterial();
    // static UnityEngine.Material GetDefaultLineMaterial()
    // Offset: 0x1C0BC84
    static UnityEngine::Material* GetDefaultLineMaterial();
    // public UnityEngine.Shader get_shader()
    // Offset: 0x1C0BCB8
    UnityEngine::Shader* get_shader();
    // public System.Void set_shader(UnityEngine.Shader value)
    // Offset: 0x1C0BCF8
    void set_shader(UnityEngine::Shader* value);
    // public UnityEngine.Color get_color()
    // Offset: 0x1C0BD48
    UnityEngine::Color get_color();
    // public System.Void set_color(UnityEngine.Color value)
    // Offset: 0x1C0BE5C
    void set_color(UnityEngine::Color value);
    // public UnityEngine.Texture get_mainTexture()
    // Offset: 0x1C0BF7C
    UnityEngine::Texture* get_mainTexture();
    // public System.Void set_mainTexture(UnityEngine.Texture value)
    // Offset: 0x1C0C0EC
    void set_mainTexture(UnityEngine::Texture* value);
    // public UnityEngine.Vector2 get_mainTextureOffset()
    // Offset: 0x1C0C278
    UnityEngine::Vector2 get_mainTextureOffset();
    // public System.Void set_mainTextureOffset(UnityEngine.Vector2 value)
    // Offset: 0x1C0C370
    void set_mainTextureOffset(UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_mainTextureScale()
    // Offset: 0x1C0C460
    UnityEngine::Vector2 get_mainTextureScale();
    // public System.Void set_mainTextureScale(UnityEngine.Vector2 value)
    // Offset: 0x1C0C550
    void set_mainTextureScale(UnityEngine::Vector2 value);
    // private System.Int32 GetFirstPropertyNameIdByAttribute(UnityEngine.Rendering.ShaderPropertyFlags attributeFlag)
    // Offset: 0x1C0BDD8
    int GetFirstPropertyNameIdByAttribute(UnityEngine::Rendering::ShaderPropertyFlags attributeFlag);
    // public System.Boolean HasProperty(System.Int32 nameID)
    // Offset: 0x1C0C640
    bool HasProperty(int nameID);
    // public System.Boolean HasProperty(System.String name)
    // Offset: 0x1C0C690
    bool HasProperty(::Il2CppString* name);
    // public System.Int32 get_renderQueue()
    // Offset: 0x1C0C6EC
    int get_renderQueue();
    // public System.Void set_renderQueue(System.Int32 value)
    // Offset: 0x1C0C72C
    void set_renderQueue(int value);
    // System.Int32 get_rawRenderQueue()
    // Offset: 0x1C0C77C
    int get_rawRenderQueue();
    // public System.Void EnableKeyword(System.String keyword)
    // Offset: 0x1C0C7BC
    void EnableKeyword(::Il2CppString* keyword);
    // public System.Void DisableKeyword(System.String keyword)
    // Offset: 0x1C0C80C
    void DisableKeyword(::Il2CppString* keyword);
    // public System.Boolean IsKeywordEnabled(System.String keyword)
    // Offset: 0x1C0C85C
    bool IsKeywordEnabled(::Il2CppString* keyword);
    // public UnityEngine.MaterialGlobalIlluminationFlags get_globalIlluminationFlags()
    // Offset: 0x1C0C8AC
    UnityEngine::MaterialGlobalIlluminationFlags get_globalIlluminationFlags();
    // public System.Void set_globalIlluminationFlags(UnityEngine.MaterialGlobalIlluminationFlags value)
    // Offset: 0x1C0C8EC
    void set_globalIlluminationFlags(UnityEngine::MaterialGlobalIlluminationFlags value);
    // public System.Boolean get_doubleSidedGI()
    // Offset: 0x1C0C93C
    bool get_doubleSidedGI();
    // public System.Void set_doubleSidedGI(System.Boolean value)
    // Offset: 0x1C0C97C
    void set_doubleSidedGI(bool value);
    // public System.Boolean get_enableInstancing()
    // Offset: 0x1C0C9CC
    bool get_enableInstancing();
    // public System.Void set_enableInstancing(System.Boolean value)
    // Offset: 0x1C0CA0C
    void set_enableInstancing(bool value);
    // public System.Int32 get_passCount()
    // Offset: 0x1C0CA5C
    int get_passCount();
    // public System.Void SetShaderPassEnabled(System.String passName, System.Boolean enabled)
    // Offset: 0x1C0CA9C
    void SetShaderPassEnabled(::Il2CppString* passName, bool enabled);
    // public System.Boolean GetShaderPassEnabled(System.String passName)
    // Offset: 0x1C0CAF4
    bool GetShaderPassEnabled(::Il2CppString* passName);
    // public System.String GetPassName(System.Int32 pass)
    // Offset: 0x1C0CB44
    ::Il2CppString* GetPassName(int pass);
    // public System.Int32 FindPass(System.String passName)
    // Offset: 0x1C0CB94
    int FindPass(::Il2CppString* passName);
    // public System.Void SetOverrideTag(System.String tag, System.String val)
    // Offset: 0x1C0CBE4
    void SetOverrideTag(::Il2CppString* tag, ::Il2CppString* val);
    // private System.String GetTagImpl(System.String tag, System.Boolean currentSubShaderOnly, System.String defaultValue)
    // Offset: 0x1C0CC3C
    ::Il2CppString* GetTagImpl(::Il2CppString* tag, bool currentSubShaderOnly, ::Il2CppString* defaultValue);
    // public System.String GetTag(System.String tag, System.Boolean searchFallbacks, System.String defaultValue)
    // Offset: 0x1C0CCA4
    ::Il2CppString* GetTag(::Il2CppString* tag, bool searchFallbacks, ::Il2CppString* defaultValue);
    // public System.String GetTag(System.String tag, System.Boolean searchFallbacks)
    // Offset: 0x1C0CD0C
    ::Il2CppString* GetTag(::Il2CppString* tag, bool searchFallbacks);
    // public System.Void Lerp(UnityEngine.Material start, UnityEngine.Material end, System.Single t)
    // Offset: 0x1C0CDA4
    void Lerp(UnityEngine::Material* start, UnityEngine::Material* end, float t);
    // public System.Boolean SetPass(System.Int32 pass)
    // Offset: 0x1C0CE0C
    bool SetPass(int pass);
    // public System.Void CopyPropertiesFromMaterial(UnityEngine.Material mat)
    // Offset: 0x1C0CE5C
    void CopyPropertiesFromMaterial(UnityEngine::Material* mat);
    // private System.String[] GetShaderKeywords()
    // Offset: 0x1C0CEAC
    ::Array<::Il2CppString*>* GetShaderKeywords();
    // private System.Void SetShaderKeywords(System.String[] names)
    // Offset: 0x1C0CEEC
    void SetShaderKeywords(::Array<::Il2CppString*>* names);
    // public System.String[] get_shaderKeywords()
    // Offset: 0x1C0CF3C
    ::Array<::Il2CppString*>* get_shaderKeywords();
    // public System.Void set_shaderKeywords(System.String[] value)
    // Offset: 0x1C0CF7C
    void set_shaderKeywords(::Array<::Il2CppString*>* value);
    // public System.Int32 ComputeCRC()
    // Offset: 0x1C0CFCC
    int ComputeCRC();
    // public System.String[] GetTexturePropertyNames()
    // Offset: 0x1C0D00C
    ::Array<::Il2CppString*>* GetTexturePropertyNames();
    // public System.Int32[] GetTexturePropertyNameIDs()
    // Offset: 0x1C0D04C
    ::Array<int>* GetTexturePropertyNameIDs();
    // private System.Void GetTexturePropertyNamesInternal(System.Object outNames)
    // Offset: 0x1C0D08C
    void GetTexturePropertyNamesInternal(::Il2CppObject* outNames);
    // private System.Void GetTexturePropertyNameIDsInternal(System.Object outNames)
    // Offset: 0x1C0D0DC
    void GetTexturePropertyNameIDsInternal(::Il2CppObject* outNames);
    // public System.Void GetTexturePropertyNames(System.Collections.Generic.List`1<System.String> outNames)
    // Offset: 0x1C0D12C
    void GetTexturePropertyNames(System::Collections::Generic::List_1<::Il2CppString*>* outNames);
    // public System.Void GetTexturePropertyNameIDs(System.Collections.Generic.List`1<System.Int32> outNames)
    // Offset: 0x1C0D17C
    void GetTexturePropertyNameIDs(System::Collections::Generic::List_1<int>* outNames);
    // private System.Void SetFloatImpl(System.Int32 name, System.Single value)
    // Offset: 0x1C0D1CC
    void SetFloatImpl(int name, float value);
    // private System.Void SetColorImpl(System.Int32 name, UnityEngine.Color value)
    // Offset: 0x1C0D22C
    void SetColorImpl(int name, UnityEngine::Color value);
    // private System.Void SetMatrixImpl(System.Int32 name, UnityEngine.Matrix4x4 value)
    // Offset: 0x1C0D2EC
    void SetMatrixImpl(int name, UnityEngine::Matrix4x4 value);
    // private System.Void SetTextureImpl(System.Int32 name, UnityEngine.Texture value)
    // Offset: 0x1C0D39C
    void SetTextureImpl(int name, UnityEngine::Texture* value);
    // private System.Void SetRenderTextureImpl(System.Int32 name, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x1C0D3F4
    void SetRenderTextureImpl(int name, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element);
    // private System.Void SetBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value)
    // Offset: 0x1C0D45C
    void SetBufferImpl(int name, UnityEngine::ComputeBuffer* value);
    // private System.Void SetConstantBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x1C0D4B4
    void SetConstantBufferImpl(int name, UnityEngine::ComputeBuffer* value, int offset, int size);
    // private System.Single GetFloatImpl(System.Int32 name)
    // Offset: 0x1C0D524
    float GetFloatImpl(int name);
    // private UnityEngine.Color GetColorImpl(System.Int32 name)
    // Offset: 0x1C0D574
    UnityEngine::Color GetColorImpl(int name);
    // private UnityEngine.Matrix4x4 GetMatrixImpl(System.Int32 name)
    // Offset: 0x1C0D638
    UnityEngine::Matrix4x4 GetMatrixImpl(int name);
    // private UnityEngine.Texture GetTextureImpl(System.Int32 name)
    // Offset: 0x1C0D710
    UnityEngine::Texture* GetTextureImpl(int name);
    // private System.Void SetFloatArrayImpl(System.Int32 name, System.Single[] values, System.Int32 count)
    // Offset: 0x1C0D760
    void SetFloatArrayImpl(int name, ::Array<float>* values, int count);
    // private System.Void SetVectorArrayImpl(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)
    // Offset: 0x1C0D7C8
    void SetVectorArrayImpl(int name, ::Array<UnityEngine::Vector4>* values, int count);
    // private System.Void SetColorArrayImpl(System.Int32 name, UnityEngine.Color[] values, System.Int32 count)
    // Offset: 0x1C0D830
    void SetColorArrayImpl(int name, ::Array<UnityEngine::Color>* values, int count);
    // private System.Void SetMatrixArrayImpl(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)
    // Offset: 0x1C0D898
    void SetMatrixArrayImpl(int name, ::Array<UnityEngine::Matrix4x4>* values, int count);
    // private System.Single[] GetFloatArrayImpl(System.Int32 name)
    // Offset: 0x1C0D900
    ::Array<float>* GetFloatArrayImpl(int name);
    // private UnityEngine.Vector4[] GetVectorArrayImpl(System.Int32 name)
    // Offset: 0x1C0D950
    ::Array<UnityEngine::Vector4>* GetVectorArrayImpl(int name);
    // private UnityEngine.Color[] GetColorArrayImpl(System.Int32 name)
    // Offset: 0x1C0D9A0
    ::Array<UnityEngine::Color>* GetColorArrayImpl(int name);
    // private UnityEngine.Matrix4x4[] GetMatrixArrayImpl(System.Int32 name)
    // Offset: 0x1C0D9F0
    ::Array<UnityEngine::Matrix4x4>* GetMatrixArrayImpl(int name);
    // private System.Int32 GetFloatArrayCountImpl(System.Int32 name)
    // Offset: 0x1C0DA40
    int GetFloatArrayCountImpl(int name);
    // private System.Int32 GetVectorArrayCountImpl(System.Int32 name)
    // Offset: 0x1C0DA90
    int GetVectorArrayCountImpl(int name);
    // private System.Int32 GetColorArrayCountImpl(System.Int32 name)
    // Offset: 0x1C0DAE0
    int GetColorArrayCountImpl(int name);
    // private System.Int32 GetMatrixArrayCountImpl(System.Int32 name)
    // Offset: 0x1C0DB30
    int GetMatrixArrayCountImpl(int name);
    // private System.Void ExtractFloatArrayImpl(System.Int32 name, out System.Single[] val)
    // Offset: 0x1C0DB80
    void ExtractFloatArrayImpl(int name, ::Array<float>*& val);
    // private System.Void ExtractVectorArrayImpl(System.Int32 name, out UnityEngine.Vector4[] val)
    // Offset: 0x1C0DBD8
    void ExtractVectorArrayImpl(int name, ::Array<UnityEngine::Vector4>*& val);
    // private System.Void ExtractColorArrayImpl(System.Int32 name, out UnityEngine.Color[] val)
    // Offset: 0x1C0DC30
    void ExtractColorArrayImpl(int name, ::Array<UnityEngine::Color>*& val);
    // private System.Void ExtractMatrixArrayImpl(System.Int32 name, out UnityEngine.Matrix4x4[] val)
    // Offset: 0x1C0DC88
    void ExtractMatrixArrayImpl(int name, ::Array<UnityEngine::Matrix4x4>*& val);
    // private UnityEngine.Vector4 GetTextureScaleAndOffsetImpl(System.Int32 name)
    // Offset: 0x1C0DCE0
    UnityEngine::Vector4 GetTextureScaleAndOffsetImpl(int name);
    // private System.Void SetTextureOffsetImpl(System.Int32 name, UnityEngine.Vector2 offset)
    // Offset: 0x1C0DDA4
    void SetTextureOffsetImpl(int name, UnityEngine::Vector2 offset);
    // private System.Void SetTextureScaleImpl(System.Int32 name, UnityEngine.Vector2 scale)
    // Offset: 0x1C0DE58
    void SetTextureScaleImpl(int name, UnityEngine::Vector2 scale);
    // private System.Void SetFloatArray(System.Int32 name, System.Single[] values, System.Int32 count)
    // Offset: 0x1C0DF0C
    void SetFloatArray(int name, ::Array<float>* values, int count);
    // private System.Void SetVectorArray(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)
    // Offset: 0x1C0E030
    void SetVectorArray(int name, ::Array<UnityEngine::Vector4>* values, int count);
    // private System.Void SetColorArray(System.Int32 name, UnityEngine.Color[] values, System.Int32 count)
    // Offset: 0x1C0E154
    void SetColorArray(int name, ::Array<UnityEngine::Color>* values, int count);
    // private System.Void SetMatrixArray(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)
    // Offset: 0x1C0E278
    void SetMatrixArray(int name, ::Array<UnityEngine::Matrix4x4>* values, int count);
    // private System.Void ExtractFloatArray(System.Int32 name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0E39C
    void ExtractFloatArray(int name, System::Collections::Generic::List_1<float>* values);
    // private System.Void ExtractVectorArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0E570
    void ExtractVectorArray(int name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // private System.Void ExtractColorArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0E704
    void ExtractColorArray(int name, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // private System.Void ExtractMatrixArray(System.Int32 name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0E898
    void ExtractMatrixArray(int name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void SetFloat(System.String name, System.Single value)
    // Offset: 0x1C0EA2C
    void SetFloat(::Il2CppString* name, float value);
    // public System.Void SetFloat(System.Int32 nameID, System.Single value)
    // Offset: 0x1C0EA98
    void SetFloat(int nameID, float value);
    // public System.Void SetInt(System.String name, System.Int32 value)
    // Offset: 0x1C0EAF8
    void SetInt(::Il2CppString* name, int value);
    // public System.Void SetInt(System.Int32 nameID, System.Int32 value)
    // Offset: 0x1C0EB68
    void SetInt(int nameID, int value);
    // public System.Void SetColor(System.String name, UnityEngine.Color value)
    // Offset: 0x1C0BF1C
    void SetColor(::Il2CppString* name, UnityEngine::Color value);
    // public System.Void SetColor(System.Int32 nameID, UnityEngine.Color value)
    // Offset: 0x1C0BF18
    void SetColor(int nameID, UnityEngine::Color value);
    // public System.Void SetVector(System.String name, UnityEngine.Vector4 value)
    // Offset: 0x1C0EBC8
    void SetVector(::Il2CppString* name, UnityEngine::Vector4 value);
    // public System.Void SetVector(System.Int32 nameID, UnityEngine.Vector4 value)
    // Offset: 0x1C0EC34
    void SetVector(int nameID, UnityEngine::Vector4 value);
    // public System.Void SetMatrix(System.String name, UnityEngine.Matrix4x4 value)
    // Offset: 0x1C0EC64
    void SetMatrix(::Il2CppString* name, UnityEngine::Matrix4x4 value);
    // public System.Void SetMatrix(System.Int32 nameID, UnityEngine.Matrix4x4 value)
    // Offset: 0x1C0ECE4
    void SetMatrix(int nameID, UnityEngine::Matrix4x4 value);
    // public System.Void SetTexture(System.String name, UnityEngine.Texture value)
    // Offset: 0x1C0C214
    void SetTexture(::Il2CppString* name, UnityEngine::Texture* value);
    // public System.Void SetTexture(System.Int32 nameID, UnityEngine.Texture value)
    // Offset: 0x1C0C1BC
    void SetTexture(int nameID, UnityEngine::Texture* value);
    // public System.Void SetTexture(System.String name, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x1C0ED54
    void SetTexture(::Il2CppString* name, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element);
    // public System.Void SetTexture(System.Int32 nameID, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)
    // Offset: 0x1C0EDC8
    void SetTexture(int nameID, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element);
    // public System.Void SetBuffer(System.String name, UnityEngine.ComputeBuffer value)
    // Offset: 0x1C0EE30
    void SetBuffer(::Il2CppString* name, UnityEngine::ComputeBuffer* value);
    // public System.Void SetBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value)
    // Offset: 0x1C0EE94
    void SetBuffer(int nameID, UnityEngine::ComputeBuffer* value);
    // public System.Void SetConstantBuffer(System.String name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x1C0EEEC
    void SetConstantBuffer(::Il2CppString* name, UnityEngine::ComputeBuffer* value, int offset, int size);
    // public System.Void SetConstantBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)
    // Offset: 0x1C0EF68
    void SetConstantBuffer(int nameID, UnityEngine::ComputeBuffer* value, int offset, int size);
    // public System.Void SetFloatArray(System.String name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0EFD8
    void SetFloatArray(::Il2CppString* name, System::Collections::Generic::List_1<float>* values);
    // public System.Void SetFloatArray(System.Int32 nameID, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0F064
    void SetFloatArray(int nameID, System::Collections::Generic::List_1<float>* values);
    // public System.Void SetFloatArray(System.String name, System.Single[] values)
    // Offset: 0x1C0F0E0
    void SetFloatArray(::Il2CppString* name, ::Array<float>* values);
    // public System.Void SetFloatArray(System.Int32 nameID, System.Single[] values)
    // Offset: 0x1C0F124
    void SetFloatArray(int nameID, ::Array<float>* values);
    // public System.Void SetColorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0F13C
    void SetColorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // public System.Void SetColorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0F1C8
    void SetColorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // public System.Void SetColorArray(System.String name, UnityEngine.Color[] values)
    // Offset: 0x1C0F244
    void SetColorArray(::Il2CppString* name, ::Array<UnityEngine::Color>* values);
    // public System.Void SetColorArray(System.Int32 nameID, UnityEngine.Color[] values)
    // Offset: 0x1C0F288
    void SetColorArray(int nameID, ::Array<UnityEngine::Color>* values);
    // public System.Void SetVectorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0F2A0
    void SetVectorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // public System.Void SetVectorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0F32C
    void SetVectorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // public System.Void SetVectorArray(System.String name, UnityEngine.Vector4[] values)
    // Offset: 0x1C0F3A8
    void SetVectorArray(::Il2CppString* name, ::Array<UnityEngine::Vector4>* values);
    // public System.Void SetVectorArray(System.Int32 nameID, UnityEngine.Vector4[] values)
    // Offset: 0x1C0F3EC
    void SetVectorArray(int nameID, ::Array<UnityEngine::Vector4>* values);
    // public System.Void SetMatrixArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0F404
    void SetMatrixArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void SetMatrixArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0F490
    void SetMatrixArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void SetMatrixArray(System.String name, UnityEngine.Matrix4x4[] values)
    // Offset: 0x1C0F50C
    void SetMatrixArray(::Il2CppString* name, ::Array<UnityEngine::Matrix4x4>* values);
    // public System.Void SetMatrixArray(System.Int32 nameID, UnityEngine.Matrix4x4[] values)
    // Offset: 0x1C0F550
    void SetMatrixArray(int nameID, ::Array<UnityEngine::Matrix4x4>* values);
    // public System.Single GetFloat(System.String name)
    // Offset: 0x1C0F568
    float GetFloat(::Il2CppString* name);
    // public System.Single GetFloat(System.Int32 nameID)
    // Offset: 0x1C0F5C4
    float GetFloat(int nameID);
    // public System.Int32 GetInt(System.String name)
    // Offset: 0x1C0F614
    int GetInt(::Il2CppString* name);
    // public System.Int32 GetInt(System.Int32 nameID)
    // Offset: 0x1C0F678
    int GetInt(int nameID);
    // public UnityEngine.Color GetColor(System.String name)
    // Offset: 0x1C0BE2C
    UnityEngine::Color GetColor(::Il2CppString* name);
    // public UnityEngine.Color GetColor(System.Int32 nameID)
    // Offset: 0x1C0BE28
    UnityEngine::Color GetColor(int nameID);
    // public UnityEngine.Vector4 GetVector(System.String name)
    // Offset: 0x1C0F6D0
    UnityEngine::Vector4 GetVector(::Il2CppString* name);
    // public UnityEngine.Vector4 GetVector(System.Int32 nameID)
    // Offset: 0x1C0F708
    UnityEngine::Vector4 GetVector(int nameID);
    // public UnityEngine.Matrix4x4 GetMatrix(System.String name)
    // Offset: 0x1C0F720
    UnityEngine::Matrix4x4 GetMatrix(::Il2CppString* name);
    // public UnityEngine.Matrix4x4 GetMatrix(System.Int32 nameID)
    // Offset: 0x1C0F7C8
    UnityEngine::Matrix4x4 GetMatrix(int nameID);
    // public UnityEngine.Texture GetTexture(System.String name)
    // Offset: 0x1C0C090
    UnityEngine::Texture* GetTexture(::Il2CppString* name);
    // public UnityEngine.Texture GetTexture(System.Int32 nameID)
    // Offset: 0x1C0C040
    UnityEngine::Texture* GetTexture(int nameID);
    // public System.Single[] GetFloatArray(System.String name)
    // Offset: 0x1C0F860
    ::Array<float>* GetFloatArray(::Il2CppString* name);
    // public System.Single[] GetFloatArray(System.Int32 nameID)
    // Offset: 0x1C0F890
    ::Array<float>* GetFloatArray(int nameID);
    // public UnityEngine.Color[] GetColorArray(System.String name)
    // Offset: 0x1C0F924
    ::Array<UnityEngine::Color>* GetColorArray(::Il2CppString* name);
    // public UnityEngine.Color[] GetColorArray(System.Int32 nameID)
    // Offset: 0x1C0F954
    ::Array<UnityEngine::Color>* GetColorArray(int nameID);
    // public UnityEngine.Vector4[] GetVectorArray(System.String name)
    // Offset: 0x1C0F9E8
    ::Array<UnityEngine::Vector4>* GetVectorArray(::Il2CppString* name);
    // public UnityEngine.Vector4[] GetVectorArray(System.Int32 nameID)
    // Offset: 0x1C0FA18
    ::Array<UnityEngine::Vector4>* GetVectorArray(int nameID);
    // public UnityEngine.Matrix4x4[] GetMatrixArray(System.String name)
    // Offset: 0x1C0FAAC
    ::Array<UnityEngine::Matrix4x4>* GetMatrixArray(::Il2CppString* name);
    // public UnityEngine.Matrix4x4[] GetMatrixArray(System.Int32 nameID)
    // Offset: 0x1C0FADC
    ::Array<UnityEngine::Matrix4x4>* GetMatrixArray(int nameID);
    // public System.Void GetFloatArray(System.String name, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0FB70
    void GetFloatArray(::Il2CppString* name, System::Collections::Generic::List_1<float>* values);
    // public System.Void GetFloatArray(System.Int32 nameID, System.Collections.Generic.List`1<System.Single> values)
    // Offset: 0x1C0FBA8
    void GetFloatArray(int nameID, System::Collections::Generic::List_1<float>* values);
    // public System.Void GetColorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0FBAC
    void GetColorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // public System.Void GetColorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Color> values)
    // Offset: 0x1C0FBE4
    void GetColorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Color>* values);
    // public System.Void GetVectorArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0FBE8
    void GetVectorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // public System.Void GetVectorArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Vector4> values)
    // Offset: 0x1C0FC20
    void GetVectorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Vector4>* values);
    // public System.Void GetMatrixArray(System.String name, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0FC24
    void GetMatrixArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void GetMatrixArray(System.Int32 nameID, System.Collections.Generic.List`1<UnityEngine.Matrix4x4> values)
    // Offset: 0x1C0FC5C
    void GetMatrixArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values);
    // public System.Void SetTextureOffset(System.String name, UnityEngine.Vector2 value)
    // Offset: 0x1C0C418
    void SetTextureOffset(::Il2CppString* name, UnityEngine::Vector2 value);
    // public System.Void SetTextureOffset(System.Int32 nameID, UnityEngine.Vector2 value)
    // Offset: 0x1C0C414
    void SetTextureOffset(int nameID, UnityEngine::Vector2 value);
    // public System.Void SetTextureScale(System.String name, UnityEngine.Vector2 value)
    // Offset: 0x1C0C5F8
    void SetTextureScale(::Il2CppString* name, UnityEngine::Vector2 value);
    // public System.Void SetTextureScale(System.Int32 nameID, UnityEngine.Vector2 value)
    // Offset: 0x1C0C5F4
    void SetTextureScale(int nameID, UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 GetTextureOffset(System.String name)
    // Offset: 0x1C0C340
    UnityEngine::Vector2 GetTextureOffset(::Il2CppString* name);
    // public UnityEngine.Vector2 GetTextureOffset(System.Int32 nameID)
    // Offset: 0x1C0C308
    UnityEngine::Vector2 GetTextureOffset(int nameID);
    // public UnityEngine.Vector2 GetTextureScale(System.String name)
    // Offset: 0x1C0C520
    UnityEngine::Vector2 GetTextureScale(::Il2CppString* name);
    // public UnityEngine.Vector2 GetTextureScale(System.Int32 nameID)
    // Offset: 0x1C0C4F0
    UnityEngine::Vector2 GetTextureScale(int nameID);
    // private System.Void SetColorImpl_Injected(System.Int32 name, ref UnityEngine.Color value)
    // Offset: 0x1C0D294
    void SetColorImpl_Injected(int name, UnityEngine::Color& value);
    // private System.Void SetMatrixImpl_Injected(System.Int32 name, ref UnityEngine.Matrix4x4 value)
    // Offset: 0x1C0D344
    void SetMatrixImpl_Injected(int name, UnityEngine::Matrix4x4& value);
    // private System.Void GetColorImpl_Injected(System.Int32 name, out UnityEngine.Color ret)
    // Offset: 0x1C0D5E0
    void GetColorImpl_Injected(int name, UnityEngine::Color& ret);
    // private System.Void GetMatrixImpl_Injected(System.Int32 name, out UnityEngine.Matrix4x4 ret)
    // Offset: 0x1C0D6B8
    void GetMatrixImpl_Injected(int name, UnityEngine::Matrix4x4& ret);
    // private System.Void GetTextureScaleAndOffsetImpl_Injected(System.Int32 name, out UnityEngine.Vector4 ret)
    // Offset: 0x1C0DD4C
    void GetTextureScaleAndOffsetImpl_Injected(int name, UnityEngine::Vector4& ret);
    // private System.Void SetTextureOffsetImpl_Injected(System.Int32 name, ref UnityEngine.Vector2 offset)
    // Offset: 0x1C0DE00
    void SetTextureOffsetImpl_Injected(int name, UnityEngine::Vector2& offset);
    // private System.Void SetTextureScaleImpl_Injected(System.Int32 name, ref UnityEngine.Vector2 scale)
    // Offset: 0x1C0DEB4
    void SetTextureScaleImpl_Injected(int name, UnityEngine::Vector2& scale);
  }; // UnityEngine.Material
  #pragma pack(pop)
  // Writing MetadataGetter for method: Material::Create
  // Il2CppName: Create
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)(::Il2CppString*)>(&Material::Create)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::CreateWithShader
  // Il2CppName: CreateWithShader
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Material*, UnityEngine::Shader*)>(&Material::CreateWithShader)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "CreateWithShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>()});
    }
  };
  // Writing MetadataGetter for method: Material::CreateWithMaterial
  // Il2CppName: CreateWithMaterial
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Material*, UnityEngine::Material*)>(&Material::CreateWithMaterial)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "CreateWithMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
    }
  };
  // Writing MetadataGetter for method: Material::CreateWithString
  // Il2CppName: CreateWithString
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Material*)>(&Material::CreateWithString)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "CreateWithString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
    }
  };
  // Writing MetadataGetter for method: Material::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Shader*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>()});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Shader*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>()});
    }
  };
  // Writing MetadataGetter for method: Material::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Material*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Material*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
    }
  };
  // Writing MetadataGetter for method: Material::New_ctor
  // Il2CppName: .ctor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetDefaultMaterial
  // Il2CppName: GetDefaultMaterial
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)()>(&Material::GetDefaultMaterial)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetDefaultMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::GetDefaultParticleMaterial
  // Il2CppName: GetDefaultParticleMaterial
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)()>(&Material::GetDefaultParticleMaterial)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetDefaultParticleMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::GetDefaultLineMaterial
  // Il2CppName: GetDefaultLineMaterial
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)()>(&Material::GetDefaultLineMaterial)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetDefaultLineMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::get_shader
  // Il2CppName: get_shader
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Shader* (Material::*)()>(&Material::get_shader)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_shader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_shader
  // Il2CppName: set_shader
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Shader*)>(&Material::set_shader)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_shader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_color
  // Il2CppName: get_color
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Material::*)()>(&Material::get_color)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_color
  // Il2CppName: set_color
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Color)>(&Material::set_color)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_mainTexture
  // Il2CppName: get_mainTexture
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Material::*)()>(&Material::get_mainTexture)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_mainTexture
  // Il2CppName: set_mainTexture
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Texture*)>(&Material::set_mainTexture)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_mainTextureOffset
  // Il2CppName: get_mainTextureOffset
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)()>(&Material::get_mainTextureOffset)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_mainTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_mainTextureOffset
  // Il2CppName: set_mainTextureOffset
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Vector2)>(&Material::set_mainTextureOffset)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_mainTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_mainTextureScale
  // Il2CppName: get_mainTextureScale
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)()>(&Material::get_mainTextureScale)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_mainTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_mainTextureScale
  // Il2CppName: set_mainTextureScale
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Vector2)>(&Material::set_mainTextureScale)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_mainTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFirstPropertyNameIdByAttribute
  // Il2CppName: GetFirstPropertyNameIdByAttribute
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(UnityEngine::Rendering::ShaderPropertyFlags)>(&Material::GetFirstPropertyNameIdByAttribute)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFirstPropertyNameIdByAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShaderPropertyFlags>()});
    }
  };
  // Writing MetadataGetter for method: Material::HasProperty
  // Il2CppName: HasProperty
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(int)>(&Material::HasProperty)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "HasProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::HasProperty
  // Il2CppName: HasProperty
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(::Il2CppString*)>(&Material::HasProperty)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "HasProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_renderQueue
  // Il2CppName: get_renderQueue
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)()>(&Material::get_renderQueue)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_renderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_renderQueue
  // Il2CppName: set_renderQueue
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int)>(&Material::set_renderQueue)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_renderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_rawRenderQueue
  // Il2CppName: get_rawRenderQueue
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)()>(&Material::get_rawRenderQueue)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_rawRenderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::EnableKeyword
  // Il2CppName: EnableKeyword
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*)>(&Material::EnableKeyword)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "EnableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::DisableKeyword
  // Il2CppName: DisableKeyword
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*)>(&Material::DisableKeyword)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "DisableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::IsKeywordEnabled
  // Il2CppName: IsKeywordEnabled
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(::Il2CppString*)>(&Material::IsKeywordEnabled)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "IsKeywordEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_globalIlluminationFlags
  // Il2CppName: get_globalIlluminationFlags
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::MaterialGlobalIlluminationFlags (Material::*)()>(&Material::get_globalIlluminationFlags)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_globalIlluminationFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_globalIlluminationFlags
  // Il2CppName: set_globalIlluminationFlags
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::MaterialGlobalIlluminationFlags)>(&Material::set_globalIlluminationFlags)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_globalIlluminationFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MaterialGlobalIlluminationFlags>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_doubleSidedGI
  // Il2CppName: get_doubleSidedGI
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)()>(&Material::get_doubleSidedGI)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_doubleSidedGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_doubleSidedGI
  // Il2CppName: set_doubleSidedGI
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(bool)>(&Material::set_doubleSidedGI)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_doubleSidedGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_enableInstancing
  // Il2CppName: get_enableInstancing
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)()>(&Material::get_enableInstancing)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_enableInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_enableInstancing
  // Il2CppName: set_enableInstancing
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(bool)>(&Material::set_enableInstancing)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_enableInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_passCount
  // Il2CppName: get_passCount
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)()>(&Material::get_passCount)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_passCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::SetShaderPassEnabled
  // Il2CppName: SetShaderPassEnabled
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, bool)>(&Material::SetShaderPassEnabled)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetShaderPassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetShaderPassEnabled
  // Il2CppName: GetShaderPassEnabled
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(::Il2CppString*)>(&Material::GetShaderPassEnabled)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetShaderPassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetPassName
  // Il2CppName: GetPassName
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Material::*)(int)>(&Material::GetPassName)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetPassName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::FindPass
  // Il2CppName: FindPass
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(::Il2CppString*)>(&Material::FindPass)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "FindPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetOverrideTag
  // Il2CppName: SetOverrideTag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Il2CppString*)>(&Material::SetOverrideTag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetOverrideTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTagImpl
  // Il2CppName: GetTagImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Material::*)(::Il2CppString*, bool, ::Il2CppString*)>(&Material::GetTagImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTagImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTag
  // Il2CppName: GetTag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Material::*)(::Il2CppString*, bool, ::Il2CppString*)>(&Material::GetTag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTag
  // Il2CppName: GetTag
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Material::*)(::Il2CppString*, bool)>(&Material::GetTag)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
    }
  };
  // Writing MetadataGetter for method: Material::Lerp
  // Il2CppName: Lerp
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Material*, UnityEngine::Material*, float)>(&Material::Lerp)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "Lerp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetPass
  // Il2CppName: SetPass
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(int)>(&Material::SetPass)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::CopyPropertiesFromMaterial
  // Il2CppName: CopyPropertiesFromMaterial
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Material*)>(&Material::CopyPropertiesFromMaterial)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "CopyPropertiesFromMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetShaderKeywords
  // Il2CppName: GetShaderKeywords
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (Material::*)()>(&Material::GetShaderKeywords)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetShaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::SetShaderKeywords
  // Il2CppName: SetShaderKeywords
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Array<::Il2CppString*>*)>(&Material::SetShaderKeywords)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetShaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::get_shaderKeywords
  // Il2CppName: get_shaderKeywords
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (Material::*)()>(&Material::get_shaderKeywords)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "get_shaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::set_shaderKeywords
  // Il2CppName: set_shaderKeywords
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Array<::Il2CppString*>*)>(&Material::set_shaderKeywords)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "set_shaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::ComputeCRC
  // Il2CppName: ComputeCRC
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)()>(&Material::ComputeCRC)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "ComputeCRC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::GetTexturePropertyNames
  // Il2CppName: GetTexturePropertyNames
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (Material::*)()>(&Material::GetTexturePropertyNames)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::GetTexturePropertyNameIDs
  // Il2CppName: GetTexturePropertyNameIDs
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Material::*)()>(&Material::GetTexturePropertyNameIDs)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNameIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: Material::GetTexturePropertyNamesInternal
  // Il2CppName: GetTexturePropertyNamesInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppObject*)>(&Material::GetTexturePropertyNamesInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNamesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTexturePropertyNameIDsInternal
  // Il2CppName: GetTexturePropertyNameIDsInternal
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppObject*)>(&Material::GetTexturePropertyNameIDsInternal)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNameIDsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTexturePropertyNames
  // Il2CppName: GetTexturePropertyNames
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&Material::GetTexturePropertyNames)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTexturePropertyNameIDs
  // Il2CppName: GetTexturePropertyNameIDs
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(System::Collections::Generic::List_1<int>*)>(&Material::GetTexturePropertyNameIDs)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNameIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetFloatImpl
  // Il2CppName: SetFloatImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, float)>(&Material::SetFloatImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColorImpl
  // Il2CppName: SetColorImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Color)>(&Material::SetColorImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrixImpl
  // Il2CppName: SetMatrixImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Matrix4x4)>(&Material::SetMatrixImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTextureImpl
  // Il2CppName: SetTextureImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Texture*)>(&Material::SetTextureImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetRenderTextureImpl
  // Il2CppName: SetRenderTextureImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::RenderTexture*, UnityEngine::Rendering::RenderTextureSubElement)>(&Material::SetRenderTextureImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetRenderTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::RenderTextureSubElement>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetBufferImpl
  // Il2CppName: SetBufferImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::ComputeBuffer*)>(&Material::SetBufferImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetConstantBufferImpl
  // Il2CppName: SetConstantBufferImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::ComputeBuffer*, int, int)>(&Material::SetConstantBufferImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetConstantBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFloatImpl
  // Il2CppName: GetFloatImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Material::*)(int)>(&Material::GetFloatImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColorImpl
  // Il2CppName: GetColorImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Material::*)(int)>(&Material::GetColorImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrixImpl
  // Il2CppName: GetMatrixImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Material::*)(int)>(&Material::GetMatrixImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTextureImpl
  // Il2CppName: GetTextureImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Material::*)(int)>(&Material::GetTextureImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetFloatArrayImpl
  // Il2CppName: SetFloatArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<float>*, int)>(&Material::SetFloatArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetVectorArrayImpl
  // Il2CppName: SetVectorArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Vector4>*, int)>(&Material::SetVectorArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColorArrayImpl
  // Il2CppName: SetColorArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Color>*, int)>(&Material::SetColorArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrixArrayImpl
  // Il2CppName: SetMatrixArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Matrix4x4>*, int)>(&Material::SetMatrixArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFloatArrayImpl
  // Il2CppName: GetFloatArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (Material::*)(int)>(&Material::GetFloatArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetVectorArrayImpl
  // Il2CppName: GetVectorArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (Material::*)(int)>(&Material::GetVectorArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColorArrayImpl
  // Il2CppName: GetColorArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Material::*)(int)>(&Material::GetColorArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrixArrayImpl
  // Il2CppName: GetMatrixArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (Material::*)(int)>(&Material::GetMatrixArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFloatArrayCountImpl
  // Il2CppName: GetFloatArrayCountImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetFloatArrayCountImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetVectorArrayCountImpl
  // Il2CppName: GetVectorArrayCountImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetVectorArrayCountImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColorArrayCountImpl
  // Il2CppName: GetColorArrayCountImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetColorArrayCountImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrixArrayCountImpl
  // Il2CppName: GetMatrixArrayCountImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetMatrixArrayCountImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::ExtractFloatArrayImpl
  // Il2CppName: ExtractFloatArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<float>*&)>(&Material::ExtractFloatArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*&>()});
    }
  };
  // Writing MetadataGetter for method: Material::ExtractVectorArrayImpl
  // Il2CppName: ExtractVectorArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Vector4>*&)>(&Material::ExtractVectorArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*&>()});
    }
  };
  // Writing MetadataGetter for method: Material::ExtractColorArrayImpl
  // Il2CppName: ExtractColorArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Color>*&)>(&Material::ExtractColorArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractColorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*&>()});
    }
  };
  // Writing MetadataGetter for method: Material::ExtractMatrixArrayImpl
  // Il2CppName: ExtractMatrixArrayImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Matrix4x4>*&)>(&Material::ExtractMatrixArrayImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*&>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTextureScaleAndOffsetImpl
  // Il2CppName: GetTextureScaleAndOffsetImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Material::*)(int)>(&Material::GetTextureScaleAndOffsetImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureScaleAndOffsetImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTextureOffsetImpl
  // Il2CppName: SetTextureOffsetImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2)>(&Material::SetTextureOffsetImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureOffsetImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTextureScaleImpl
  // Il2CppName: SetTextureScaleImpl
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2)>(&Material::SetTextureScaleImpl)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureScaleImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetFloatArray
  // Il2CppName: SetFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<float>*, int)>(&Material::SetFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetVectorArray
  // Il2CppName: SetVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Vector4>*, int)>(&Material::SetVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColorArray
  // Il2CppName: SetColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Color>*, int)>(&Material::SetColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrixArray
  // Il2CppName: SetMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Matrix4x4>*, int)>(&Material::SetMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::ExtractFloatArray
  // Il2CppName: ExtractFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<float>*)>(&Material::ExtractFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::ExtractVectorArray
  // Il2CppName: ExtractVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::ExtractVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::ExtractColorArray
  // Il2CppName: ExtractColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::ExtractColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::ExtractMatrixArray
  // Il2CppName: ExtractMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::ExtractMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetFloat
  // Il2CppName: SetFloat
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, float)>(&Material::SetFloat)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetFloat
  // Il2CppName: SetFloat
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, float)>(&Material::SetFloat)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetInt
  // Il2CppName: SetInt
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, int)>(&Material::SetInt)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetInt
  // Il2CppName: SetInt
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, int)>(&Material::SetInt)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColor
  // Il2CppName: SetColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Color)>(&Material::SetColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColor
  // Il2CppName: SetColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Color)>(&Material::SetColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetVector
  // Il2CppName: SetVector
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Vector4)>(&Material::SetVector)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetVector
  // Il2CppName: SetVector
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector4)>(&Material::SetVector)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrix
  // Il2CppName: SetMatrix
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Matrix4x4)>(&Material::SetMatrix)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrix
  // Il2CppName: SetMatrix
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Matrix4x4)>(&Material::SetMatrix)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTexture
  // Il2CppName: SetTexture
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Texture*)>(&Material::SetTexture)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTexture
  // Il2CppName: SetTexture
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Texture*)>(&Material::SetTexture)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTexture
  // Il2CppName: SetTexture
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::RenderTexture*, UnityEngine::Rendering::RenderTextureSubElement)>(&Material::SetTexture)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::RenderTextureSubElement>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTexture
  // Il2CppName: SetTexture
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::RenderTexture*, UnityEngine::Rendering::RenderTextureSubElement)>(&Material::SetTexture)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::RenderTextureSubElement>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetBuffer
  // Il2CppName: SetBuffer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::ComputeBuffer*)>(&Material::SetBuffer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetBuffer
  // Il2CppName: SetBuffer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::ComputeBuffer*)>(&Material::SetBuffer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetConstantBuffer
  // Il2CppName: SetConstantBuffer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::ComputeBuffer*, int, int)>(&Material::SetConstantBuffer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetConstantBuffer
  // Il2CppName: SetConstantBuffer
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::ComputeBuffer*, int, int)>(&Material::SetConstantBuffer)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetFloatArray
  // Il2CppName: SetFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<float>*)>(&Material::SetFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetFloatArray
  // Il2CppName: SetFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<float>*)>(&Material::SetFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetFloatArray
  // Il2CppName: SetFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Array<float>*)>(&Material::SetFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetFloatArray
  // Il2CppName: SetFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<float>*)>(&Material::SetFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColorArray
  // Il2CppName: SetColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::SetColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColorArray
  // Il2CppName: SetColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::SetColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColorArray
  // Il2CppName: SetColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Array<UnityEngine::Color>*)>(&Material::SetColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColorArray
  // Il2CppName: SetColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Color>*)>(&Material::SetColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetVectorArray
  // Il2CppName: SetVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::SetVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetVectorArray
  // Il2CppName: SetVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::SetVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetVectorArray
  // Il2CppName: SetVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Array<UnityEngine::Vector4>*)>(&Material::SetVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetVectorArray
  // Il2CppName: SetVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Vector4>*)>(&Material::SetVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrixArray
  // Il2CppName: SetMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::SetMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrixArray
  // Il2CppName: SetMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::SetMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrixArray
  // Il2CppName: SetMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Array<UnityEngine::Matrix4x4>*)>(&Material::SetMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrixArray
  // Il2CppName: SetMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Matrix4x4>*)>(&Material::SetMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFloat
  // Il2CppName: GetFloat
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Material::*)(::Il2CppString*)>(&Material::GetFloat)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFloat
  // Il2CppName: GetFloat
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Material::*)(int)>(&Material::GetFloat)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetInt
  // Il2CppName: GetInt
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(::Il2CppString*)>(&Material::GetInt)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetInt
  // Il2CppName: GetInt
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetInt)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColor
  // Il2CppName: GetColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Material::*)(::Il2CppString*)>(&Material::GetColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColor
  // Il2CppName: GetColor
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Material::*)(int)>(&Material::GetColor)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetVector
  // Il2CppName: GetVector
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Material::*)(::Il2CppString*)>(&Material::GetVector)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetVector
  // Il2CppName: GetVector
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Material::*)(int)>(&Material::GetVector)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrix
  // Il2CppName: GetMatrix
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Material::*)(::Il2CppString*)>(&Material::GetMatrix)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrix
  // Il2CppName: GetMatrix
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Material::*)(int)>(&Material::GetMatrix)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTexture
  // Il2CppName: GetTexture
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Material::*)(::Il2CppString*)>(&Material::GetTexture)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTexture
  // Il2CppName: GetTexture
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Material::*)(int)>(&Material::GetTexture)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFloatArray
  // Il2CppName: GetFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (Material::*)(::Il2CppString*)>(&Material::GetFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFloatArray
  // Il2CppName: GetFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (Material::*)(int)>(&Material::GetFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColorArray
  // Il2CppName: GetColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Material::*)(::Il2CppString*)>(&Material::GetColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColorArray
  // Il2CppName: GetColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Material::*)(int)>(&Material::GetColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetVectorArray
  // Il2CppName: GetVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (Material::*)(::Il2CppString*)>(&Material::GetVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetVectorArray
  // Il2CppName: GetVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (Material::*)(int)>(&Material::GetVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrixArray
  // Il2CppName: GetMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (Material::*)(::Il2CppString*)>(&Material::GetMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrixArray
  // Il2CppName: GetMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (Material::*)(int)>(&Material::GetMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFloatArray
  // Il2CppName: GetFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<float>*)>(&Material::GetFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetFloatArray
  // Il2CppName: GetFloatArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<float>*)>(&Material::GetFloatArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColorArray
  // Il2CppName: GetColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::GetColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColorArray
  // Il2CppName: GetColorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::GetColorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetVectorArray
  // Il2CppName: GetVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::GetVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetVectorArray
  // Il2CppName: GetVectorArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::GetVectorArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrixArray
  // Il2CppName: GetMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::GetMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrixArray
  // Il2CppName: GetMatrixArray
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::GetMatrixArray)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTextureOffset
  // Il2CppName: SetTextureOffset
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Vector2)>(&Material::SetTextureOffset)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTextureOffset
  // Il2CppName: SetTextureOffset
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2)>(&Material::SetTextureOffset)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTextureScale
  // Il2CppName: SetTextureScale
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Vector2)>(&Material::SetTextureScale)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTextureScale
  // Il2CppName: SetTextureScale
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2)>(&Material::SetTextureScale)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTextureOffset
  // Il2CppName: GetTextureOffset
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)(::Il2CppString*)>(&Material::GetTextureOffset)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTextureOffset
  // Il2CppName: GetTextureOffset
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)(int)>(&Material::GetTextureOffset)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTextureScale
  // Il2CppName: GetTextureScale
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)(::Il2CppString*)>(&Material::GetTextureScale)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTextureScale
  // Il2CppName: GetTextureScale
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)(int)>(&Material::GetTextureScale)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetColorImpl_Injected
  // Il2CppName: SetColorImpl_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Color&)>(&Material::SetColorImpl_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetMatrixImpl_Injected
  // Il2CppName: SetMatrixImpl_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Matrix4x4&)>(&Material::SetMatrixImpl_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetColorImpl_Injected
  // Il2CppName: GetColorImpl_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Color&)>(&Material::GetColorImpl_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetMatrixImpl_Injected
  // Il2CppName: GetMatrixImpl_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Matrix4x4&)>(&Material::GetMatrixImpl_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
    }
  };
  // Writing MetadataGetter for method: Material::GetTextureScaleAndOffsetImpl_Injected
  // Il2CppName: GetTextureScaleAndOffsetImpl_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector4&)>(&Material::GetTextureScaleAndOffsetImpl_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureScaleAndOffsetImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTextureOffsetImpl_Injected
  // Il2CppName: SetTextureOffsetImpl_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2&)>(&Material::SetTextureOffsetImpl_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureOffsetImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
    }
  };
  // Writing MetadataGetter for method: Material::SetTextureScaleImpl_Injected
  // Il2CppName: SetTextureScaleImpl_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2&)>(&Material::SetTextureScaleImpl_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureScaleImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Material*, "UnityEngine", "Material");
