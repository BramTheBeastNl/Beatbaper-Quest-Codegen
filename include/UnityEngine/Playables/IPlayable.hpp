// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Playables
namespace UnityEngine::Playables {
  // Forward declaring type: PlayableHandle
  struct PlayableHandle;
}
// Completed forward declares
// Type namespace: UnityEngine.Playables
namespace UnityEngine::Playables {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Playables.IPlayable
  class IPlayable {
    public:
    // Creating value type constructor for type: IPlayable
    IPlayable() noexcept {}
    // public UnityEngine.Playables.PlayableHandle GetHandle()
    // Offset: 0xFFFFFFFF
    UnityEngine::Playables::PlayableHandle GetHandle();
  }; // UnityEngine.Playables.IPlayable
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Playables::IPlayable*, "UnityEngine.Playables", "IPlayable");
// Writing includes for template specializations
// Writing MetadataGetter for method: UnityEngine::Playables::IPlayable::GetHandle
// Il2CppName: GetHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Playables::PlayableHandle (UnityEngine::Playables::IPlayable::*)()>(&UnityEngine::Playables::IPlayable::GetHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Playables::IPlayable*), "GetHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
