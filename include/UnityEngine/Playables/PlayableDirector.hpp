// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: UnityEngine.IExposedPropertyTable
#include "UnityEngine/IExposedPropertyTable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine::Playables
namespace UnityEngine::Playables {
  // Forward declaring type: DirectorWrapMode
  struct DirectorWrapMode;
  // Forward declaring type: PlayableAsset
  class PlayableAsset;
  // Forward declaring type: PlayableGraph
  struct PlayableGraph;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: ScriptableObject
  class ScriptableObject;
  // Forward declaring type: PropertyName
  struct PropertyName;
}
// Completed forward declares
// Type namespace: UnityEngine.Playables
namespace UnityEngine::Playables {
  // Autogenerated type: UnityEngine.Playables.PlayableDirector
  class PlayableDirector : public UnityEngine::Behaviour, public UnityEngine::IExposedPropertyTable {
    public:
    // private System.Action`1<UnityEngine.Playables.PlayableDirector> played
    // Offset: 0x18
    System::Action_1<UnityEngine::Playables::PlayableDirector*>* played;
    // private System.Action`1<UnityEngine.Playables.PlayableDirector> paused
    // Offset: 0x20
    System::Action_1<UnityEngine::Playables::PlayableDirector*>* paused;
    // private System.Action`1<UnityEngine.Playables.PlayableDirector> stopped
    // Offset: 0x28
    System::Action_1<UnityEngine::Playables::PlayableDirector*>* stopped;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public UnityEngine.Playables.DirectorWrapMode get_extrapolationMode()
    // Offset: 0x1F7CEE4
    UnityEngine::Playables::DirectorWrapMode get_extrapolationMode();
    // public UnityEngine.Playables.PlayableAsset get_playableAsset()
    // Offset: 0x1F7CF64
    UnityEngine::Playables::PlayableAsset* get_playableAsset();
    // public UnityEngine.Playables.PlayableGraph get_playableGraph()
    // Offset: 0x1F7D04C
    UnityEngine::Playables::PlayableGraph get_playableGraph();
    // public System.Void set_time(System.Double value)
    // Offset: 0x1F7D0A8
    void set_time(double value);
    // public System.Double get_time()
    // Offset: 0x1F7D0F8
    double get_time();
    // public System.Void Evaluate()
    // Offset: 0x1F7D138
    void Evaluate();
    // public System.Void Play()
    // Offset: 0x1F7D178
    void Play();
    // public System.Void Stop()
    // Offset: 0x1F7D1B8
    void Stop();
    // public System.Void Pause()
    // Offset: 0x1F7D1F8
    void Pause();
    // public UnityEngine.Object GetGenericBinding(UnityEngine.Object key)
    // Offset: 0x1F7D2EC
    UnityEngine::Object* GetGenericBinding(UnityEngine::Object* key);
    // private UnityEngine.Playables.DirectorWrapMode GetWrapMode()
    // Offset: 0x1F7CF24
    UnityEngine::Playables::DirectorWrapMode GetWrapMode();
    // private UnityEngine.Playables.PlayableGraph GetGraphHandle()
    // Offset: 0x1F7D050
    UnityEngine::Playables::PlayableGraph GetGraphHandle();
    // private UnityEngine.ScriptableObject Internal_GetPlayableAsset()
    // Offset: 0x1F7D00C
    UnityEngine::ScriptableObject* Internal_GetPlayableAsset();
    // private System.Void SendOnPlayableDirectorPlay()
    // Offset: 0x1F7D38C
    void SendOnPlayableDirectorPlay();
    // private System.Void SendOnPlayableDirectorPause()
    // Offset: 0x1F7D3F0
    void SendOnPlayableDirectorPause();
    // private System.Void SendOnPlayableDirectorStop()
    // Offset: 0x1F7D454
    void SendOnPlayableDirectorStop();
    // private UnityEngine.Object GetReferenceValue_Injected(ref UnityEngine.PropertyName id, out System.Boolean idValid)
    // Offset: 0x1F7D294
    UnityEngine::Object* GetReferenceValue_Injected(UnityEngine::PropertyName& id, bool& idValid);
    // private System.Void GetGraphHandle_Injected(out UnityEngine.Playables.PlayableGraph ret)
    // Offset: 0x1F7D33C
    void GetGraphHandle_Injected(UnityEngine::Playables::PlayableGraph& ret);
    // public UnityEngine.Object GetReferenceValue(UnityEngine.PropertyName id, out System.Boolean idValid)
    // Offset: 0x1F7D238
    // Implemented from: UnityEngine.IExposedPropertyTable
    // Base method: UnityEngine.Object IExposedPropertyTable::GetReferenceValue(UnityEngine.PropertyName id, out System.Boolean idValid)
    UnityEngine::Object* GetReferenceValue(UnityEngine::PropertyName id, bool& idValid);
  }; // UnityEngine.Playables.PlayableDirector
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Playables::PlayableDirector*, "UnityEngine.Playables", "PlayableDirector");
#pragma pack(pop)
