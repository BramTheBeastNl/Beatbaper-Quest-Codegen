// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.TextCore
namespace UnityEngine::TextCore {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.TextCore.GlyphRect
  // [UsedByNativeCodeAttribute] Offset: DC2A1C
  struct GlyphRect/*, public System::ValueType, public System::IEquatable_1<UnityEngine::TextCore::GlyphRect>*/ {
    public:
    // [NativeNameAttribute] Offset: 0xDC310C
    // private System.Int32 m_X
    // Size: 0x4
    // Offset: 0x0
    int m_X;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [NativeNameAttribute] Offset: 0xDC3158
    // private System.Int32 m_Y
    // Size: 0x4
    // Offset: 0x4
    int m_Y;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [NativeNameAttribute] Offset: 0xDC31A4
    // private System.Int32 m_Width
    // Size: 0x4
    // Offset: 0x8
    int m_Width;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [NativeNameAttribute] Offset: 0xDC31F0
    // private System.Int32 m_Height
    // Size: 0x4
    // Offset: 0xC
    int m_Height;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: GlyphRect
    constexpr GlyphRect(int m_X_ = {}, int m_Y_ = {}, int m_Width_ = {}, int m_Height_ = {}) noexcept : m_X{m_X_}, m_Y{m_Y_}, m_Width{m_Width_}, m_Height{m_Height_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator System::IEquatable_1<UnityEngine::TextCore::GlyphRect>
    operator System::IEquatable_1<UnityEngine::TextCore::GlyphRect>() noexcept {
      return *reinterpret_cast<System::IEquatable_1<UnityEngine::TextCore::GlyphRect>*>(this);
    }
    // Get static field: static private readonly UnityEngine.TextCore.GlyphRect s_ZeroGlyphRect
    static UnityEngine::TextCore::GlyphRect _get_s_ZeroGlyphRect();
    // Set static field: static private readonly UnityEngine.TextCore.GlyphRect s_ZeroGlyphRect
    static void _set_s_ZeroGlyphRect(UnityEngine::TextCore::GlyphRect value);
    // public System.Int32 get_x()
    // Offset: 0xF22600
    int get_x();
    // public System.Int32 get_y()
    // Offset: 0xF22608
    int get_y();
    // public System.Int32 get_width()
    // Offset: 0xF22610
    int get_width();
    // public System.Int32 get_height()
    // Offset: 0xF22618
    int get_height();
    // static public UnityEngine.TextCore.GlyphRect get_zero()
    // Offset: 0x23B37F4
    static UnityEngine::TextCore::GlyphRect get_zero();
    // public System.Void .ctor(System.Int32 x, System.Int32 y, System.Int32 width, System.Int32 height)
    // Offset: 0xF22620
    // template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    // ABORTED: conflicts with another method.  GlyphRect(int x, int y, int width, int height)
    // public System.Boolean Equals(UnityEngine.TextCore.GlyphRect other)
    // Offset: 0xF2263C
    bool Equals(UnityEngine::TextCore::GlyphRect other);
    // static private System.Void .cctor()
    // Offset: 0x23B3A08
    static void _cctor();
    // public override System.Int32 GetHashCode()
    // Offset: 0xF2262C
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xF22634
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
  }; // UnityEngine.TextCore.GlyphRect
  #pragma pack(pop)
  static check_size<sizeof(GlyphRect), 12 + sizeof(int)> __UnityEngine_TextCore_GlyphRectSizeCheck;
  static_assert(sizeof(GlyphRect) == 0x10);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::TextCore::GlyphRect, "UnityEngine.TextCore", "GlyphRect");
