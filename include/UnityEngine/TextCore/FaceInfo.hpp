// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppString;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.TextCore
namespace UnityEngine::TextCore {
  // Size: 0x54
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.TextCore.FaceInfo
  // [UsedByNativeCodeAttribute] Offset: CD6D4C
  struct FaceInfo/*, public System::ValueType*/ {
    public:
    // [NativeNameAttribute] Offset: 0xCD6EA8
    // private System.String m_FamilyName
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppString* m_FamilyName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [NativeNameAttribute] Offset: 0xCD6EF4
    // private System.String m_StyleName
    // Size: 0x8
    // Offset: 0x8
    ::Il2CppString* m_StyleName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [NativeNameAttribute] Offset: 0xCD6F40
    // private System.Int32 m_PointSize
    // Size: 0x4
    // Offset: 0x10
    int m_PointSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD6F8C
    // private System.Single m_Scale
    // Size: 0x4
    // Offset: 0x14
    float m_Scale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD6FD8
    // private System.Single m_LineHeight
    // Size: 0x4
    // Offset: 0x18
    float m_LineHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD7024
    // private System.Single m_AscentLine
    // Size: 0x4
    // Offset: 0x1C
    float m_AscentLine;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD7070
    // private System.Single m_CapLine
    // Size: 0x4
    // Offset: 0x20
    float m_CapLine;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD70BC
    // private System.Single m_MeanLine
    // Size: 0x4
    // Offset: 0x24
    float m_MeanLine;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD7108
    // private System.Single m_Baseline
    // Size: 0x4
    // Offset: 0x28
    float m_Baseline;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD7154
    // private System.Single m_DescentLine
    // Size: 0x4
    // Offset: 0x2C
    float m_DescentLine;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD71A0
    // private System.Single m_SuperscriptOffset
    // Size: 0x4
    // Offset: 0x30
    float m_SuperscriptOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD71EC
    // private System.Single m_SuperscriptSize
    // Size: 0x4
    // Offset: 0x34
    float m_SuperscriptSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD7238
    // private System.Single m_SubscriptOffset
    // Size: 0x4
    // Offset: 0x38
    float m_SubscriptOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD7284
    // private System.Single m_SubscriptSize
    // Size: 0x4
    // Offset: 0x3C
    float m_SubscriptSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD72D0
    // private System.Single m_UnderlineOffset
    // Size: 0x4
    // Offset: 0x40
    float m_UnderlineOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD731C
    // private System.Single m_UnderlineThickness
    // Size: 0x4
    // Offset: 0x44
    float m_UnderlineThickness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD7368
    // private System.Single m_StrikethroughOffset
    // Size: 0x4
    // Offset: 0x48
    float m_StrikethroughOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD73B4
    // private System.Single m_StrikethroughThickness
    // Size: 0x4
    // Offset: 0x4C
    float m_StrikethroughThickness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD7400
    // private System.Single m_TabWidth
    // Size: 0x4
    // Offset: 0x50
    float m_TabWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: FaceInfo
    constexpr FaceInfo(::Il2CppString* m_FamilyName_ = {}, ::Il2CppString* m_StyleName_ = {}, int m_PointSize_ = {}, float m_Scale_ = {}, float m_LineHeight_ = {}, float m_AscentLine_ = {}, float m_CapLine_ = {}, float m_MeanLine_ = {}, float m_Baseline_ = {}, float m_DescentLine_ = {}, float m_SuperscriptOffset_ = {}, float m_SuperscriptSize_ = {}, float m_SubscriptOffset_ = {}, float m_SubscriptSize_ = {}, float m_UnderlineOffset_ = {}, float m_UnderlineThickness_ = {}, float m_StrikethroughOffset_ = {}, float m_StrikethroughThickness_ = {}, float m_TabWidth_ = {}) noexcept : m_FamilyName{m_FamilyName_}, m_StyleName{m_StyleName_}, m_PointSize{m_PointSize_}, m_Scale{m_Scale_}, m_LineHeight{m_LineHeight_}, m_AscentLine{m_AscentLine_}, m_CapLine{m_CapLine_}, m_MeanLine{m_MeanLine_}, m_Baseline{m_Baseline_}, m_DescentLine{m_DescentLine_}, m_SuperscriptOffset{m_SuperscriptOffset_}, m_SuperscriptSize{m_SuperscriptSize_}, m_SubscriptOffset{m_SubscriptOffset_}, m_SubscriptSize{m_SubscriptSize_}, m_UnderlineOffset{m_UnderlineOffset_}, m_UnderlineThickness{m_UnderlineThickness_}, m_StrikethroughOffset{m_StrikethroughOffset_}, m_StrikethroughThickness{m_StrikethroughThickness_}, m_TabWidth{m_TabWidth_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // public System.Void set_familyName(System.String value)
    // Offset: 0xE1A1F8
    void set_familyName(::Il2CppString* value);
    // public System.Void set_styleName(System.String value)
    // Offset: 0xE1A200
    void set_styleName(::Il2CppString* value);
    // public System.Int32 get_pointSize()
    // Offset: 0xE1A208
    int get_pointSize();
    // public System.Void set_pointSize(System.Int32 value)
    // Offset: 0xE1A210
    void set_pointSize(int value);
    // public System.Single get_scale()
    // Offset: 0xE1A218
    float get_scale();
    // public System.Void set_scale(System.Single value)
    // Offset: 0xE1A220
    void set_scale(float value);
    // public System.Single get_lineHeight()
    // Offset: 0xE1A228
    float get_lineHeight();
    // public System.Void set_lineHeight(System.Single value)
    // Offset: 0xE1A230
    void set_lineHeight(float value);
    // public System.Single get_ascentLine()
    // Offset: 0xE1A238
    float get_ascentLine();
    // public System.Void set_ascentLine(System.Single value)
    // Offset: 0xE1A240
    void set_ascentLine(float value);
    // public System.Single get_capLine()
    // Offset: 0xE1A248
    float get_capLine();
    // public System.Void set_capLine(System.Single value)
    // Offset: 0xE1A250
    void set_capLine(float value);
    // public System.Void set_meanLine(System.Single value)
    // Offset: 0xE1A258
    void set_meanLine(float value);
    // public System.Single get_baseline()
    // Offset: 0xE1A260
    float get_baseline();
    // public System.Void set_baseline(System.Single value)
    // Offset: 0xE1A268
    void set_baseline(float value);
    // public System.Single get_descentLine()
    // Offset: 0xE1A270
    float get_descentLine();
    // public System.Void set_descentLine(System.Single value)
    // Offset: 0xE1A278
    void set_descentLine(float value);
    // public System.Single get_superscriptOffset()
    // Offset: 0xE1A280
    float get_superscriptOffset();
    // public System.Void set_superscriptOffset(System.Single value)
    // Offset: 0xE1A288
    void set_superscriptOffset(float value);
    // public System.Single get_superscriptSize()
    // Offset: 0xE1A290
    float get_superscriptSize();
    // public System.Void set_superscriptSize(System.Single value)
    // Offset: 0xE1A298
    void set_superscriptSize(float value);
    // public System.Single get_subscriptOffset()
    // Offset: 0xE1A2A0
    float get_subscriptOffset();
    // public System.Void set_subscriptOffset(System.Single value)
    // Offset: 0xE1A2A8
    void set_subscriptOffset(float value);
    // public System.Single get_subscriptSize()
    // Offset: 0xE1A2B0
    float get_subscriptSize();
    // public System.Void set_subscriptSize(System.Single value)
    // Offset: 0xE1A2B8
    void set_subscriptSize(float value);
    // public System.Single get_underlineOffset()
    // Offset: 0xE1A2C0
    float get_underlineOffset();
    // public System.Void set_underlineOffset(System.Single value)
    // Offset: 0xE1A2C8
    void set_underlineOffset(float value);
    // public System.Single get_underlineThickness()
    // Offset: 0xE1A2D0
    float get_underlineThickness();
    // public System.Void set_underlineThickness(System.Single value)
    // Offset: 0xE1A2D8
    void set_underlineThickness(float value);
    // public System.Single get_strikethroughOffset()
    // Offset: 0xE1A2E0
    float get_strikethroughOffset();
    // public System.Void set_strikethroughOffset(System.Single value)
    // Offset: 0xE1A2E8
    void set_strikethroughOffset(float value);
    // public System.Void set_strikethroughThickness(System.Single value)
    // Offset: 0xE1A2F0
    void set_strikethroughThickness(float value);
    // public System.Single get_tabWidth()
    // Offset: 0xE1A2F8
    float get_tabWidth();
    // public System.Void set_tabWidth(System.Single value)
    // Offset: 0xE1A300
    void set_tabWidth(float value);
  }; // UnityEngine.TextCore.FaceInfo
  #pragma pack(pop)
  static check_size<sizeof(FaceInfo), 80 + sizeof(float)> __UnityEngine_TextCore_FaceInfoSizeCheck;
  static_assert(sizeof(FaceInfo) == 0x54);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::TextCore::FaceInfo, "UnityEngine.TextCore", "FaceInfo");
