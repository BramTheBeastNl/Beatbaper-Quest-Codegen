// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.GUILayoutEntry
#include "UnityEngine/GUILayoutEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GUIContent
  class GUIContent;
  // Forward declaring type: GUIStyle
  class GUIStyle;
  // Forward declaring type: GUILayoutOption
  class GUILayoutOption;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.GUIWordWrapSizer
  // [TokenAttribute] Offset: FFFFFFFF
  class GUIWordWrapSizer : public UnityEngine::GUILayoutEntry {
    public:
    // private readonly UnityEngine.GUIContent m_Content
    // Size: 0x8
    // Offset: 0x48
    UnityEngine::GUIContent* m_Content;
    // Field size check
    static_assert(sizeof(UnityEngine::GUIContent*) == 0x8);
    // private readonly System.Single m_ForcedMinHeight
    // Size: 0x4
    // Offset: 0x50
    float m_ForcedMinHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private readonly System.Single m_ForcedMaxHeight
    // Size: 0x4
    // Offset: 0x54
    float m_ForcedMaxHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: GUIWordWrapSizer
    GUIWordWrapSizer(UnityEngine::GUIContent* m_Content_ = {}, float m_ForcedMinHeight_ = {}, float m_ForcedMaxHeight_ = {}) noexcept : m_Content{m_Content_}, m_ForcedMinHeight{m_ForcedMinHeight_}, m_ForcedMaxHeight{m_ForcedMaxHeight_} {}
    // Get instance field: private readonly UnityEngine.GUIContent m_Content
    UnityEngine::GUIContent* _get_m_Content();
    // Set instance field: private readonly UnityEngine.GUIContent m_Content
    void _set_m_Content(UnityEngine::GUIContent* value);
    // Get instance field: private readonly System.Single m_ForcedMinHeight
    float _get_m_ForcedMinHeight();
    // Set instance field: private readonly System.Single m_ForcedMinHeight
    void _set_m_ForcedMinHeight(float value);
    // Get instance field: private readonly System.Single m_ForcedMaxHeight
    float _get_m_ForcedMaxHeight();
    // Set instance field: private readonly System.Single m_ForcedMaxHeight
    void _set_m_ForcedMaxHeight(float value);
    // public System.Void .ctor(UnityEngine.GUIStyle style, UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options)
    // Offset: 0x1AA980C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GUIWordWrapSizer* New_ctor(UnityEngine::GUIStyle* style, UnityEngine::GUIContent* content, ::Array<UnityEngine::GUILayoutOption*>* options) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GUIWordWrapSizer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GUIWordWrapSizer*, creationType>(style, content, options)));
    }
    // public override System.Void CalcWidth()
    // Offset: 0x1AAE71C
    // Implemented from: UnityEngine.GUILayoutEntry
    // Base method: System.Void GUILayoutEntry::CalcWidth()
    void CalcWidth();
    // public override System.Void CalcHeight()
    // Offset: 0x1AAE7E0
    // Implemented from: UnityEngine.GUILayoutEntry
    // Base method: System.Void GUILayoutEntry::CalcHeight()
    void CalcHeight();
  }; // UnityEngine.GUIWordWrapSizer
  #pragma pack(pop)
  static check_size<sizeof(GUIWordWrapSizer), 84 + sizeof(float)> __UnityEngine_GUIWordWrapSizerSizeCheck;
  static_assert(sizeof(GUIWordWrapSizer) == 0x58);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::GUIWordWrapSizer*, "UnityEngine", "GUIWordWrapSizer");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::GUIWordWrapSizer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::GUIWordWrapSizer::CalcWidth
// Il2CppName: CalcWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIWordWrapSizer::*)()>(&UnityEngine::GUIWordWrapSizer::CalcWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIWordWrapSizer*), "CalcWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GUIWordWrapSizer::CalcHeight
// Il2CppName: CalcHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GUIWordWrapSizer::*)()>(&UnityEngine::GUIWordWrapSizer::CalcHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GUIWordWrapSizer*), "CalcHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
