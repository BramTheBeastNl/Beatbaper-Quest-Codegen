// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.BoxCollider
  // [RequiredByNativeCodeAttribute] Offset: DA34EC
  // [NativeHeaderAttribute] Offset: DA34EC
  class BoxCollider : public UnityEngine::Collider {
    public:
    // Creating value type constructor for type: BoxCollider
    BoxCollider() noexcept {}
    // public System.Void set_center(UnityEngine.Vector3 value)
    // Offset: 0x23D6500
    void set_center(UnityEngine::Vector3 value);
    // public UnityEngine.Vector3 get_size()
    // Offset: 0x23D65A8
    UnityEngine::Vector3 get_size();
    // public System.Void set_size(UnityEngine.Vector3 value)
    // Offset: 0x23D6658
    void set_size(UnityEngine::Vector3 value);
    // private System.Void set_center_Injected(ref UnityEngine.Vector3 value)
    // Offset: 0x23D6558
    void set_center_Injected(UnityEngine::Vector3& value);
    // private System.Void get_size_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x23D6608
    void get_size_Injected(UnityEngine::Vector3& ret);
    // private System.Void set_size_Injected(ref UnityEngine.Vector3 value)
    // Offset: 0x23D66B0
    void set_size_Injected(UnityEngine::Vector3& value);
  }; // UnityEngine.BoxCollider
  #pragma pack(pop)
  // Writing MetadataGetter for method: BoxCollider::set_center
  // Il2CppName: set_center
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoxCollider::*)(UnityEngine::Vector3)>(&BoxCollider::set_center)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BoxCollider*), "set_center", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
    }
  };
  // Writing MetadataGetter for method: BoxCollider::get_size
  // Il2CppName: get_size
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (BoxCollider::*)()>(&BoxCollider::get_size)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BoxCollider*), "get_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: BoxCollider::set_size
  // Il2CppName: set_size
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoxCollider::*)(UnityEngine::Vector3)>(&BoxCollider::set_size)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BoxCollider*), "set_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
    }
  };
  // Writing MetadataGetter for method: BoxCollider::set_center_Injected
  // Il2CppName: set_center_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoxCollider::*)(UnityEngine::Vector3&)>(&BoxCollider::set_center_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BoxCollider*), "set_center_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
    }
  };
  // Writing MetadataGetter for method: BoxCollider::get_size_Injected
  // Il2CppName: get_size_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoxCollider::*)(UnityEngine::Vector3&)>(&BoxCollider::get_size_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BoxCollider*), "get_size_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
    }
  };
  // Writing MetadataGetter for method: BoxCollider::set_size_Injected
  // Il2CppName: set_size_Injected
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoxCollider::*)(UnityEngine::Vector3&)>(&BoxCollider::set_size_Injected)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(BoxCollider*), "set_size_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::BoxCollider*, "UnityEngine", "BoxCollider");
