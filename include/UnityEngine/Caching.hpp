// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Hash128
  struct Hash128;
  // Forward declaring type: CachedAssetBundle
  struct CachedAssetBundle;
  // Forward declaring type: Cache
  struct Cache;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Caching
  // [NativeHeaderAttribute] Offset: D8E0BC
  // [StaticAccessorAttribute] Offset: D8E0BC
  class Caching : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Caching
    Caching() noexcept {}
    // static public System.Void set_compressionEnabled(System.Boolean value)
    // Offset: 0x1B716AC
    static void set_compressionEnabled(bool value);
    // static public System.Boolean get_ready()
    // Offset: 0x1B716EC
    static bool get_ready();
    // static public System.Boolean ClearCachedVersion(System.String assetBundleName, UnityEngine.Hash128 hash)
    // Offset: 0x1B71720
    static bool ClearCachedVersion(::Il2CppString* assetBundleName, UnityEngine::Hash128 hash);
    // static System.Boolean ClearCachedVersionInternal(System.String assetBundleName, UnityEngine.Hash128 hash)
    // Offset: 0x1B717C8
    static bool ClearCachedVersionInternal(::Il2CppString* assetBundleName, UnityEngine::Hash128 hash);
    // static public System.Boolean ClearOtherCachedVersions(System.String assetBundleName, UnityEngine.Hash128 hash)
    // Offset: 0x1B71870
    static bool ClearOtherCachedVersions(::Il2CppString* assetBundleName, UnityEngine::Hash128 hash);
    // static public System.Boolean ClearAllCachedVersions(System.String assetBundleName)
    // Offset: 0x1B71984
    static bool ClearAllCachedVersions(::Il2CppString* assetBundleName);
    // static System.Boolean ClearCachedVersions(System.String assetBundleName, UnityEngine.Hash128 hash, System.Boolean keepInputVersion)
    // Offset: 0x1B7191C
    static bool ClearCachedVersions(::Il2CppString* assetBundleName, UnityEngine::Hash128 hash, bool keepInputVersion);
    // static public System.Boolean IsVersionCached(UnityEngine.CachedAssetBundle cachedBundle)
    // Offset: 0x1B71A78
    static bool IsVersionCached(UnityEngine::CachedAssetBundle cachedBundle);
    // static System.Boolean IsVersionCached(System.String url, System.String assetBundleName, UnityEngine.Hash128 hash)
    // Offset: 0x1B71B18
    static bool IsVersionCached(::Il2CppString* url, ::Il2CppString* assetBundleName, UnityEngine::Hash128 hash);
    // static public UnityEngine.Cache AddCache(System.String cachePath)
    // Offset: 0x1B71BD8
    static UnityEngine::Cache AddCache(::Il2CppString* cachePath);
    // static UnityEngine.Cache AddCache(System.String cachePath, System.Boolean isReadonly)
    // Offset: 0x1B71E98
    static UnityEngine::Cache AddCache(::Il2CppString* cachePath, bool isReadonly);
    // static public UnityEngine.Cache GetCacheByPath(System.String cachePath)
    // Offset: 0x1B71E40
    static UnityEngine::Cache GetCacheByPath(::Il2CppString* cachePath);
    // static public UnityEngine.Cache get_defaultCache()
    // Offset: 0x1B71FA0
    static UnityEngine::Cache get_defaultCache();
    // static public UnityEngine.Cache get_currentCacheForWriting()
    // Offset: 0x1B72028
    static UnityEngine::Cache get_currentCacheForWriting();
    // static public System.Void set_currentCacheForWriting(UnityEngine.Cache value)
    // Offset: 0x1B720B0
    static void set_currentCacheForWriting(UnityEngine::Cache value);
    // static private System.Boolean ClearCachedVersionInternal_Injected(System.String assetBundleName, ref UnityEngine.Hash128 hash)
    // Offset: 0x1B71820
    static bool ClearCachedVersionInternal_Injected(::Il2CppString* assetBundleName, UnityEngine::Hash128& hash);
    // static private System.Boolean ClearCachedVersions_Injected(System.String assetBundleName, ref UnityEngine.Hash128 hash, System.Boolean keepInputVersion)
    // Offset: 0x1B71A20
    static bool ClearCachedVersions_Injected(::Il2CppString* assetBundleName, UnityEngine::Hash128& hash, bool keepInputVersion);
    // static private System.Boolean IsVersionCached_Injected(System.String url, System.String assetBundleName, ref UnityEngine.Hash128 hash)
    // Offset: 0x1B71B80
    static bool IsVersionCached_Injected(::Il2CppString* url, ::Il2CppString* assetBundleName, UnityEngine::Hash128& hash);
    // static private System.Void AddCache_Injected(System.String cachePath, System.Boolean isReadonly, out UnityEngine.Cache ret)
    // Offset: 0x1B71EF8
    static void AddCache_Injected(::Il2CppString* cachePath, bool isReadonly, UnityEngine::Cache& ret);
    // static private System.Void GetCacheByPath_Injected(System.String cachePath, out UnityEngine.Cache ret)
    // Offset: 0x1B71F50
    static void GetCacheByPath_Injected(::Il2CppString* cachePath, UnityEngine::Cache& ret);
    // static private System.Void get_defaultCache_Injected(out UnityEngine.Cache ret)
    // Offset: 0x1B71FE8
    static void get_defaultCache_Injected(UnityEngine::Cache& ret);
    // static private System.Void get_currentCacheForWriting_Injected(out UnityEngine.Cache ret)
    // Offset: 0x1B72070
    static void get_currentCacheForWriting_Injected(UnityEngine::Cache& ret);
    // static private System.Void set_currentCacheForWriting_Injected(ref UnityEngine.Cache value)
    // Offset: 0x1B720F4
    static void set_currentCacheForWriting_Injected(UnityEngine::Cache& value);
  }; // UnityEngine.Caching
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Caching*, "UnityEngine", "Caching");
