// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ParticleSystemRenderer
  // [NativeHeaderAttribute] Offset: DC0C88
  // [RequireComponent] Offset: DC0C88
  // [NativeHeaderAttribute] Offset: DC0C88
  // [NativeHeaderAttribute] Offset: DC0C88
  class ParticleSystemRenderer : public UnityEngine::Renderer {
    public:
    // Creating value type constructor for type: ParticleSystemRenderer
    ParticleSystemRenderer() noexcept {}
    // public System.Int32 GetMeshes(out UnityEngine.Mesh[] meshes)
    // Offset: 0x23E9FA4
    int GetMeshes(::Array<UnityEngine::Mesh*>*& meshes);
  }; // UnityEngine.ParticleSystemRenderer
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ParticleSystemRenderer*, "UnityEngine", "ParticleSystemRenderer");
// Writing MetadataGetter for method: ParticleSystemRenderer::GetMeshes
// Il2CppName: GetMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ParticleSystemRenderer::*)(::Array<UnityEngine::Mesh*>*&)>(&ParticleSystemRenderer::GetMeshes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ParticleSystemRenderer*), "GetMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Mesh*>*&>()});
  }
};
