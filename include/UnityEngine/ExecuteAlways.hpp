// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 1)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  // Autogenerated type: UnityEngine.ExecuteAlways
  // [] Offset: FFFFFFFF
  // [UsedByNativeCodeAttribute] Offset: D4D390
  class ExecuteAlways : public System::Attribute {
    public:
    // Creating value type constructor for type: ExecuteAlways
    ExecuteAlways() noexcept {}
    // public System.Void .ctor()
    // Offset: 0x1688120
    // Implemented from: System.Attribute
    // Base method: System.Void Attribute::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ExecuteAlways* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ExecuteAlways::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ExecuteAlways*, creationType>()));
    }
  }; // UnityEngine.ExecuteAlways
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ExecuteAlways*, "UnityEngine", "ExecuteAlways");
#pragma pack(pop)
