// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x1C
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.ContactFilter2D
  // [NativeClassAttribute] Offset: CD9074
  // [NativeHeaderAttribute] Offset: CD9074
  // [RequiredByNativeCodeAttribute] Offset: CD9074
  struct ContactFilter2D/*, public System::ValueType*/ {
    public:
    // [NativeNameAttribute] Offset: 0xCD9374
    // public System.Boolean useTriggers
    // Size: 0x1
    // Offset: 0x0
    bool useTriggers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [NativeNameAttribute] Offset: 0xCD93AC
    // public System.Boolean useLayerMask
    // Size: 0x1
    // Offset: 0x1
    bool useLayerMask;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [NativeNameAttribute] Offset: 0xCD93E4
    // public System.Boolean useDepth
    // Size: 0x1
    // Offset: 0x2
    bool useDepth;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [NativeNameAttribute] Offset: 0xCD941C
    // public System.Boolean useOutsideDepth
    // Size: 0x1
    // Offset: 0x3
    bool useOutsideDepth;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [NativeNameAttribute] Offset: 0xCD9454
    // public System.Boolean useNormalAngle
    // Size: 0x1
    // Offset: 0x4
    bool useNormalAngle;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [NativeNameAttribute] Offset: 0xCD948C
    // public System.Boolean useOutsideNormalAngle
    // Size: 0x1
    // Offset: 0x5
    bool useOutsideNormalAngle;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: useOutsideNormalAngle and: layerMask
    char __padding5[0x2] = {};
    // [NativeNameAttribute] Offset: 0xCD94C4
    // public UnityEngine.LayerMask layerMask
    // Size: 0x4
    // Offset: 0x8
    UnityEngine::LayerMask layerMask;
    // Field size check
    static_assert(sizeof(UnityEngine::LayerMask) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD94FC
    // public System.Single minDepth
    // Size: 0x4
    // Offset: 0xC
    float minDepth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD9534
    // public System.Single maxDepth
    // Size: 0x4
    // Offset: 0x10
    float maxDepth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD956C
    // public System.Single minNormalAngle
    // Size: 0x4
    // Offset: 0x14
    float minNormalAngle;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [NativeNameAttribute] Offset: 0xCD95A4
    // public System.Single maxNormalAngle
    // Size: 0x4
    // Offset: 0x18
    float maxNormalAngle;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: ContactFilter2D
    constexpr ContactFilter2D(bool useTriggers_ = {}, bool useLayerMask_ = {}, bool useDepth_ = {}, bool useOutsideDepth_ = {}, bool useNormalAngle_ = {}, bool useOutsideNormalAngle_ = {}, UnityEngine::LayerMask layerMask_ = {}, float minDepth_ = {}, float maxDepth_ = {}, float minNormalAngle_ = {}, float maxNormalAngle_ = {}) noexcept : useTriggers{useTriggers_}, useLayerMask{useLayerMask_}, useDepth{useDepth_}, useOutsideDepth{useOutsideDepth_}, useNormalAngle{useNormalAngle_}, useOutsideNormalAngle{useOutsideNormalAngle_}, layerMask{layerMask_}, minDepth{minDepth_}, maxDepth{maxDepth_}, minNormalAngle{minNormalAngle_}, maxNormalAngle{maxNormalAngle_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // private System.Void CheckConsistency()
    // Offset: 0xE2EFFC
    void CheckConsistency();
    // public System.Void SetLayerMask(UnityEngine.LayerMask layerMask)
    // Offset: 0xE2F03C
    void SetLayerMask(UnityEngine::LayerMask layerMask);
    // public System.Void SetDepth(System.Single minDepth, System.Single maxDepth)
    // Offset: 0xE2F04C
    void SetDepth(float minDepth, float maxDepth);
    // static UnityEngine.ContactFilter2D CreateLegacyFilter(System.Int32 layerMask, System.Single minDepth, System.Single maxDepth)
    // Offset: 0x21AD104
    static UnityEngine::ContactFilter2D CreateLegacyFilter(int layerMask, float minDepth, float maxDepth);
    // static private System.Void CheckConsistency_Injected(ref UnityEngine.ContactFilter2D _unity_self)
    // Offset: 0x21AD068
    static void CheckConsistency_Injected(UnityEngine::ContactFilter2D& _unity_self);
  }; // UnityEngine.ContactFilter2D
  #pragma pack(pop)
  static check_size<sizeof(ContactFilter2D), 24 + sizeof(float)> __UnityEngine_ContactFilter2DSizeCheck;
  static_assert(sizeof(ContactFilter2D) == 0x1C);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ContactFilter2D, "UnityEngine", "ContactFilter2D");
