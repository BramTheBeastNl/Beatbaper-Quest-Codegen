// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rect
  struct Rect;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.RectOffset
  // [UsedByNativeCodeAttribute] Offset: D8E4F0
  // [NativeHeaderAttribute] Offset: D8E4F0
  class RectOffset : public ::Il2CppObject {
    public:
    // [VisibleToOtherModulesAttribute] Offset: 0xD93044
    // System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(System::IntPtr) == 0x8);
    // private readonly System.Object m_SourceStyle
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* m_SourceStyle;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // Creating value type constructor for type: RectOffset
    RectOffset(System::IntPtr m_Ptr_ = {}, ::Il2CppObject* m_SourceStyle_ = {}) noexcept : m_Ptr{m_Ptr_}, m_SourceStyle{m_SourceStyle_} {}
    // System.Void .ctor(System.Object sourceStyle, System.IntPtr source)
    // Offset: 0x1B27DB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RectOffset* New_ctor(::Il2CppObject* sourceStyle, System::IntPtr source) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RectOffset*, creationType>(sourceStyle, source)));
    }
    // public System.Void .ctor(System.Int32 left, System.Int32 right, System.Int32 top, System.Int32 bottom)
    // Offset: 0x1B27EE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RectOffset* New_ctor(int left, int right, int top, int bottom) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RectOffset*, creationType>(left, right, top, bottom)));
    }
    // private System.Void Destroy()
    // Offset: 0x1B27E5C
    void Destroy();
    // static private System.IntPtr InternalCreate()
    // Offset: 0x1B27D7C
    static System::IntPtr InternalCreate();
    // static private System.Void InternalDestroy(System.IntPtr ptr)
    // Offset: 0x1B28484
    static void InternalDestroy(System::IntPtr ptr);
    // public System.Int32 get_left()
    // Offset: 0x1B28384
    int get_left();
    // public System.Void set_left(System.Int32 value)
    // Offset: 0x1B28000
    void set_left(int value);
    // public System.Int32 get_right()
    // Offset: 0x1B283C4
    int get_right();
    // public System.Void set_right(System.Int32 value)
    // Offset: 0x1B28050
    void set_right(int value);
    // public System.Int32 get_top()
    // Offset: 0x1B28404
    int get_top();
    // public System.Void set_top(System.Int32 value)
    // Offset: 0x1B280A0
    void set_top(int value);
    // public System.Int32 get_bottom()
    // Offset: 0x1B28444
    int get_bottom();
    // public System.Void set_bottom(System.Int32 value)
    // Offset: 0x1B280F0
    void set_bottom(int value);
    // public System.Int32 get_horizontal()
    // Offset: 0x1B284C4
    int get_horizontal();
    // public System.Int32 get_vertical()
    // Offset: 0x1B28504
    int get_vertical();
    // public UnityEngine.Rect Remove(UnityEngine.Rect rect)
    // Offset: 0x1B28544
    UnityEngine::Rect Remove(UnityEngine::Rect rect);
    // private System.Void Remove_Injected(ref UnityEngine.Rect rect, out UnityEngine.Rect ret)
    // Offset: 0x1B285AC
    void Remove_Injected(UnityEngine::Rect& rect, UnityEngine::Rect& ret);
    // public System.Void .ctor()
    // Offset: 0x1B27D30
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RectOffset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RectOffset*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x1B27DE8
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
    // public override System.String ToString()
    // Offset: 0x1B28140
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // UnityEngine.RectOffset
  #pragma pack(pop)
  static check_size<sizeof(RectOffset), 24 + sizeof(::Il2CppObject*)> __UnityEngine_RectOffsetSizeCheck;
  static_assert(sizeof(RectOffset) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::RectOffset*, "UnityEngine", "RectOffset");
// Writing MetadataGetter for method: UnityEngine::RectOffset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::RectOffset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::RectOffset::Destroy
// Il2CppName: Destroy
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::InternalCreate
// Il2CppName: InternalCreate
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::InternalDestroy
// Il2CppName: InternalDestroy
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::get_left
// Il2CppName: get_left
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::set_left
// Il2CppName: set_left
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::get_right
// Il2CppName: get_right
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::set_right
// Il2CppName: set_right
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::get_top
// Il2CppName: get_top
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::set_top
// Il2CppName: set_top
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::get_bottom
// Il2CppName: get_bottom
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::set_bottom
// Il2CppName: set_bottom
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::get_horizontal
// Il2CppName: get_horizontal
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::get_vertical
// Il2CppName: get_vertical
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::Remove
// Il2CppName: Remove
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::Remove_Injected
// Il2CppName: Remove_Injected
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::RectOffset::Finalize
// Il2CppName: Finalize
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::RectOffset::ToString
// Il2CppName: ToString
// Cannot perform method pointer template specialization from operators!
