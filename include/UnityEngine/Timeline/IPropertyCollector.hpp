// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: AnimationClip
  class AnimationClip;
  // Forward declaring type: Component
  class Component;
  // Forward declaring type: Object
  class Object;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppString;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.Timeline
namespace UnityEngine::Timeline {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Timeline.IPropertyCollector
  class IPropertyCollector {
    public:
    // Creating value type constructor for type: IPropertyCollector
    IPropertyCollector() noexcept {}
    // public System.Void PushActiveGameObject(UnityEngine.GameObject gameObject)
    // Offset: 0xFFFFFFFF
    void PushActiveGameObject(UnityEngine::GameObject* gameObject);
    // public System.Void PopActiveGameObject()
    // Offset: 0xFFFFFFFF
    void PopActiveGameObject();
    // public System.Void AddFromClip(UnityEngine.AnimationClip clip)
    // Offset: 0xFFFFFFFF
    void AddFromClip(UnityEngine::AnimationClip* clip);
    // public System.Void AddFromClips(System.Collections.Generic.IEnumerable`1<UnityEngine.AnimationClip> clips)
    // Offset: 0xFFFFFFFF
    void AddFromClips(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips);
    // public System.Void AddFromName(System.String name)
    // Offset: 0xFFFFFFFF
    template<class T>
    void AddFromName(::Il2CppString* name) {
      static_assert(std::is_convertible_v<T, UnityEngine::Component*>);
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___generic__method, name);
    }
    // public System.Void AddFromName(System.String name)
    // Offset: 0xFFFFFFFF
    void AddFromName(::Il2CppString* name);
    // public System.Void AddFromClip(UnityEngine.GameObject obj, UnityEngine.AnimationClip clip)
    // Offset: 0xFFFFFFFF
    void AddFromClip(UnityEngine::GameObject* obj, UnityEngine::AnimationClip* clip);
    // public System.Void AddFromClips(UnityEngine.GameObject obj, System.Collections.Generic.IEnumerable`1<UnityEngine.AnimationClip> clips)
    // Offset: 0xFFFFFFFF
    void AddFromClips(UnityEngine::GameObject* obj, System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips);
    // public System.Void AddFromName(UnityEngine.GameObject obj, System.String name)
    // Offset: 0xFFFFFFFF
    template<class T>
    void AddFromName(UnityEngine::GameObject* obj, ::Il2CppString* name) {
      static_assert(std::is_convertible_v<T, UnityEngine::Component*>);
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(name)})));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___generic__method, obj, name);
    }
    // public System.Void AddFromName(UnityEngine.GameObject obj, System.String name)
    // Offset: 0xFFFFFFFF
    void AddFromName(UnityEngine::GameObject* obj, ::Il2CppString* name);
    // public System.Void AddFromName(UnityEngine.Component component, System.String name)
    // Offset: 0xFFFFFFFF
    void AddFromName(UnityEngine::Component* component, ::Il2CppString* name);
    // public System.Void AddFromComponent(UnityEngine.GameObject obj, UnityEngine.Component component)
    // Offset: 0xFFFFFFFF
    void AddFromComponent(UnityEngine::GameObject* obj, UnityEngine::Component* component);
    // public System.Void AddObjectProperties(UnityEngine.Object obj, UnityEngine.AnimationClip clip)
    // Offset: 0xFFFFFFFF
    void AddObjectProperties(UnityEngine::Object* obj, UnityEngine::AnimationClip* clip);
  }; // UnityEngine.Timeline.IPropertyCollector
  #pragma pack(pop)
  // Writing MetadataGetter for method: IPropertyCollector::PushActiveGameObject
  // Il2CppName: PushActiveGameObject
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(UnityEngine::GameObject*)>(&IPropertyCollector::PushActiveGameObject)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "PushActiveGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::PopActiveGameObject
  // Il2CppName: PopActiveGameObject
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)()>(&IPropertyCollector::PopActiveGameObject)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "PopActiveGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::AddFromClip
  // Il2CppName: AddFromClip
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(UnityEngine::AnimationClip*)>(&IPropertyCollector::AddFromClip)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "AddFromClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationClip*>()});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::AddFromClips
  // Il2CppName: AddFromClips
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>*)>(&IPropertyCollector::AddFromClips)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "AddFromClips", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>*>()});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::AddFromName
  // Il2CppName: AddFromName
  // Cannot write MetadataGetter for generic methods!
  // Writing MetadataGetter for method: IPropertyCollector::AddFromName
  // Il2CppName: AddFromName
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(::Il2CppString*)>(&IPropertyCollector::AddFromName)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "AddFromName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::AddFromClip
  // Il2CppName: AddFromClip
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(UnityEngine::GameObject*, UnityEngine::AnimationClip*)>(&IPropertyCollector::AddFromClip)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "AddFromClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationClip*>()});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::AddFromClips
  // Il2CppName: AddFromClips
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>*)>(&IPropertyCollector::AddFromClips)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "AddFromClips", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>*>()});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::AddFromName
  // Il2CppName: AddFromName
  // Cannot write MetadataGetter for generic methods!
  // Writing MetadataGetter for method: IPropertyCollector::AddFromName
  // Il2CppName: AddFromName
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(UnityEngine::GameObject*, ::Il2CppString*)>(&IPropertyCollector::AddFromName)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "AddFromName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::AddFromName
  // Il2CppName: AddFromName
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(UnityEngine::Component*, ::Il2CppString*)>(&IPropertyCollector::AddFromName)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "AddFromName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Component*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::AddFromComponent
  // Il2CppName: AddFromComponent
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(UnityEngine::GameObject*, UnityEngine::Component*)>(&IPropertyCollector::AddFromComponent)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "AddFromComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Component*>()});
    }
  };
  // Writing MetadataGetter for method: IPropertyCollector::AddObjectProperties
  // Il2CppName: AddObjectProperties
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPropertyCollector::*)(UnityEngine::Object*, UnityEngine::AnimationClip*)>(&IPropertyCollector::AddObjectProperties)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(IPropertyCollector*), "AddObjectProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationClip*>()});
    }
  };
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Timeline::IPropertyCollector*, "UnityEngine.Timeline", "IPropertyCollector");
