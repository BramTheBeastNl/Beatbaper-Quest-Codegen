// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ICurvesOwner
#include "UnityEngine/Timeline/ICurvesOwner.hpp"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Timeline
namespace UnityEngine::Timeline {
  // Skipping declaration: BlendCurveMode because it is already included!
  // Forward declaring type: TrackAsset
  class TrackAsset;
  // Skipping declaration: ClipExtrapolation because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
  // Forward declaring type: AnimationClip
  class AnimationClip;
}
// Completed forward declares
// Type namespace: UnityEngine.Timeline
namespace UnityEngine::Timeline {
  // Autogenerated type: UnityEngine.Timeline.TimelineClip
  class TimelineClip : public ::Il2CppObject, public UnityEngine::Timeline::ICurvesOwner, public UnityEngine::ISerializationCallbackReceiver {
    public:
    // Nested type: UnityEngine::Timeline::TimelineClip::Versions
    struct Versions;
    // Nested type: UnityEngine::Timeline::TimelineClip::TimelineClipUpgrade
    class TimelineClipUpgrade;
    // Nested type: UnityEngine::Timeline::TimelineClip::ClipExtrapolation
    struct ClipExtrapolation;
    // Nested type: UnityEngine::Timeline::TimelineClip::BlendCurveMode
    struct BlendCurveMode;
    // Autogenerated type: UnityEngine.Timeline.TimelineClip/ClipExtrapolation
    struct ClipExtrapolation : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: ClipExtrapolation
      constexpr ClipExtrapolation(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation None
      static UnityEngine::Timeline::TimelineClip::ClipExtrapolation _get_None();
      // Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation None
      static void _set_None(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value);
      // static field const value: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Hold
      static constexpr const int Hold = 1;
      // Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Hold
      static UnityEngine::Timeline::TimelineClip::ClipExtrapolation _get_Hold();
      // Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Hold
      static void _set_Hold(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value);
      // static field const value: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Loop
      static constexpr const int Loop = 2;
      // Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Loop
      static UnityEngine::Timeline::TimelineClip::ClipExtrapolation _get_Loop();
      // Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Loop
      static void _set_Loop(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value);
      // static field const value: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation PingPong
      static constexpr const int PingPong = 3;
      // Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation PingPong
      static UnityEngine::Timeline::TimelineClip::ClipExtrapolation _get_PingPong();
      // Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation PingPong
      static void _set_PingPong(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value);
      // static field const value: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Continue
      static constexpr const int Continue = 4;
      // Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Continue
      static UnityEngine::Timeline::TimelineClip::ClipExtrapolation _get_Continue();
      // Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Continue
      static void _set_Continue(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value);
    }; // UnityEngine.Timeline.TimelineClip/ClipExtrapolation
    // Autogenerated type: UnityEngine.Timeline.TimelineClip/BlendCurveMode
    struct BlendCurveMode : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: BlendCurveMode
      constexpr BlendCurveMode(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Auto
      static constexpr const int Auto = 0;
      // Get static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Auto
      static UnityEngine::Timeline::TimelineClip::BlendCurveMode _get_Auto();
      // Set static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Auto
      static void _set_Auto(UnityEngine::Timeline::TimelineClip::BlendCurveMode value);
      // static field const value: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Manual
      static constexpr const int Manual = 1;
      // Get static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Manual
      static UnityEngine::Timeline::TimelineClip::BlendCurveMode _get_Manual();
      // Set static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Manual
      static void _set_Manual(UnityEngine::Timeline::TimelineClip::BlendCurveMode value);
    }; // UnityEngine.Timeline.TimelineClip/BlendCurveMode
    // private System.Int32 m_Version
    // Offset: 0x10
    int m_Version;
    // private System.Double m_Start
    // Offset: 0x18
    double m_Start;
    // private System.Double m_ClipIn
    // Offset: 0x20
    double m_ClipIn;
    // private UnityEngine.Object m_Asset
    // Offset: 0x28
    UnityEngine::Object* m_Asset;
    // private System.Double m_Duration
    // Offset: 0x30
    double m_Duration;
    // private System.Double m_TimeScale
    // Offset: 0x38
    double m_TimeScale;
    // private UnityEngine.Timeline.TrackAsset m_ParentTrack
    // Offset: 0x40
    UnityEngine::Timeline::TrackAsset* m_ParentTrack;
    // private System.Double m_EaseInDuration
    // Offset: 0x48
    double m_EaseInDuration;
    // private System.Double m_EaseOutDuration
    // Offset: 0x50
    double m_EaseOutDuration;
    // private System.Double m_BlendInDuration
    // Offset: 0x58
    double m_BlendInDuration;
    // private System.Double m_BlendOutDuration
    // Offset: 0x60
    double m_BlendOutDuration;
    // private UnityEngine.AnimationCurve m_MixInCurve
    // Offset: 0x68
    UnityEngine::AnimationCurve* m_MixInCurve;
    // private UnityEngine.AnimationCurve m_MixOutCurve
    // Offset: 0x70
    UnityEngine::AnimationCurve* m_MixOutCurve;
    // private UnityEngine.Timeline.TimelineClip/BlendCurveMode m_BlendInCurveMode
    // Offset: 0x78
    UnityEngine::Timeline::TimelineClip::BlendCurveMode m_BlendInCurveMode;
    // private UnityEngine.Timeline.TimelineClip/BlendCurveMode m_BlendOutCurveMode
    // Offset: 0x7C
    UnityEngine::Timeline::TimelineClip::BlendCurveMode m_BlendOutCurveMode;
    // private System.Collections.Generic.List`1<System.String> m_ExposedParameterNames
    // Offset: 0x80
    System::Collections::Generic::List_1<::Il2CppString*>* m_ExposedParameterNames;
    // private UnityEngine.AnimationClip m_AnimationCurves
    // Offset: 0x88
    UnityEngine::AnimationClip* m_AnimationCurves;
    // private System.Boolean m_Recordable
    // Offset: 0x90
    bool m_Recordable;
    // private UnityEngine.Timeline.TimelineClip/ClipExtrapolation m_PostExtrapolationMode
    // Offset: 0x94
    UnityEngine::Timeline::TimelineClip::ClipExtrapolation m_PostExtrapolationMode;
    // private UnityEngine.Timeline.TimelineClip/ClipExtrapolation m_PreExtrapolationMode
    // Offset: 0x98
    UnityEngine::Timeline::TimelineClip::ClipExtrapolation m_PreExtrapolationMode;
    // private System.Double m_PostExtrapolationTime
    // Offset: 0xA0
    double m_PostExtrapolationTime;
    // private System.Double m_PreExtrapolationTime
    // Offset: 0xA8
    double m_PreExtrapolationTime;
    // private System.String m_DisplayName
    // Offset: 0xB0
    ::Il2CppString* m_DisplayName;
    // static field const value: static private System.Int32 k_LatestVersion
    static constexpr const int k_LatestVersion = 1;
    // Get static field: static private System.Int32 k_LatestVersion
    static int _get_k_LatestVersion();
    // Set static field: static private System.Int32 k_LatestVersion
    static void _set_k_LatestVersion(int value);
    // Get static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
    static UnityEngine::Timeline::ClipCaps _get_kDefaultClipCaps();
    // Set static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
    static void _set_kDefaultClipCaps(UnityEngine::Timeline::ClipCaps value);
    // Get static field: static public readonly System.Single kDefaultClipDurationInSeconds
    static float _get_kDefaultClipDurationInSeconds();
    // Set static field: static public readonly System.Single kDefaultClipDurationInSeconds
    static void _set_kDefaultClipDurationInSeconds(float value);
    // Get static field: static public readonly System.Double kTimeScaleMin
    static double _get_kTimeScaleMin();
    // Set static field: static public readonly System.Double kTimeScaleMin
    static void _set_kTimeScaleMin(double value);
    // Get static field: static public readonly System.Double kTimeScaleMax
    static double _get_kTimeScaleMax();
    // Set static field: static public readonly System.Double kTimeScaleMax
    static void _set_kTimeScaleMax(double value);
    // Get static field: static readonly System.String kDefaultCurvesName
    static ::Il2CppString* _get_kDefaultCurvesName();
    // Set static field: static readonly System.String kDefaultCurvesName
    static void _set_kDefaultCurvesName(::Il2CppString* value);
    // Get static field: static readonly System.Double kMinDuration
    static double _get_kMinDuration();
    // Set static field: static readonly System.Double kMinDuration
    static void _set_kMinDuration(double value);
    // Get static field: static readonly System.Double kMaxTimeValue
    static double _get_kMaxTimeValue();
    // Set static field: static readonly System.Double kMaxTimeValue
    static void _set_kMaxTimeValue(double value);
    // private System.Void UpgradeToLatestVersion()
    // Offset: 0x1629EA0
    void UpgradeToLatestVersion();
    // System.Void .ctor(UnityEngine.Timeline.TrackAsset parent)
    // Offset: 0x1629EB8
    static TimelineClip* New_ctor(UnityEngine::Timeline::TrackAsset* parent);
    // public System.Boolean get_hasPreExtrapolation()
    // Offset: 0x162A034
    bool get_hasPreExtrapolation();
    // public System.Boolean get_hasPostExtrapolation()
    // Offset: 0x162A054
    bool get_hasPostExtrapolation();
    // public System.Double get_timeScale()
    // Offset: 0x1619938
    double get_timeScale();
    // public System.Void set_timeScale(System.Double value)
    // Offset: 0x162A074
    void set_timeScale(double value);
    // public System.Double get_start()
    // Offset: 0x162A16C
    double get_start();
    // public System.Void set_start(System.Double value)
    // Offset: 0x1615F7C
    void set_start(double value);
    // public System.Void set_duration(System.Double value)
    // Offset: 0x161608C
    void set_duration(double value);
    // public System.Double get_end()
    // Offset: 0x161F520
    double get_end();
    // public System.Double get_clipIn()
    // Offset: 0x1622610
    double get_clipIn();
    // public System.Void set_clipIn(System.Double value)
    // Offset: 0x162A2DC
    void set_clipIn(double value);
    // public System.String get_displayName()
    // Offset: 0x162A3D0
    ::Il2CppString* get_displayName();
    // public System.Void set_displayName(System.String value)
    // Offset: 0x162A3D8
    void set_displayName(::Il2CppString* value);
    // public System.Double get_clipAssetDuration()
    // Offset: 0x162A3E0
    double get_clipAssetDuration();
    // System.Void set_curves(UnityEngine.AnimationClip value)
    // Offset: 0x162A4B8
    void set_curves(UnityEngine::AnimationClip* value);
    // public System.Void set_asset(UnityEngine.Object value)
    // Offset: 0x162A5CC
    void set_asset(UnityEngine::Object* value);
    // public UnityEngine.Object get_underlyingAsset()
    // Offset: 0x162A5E4
    UnityEngine::Object* get_underlyingAsset();
    // public System.Void set_underlyingAsset(UnityEngine.Object value)
    // Offset: 0x162A5EC
    void set_underlyingAsset(UnityEngine::Object* value);
    // public UnityEngine.Timeline.TrackAsset get_parentTrack()
    // Offset: 0x162A5F0
    UnityEngine::Timeline::TrackAsset* get_parentTrack();
    // public System.Void set_parentTrack(UnityEngine.Timeline.TrackAsset value)
    // Offset: 0x1629EF8
    void set_parentTrack(UnityEngine::Timeline::TrackAsset* value);
    // public System.Double get_easeInDuration()
    // Offset: 0x162A5F8
    double get_easeInDuration();
    // public System.Void set_easeInDuration(System.Double value)
    // Offset: 0x162A6B4
    void set_easeInDuration(double value);
    // public System.Double get_easeOutDuration()
    // Offset: 0x162A7AC
    double get_easeOutDuration();
    // public System.Void set_easeOutDuration(System.Double value)
    // Offset: 0x162A868
    void set_easeOutDuration(double value);
    // public System.Double get_eastOutTime()
    // Offset: 0x162A960
    double get_eastOutTime();
    // public System.Double get_easeOutTime()
    // Offset: 0x162A998
    double get_easeOutTime();
    // public System.Double get_blendInDuration()
    // Offset: 0x162A9D0
    double get_blendInDuration();
    // public System.Void set_blendInDuration(System.Double value)
    // Offset: 0x162AA08
    void set_blendInDuration(double value);
    // public System.Double get_blendOutDuration()
    // Offset: 0x162AAB0
    double get_blendOutDuration();
    // public System.Void set_blendOutDuration(System.Double value)
    // Offset: 0x162AAE8
    void set_blendOutDuration(double value);
    // public UnityEngine.Timeline.TimelineClip/BlendCurveMode get_blendInCurveMode()
    // Offset: 0x162AB90
    UnityEngine::Timeline::TimelineClip::BlendCurveMode get_blendInCurveMode();
    // public System.Void set_blendInCurveMode(UnityEngine.Timeline.TimelineClip/BlendCurveMode value)
    // Offset: 0x162AB98
    void set_blendInCurveMode(UnityEngine::Timeline::TimelineClip::BlendCurveMode value);
    // public UnityEngine.Timeline.TimelineClip/BlendCurveMode get_blendOutCurveMode()
    // Offset: 0x162ABA0
    UnityEngine::Timeline::TimelineClip::BlendCurveMode get_blendOutCurveMode();
    // public System.Void set_blendOutCurveMode(UnityEngine.Timeline.TimelineClip/BlendCurveMode value)
    // Offset: 0x162ABA8
    void set_blendOutCurveMode(UnityEngine::Timeline::TimelineClip::BlendCurveMode value);
    // public System.Boolean get_hasBlendIn()
    // Offset: 0x162ABB0
    bool get_hasBlendIn();
    // public System.Boolean get_hasBlendOut()
    // Offset: 0x162ABF4
    bool get_hasBlendOut();
    // public UnityEngine.AnimationCurve get_mixInCurve()
    // Offset: 0x162AC38
    UnityEngine::AnimationCurve* get_mixInCurve();
    // public System.Void set_mixInCurve(UnityEngine.AnimationCurve value)
    // Offset: 0x162ACF4
    void set_mixInCurve(UnityEngine::AnimationCurve* value);
    // public System.Single get_mixInPercentage()
    // Offset: 0x162ACFC
    float get_mixInPercentage();
    // public System.Double get_mixInDuration()
    // Offset: 0x162AD28
    double get_mixInDuration();
    // public UnityEngine.AnimationCurve get_mixOutCurve()
    // Offset: 0x162AD60
    UnityEngine::AnimationCurve* get_mixOutCurve();
    // public System.Void set_mixOutCurve(UnityEngine.AnimationCurve value)
    // Offset: 0x162AE1C
    void set_mixOutCurve(UnityEngine::AnimationCurve* value);
    // public System.Double get_mixOutTime()
    // Offset: 0x162AE24
    double get_mixOutTime();
    // public System.Double get_mixOutDuration()
    // Offset: 0x162AE5C
    double get_mixOutDuration();
    // public System.Single get_mixOutPercentage()
    // Offset: 0x162AE94
    float get_mixOutPercentage();
    // public System.Boolean get_recordable()
    // Offset: 0x162AEC0
    bool get_recordable();
    // System.Void set_recordable(System.Boolean value)
    // Offset: 0x162AEC8
    void set_recordable(bool value);
    // public System.Collections.Generic.List`1<System.String> get_exposedParameters()
    // Offset: 0x162AED4
    System::Collections::Generic::List_1<::Il2CppString*>* get_exposedParameters();
    // public UnityEngine.Timeline.ClipCaps get_clipCaps()
    // Offset: 0x162702C
    UnityEngine::Timeline::ClipCaps get_clipCaps();
    // System.Int32 Hash()
    // Offset: 0x162AF54
    int Hash();
    // public System.Single EvaluateMixOut(System.Double time)
    // Offset: 0x1622AA0
    float EvaluateMixOut(double time);
    // public System.Single EvaluateMixIn(System.Double time)
    // Offset: 0x1622920
    float EvaluateMixIn(double time);
    // static private UnityEngine.AnimationCurve GetDefaultMixInCurve()
    // Offset: 0x162ACDC
    static UnityEngine::AnimationCurve* GetDefaultMixInCurve();
    // static private UnityEngine.AnimationCurve GetDefaultMixOutCurve()
    // Offset: 0x162AE04
    static UnityEngine::AnimationCurve* GetDefaultMixOutCurve();
    // public System.Double ToLocalTime(System.Double time)
    // Offset: 0x1622BE8
    double ToLocalTime(double time);
    // public System.Double ToLocalTimeUnbound(System.Double time)
    // Offset: 0x162B13C
    double ToLocalTimeUnbound(double time);
    // System.Double FromLocalTimeUnbound(System.Double time)
    // Offset: 0x162B18C
    double FromLocalTimeUnbound(double time);
    // public UnityEngine.AnimationClip get_animationClip()
    // Offset: 0x162B1D4
    UnityEngine::AnimationClip* get_animationClip();
    // static private System.Double SanitizeTimeValue(System.Double value, System.Double defaultValue)
    // Offset: 0x162A174
    static double SanitizeTimeValue(double value, double defaultValue);
    // public UnityEngine.Timeline.TimelineClip/ClipExtrapolation get_postExtrapolationMode()
    // Offset: 0x161F530
    UnityEngine::Timeline::TimelineClip::ClipExtrapolation get_postExtrapolationMode();
    // System.Void set_postExtrapolationMode(UnityEngine.Timeline.TimelineClip/ClipExtrapolation value)
    // Offset: 0x16161D0
    void set_postExtrapolationMode(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value);
    // public UnityEngine.Timeline.TimelineClip/ClipExtrapolation get_preExtrapolationMode()
    // Offset: 0x162B2E0
    UnityEngine::Timeline::TimelineClip::ClipExtrapolation get_preExtrapolationMode();
    // System.Void set_preExtrapolationMode(UnityEngine.Timeline.TimelineClip/ClipExtrapolation value)
    // Offset: 0x161618C
    void set_preExtrapolationMode(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value);
    // System.Void SetPostExtrapolationTime(System.Double time)
    // Offset: 0x162B31C
    void SetPostExtrapolationTime(double time);
    // System.Void SetPreExtrapolationTime(System.Double time)
    // Offset: 0x162B324
    void SetPreExtrapolationTime(double time);
    // public System.Boolean IsExtrapolatedTime(System.Double sequenceTime)
    // Offset: 0x162B32C
    bool IsExtrapolatedTime(double sequenceTime);
    // public System.Boolean IsPreExtrapolatedTime(System.Double sequenceTime)
    // Offset: 0x16228CC
    bool IsPreExtrapolatedTime(double sequenceTime);
    // public System.Boolean IsPostExtrapolatedTime(System.Double sequenceTime)
    // Offset: 0x1622A44
    bool IsPostExtrapolatedTime(double sequenceTime);
    // public System.Double get_extrapolatedStart()
    // Offset: 0x1622410
    double get_extrapolatedStart();
    // public System.Double get_extrapolatedDuration()
    // Offset: 0x1619A28
    double get_extrapolatedDuration();
    // static private System.Double GetExtrapolatedTime(System.Double time, UnityEngine.Timeline.TimelineClip/ClipExtrapolation mode, System.Double duration)
    // Offset: 0x162B010
    static double GetExtrapolatedTime(double time, UnityEngine::Timeline::TimelineClip::ClipExtrapolation mode, double duration);
    // private System.Void UpdateDirty(System.Double oldValue, System.Double newValue)
    // Offset: 0x162A168
    void UpdateDirty(double oldValue, double newValue);
    // static private System.Void .cctor()
    // Offset: 0x162B6D4
    static void _cctor();
    // public System.Double get_duration()
    // Offset: 0x162A2D4
    // Implemented from: UnityEngine.Timeline.ICurvesOwner
    // Base method: System.Double ICurvesOwner::get_duration()
    double get_duration();
    // public UnityEngine.AnimationClip get_curves()
    // Offset: 0x162A4B0
    // Implemented from: UnityEngine.Timeline.ICurvesOwner
    // Base method: UnityEngine.AnimationClip ICurvesOwner::get_curves()
    UnityEngine::AnimationClip* get_curves();
    // private System.String UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName()
    // Offset: 0x162A4C0
    // Implemented from: UnityEngine.Timeline.ICurvesOwner
    // Base method: System.String ICurvesOwner::get_defaultCurvesName()
    ::Il2CppString* UnityEngine_Timeline_ICurvesOwner_get_defaultCurvesName();
    // public System.Boolean get_hasCurves()
    // Offset: 0x162A528
    // Implemented from: UnityEngine.Timeline.ICurvesOwner
    // Base method: System.Boolean ICurvesOwner::get_hasCurves()
    bool get_hasCurves();
    // public UnityEngine.Object get_asset()
    // Offset: 0x162A5C4
    // Implemented from: UnityEngine.Timeline.ICurvesOwner
    // Base method: UnityEngine.Object ICurvesOwner::get_asset()
    UnityEngine::Object* get_asset();
    // Creating proxy method: UnityEngine_Timeline_ICurvesOwner_get_asset
    // Maps to method: get_asset
    UnityEngine::Object* UnityEngine_Timeline_ICurvesOwner_get_asset();
    // private UnityEngine.Object UnityEngine.Timeline.ICurvesOwner.get_assetOwner()
    // Offset: 0x162A5D4
    // Implemented from: UnityEngine.Timeline.ICurvesOwner
    // Base method: UnityEngine.Object ICurvesOwner::get_assetOwner()
    UnityEngine::Object* UnityEngine_Timeline_ICurvesOwner_get_assetOwner();
    // private UnityEngine.Timeline.TrackAsset UnityEngine.Timeline.ICurvesOwner.get_targetTrack()
    // Offset: 0x162A5DC
    // Implemented from: UnityEngine.Timeline.ICurvesOwner
    // Base method: UnityEngine.Timeline.TrackAsset ICurvesOwner::get_targetTrack()
    UnityEngine::Timeline::TrackAsset* UnityEngine_Timeline_ICurvesOwner_get_targetTrack();
    // public System.Void CreateCurves(System.String curvesClipName)
    // Offset: 0x162B3B8
    // Implemented from: UnityEngine.Timeline.ICurvesOwner
    // Base method: System.Void ICurvesOwner::CreateCurves(System.String curvesClipName)
    void CreateCurves(::Il2CppString* curvesClipName);
    // private System.Void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
    // Offset: 0x162B4AC
    // Implemented from: UnityEngine.ISerializationCallbackReceiver
    // Base method: System.Void ISerializationCallbackReceiver::OnBeforeSerialize()
    void UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize();
    // private System.Void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
    // Offset: 0x162B4B8
    // Implemented from: UnityEngine.ISerializationCallbackReceiver
    // Base method: System.Void ISerializationCallbackReceiver::OnAfterDeserialize()
    void UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize();
    // public override System.String ToString()
    // Offset: 0x162B4D0
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // UnityEngine.Timeline.TimelineClip
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Timeline::TimelineClip*, "UnityEngine.Timeline", "TimelineClip");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Timeline::TimelineClip::ClipExtrapolation, "UnityEngine.Timeline", "TimelineClip/ClipExtrapolation");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Timeline::TimelineClip::BlendCurveMode, "UnityEngine.Timeline", "TimelineClip/BlendCurveMode");
#pragma pack(pop)
