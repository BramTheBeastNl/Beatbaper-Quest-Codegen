// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector4
  struct Vector4;
  // Forward declaring type: Sprite
  class Sprite;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: UnityEngine.Sprites
namespace UnityEngine::Sprites {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Sprites.DataUtility
  class DataUtility : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: DataUtility
    DataUtility() noexcept {}
    // static public UnityEngine.Vector4 GetInnerUV(UnityEngine.Sprite sprite)
    // Offset: 0x23175BC
    static UnityEngine::Vector4 GetInnerUV(UnityEngine::Sprite* sprite);
    // static public UnityEngine.Vector4 GetOuterUV(UnityEngine.Sprite sprite)
    // Offset: 0x23175D4
    static UnityEngine::Vector4 GetOuterUV(UnityEngine::Sprite* sprite);
    // static public UnityEngine.Vector4 GetPadding(UnityEngine.Sprite sprite)
    // Offset: 0x23175EC
    static UnityEngine::Vector4 GetPadding(UnityEngine::Sprite* sprite);
    // static public UnityEngine.Vector2 GetMinSize(UnityEngine.Sprite sprite)
    // Offset: 0x2317604
    static UnityEngine::Vector2 GetMinSize(UnityEngine::Sprite* sprite);
  }; // UnityEngine.Sprites.DataUtility
  #pragma pack(pop)
  // Writing MetadataGetter for method: DataUtility::GetInnerUV
  // Il2CppName: GetInnerUV
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(UnityEngine::Sprite*)>(&DataUtility::GetInnerUV)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(DataUtility*), "GetInnerUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
    }
  };
  // Writing MetadataGetter for method: DataUtility::GetOuterUV
  // Il2CppName: GetOuterUV
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(UnityEngine::Sprite*)>(&DataUtility::GetOuterUV)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(DataUtility*), "GetOuterUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
    }
  };
  // Writing MetadataGetter for method: DataUtility::GetPadding
  // Il2CppName: GetPadding
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(UnityEngine::Sprite*)>(&DataUtility::GetPadding)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(DataUtility*), "GetPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
    }
  };
  // Writing MetadataGetter for method: DataUtility::GetMinSize
  // Il2CppName: GetMinSize
  template<>
  struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)(UnityEngine::Sprite*)>(&DataUtility::GetMinSize)> {
    const MethodInfo* get() {
      return ::il2cpp_utils::FindMethod(classof(DataUtility*), "GetMinSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
    }
  };
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Sprites::DataUtility*, "UnityEngine.Sprites", "DataUtility");
