// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppString;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x4
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.LayerMask
  // [NativeHeaderAttribute] Offset: D90318
  // [RequiredByNativeCodeAttribute] Offset: D90318
  // [NativeHeaderAttribute] Offset: D90318
  // [NativeClassAttribute] Offset: D90318
  struct LayerMask/*, public System::ValueType*/ {
    public:
    // [NativeNameAttribute] Offset: 0xD93BE4
    // private System.Int32 m_Mask
    // Size: 0x4
    // Offset: 0x0
    int m_Mask;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: LayerMask
    constexpr LayerMask(int m_Mask_ = {}) noexcept : m_Mask{m_Mask_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return m_Mask;
    }
    // public System.Int32 get_value()
    // Offset: 0xF08030
    int get_value();
    // public System.Void set_value(System.Int32 value)
    // Offset: 0xF08038
    void set_value(int value);
    // static public System.String LayerToName(System.Int32 layer)
    // Offset: 0x1C0A294
    static ::Il2CppString* LayerToName(int layer);
    // static public System.Int32 NameToLayer(System.String layerName)
    // Offset: 0x1C0A2D4
    static int NameToLayer(::Il2CppString* layerName);
  }; // UnityEngine.LayerMask
  #pragma pack(pop)
  static check_size<sizeof(LayerMask), 0 + sizeof(int)> __UnityEngine_LayerMaskSizeCheck;
  static_assert(sizeof(LayerMask) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::LayerMask, "UnityEngine", "LayerMask");
// Writing MetadataGetter for method: UnityEngine::LayerMask::get_value
// Il2CppName: get_value
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::LayerMask::set_value
// Il2CppName: set_value
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::LayerMask::LayerToName
// Il2CppName: LayerToName
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::LayerMask::NameToLayer
// Il2CppName: NameToLayer
// Cannot perform method pointer template specialization from operators!
