// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GameLift.IGameLiftMessage
#include "GameLift/IGameLiftMessage.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: GameLift
namespace GameLift {
  // Forward declaring type: IGameLiftClientToServerMessage
  class IGameLiftClientToServerMessage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(GameLift::IGameLiftClientToServerMessage);
DEFINE_IL2CPP_ARG_TYPE(GameLift::IGameLiftClientToServerMessage*, "GameLift", "IGameLiftClientToServerMessage");
// Type namespace: GameLift
namespace GameLift {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: GameLift.IGameLiftClientToServerMessage
  // [TokenAttribute] Offset: FFFFFFFF
  class IGameLiftClientToServerMessage/*, public GameLift::IGameLiftMessage*/ {
    public:
    // Creating interface conversion operator: operator GameLift::IGameLiftMessage
    operator GameLift::IGameLiftMessage() noexcept {
      return *reinterpret_cast<GameLift::IGameLiftMessage*>(this);
    }
    // public System.String get_userId()
    // Offset: 0xFFFFFFFF
    ::StringW get_userId();
    // public System.String get_userName()
    // Offset: 0xFFFFFFFF
    ::StringW get_userName();
  }; // GameLift.IGameLiftClientToServerMessage
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GameLift::IGameLiftClientToServerMessage::get_userId
// Il2CppName: get_userId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GameLift::IGameLiftClientToServerMessage::*)()>(&GameLift::IGameLiftClientToServerMessage::get_userId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameLift::IGameLiftClientToServerMessage*), "get_userId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameLift::IGameLiftClientToServerMessage::get_userName
// Il2CppName: get_userName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GameLift::IGameLiftClientToServerMessage::*)()>(&GameLift::IGameLiftClientToServerMessage::get_userName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameLift::IGameLiftClientToServerMessage*), "get_userName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
