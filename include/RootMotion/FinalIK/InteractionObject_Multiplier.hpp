// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionObject
#include "RootMotion/FinalIK/InteractionObject.hpp"
// Completed includes
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.InteractionObject/Multiplier
  class InteractionObject::Multiplier : public ::Il2CppObject {
    public:
    // public RootMotion.FinalIK.InteractionObject/WeightCurve/Type curve
    // Offset: 0x10
    RootMotion::FinalIK::InteractionObject::WeightCurve::Type curve;
    // public System.Single multiplier
    // Offset: 0x14
    float multiplier;
    // public RootMotion.FinalIK.InteractionObject/WeightCurve/Type result
    // Offset: 0x18
    RootMotion::FinalIK::InteractionObject::WeightCurve::Type result;
    // public System.Single GetValue(RootMotion.FinalIK.InteractionObject/WeightCurve weightCurve, System.Single timer)
    // Offset: 0x17EBA20
    float GetValue(RootMotion::FinalIK::InteractionObject::WeightCurve* weightCurve, float timer);
    // public System.Void .ctor()
    // Offset: 0x17EBED4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static InteractionObject::Multiplier* New_ctor();
  }; // RootMotion.FinalIK.InteractionObject/Multiplier
  check_size<sizeof(InteractionObject::Multiplier), 24 + sizeof(RootMotion::FinalIK::InteractionObject::WeightCurve::Type) + ((24 + sizeof(RootMotion::FinalIK::InteractionObject::WeightCurve::Type)) % 8 != 0 ? (8 - (24 + sizeof(RootMotion::FinalIK::InteractionObject::WeightCurve::Type)) % 8) : 0)> __RootMotion_FinalIK_InteractionObject_MultiplierSizeCheck;
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::InteractionObject::Multiplier*, "RootMotion.FinalIK", "InteractionObject/Multiplier");
#pragma pack(pop)
