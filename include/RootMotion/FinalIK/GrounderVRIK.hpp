// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.Grounder
#include "RootMotion/FinalIK/Grounder.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR
#include "RootMotion/FinalIK/IKSolverVR.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Skipping declaration: VRIK because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: RootMotion.FinalIK.GrounderVRIK
  // [HelpURLAttribute] Offset: D11964
  // [AddComponentMenu] Offset: D11964
  class GrounderVRIK : public RootMotion::FinalIK::Grounder {
    public:
    // Writing base type padding for base size: 0x39 to desired offset: 0x40
    char ___base_padding[0x7] = {};
    // [TooltipAttribute] Offset: 0xD130F0
    // public RootMotion.FinalIK.VRIK ik
    // Size: 0x8
    // Offset: 0x40
    RootMotion::FinalIK::VRIK* ik;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::VRIK*) == 0x8);
    // private UnityEngine.Transform[] feet
    // Size: 0x8
    // Offset: 0x48
    ::Array<UnityEngine::Transform*>* feet;
    // Field size check
    static_assert(sizeof(::Array<UnityEngine::Transform*>*) == 0x8);
    // Creating value type constructor for type: GrounderVRIK
    GrounderVRIK(RootMotion::FinalIK::VRIK* ik_ = {}, ::Array<UnityEngine::Transform*>* feet_ = {}) noexcept : ik{ik_}, feet{feet_} {}
    // private System.Void OpenTutorial()
    // Offset: 0x1A625AC
    void OpenTutorial();
    // private System.Boolean IsReadyToInitiate()
    // Offset: 0x1A626A8
    bool IsReadyToInitiate();
    // private System.Void Update()
    // Offset: 0x1A62740
    void Update();
    // private System.Void Initiate()
    // Offset: 0x1A627F4
    void Initiate();
    // private System.Void OnSolverUpdate()
    // Offset: 0x1A629F4
    void OnSolverUpdate();
    // private System.Void SetLegIK(RootMotion.FinalIK.IKSolverVR/PositionOffset positionOffset, UnityEngine.Transform bone, RootMotion.FinalIK.Grounding/Leg leg)
    // Offset: 0x1A62C88
    void SetLegIK(RootMotion::FinalIK::IKSolverVR::PositionOffset positionOffset, UnityEngine::Transform* bone, RootMotion::FinalIK::Grounding::Leg* leg);
    // private System.Void OnPostSolverUpdate()
    // Offset: 0x1A62D90
    void OnPostSolverUpdate();
    // private System.Void OnDrawGizmosSelected()
    // Offset: 0x1A62F90
    void OnDrawGizmosSelected();
    // private System.Void OnDestroy()
    // Offset: 0x1A630C8
    void OnDestroy();
    // protected override System.Void OpenUserManual()
    // Offset: 0x1A625F8
    // Implemented from: RootMotion.FinalIK.Grounder
    // Base method: System.Void Grounder::OpenUserManual()
    void OpenUserManual();
    // protected override System.Void OpenScriptReference()
    // Offset: 0x1A62644
    // Implemented from: RootMotion.FinalIK.Grounder
    // Base method: System.Void Grounder::OpenScriptReference()
    void OpenScriptReference();
    // public override System.Void ResetPosition()
    // Offset: 0x1A62690
    // Implemented from: RootMotion.FinalIK.Grounder
    // Base method: System.Void Grounder::ResetPosition()
    void ResetPosition();
    // public System.Void .ctor()
    // Offset: 0x1A63228
    // Implemented from: RootMotion.FinalIK.Grounder
    // Base method: System.Void Grounder::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GrounderVRIK* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::GrounderVRIK::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GrounderVRIK*, creationType>()));
    }
  }; // RootMotion.FinalIK.GrounderVRIK
  #pragma pack(pop)
  static check_size<sizeof(GrounderVRIK), 72 + sizeof(::Array<UnityEngine::Transform*>*)> __RootMotion_FinalIK_GrounderVRIKSizeCheck;
  static_assert(sizeof(GrounderVRIK) == 0x50);
}
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::GrounderVRIK*, "RootMotion.FinalIK", "GrounderVRIK");
