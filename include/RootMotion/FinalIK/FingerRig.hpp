// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.SolverManager
#include "RootMotion/SolverManager.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: Finger
  class Finger;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.FingerRig
  class FingerRig : public RootMotion::SolverManager {
    public:
    // public System.Single weight
    // Offset: 0x34
    float weight;
    // public RootMotion.FinalIK.Finger[] fingers
    // Offset: 0x38
    ::Array<RootMotion::FinalIK::Finger*>* fingers;
    // private System.Boolean <initiated>k__BackingField
    // Offset: 0x40
    bool initiated;
    // public System.Boolean get_initiated()
    // Offset: 0x1369B64
    bool get_initiated();
    // private System.Void set_initiated(System.Boolean value)
    // Offset: 0x1369B6C
    void set_initiated(bool value);
    // public System.Boolean IsValid(System.String errorMessage)
    // Offset: 0x1369B78
    bool IsValid(::CsString*& errorMessage);
    // public System.Void AutoDetect()
    // Offset: 0x1369C04
    void AutoDetect();
    // public System.Void AddFinger(UnityEngine.Transform bone1, UnityEngine.Transform bone2, UnityEngine.Transform bone3, UnityEngine.Transform tip, UnityEngine.Transform target)
    // Offset: 0x1369F74
    void AddFinger(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3, UnityEngine::Transform* tip, UnityEngine::Transform* target);
    // public System.Void RemoveFinger(System.Int32 index)
    // Offset: 0x136A134
    void RemoveFinger(int index);
    // private System.Void AddChildrenRecursive(UnityEngine.Transform parent, UnityEngine.Transform[] array)
    // Offset: 0x1369E64
    void AddChildrenRecursive(UnityEngine::Transform* parent, ::Array<UnityEngine::Transform*>*& array);
    // public System.Void UpdateFingerSolvers()
    // Offset: 0x136A380
    void UpdateFingerSolvers();
    // public System.Void FixFingerTransforms()
    // Offset: 0x136A3FC
    void FixFingerTransforms();
    // public System.Void StoreDefaultLocalState()
    // Offset: 0x136A474
    void StoreDefaultLocalState();
    // protected override System.Void InitiateSolver()
    // Offset: 0x136A2B8
    // Implemented from: RootMotion.SolverManager
    // Base method: System.Void SolverManager::InitiateSolver()
    void InitiateSolver();
    // protected override System.Void UpdateSolver()
    // Offset: 0x136A4E0
    // Implemented from: RootMotion.SolverManager
    // Base method: System.Void SolverManager::UpdateSolver()
    void UpdateSolver();
    // protected override System.Void FixTransforms()
    // Offset: 0x136A4E4
    // Implemented from: RootMotion.SolverManager
    // Base method: System.Void SolverManager::FixTransforms()
    void FixTransforms();
    // public System.Void .ctor()
    // Offset: 0x136A4F8
    // Implemented from: RootMotion.SolverManager
    // Base method: System.Void SolverManager::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static FingerRig* New_ctor();
  }; // RootMotion.FinalIK.FingerRig
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::FingerRig*, "RootMotion.FinalIK", "FingerRig");
#pragma pack(pop)
