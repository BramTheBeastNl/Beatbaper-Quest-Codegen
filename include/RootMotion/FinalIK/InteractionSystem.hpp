// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: RootMotion.FinalIK.InteractionTrigger
#include "RootMotion/FinalIK/InteractionTrigger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: FullBodyBipedIK
  class FullBodyBipedIK;
  // Forward declaring type: InteractionLookAt
  class InteractionLookAt;
  // Forward declaring type: InteractionEffector
  class InteractionEffector;
  // Forward declaring type: FullBodyBipedEffector
  struct FullBodyBipedEffector;
  // Forward declaring type: InteractionObject
  class InteractionObject;
  // Forward declaring type: InteractionTarget
  class InteractionTarget;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Size: 0xF0
  #pragma pack(push, 1)
  // Autogenerated type: RootMotion.FinalIK.InteractionSystem
  // [] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: D11E1C
  // [AddComponentMenu] Offset: D11E1C
  class InteractionSystem : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: RootMotion::FinalIK::InteractionSystem::InteractionDelegate
    class InteractionDelegate;
    // Nested type: RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate
    class InteractionEventDelegate;
    // [TooltipAttribute] Offset: 0xD14684
    // public System.String targetTag
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* targetTag;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [TooltipAttribute] Offset: 0xD146BC
    // public System.Single fadeInTime
    // Size: 0x4
    // Offset: 0x20
    float fadeInTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0xD146F4
    // public System.Single speed
    // Size: 0x4
    // Offset: 0x24
    float speed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0xD1472C
    // public System.Single resetToDefaultsSpeed
    // Size: 0x4
    // Offset: 0x28
    float resetToDefaultsSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: resetToDefaultsSpeed and: characterCollider
    char __padding3[0x4] = {};
    // [HeaderAttribute] Offset: 0xD14764
    // [TooltipAttribute] Offset: 0xD14764
    // [FormerlySerializedAsAttribute] Offset: 0xD14764
    // public UnityEngine.Collider characterCollider
    // Size: 0x8
    // Offset: 0x30
    UnityEngine::Collider* characterCollider;
    // Field size check
    static_assert(sizeof(UnityEngine::Collider*) == 0x8);
    // [TooltipAttribute] Offset: 0xD147E8
    // [FormerlySerializedAsAttribute] Offset: 0xD147E8
    // public UnityEngine.Transform FPSCamera
    // Size: 0x8
    // Offset: 0x38
    UnityEngine::Transform* FPSCamera;
    // Field size check
    static_assert(sizeof(UnityEngine::Transform*) == 0x8);
    // [TooltipAttribute] Offset: 0xD14848
    // public UnityEngine.LayerMask camRaycastLayers
    // Size: 0x4
    // Offset: 0x40
    UnityEngine::LayerMask camRaycastLayers;
    // Field size check
    static_assert(sizeof(UnityEngine::LayerMask) == 0x4);
    // [TooltipAttribute] Offset: 0xD14880
    // public System.Single camRaycastDistance
    // Size: 0x4
    // Offset: 0x44
    float camRaycastDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xD148B8
    // private System.Collections.Generic.List`1<RootMotion.FinalIK.InteractionTrigger> <triggersInRange>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>* triggersInRange;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>*) == 0x8);
    // private System.Collections.Generic.List`1<RootMotion.FinalIK.InteractionTrigger> inContact
    // Size: 0x8
    // Offset: 0x50
    System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>* inContact;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>*) == 0x8);
    // private System.Collections.Generic.List`1<System.Int32> bestRangeIndexes
    // Size: 0x8
    // Offset: 0x58
    System::Collections::Generic::List_1<int>* bestRangeIndexes;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<int>*) == 0x8);
    // public RootMotion.FinalIK.InteractionSystem/InteractionDelegate OnInteractionStart
    // Size: 0x8
    // Offset: 0x60
    RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionStart;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::InteractionSystem::InteractionDelegate*) == 0x8);
    // public RootMotion.FinalIK.InteractionSystem/InteractionDelegate OnInteractionPause
    // Size: 0x8
    // Offset: 0x68
    RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionPause;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::InteractionSystem::InteractionDelegate*) == 0x8);
    // public RootMotion.FinalIK.InteractionSystem/InteractionDelegate OnInteractionPickUp
    // Size: 0x8
    // Offset: 0x70
    RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionPickUp;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::InteractionSystem::InteractionDelegate*) == 0x8);
    // public RootMotion.FinalIK.InteractionSystem/InteractionDelegate OnInteractionResume
    // Size: 0x8
    // Offset: 0x78
    RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionResume;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::InteractionSystem::InteractionDelegate*) == 0x8);
    // public RootMotion.FinalIK.InteractionSystem/InteractionDelegate OnInteractionStop
    // Size: 0x8
    // Offset: 0x80
    RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionStop;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::InteractionSystem::InteractionDelegate*) == 0x8);
    // public RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate OnInteractionEvent
    // Size: 0x8
    // Offset: 0x88
    RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate* OnInteractionEvent;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate*) == 0x8);
    // public UnityEngine.RaycastHit raycastHit
    // Size: 0x2C
    // Offset: 0x90
    UnityEngine::RaycastHit raycastHit;
    // Field size check
    static_assert(sizeof(UnityEngine::RaycastHit) == 0x2C);
    // Padding between fields: raycastHit and: fullBody
    char __padding17[0x4] = {};
    // [SpaceAttribute] Offset: 0xD148C8
    // [TooltipAttribute] Offset: 0xD148C8
    // private RootMotion.FinalIK.FullBodyBipedIK fullBody
    // Size: 0x8
    // Offset: 0xC0
    RootMotion::FinalIK::FullBodyBipedIK* fullBody;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::FullBodyBipedIK*) == 0x8);
    // [TooltipAttribute] Offset: 0xD14928
    // public RootMotion.FinalIK.InteractionLookAt lookAt
    // Size: 0x8
    // Offset: 0xC8
    RootMotion::FinalIK::InteractionLookAt* lookAt;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::InteractionLookAt*) == 0x8);
    // private RootMotion.FinalIK.InteractionEffector[] interactionEffectors
    // Size: 0x8
    // Offset: 0xD0
    ::Array<RootMotion::FinalIK::InteractionEffector*>* interactionEffectors;
    // Field size check
    static_assert(sizeof(::Array<RootMotion::FinalIK::InteractionEffector*>*) == 0x8);
    // private System.Boolean initiated
    // Size: 0x1
    // Offset: 0xD8
    bool initiated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: initiated and: lastCollider
    char __padding21[0x7] = {};
    // private UnityEngine.Collider lastCollider
    // Size: 0x8
    // Offset: 0xE0
    UnityEngine::Collider* lastCollider;
    // Field size check
    static_assert(sizeof(UnityEngine::Collider*) == 0x8);
    // private UnityEngine.Collider c
    // Size: 0x8
    // Offset: 0xE8
    UnityEngine::Collider* c;
    // Field size check
    static_assert(sizeof(UnityEngine::Collider*) == 0x8);
    // Creating value type constructor for type: InteractionSystem
    InteractionSystem(::Il2CppString* targetTag_ = {}, float fadeInTime_ = {}, float speed_ = {}, float resetToDefaultsSpeed_ = {}, UnityEngine::Collider* characterCollider_ = {}, UnityEngine::Transform* FPSCamera_ = {}, UnityEngine::LayerMask camRaycastLayers_ = {}, float camRaycastDistance_ = {}, System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>* triggersInRange_ = {}, System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>* inContact_ = {}, System::Collections::Generic::List_1<int>* bestRangeIndexes_ = {}, RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionStart_ = {}, RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionPause_ = {}, RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionPickUp_ = {}, RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionResume_ = {}, RootMotion::FinalIK::InteractionSystem::InteractionDelegate* OnInteractionStop_ = {}, RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate* OnInteractionEvent_ = {}, UnityEngine::RaycastHit raycastHit_ = {}, RootMotion::FinalIK::FullBodyBipedIK* fullBody_ = {}, RootMotion::FinalIK::InteractionLookAt* lookAt_ = {}, ::Array<RootMotion::FinalIK::InteractionEffector*>* interactionEffectors_ = {}, bool initiated_ = {}, UnityEngine::Collider* lastCollider_ = {}, UnityEngine::Collider* c_ = {}) noexcept : targetTag{targetTag_}, fadeInTime{fadeInTime_}, speed{speed_}, resetToDefaultsSpeed{resetToDefaultsSpeed_}, characterCollider{characterCollider_}, FPSCamera{FPSCamera_}, camRaycastLayers{camRaycastLayers_}, camRaycastDistance{camRaycastDistance_}, triggersInRange{triggersInRange_}, inContact{inContact_}, bestRangeIndexes{bestRangeIndexes_}, OnInteractionStart{OnInteractionStart_}, OnInteractionPause{OnInteractionPause_}, OnInteractionPickUp{OnInteractionPickUp_}, OnInteractionResume{OnInteractionResume_}, OnInteractionStop{OnInteractionStop_}, OnInteractionEvent{OnInteractionEvent_}, raycastHit{raycastHit_}, fullBody{fullBody_}, lookAt{lookAt_}, interactionEffectors{interactionEffectors_}, initiated{initiated_}, lastCollider{lastCollider_}, c{c_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // private System.Void OpenUserManual()
    // Offset: 0x1BFCB1C
    void OpenUserManual();
    // private System.Void OpenScriptReference()
    // Offset: 0x1BFCB68
    void OpenScriptReference();
    // private System.Void OpenTutorial1()
    // Offset: 0x1BFCBB4
    void OpenTutorial1();
    // private System.Void OpenTutorial2()
    // Offset: 0x1BFCC00
    void OpenTutorial2();
    // private System.Void OpenTutorial3()
    // Offset: 0x1BFCC4C
    void OpenTutorial3();
    // private System.Void OpenTutorial4()
    // Offset: 0x1BFCC98
    void OpenTutorial4();
    // private System.Void SupportGroup()
    // Offset: 0x1BFCCE4
    void SupportGroup();
    // private System.Void ASThread()
    // Offset: 0x1BFCD30
    void ASThread();
    // public System.Boolean get_inInteraction()
    // Offset: 0x1BFCD7C
    bool get_inInteraction();
    // public System.Boolean IsInInteraction(RootMotion.FinalIK.FullBodyBipedEffector effectorType)
    // Offset: 0x1BFCF0C
    bool IsInInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType);
    // public System.Boolean IsPaused(RootMotion.FinalIK.FullBodyBipedEffector effectorType)
    // Offset: 0x1BFCFD8
    bool IsPaused(RootMotion::FinalIK::FullBodyBipedEffector effectorType);
    // public System.Boolean IsPaused()
    // Offset: 0x1BFD0A4
    bool IsPaused();
    // public System.Boolean IsInSync()
    // Offset: 0x1BFD150
    bool IsInSync();
    // public System.Boolean StartInteraction(RootMotion.FinalIK.FullBodyBipedEffector effectorType, RootMotion.FinalIK.InteractionObject interactionObject, System.Boolean interrupt)
    // Offset: 0x1BFD248
    bool StartInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType, RootMotion::FinalIK::InteractionObject* interactionObject, bool interrupt);
    // public System.Boolean PauseInteraction(RootMotion.FinalIK.FullBodyBipedEffector effectorType)
    // Offset: 0x1BFD364
    bool PauseInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType);
    // public System.Boolean ResumeInteraction(RootMotion.FinalIK.FullBodyBipedEffector effectorType)
    // Offset: 0x1BFD3F4
    bool ResumeInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType);
    // public System.Boolean StopInteraction(RootMotion.FinalIK.FullBodyBipedEffector effectorType)
    // Offset: 0x1BFD484
    bool StopInteraction(RootMotion::FinalIK::FullBodyBipedEffector effectorType);
    // public System.Void PauseAll()
    // Offset: 0x1BFD514
    void PauseAll();
    // public System.Void ResumeAll()
    // Offset: 0x1BFD588
    void ResumeAll();
    // public System.Void StopAll()
    // Offset: 0x1BFD5FC
    void StopAll();
    // public RootMotion.FinalIK.InteractionObject GetInteractionObject(RootMotion.FinalIK.FullBodyBipedEffector effectorType)
    // Offset: 0x1BFD664
    RootMotion::FinalIK::InteractionObject* GetInteractionObject(RootMotion::FinalIK::FullBodyBipedEffector effectorType);
    // public System.Single GetProgress(RootMotion.FinalIK.FullBodyBipedEffector effectorType)
    // Offset: 0x1BFD6F0
    float GetProgress(RootMotion::FinalIK::FullBodyBipedEffector effectorType);
    // public System.Single GetMinActiveProgress()
    // Offset: 0x1BFD7A4
    float GetMinActiveProgress();
    // public System.Boolean TriggerInteraction(System.Int32 index, System.Boolean interrupt)
    // Offset: 0x1BFD888
    bool TriggerInteraction(int index, bool interrupt);
    // public System.Boolean TriggerInteraction(System.Int32 index, System.Boolean interrupt, out RootMotion.FinalIK.InteractionObject interactionObject)
    // Offset: 0x1BFDB2C
    bool TriggerInteraction(int index, bool interrupt, RootMotion::FinalIK::InteractionObject*& interactionObject);
    // public System.Boolean TriggerInteraction(System.Int32 index, System.Boolean interrupt, out RootMotion.FinalIK.InteractionTarget interactionTarget)
    // Offset: 0x1BFDD04
    bool TriggerInteraction(int index, bool interrupt, RootMotion::FinalIK::InteractionTarget*& interactionTarget);
    // public RootMotion.FinalIK.InteractionTrigger/Range GetClosestInteractionRange()
    // Offset: 0x1BFDF78
    RootMotion::FinalIK::InteractionTrigger::Range* GetClosestInteractionRange();
    // public RootMotion.FinalIK.InteractionObject GetClosestInteractionObjectInRange()
    // Offset: 0x1BFE26C
    RootMotion::FinalIK::InteractionObject* GetClosestInteractionObjectInRange();
    // public RootMotion.FinalIK.InteractionTarget GetClosestInteractionTargetInRange()
    // Offset: 0x1BFE2B0
    RootMotion::FinalIK::InteractionTarget* GetClosestInteractionTargetInRange();
    // public RootMotion.FinalIK.InteractionObject[] GetClosestInteractionObjectsInRange()
    // Offset: 0x1BFE328
    ::Array<RootMotion::FinalIK::InteractionObject*>* GetClosestInteractionObjectsInRange();
    // public RootMotion.FinalIK.InteractionTarget[] GetClosestInteractionTargetsInRange()
    // Offset: 0x1BFE448
    ::Array<RootMotion::FinalIK::InteractionTarget*>* GetClosestInteractionTargetsInRange();
    // public System.Boolean TriggerEffectorsReady(System.Int32 index)
    // Offset: 0x1BFE5C0
    bool TriggerEffectorsReady(int index);
    // public RootMotion.FinalIK.InteractionTrigger/Range GetTriggerRange(System.Int32 index)
    // Offset: 0x1BFE868
    RootMotion::FinalIK::InteractionTrigger::Range* GetTriggerRange(int index);
    // public System.Int32 GetClosestTriggerIndex()
    // Offset: 0x1BFE078
    int GetClosestTriggerIndex();
    // public RootMotion.FinalIK.FullBodyBipedIK get_ik()
    // Offset: 0x1BFE994
    RootMotion::FinalIK::FullBodyBipedIK* get_ik();
    // public System.Void set_ik(RootMotion.FinalIK.FullBodyBipedIK value)
    // Offset: 0x1BFE99C
    void set_ik(RootMotion::FinalIK::FullBodyBipedIK* value);
    // public System.Collections.Generic.List`1<RootMotion.FinalIK.InteractionTrigger> get_triggersInRange()
    // Offset: 0x1BFE9A4
    System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>* get_triggersInRange();
    // private System.Void set_triggersInRange(System.Collections.Generic.List`1<RootMotion.FinalIK.InteractionTrigger> value)
    // Offset: 0x1BFE9AC
    void set_triggersInRange(System::Collections::Generic::List_1<RootMotion::FinalIK::InteractionTrigger*>* value);
    // public System.Void Start()
    // Offset: 0x1BFE9B4
    void Start();
    // private System.Void InteractionPause(RootMotion.FinalIK.FullBodyBipedEffector effector, RootMotion.FinalIK.InteractionObject interactionObject)
    // Offset: 0x1BFF068
    void InteractionPause(RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionObject* interactionObject);
    // private System.Void InteractionResume(RootMotion.FinalIK.FullBodyBipedEffector effector, RootMotion.FinalIK.InteractionObject interactionObject)
    // Offset: 0x1BFF088
    void InteractionResume(RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionObject* interactionObject);
    // private System.Void InteractionStop(RootMotion.FinalIK.FullBodyBipedEffector effector, RootMotion.FinalIK.InteractionObject interactionObject)
    // Offset: 0x1BFF0A4
    void InteractionStop(RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionObject* interactionObject);
    // private System.Void LookAtInteraction(RootMotion.FinalIK.FullBodyBipedEffector effector, RootMotion.FinalIK.InteractionObject interactionObject)
    // Offset: 0x1BFF0C0
    void LookAtInteraction(RootMotion::FinalIK::FullBodyBipedEffector effector, RootMotion::FinalIK::InteractionObject* interactionObject);
    // public System.Void OnTriggerEnter(UnityEngine.Collider c)
    // Offset: 0x1BFF120
    void OnTriggerEnter(UnityEngine::Collider* c);
    // public System.Void OnTriggerExit(UnityEngine.Collider c)
    // Offset: 0x1BFF23C
    void OnTriggerExit(UnityEngine::Collider* c);
    // private System.Boolean ContactIsInRange(System.Int32 index, out System.Int32 bestRangeIndex)
    // Offset: 0x1BFF338
    bool ContactIsInRange(int index, int& bestRangeIndex);
    // private System.Void OnDrawGizmosSelected()
    // Offset: 0x1BFF4E0
    void OnDrawGizmosSelected();
    // public System.Void Update()
    // Offset: 0x1BFF5CC
    void Update();
    // private System.Void Raycasting()
    // Offset: 0x1BFF818
    void Raycasting();
    // private System.Void UpdateTriggerEventBroadcasting()
    // Offset: 0x1BFEDE0
    void UpdateTriggerEventBroadcasting();
    // private System.Void UpdateEffectors()
    // Offset: 0x1BFF958
    void UpdateEffectors();
    // private System.Void OnPreFBBIK()
    // Offset: 0x1BFFA84
    void OnPreFBBIK();
    // private System.Void OnPostFBBIK()
    // Offset: 0x1BFFB1C
    void OnPostFBBIK();
    // private System.Void OnFixTransforms()
    // Offset: 0x1BFFBF4
    void OnFixTransforms();
    // private System.Void OnDestroy()
    // Offset: 0x1BFFC0C
    void OnDestroy();
    // private System.Boolean IsValid(System.Boolean log)
    // Offset: 0x1BFCE28
    bool IsValid(bool log);
    // private System.Boolean TriggerIndexIsValid(System.Int32 index)
    // Offset: 0x1BFDA28
    bool TriggerIndexIsValid(int index);
    // public System.Void .ctor()
    // Offset: 0x1BFFEFC
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InteractionSystem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionSystem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InteractionSystem*, creationType>()));
    }
  }; // RootMotion.FinalIK.InteractionSystem
  #pragma pack(pop)
  static check_size<sizeof(InteractionSystem), 232 + sizeof(UnityEngine::Collider*)> __RootMotion_FinalIK_InteractionSystemSizeCheck;
  static_assert(sizeof(InteractionSystem) == 0xF0);
}
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::InteractionSystem*, "RootMotion.FinalIK", "InteractionSystem");
