// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RootMotion
namespace RootMotion {
  // Forward declaring type: InterpolationMode
  struct InterpolationMode;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: RootMotion
namespace RootMotion {
  // Autogenerated type: RootMotion.Interp
  class Interp : public ::Il2CppObject {
    public:
    // static public System.Single Float(System.Single t, RootMotion.InterpolationMode mode)
    // Offset: 0x18F7FA0
    static float Float(float t, RootMotion::InterpolationMode mode);
    // static public UnityEngine.Vector3 V3(UnityEngine.Vector3 v1, UnityEngine.Vector3 v2, System.Single t, RootMotion.InterpolationMode mode)
    // Offset: 0x18F8A08
    static UnityEngine::Vector3 V3(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2, float t, RootMotion::InterpolationMode mode);
    // static public System.Single LerpValue(System.Single value, System.Single target, System.Single increaseSpeed, System.Single decreaseSpeed)
    // Offset: 0x18F8B10
    static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed);
    // static private System.Single None(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F830C
    static float None(float t, float b, float c);
    // static private System.Single InOutCubic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8318
    static float InOutCubic(float t, float b, float c);
    // static private System.Single InOutQuintic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F833C
    static float InOutQuintic(float t, float b, float c);
    // static private System.Single InQuintic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8378
    static float InQuintic(float t, float b, float c);
    // static private System.Single InQuartic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8390
    static float InQuartic(float t, float b, float c);
    // static private System.Single InCubic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F83A4
    static float InCubic(float t, float b, float c);
    // static private System.Single InQuadratic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F83B8
    static float InQuadratic(float t, float b, float c);
    // static private System.Single OutQuintic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F83C8
    static float OutQuintic(float t, float b, float c);
    // static private System.Single OutQuartic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8410
    static float OutQuartic(float t, float b, float c);
    // static private System.Single OutCubic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8448
    static float OutCubic(float t, float b, float c);
    // static private System.Single OutInCubic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8470
    static float OutInCubic(float t, float b, float c);
    // static private System.Single OutInQuartic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8C0C
    static float OutInQuartic(float t, float b, float c);
    // static private System.Single BackInCubic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F84A4
    static float BackInCubic(float t, float b, float c);
    // static private System.Single BackInQuartic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F84CC
    static float BackInQuartic(float t, float b, float c);
    // static private System.Single OutBackCubic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F84FC
    static float OutBackCubic(float t, float b, float c);
    // static private System.Single OutBackQuartic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8530
    static float OutBackQuartic(float t, float b, float c);
    // static private System.Single OutElasticSmall(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8574
    static float OutElasticSmall(float t, float b, float c);
    // static private System.Single OutElasticBig(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F85D8
    static float OutElasticBig(float t, float b, float c);
    // static private System.Single InElasticSmall(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F863C
    static float InElasticSmall(float t, float b, float c);
    // static private System.Single InElasticBig(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8690
    static float InElasticBig(float t, float b, float c);
    // static private System.Single InSine(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F86E4
    static float InSine(float t, float b, float c);
    // static private System.Single OutSine(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F877C
    static float OutSine(float t, float b, float c);
    // static private System.Single InOutSine(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8810
    static float InOutSine(float t, float b, float c);
    // static private System.Single InElastic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8C40
    static float InElastic(float t, float b, float c);
    // static private System.Single OutElastic(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F88B4
    static float OutElastic(float t, float b, float c);
    // static private System.Single InBack(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F8998
    static float InBack(float t, float b, float c);
    // static private System.Single OutBack(System.Single t, System.Single b, System.Single c)
    // Offset: 0x18F89C8
    static float OutBack(float t, float b, float c);
    // public System.Void .ctor()
    // Offset: 0x18F8D28
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static Interp* New_ctor();
  }; // RootMotion.Interp
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::Interp*, "RootMotion", "Interp");
#pragma pack(pop)
