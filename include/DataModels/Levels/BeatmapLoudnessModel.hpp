// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Single
#include "System/Single.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextAsset
  class TextAsset;
}
// Completed forward declares
// Type namespace: DataModels.Levels
namespace DataModels::Levels {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: DataModels.Levels.BeatmapLoudnessModel
  class BeatmapLoudnessModel : public ::Il2CppObject {
    public:
    // private System.Collections.Generic.Dictionary`2<System.String,System.Single> loudnessLevelPerLevelId
    // Size: 0x8
    // Offset: 0x10
    System::Collections::Generic::Dictionary_2<::Il2CppString*, float>* loudnessLevelPerLevelId;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<::Il2CppString*, float>*) == 0x8);
    // Creating value type constructor for type: BeatmapLoudnessModel
    BeatmapLoudnessModel(System::Collections::Generic::Dictionary_2<::Il2CppString*, float>* loudnessLevelPerLevelId_ = {}) noexcept : loudnessLevelPerLevelId{loudnessLevelPerLevelId_} {}
    // Creating conversion operator: operator System::Collections::Generic::Dictionary_2<::Il2CppString*, float>*
    constexpr operator System::Collections::Generic::Dictionary_2<::Il2CppString*, float>*() const noexcept {
      return loudnessLevelPerLevelId;
    }
    // static field const value: static public System.Single kDefaultLoudness
    static constexpr const float kDefaultLoudness = -4;
    // Get static field: static public System.Single kDefaultLoudness
    static float _get_kDefaultLoudness();
    // Set static field: static public System.Single kDefaultLoudness
    static void _set_kDefaultLoudness(float value);
    // static field const value: static private System.Single kPerceivedLoudnessTarget
    static constexpr const float kPerceivedLoudnessTarget = -11;
    // Get static field: static private System.Single kPerceivedLoudnessTarget
    static float _get_kPerceivedLoudnessTarget();
    // Set static field: static private System.Single kPerceivedLoudnessTarget
    static void _set_kPerceivedLoudnessTarget(float value);
    // static field const value: static private System.Single kPercievedLoudnessToMaxSfxLevelDifference
    static constexpr const float kPercievedLoudnessToMaxSfxLevelDifference = -10;
    // Get static field: static private System.Single kPercievedLoudnessToMaxSfxLevelDifference
    static float _get_kPercievedLoudnessToMaxSfxLevelDifference();
    // Set static field: static private System.Single kPercievedLoudnessToMaxSfxLevelDifference
    static void _set_kPercievedLoudnessToMaxSfxLevelDifference(float value);
    // public System.Void .ctor(UnityEngine.TextAsset loudnessPerLevelCSV)
    // Offset: 0x109E05C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BeatmapLoudnessModel* New_ctor(UnityEngine::TextAsset* loudnessPerLevelCSV) {
      static auto ___internal__logger = ::Logger::get().WithContext("DataModels::Levels::BeatmapLoudnessModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BeatmapLoudnessModel*, creationType>(loudnessPerLevelCSV)));
    }
    // MethodInfo getter for: New_ctor
    static inline MethodInfo* get() const {
    }
  };
  // public System.Single GetLoudnessCorrectionByLevelId(System.String levelId)
  // Offset: 0x109E210
  float GetLoudnessCorrectionByLevelId(::Il2CppString* levelId);
  // public System.Single GetMaxSFXVolumeByLevelId(System.String levelId)
  // Offset: 0x109E378
  float GetMaxSFXVolumeByLevelId(::Il2CppString* levelId);
  // private System.Single GetLoudnessByLevelId(System.String levelId)
  // Offset: 0x109E2A4
  float GetLoudnessByLevelId(::Il2CppString* levelId);
}; // DataModels.Levels.BeatmapLoudnessModel
#pragma pack(pop)
static check_size<sizeof(BeatmapLoudnessModel), 16 + sizeof(System::Collections::Generic::Dictionary_2<::Il2CppString*, float>*)> __DataModels_Levels_BeatmapLoudnessModelSizeCheck;
static_assert(sizeof(BeatmapLoudnessModel) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(DataModels::Levels::BeatmapLoudnessModel*, "DataModels.Levels", "BeatmapLoudnessModel");
