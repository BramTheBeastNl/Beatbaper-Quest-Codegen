// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DataModels::PlayerAvatar
namespace DataModels::PlayerAvatar {
  // Forward declaring type: RandomizeAvatarColorMap
  class RandomizeAvatarColorMap;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: AvatarData
  class AvatarData;
  // Forward declaring type: AvatarPartsModel
  class AvatarPartsModel;
}
// Completed forward declares
// Type namespace: DataModels.PlayerAvatar
namespace DataModels::PlayerAvatar {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DataModels.PlayerAvatar.AvatarRandomizer
  class AvatarRandomizer : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: AvatarRandomizer
    AvatarRandomizer() noexcept {}
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE29924
    // Get static field: static private readonly DataModels.PlayerAvatar.RandomizeAvatarColorMap[] _randomizeColorsParamsCollection
    static ::Array<DataModels::PlayerAvatar::RandomizeAvatarColorMap*>* _get__randomizeColorsParamsCollection();
    // Set static field: static private readonly DataModels.PlayerAvatar.RandomizeAvatarColorMap[] _randomizeColorsParamsCollection
    static void _set__randomizeColorsParamsCollection(::Array<DataModels::PlayerAvatar::RandomizeAvatarColorMap*>* value);
    // static private System.Void .cctor()
    // Offset: 0x119C42C
    static void _cctor();
    // static public System.Void RandomizeAll(AvatarData avatarData, AvatarPartsModel avatarPartsModel)
    // Offset: 0x119C9F8
    static void RandomizeAll(GlobalNamespace::AvatarData* avatarData, GlobalNamespace::AvatarPartsModel* avatarPartsModel);
    // static public System.Void RandomizeModels(AvatarData avatarData, AvatarPartsModel avatarPartsModel)
    // Offset: 0x119CA74
    static void RandomizeModels(GlobalNamespace::AvatarData* avatarData, GlobalNamespace::AvatarPartsModel* avatarPartsModel);
    // static public System.Void RandomizeColors(AvatarData avatarData)
    // Offset: 0x119CBA8
    static void RandomizeColors(GlobalNamespace::AvatarData* avatarData);
  }; // DataModels.PlayerAvatar.AvatarRandomizer
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(DataModels::PlayerAvatar::AvatarRandomizer*, "DataModels.PlayerAvatar", "AvatarRandomizer");
// Writing MetadataGetter for method: AvatarRandomizer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&AvatarRandomizer::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarRandomizer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AvatarRandomizer::RandomizeAll
// Il2CppName: RandomizeAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(GlobalNamespace::AvatarData*, GlobalNamespace::AvatarPartsModel*)>(&AvatarRandomizer::RandomizeAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarRandomizer*), "RandomizeAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarPartsModel*>()});
  }
};
// Writing MetadataGetter for method: AvatarRandomizer::RandomizeModels
// Il2CppName: RandomizeModels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(GlobalNamespace::AvatarData*, GlobalNamespace::AvatarPartsModel*)>(&AvatarRandomizer::RandomizeModels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarRandomizer*), "RandomizeModels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarPartsModel*>()});
  }
};
// Writing MetadataGetter for method: AvatarRandomizer::RandomizeColors
// Il2CppName: RandomizeColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(GlobalNamespace::AvatarData*)>(&AvatarRandomizer::RandomizeColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarRandomizer*), "RandomizeColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarData*>()});
  }
};
