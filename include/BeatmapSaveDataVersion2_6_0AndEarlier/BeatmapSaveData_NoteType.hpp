// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType, "BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType");
// Type namespace: BeatmapSaveDataVersion2_6_0AndEarlier
namespace BeatmapSaveDataVersion2_6_0AndEarlier {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType
  // [TokenAttribute] Offset: FFFFFFFF
  struct BeatmapSaveData::NoteType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: NoteType
    constexpr NoteType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating interface conversion operator: i_Enum
    inline ::System::Enum* i_Enum() noexcept {
      return reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteA
    static constexpr const int NoteA = 0;
    // Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteA
    static ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType _get_NoteA();
    // Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteA
    static void _set_NoteA(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value);
    // static field const value: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteB
    static constexpr const int NoteB = 1;
    // Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteB
    static ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType _get_NoteB();
    // Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteB
    static void _set_NoteB(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value);
    // static field const value: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType GhostNote
    static constexpr const int GhostNote = 2;
    // Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType GhostNote
    static ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType _get_GhostNote();
    // Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType GhostNote
    static void _set_GhostNote(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value);
    // static field const value: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType Bomb
    static constexpr const int Bomb = 3;
    // Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType Bomb
    static ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType _get_Bomb();
    // Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType Bomb
    static void _set_Bomb(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value);
    // static field const value: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType None
    static constexpr const int None = -1;
    // Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType None
    static ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType _get_None();
    // Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType None
    static void _set_None(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType
  #pragma pack(pop)
  static check_size<sizeof(BeatmapSaveData::NoteType), 0 + sizeof(int)> __BeatmapSaveDataVersion2_6_0AndEarlier_BeatmapSaveData_NoteTypeSizeCheck;
  static_assert(sizeof(BeatmapSaveData::NoteType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
